
src/thttpd:     file format elf64-x86-64


Disassembly of section .init:

0000000000402bb8 <_init>:
  402bb8:	48 83 ec 08          	sub    $0x8,%rsp
  402bbc:	48 8b 05 35 e4 22 00 	mov    0x22e435(%rip),%rax        # 630ff8 <__gmon_start__>
  402bc3:	48 85 c0             	test   %rax,%rax
  402bc6:	74 05                	je     402bcd <_init+0x15>
  402bc8:	e8 23 09 00 00       	callq  4034f0 <.plt.got>
  402bcd:	48 83 c4 08          	add    $0x8,%rsp
  402bd1:	c3                   	retq   

Disassembly of section .plt:

0000000000402be0 <.plt>:
  402be0:	ff 35 22 e4 22 00    	pushq  0x22e422(%rip)        # 631008 <_GLOBAL_OFFSET_TABLE_+0x8>
  402be6:	ff 25 24 e4 22 00    	jmpq   *0x22e424(%rip)        # 631010 <_GLOBAL_OFFSET_TABLE_+0x10>
  402bec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000402bf0 <__asan_report_store4@plt>:
  402bf0:	ff 25 22 e4 22 00    	jmpq   *0x22e422(%rip)        # 631018 <__asan_report_store4>
  402bf6:	68 00 00 00 00       	pushq  $0x0
  402bfb:	e9 e0 ff ff ff       	jmpq   402be0 <.plt>

0000000000402c00 <__errno_location@plt>:
  402c00:	ff 25 1a e4 22 00    	jmpq   *0x22e41a(%rip)        # 631020 <__errno_location@GLIBC_2.2.5>
  402c06:	68 01 00 00 00       	pushq  $0x1
  402c0b:	e9 d0 ff ff ff       	jmpq   402be0 <.plt>

0000000000402c10 <__isoc99_sscanf@plt>:
  402c10:	ff 25 12 e4 22 00    	jmpq   *0x22e412(%rip)        # 631028 <__isoc99_sscanf>
  402c16:	68 02 00 00 00       	pushq  $0x2
  402c1b:	e9 c0 ff ff ff       	jmpq   402be0 <.plt>

0000000000402c20 <tzset@plt>:
  402c20:	ff 25 0a e4 22 00    	jmpq   *0x22e40a(%rip)        # 631030 <tzset@GLIBC_2.2.5>
  402c26:	68 03 00 00 00       	pushq  $0x3
  402c2b:	e9 b0 ff ff ff       	jmpq   402be0 <.plt>

0000000000402c30 <strncasecmp@plt>:
  402c30:	ff 25 02 e4 22 00    	jmpq   *0x22e402(%rip)        # 631038 <strncasecmp>
  402c36:	68 04 00 00 00       	pushq  $0x4
  402c3b:	e9 a0 ff ff ff       	jmpq   402be0 <.plt>

0000000000402c40 <syslog@plt>:
  402c40:	ff 25 fa e3 22 00    	jmpq   *0x22e3fa(%rip)        # 631040 <syslog@GLIBC_2.2.5>
  402c46:	68 05 00 00 00       	pushq  $0x5
  402c4b:	e9 90 ff ff ff       	jmpq   402be0 <.plt>

0000000000402c50 <__asan_stack_free_7@plt>:
  402c50:	ff 25 f2 e3 22 00    	jmpq   *0x22e3f2(%rip)        # 631048 <__asan_stack_free_7>
  402c56:	68 06 00 00 00       	pushq  $0x6
  402c5b:	e9 80 ff ff ff       	jmpq   402be0 <.plt>

0000000000402c60 <strncpy@plt>:
  402c60:	ff 25 ea e3 22 00    	jmpq   *0x22e3ea(%rip)        # 631050 <strncpy>
  402c66:	68 07 00 00 00       	pushq  $0x7
  402c6b:	e9 70 ff ff ff       	jmpq   402be0 <.plt>

0000000000402c70 <bind@plt>:
  402c70:	ff 25 e2 e3 22 00    	jmpq   *0x22e3e2(%rip)        # 631058 <bind@GLIBC_2.2.5>
  402c76:	68 08 00 00 00       	pushq  $0x8
  402c7b:	e9 60 ff ff ff       	jmpq   402be0 <.plt>

0000000000402c80 <strlen@plt>:
  402c80:	ff 25 da e3 22 00    	jmpq   *0x22e3da(%rip)        # 631060 <strlen>
  402c86:	68 09 00 00 00       	pushq  $0x9
  402c8b:	e9 50 ff ff ff       	jmpq   402be0 <.plt>

0000000000402c90 <__ctype_tolower_loc@plt>:
  402c90:	ff 25 d2 e3 22 00    	jmpq   *0x22e3d2(%rip)        # 631068 <__ctype_tolower_loc@GLIBC_2.3>
  402c96:	68 0a 00 00 00       	pushq  $0xa
  402c9b:	e9 40 ff ff ff       	jmpq   402be0 <.plt>

0000000000402ca0 <__asan_register_globals@plt>:
  402ca0:	ff 25 ca e3 22 00    	jmpq   *0x22e3ca(%rip)        # 631070 <__asan_register_globals>
  402ca6:	68 0b 00 00 00       	pushq  $0xb
  402cab:	e9 30 ff ff ff       	jmpq   402be0 <.plt>

0000000000402cb0 <strdup@plt>:
  402cb0:	ff 25 c2 e3 22 00    	jmpq   *0x22e3c2(%rip)        # 631078 <strdup>
  402cb6:	68 0c 00 00 00       	pushq  $0xc
  402cbb:	e9 20 ff ff ff       	jmpq   402be0 <.plt>

0000000000402cc0 <__asan_stack_malloc_8@plt>:
  402cc0:	ff 25 ba e3 22 00    	jmpq   *0x22e3ba(%rip)        # 631080 <__asan_stack_malloc_8>
  402cc6:	68 0d 00 00 00       	pushq  $0xd
  402ccb:	e9 10 ff ff ff       	jmpq   402be0 <.plt>

0000000000402cd0 <free@plt>:
  402cd0:	ff 25 b2 e3 22 00    	jmpq   *0x22e3b2(%rip)        # 631088 <free>
  402cd6:	68 0e 00 00 00       	pushq  $0xe
  402cdb:	e9 00 ff ff ff       	jmpq   402be0 <.plt>

0000000000402ce0 <memmove@plt>:
  402ce0:	ff 25 aa e3 22 00    	jmpq   *0x22e3aa(%rip)        # 631090 <memmove>
  402ce6:	68 0f 00 00 00       	pushq  $0xf
  402ceb:	e9 f0 fe ff ff       	jmpq   402be0 <.plt>

0000000000402cf0 <socket@plt>:
  402cf0:	ff 25 a2 e3 22 00    	jmpq   *0x22e3a2(%rip)        # 631098 <socket@GLIBC_2.2.5>
  402cf6:	68 10 00 00 00       	pushq  $0x10
  402cfb:	e9 e0 fe ff ff       	jmpq   402be0 <.plt>

0000000000402d00 <__asan_report_load_n@plt>:
  402d00:	ff 25 9a e3 22 00    	jmpq   *0x22e39a(%rip)        # 6310a0 <__asan_report_load_n>
  402d06:	68 11 00 00 00       	pushq  $0x11
  402d0b:	e9 d0 fe ff ff       	jmpq   402be0 <.plt>

0000000000402d10 <fork@plt>:
  402d10:	ff 25 92 e3 22 00    	jmpq   *0x22e392(%rip)        # 6310a8 <fork>
  402d16:	68 12 00 00 00       	pushq  $0x12
  402d1b:	e9 c0 fe ff ff       	jmpq   402be0 <.plt>

0000000000402d20 <__lxstat@plt>:
  402d20:	ff 25 8a e3 22 00    	jmpq   *0x22e38a(%rip)        # 6310b0 <__lxstat>
  402d26:	68 13 00 00 00       	pushq  $0x13
  402d2b:	e9 b0 fe ff ff       	jmpq   402be0 <.plt>

0000000000402d30 <fprintf@plt>:
  402d30:	ff 25 82 e3 22 00    	jmpq   *0x22e382(%rip)        # 6310b8 <fprintf>
  402d36:	68 14 00 00 00       	pushq  $0x14
  402d3b:	e9 a0 fe ff ff       	jmpq   402be0 <.plt>

0000000000402d40 <__asan_stack_free_8@plt>:
  402d40:	ff 25 7a e3 22 00    	jmpq   *0x22e37a(%rip)        # 6310c0 <__asan_stack_free_8>
  402d46:	68 15 00 00 00       	pushq  $0x15
  402d4b:	e9 90 fe ff ff       	jmpq   402be0 <.plt>

0000000000402d50 <strpbrk@plt>:
  402d50:	ff 25 72 e3 22 00    	jmpq   *0x22e372(%rip)        # 6310c8 <strpbrk>
  402d56:	68 16 00 00 00       	pushq  $0x16
  402d5b:	e9 80 fe ff ff       	jmpq   402be0 <.plt>

0000000000402d60 <atoi@plt>:
  402d60:	ff 25 6a e3 22 00    	jmpq   *0x22e36a(%rip)        # 6310d0 <atoi>
  402d66:	68 17 00 00 00       	pushq  $0x17
  402d6b:	e9 70 fe ff ff       	jmpq   402be0 <.plt>

0000000000402d70 <getnameinfo@plt>:
  402d70:	ff 25 62 e3 22 00    	jmpq   *0x22e362(%rip)        # 6310d8 <getnameinfo>
  402d76:	68 18 00 00 00       	pushq  $0x18
  402d7b:	e9 60 fe ff ff       	jmpq   402be0 <.plt>

0000000000402d80 <__asan_report_store16@plt>:
  402d80:	ff 25 5a e3 22 00    	jmpq   *0x22e35a(%rip)        # 6310e0 <__asan_report_store16>
  402d86:	68 19 00 00 00       	pushq  $0x19
  402d8b:	e9 50 fe ff ff       	jmpq   402be0 <.plt>

0000000000402d90 <gmtime@plt>:
  402d90:	ff 25 52 e3 22 00    	jmpq   *0x22e352(%rip)        # 6310e8 <gmtime>
  402d96:	68 1a 00 00 00       	pushq  $0x1a
  402d9b:	e9 40 fe ff ff       	jmpq   402be0 <.plt>

0000000000402da0 <getuid@plt>:
  402da0:	ff 25 4a e3 22 00    	jmpq   *0x22e34a(%rip)        # 6310f0 <getuid@GLIBC_2.2.5>
  402da6:	68 1b 00 00 00       	pushq  $0x1b
  402dab:	e9 30 fe ff ff       	jmpq   402be0 <.plt>

0000000000402db0 <__asan_stack_malloc_1@plt>:
  402db0:	ff 25 42 e3 22 00    	jmpq   *0x22e342(%rip)        # 6310f8 <__asan_stack_malloc_1>
  402db6:	68 1c 00 00 00       	pushq  $0x1c
  402dbb:	e9 20 fe ff ff       	jmpq   402be0 <.plt>

0000000000402dc0 <abort@plt>:
  402dc0:	ff 25 3a e3 22 00    	jmpq   *0x22e33a(%rip)        # 631100 <abort@GLIBC_2.2.5>
  402dc6:	68 1d 00 00 00       	pushq  $0x1d
  402dcb:	e9 10 fe ff ff       	jmpq   402be0 <.plt>

0000000000402dd0 <__asan_report_load4@plt>:
  402dd0:	ff 25 32 e3 22 00    	jmpq   *0x22e332(%rip)        # 631108 <__asan_report_load4>
  402dd6:	68 1e 00 00 00       	pushq  $0x1e
  402ddb:	e9 00 fe ff ff       	jmpq   402be0 <.plt>

0000000000402de0 <poll@plt>:
  402de0:	ff 25 2a e3 22 00    	jmpq   *0x22e32a(%rip)        # 631110 <poll>
  402de6:	68 1f 00 00 00       	pushq  $0x1f
  402deb:	e9 f0 fd ff ff       	jmpq   402be0 <.plt>

0000000000402df0 <munmap@plt>:
  402df0:	ff 25 22 e3 22 00    	jmpq   *0x22e322(%rip)        # 631118 <munmap@GLIBC_2.2.5>
  402df6:	68 20 00 00 00       	pushq  $0x20
  402dfb:	e9 e0 fd ff ff       	jmpq   402be0 <.plt>

0000000000402e00 <fcntl@plt>:
  402e00:	ff 25 1a e3 22 00    	jmpq   *0x22e31a(%rip)        # 631120 <fcntl@GLIBC_2.2.5>
  402e06:	68 21 00 00 00       	pushq  $0x21
  402e0b:	e9 d0 fd ff ff       	jmpq   402be0 <.plt>

0000000000402e10 <snprintf@plt>:
  402e10:	ff 25 12 e3 22 00    	jmpq   *0x22e312(%rip)        # 631128 <snprintf>
  402e16:	68 22 00 00 00       	pushq  $0x22
  402e1b:	e9 c0 fd ff ff       	jmpq   402be0 <.plt>

0000000000402e20 <inet_aton@plt>:
  402e20:	ff 25 0a e3 22 00    	jmpq   *0x22e30a(%rip)        # 631130 <inet_aton>
  402e26:	68 23 00 00 00       	pushq  $0x23
  402e2b:	e9 b0 fd ff ff       	jmpq   402be0 <.plt>

0000000000402e30 <fread@plt>:
  402e30:	ff 25 02 e3 22 00    	jmpq   *0x22e302(%rip)        # 631138 <fread>
  402e36:	68 24 00 00 00       	pushq  $0x24
  402e3b:	e9 a0 fd ff ff       	jmpq   402be0 <.plt>

0000000000402e40 <strcmp@plt>:
  402e40:	ff 25 fa e2 22 00    	jmpq   *0x22e2fa(%rip)        # 631140 <strcmp>
  402e46:	68 25 00 00 00       	pushq  $0x25
  402e4b:	e9 90 fd ff ff       	jmpq   402be0 <.plt>

0000000000402e50 <__asan_stack_malloc_6@plt>:
  402e50:	ff 25 f2 e2 22 00    	jmpq   *0x22e2f2(%rip)        # 631148 <__asan_stack_malloc_6>
  402e56:	68 26 00 00 00       	pushq  $0x26
  402e5b:	e9 80 fd ff ff       	jmpq   402be0 <.plt>

0000000000402e60 <open@plt>:
  402e60:	ff 25 ea e2 22 00    	jmpq   *0x22e2ea(%rip)        # 631150 <open@GLIBC_2.2.5>
  402e66:	68 27 00 00 00       	pushq  $0x27
  402e6b:	e9 70 fd ff ff       	jmpq   402be0 <.plt>

0000000000402e70 <sleep@plt>:
  402e70:	ff 25 e2 e2 22 00    	jmpq   *0x22e2e2(%rip)        # 631158 <sleep@GLIBC_2.2.5>
  402e76:	68 28 00 00 00       	pushq  $0x28
  402e7b:	e9 60 fd ff ff       	jmpq   402be0 <.plt>

0000000000402e80 <strrchr@plt>:
  402e80:	ff 25 da e2 22 00    	jmpq   *0x22e2da(%rip)        # 631160 <strrchr>
  402e86:	68 29 00 00 00       	pushq  $0x29
  402e8b:	e9 50 fd ff ff       	jmpq   402be0 <.plt>

0000000000402e90 <strftime@plt>:
  402e90:	ff 25 d2 e2 22 00    	jmpq   *0x22e2d2(%rip)        # 631168 <strftime@GLIBC_2.2.5>
  402e96:	68 2a 00 00 00       	pushq  $0x2a
  402e9b:	e9 40 fd ff ff       	jmpq   402be0 <.plt>

0000000000402ea0 <perror@plt>:
  402ea0:	ff 25 ca e2 22 00    	jmpq   *0x22e2ca(%rip)        # 631170 <perror@GLIBC_2.2.5>
  402ea6:	68 2b 00 00 00       	pushq  $0x2b
  402eab:	e9 30 fd ff ff       	jmpq   402be0 <.plt>

0000000000402eb0 <memset@plt>:
  402eb0:	ff 25 c2 e2 22 00    	jmpq   *0x22e2c2(%rip)        # 631178 <memset>
  402eb6:	68 2c 00 00 00       	pushq  $0x2c
  402ebb:	e9 20 fd ff ff       	jmpq   402be0 <.plt>

0000000000402ec0 <read@plt>:
  402ec0:	ff 25 ba e2 22 00    	jmpq   *0x22e2ba(%rip)        # 631180 <read>
  402ec6:	68 2d 00 00 00       	pushq  $0x2d
  402ecb:	e9 10 fd ff ff       	jmpq   402be0 <.plt>

0000000000402ed0 <openlog@plt>:
  402ed0:	ff 25 b2 e2 22 00    	jmpq   *0x22e2b2(%rip)        # 631188 <openlog@GLIBC_2.2.5>
  402ed6:	68 2e 00 00 00       	pushq  $0x2e
  402edb:	e9 00 fd ff ff       	jmpq   402be0 <.plt>

0000000000402ee0 <fflush@plt>:
  402ee0:	ff 25 aa e2 22 00    	jmpq   *0x22e2aa(%rip)        # 631190 <fflush>
  402ee6:	68 2f 00 00 00       	pushq  $0x2f
  402eeb:	e9 f0 fc ff ff       	jmpq   402be0 <.plt>

0000000000402ef0 <setrlimit@plt>:
  402ef0:	ff 25 a2 e2 22 00    	jmpq   *0x22e2a2(%rip)        # 631198 <setrlimit@GLIBC_2.2.5>
  402ef6:	68 30 00 00 00       	pushq  $0x30
  402efb:	e9 e0 fc ff ff       	jmpq   402be0 <.plt>

0000000000402f00 <fopen@plt>:
  402f00:	ff 25 9a e2 22 00    	jmpq   *0x22e29a(%rip)        # 6311a0 <fopen>
  402f06:	68 31 00 00 00       	pushq  $0x31
  402f0b:	e9 d0 fc ff ff       	jmpq   402be0 <.plt>

0000000000402f10 <strcpy@plt>:
  402f10:	ff 25 92 e2 22 00    	jmpq   *0x22e292(%rip)        # 6311a8 <strcpy>
  402f16:	68 32 00 00 00       	pushq  $0x32
  402f1b:	e9 c0 fc ff ff       	jmpq   402be0 <.plt>

0000000000402f20 <chmod@plt>:
  402f20:	ff 25 8a e2 22 00    	jmpq   *0x22e28a(%rip)        # 6311b0 <chmod@GLIBC_2.2.5>
  402f26:	68 33 00 00 00       	pushq  $0x33
  402f2b:	e9 b0 fc ff ff       	jmpq   402be0 <.plt>

0000000000402f30 <__asan_stack_malloc_7@plt>:
  402f30:	ff 25 82 e2 22 00    	jmpq   *0x22e282(%rip)        # 6311b8 <__asan_stack_malloc_7>
  402f36:	68 34 00 00 00       	pushq  $0x34
  402f3b:	e9 a0 fc ff ff       	jmpq   402be0 <.plt>

0000000000402f40 <dup2@plt>:
  402f40:	ff 25 7a e2 22 00    	jmpq   *0x22e27a(%rip)        # 6311c0 <dup2@GLIBC_2.2.5>
  402f46:	68 35 00 00 00       	pushq  $0x35
  402f4b:	e9 90 fc ff ff       	jmpq   402be0 <.plt>

0000000000402f50 <chroot@plt>:
  402f50:	ff 25 72 e2 22 00    	jmpq   *0x22e272(%rip)        # 6311c8 <chroot@GLIBC_2.2.5>
  402f56:	68 36 00 00 00       	pushq  $0x36
  402f5b:	e9 80 fc ff ff       	jmpq   402be0 <.plt>

0000000000402f60 <write@plt>:
  402f60:	ff 25 6a e2 22 00    	jmpq   *0x22e26a(%rip)        # 6311d0 <write>
  402f66:	68 37 00 00 00       	pushq  $0x37
  402f6b:	e9 70 fc ff ff       	jmpq   402be0 <.plt>

0000000000402f70 <time@plt>:
  402f70:	ff 25 62 e2 22 00    	jmpq   *0x22e262(%rip)        # 6311d8 <time>
  402f76:	68 38 00 00 00       	pushq  $0x38
  402f7b:	e9 60 fc ff ff       	jmpq   402be0 <.plt>

0000000000402f80 <fwrite@plt>:
  402f80:	ff 25 5a e2 22 00    	jmpq   *0x22e25a(%rip)        # 6311e0 <fwrite>
  402f86:	68 39 00 00 00       	pushq  $0x39
  402f8b:	e9 50 fc ff ff       	jmpq   402be0 <.plt>

0000000000402f90 <closelog@plt>:
  402f90:	ff 25 52 e2 22 00    	jmpq   *0x22e252(%rip)        # 6311e8 <closelog@GLIBC_2.2.5>
  402f96:	68 3a 00 00 00       	pushq  $0x3a
  402f9b:	e9 40 fc ff ff       	jmpq   402be0 <.plt>

0000000000402fa0 <__asan_report_store8@plt>:
  402fa0:	ff 25 4a e2 22 00    	jmpq   *0x22e24a(%rip)        # 6311f0 <__asan_report_store8>
  402fa6:	68 3b 00 00 00       	pushq  $0x3b
  402fab:	e9 30 fc ff ff       	jmpq   402be0 <.plt>

0000000000402fb0 <__asan_report_load2@plt>:
  402fb0:	ff 25 42 e2 22 00    	jmpq   *0x22e242(%rip)        # 6311f8 <__asan_report_load2>
  402fb6:	68 3c 00 00 00       	pushq  $0x3c
  402fbb:	e9 20 fc ff ff       	jmpq   402be0 <.plt>

0000000000402fc0 <fileno@plt>:
  402fc0:	ff 25 3a e2 22 00    	jmpq   *0x22e23a(%rip)        # 631200 <fileno@GLIBC_2.2.5>
  402fc6:	68 3d 00 00 00       	pushq  $0x3d
  402fcb:	e9 10 fc ff ff       	jmpq   402be0 <.plt>

0000000000402fd0 <__asan_unregister_globals@plt>:
  402fd0:	ff 25 32 e2 22 00    	jmpq   *0x22e232(%rip)        # 631208 <__asan_unregister_globals>
  402fd6:	68 3e 00 00 00       	pushq  $0x3e
  402fdb:	e9 00 fc ff ff       	jmpq   402be0 <.plt>

0000000000402fe0 <readlink@plt>:
  402fe0:	ff 25 2a e2 22 00    	jmpq   *0x22e22a(%rip)        # 631210 <readlink@GLIBC_2.2.5>
  402fe6:	68 3f 00 00 00       	pushq  $0x3f
  402feb:	e9 f0 fb ff ff       	jmpq   402be0 <.plt>

0000000000402ff0 <getsockname@plt>:
  402ff0:	ff 25 22 e2 22 00    	jmpq   *0x22e222(%rip)        # 631218 <getsockname>
  402ff6:	68 40 00 00 00       	pushq  $0x40
  402ffb:	e9 e0 fb ff ff       	jmpq   402be0 <.plt>

0000000000403000 <__ctype_b_loc@plt>:
  403000:	ff 25 1a e2 22 00    	jmpq   *0x22e21a(%rip)        # 631220 <__ctype_b_loc@GLIBC_2.3>
  403006:	68 41 00 00 00       	pushq  $0x41
  40300b:	e9 d0 fb ff ff       	jmpq   402be0 <.plt>

0000000000403010 <setsid@plt>:
  403010:	ff 25 12 e2 22 00    	jmpq   *0x22e212(%rip)        # 631228 <setsid@GLIBC_2.2.5>
  403016:	68 42 00 00 00       	pushq  $0x42
  40301b:	e9 c0 fb ff ff       	jmpq   402be0 <.plt>

0000000000403020 <nice@plt>:
  403020:	ff 25 0a e2 22 00    	jmpq   *0x22e20a(%rip)        # 631230 <nice@GLIBC_2.2.5>
  403026:	68 43 00 00 00       	pushq  $0x43
  40302b:	e9 b0 fb ff ff       	jmpq   402be0 <.plt>

0000000000403030 <__xstat@plt>:
  403030:	ff 25 02 e2 22 00    	jmpq   *0x22e202(%rip)        # 631238 <__xstat>
  403036:	68 44 00 00 00       	pushq  $0x44
  40303b:	e9 a0 fb ff ff       	jmpq   402be0 <.plt>

0000000000403040 <__asan_handle_no_return@plt>:
  403040:	ff 25 fa e1 22 00    	jmpq   *0x22e1fa(%rip)        # 631240 <__asan_handle_no_return>
  403046:	68 45 00 00 00       	pushq  $0x45
  40304b:	e9 90 fb ff ff       	jmpq   402be0 <.plt>

0000000000403050 <listen@plt>:
  403050:	ff 25 f2 e1 22 00    	jmpq   *0x22e1f2(%rip)        # 631248 <listen@GLIBC_2.2.5>
  403056:	68 46 00 00 00       	pushq  $0x46
  40305b:	e9 80 fb ff ff       	jmpq   402be0 <.plt>

0000000000403060 <initgroups@plt>:
  403060:	ff 25 ea e1 22 00    	jmpq   *0x22e1ea(%rip)        # 631250 <initgroups>
  403066:	68 47 00 00 00       	pushq  $0x47
  40306b:	e9 70 fb ff ff       	jmpq   402be0 <.plt>

0000000000403070 <__asan_init@plt>:
  403070:	ff 25 e2 e1 22 00    	jmpq   *0x22e1e2(%rip)        # 631258 <__asan_init>
  403076:	68 48 00 00 00       	pushq  $0x48
  40307b:	e9 60 fb ff ff       	jmpq   402be0 <.plt>

0000000000403080 <__asan_stack_malloc_4@plt>:
  403080:	ff 25 da e1 22 00    	jmpq   *0x22e1da(%rip)        # 631260 <__asan_stack_malloc_4>
  403086:	68 49 00 00 00       	pushq  $0x49
  40308b:	e9 50 fb ff ff       	jmpq   402be0 <.plt>

0000000000403090 <strcasecmp@plt>:
  403090:	ff 25 d2 e1 22 00    	jmpq   *0x22e1d2(%rip)        # 631268 <strcasecmp>
  403096:	68 4a 00 00 00       	pushq  $0x4a
  40309b:	e9 40 fb ff ff       	jmpq   402be0 <.plt>

00000000004030a0 <fdopen@plt>:
  4030a0:	ff 25 ca e1 22 00    	jmpq   *0x22e1ca(%rip)        # 631270 <fdopen>
  4030a6:	68 4b 00 00 00       	pushq  $0x4b
  4030ab:	e9 30 fb ff ff       	jmpq   402be0 <.plt>

00000000004030b0 <malloc@plt>:
  4030b0:	ff 25 c2 e1 22 00    	jmpq   *0x22e1c2(%rip)        # 631278 <malloc>
  4030b6:	68 4c 00 00 00       	pushq  $0x4c
  4030bb:	e9 20 fb ff ff       	jmpq   402be0 <.plt>

00000000004030c0 <daemon@plt>:
  4030c0:	ff 25 ba e1 22 00    	jmpq   *0x22e1ba(%rip)        # 631280 <daemon@GLIBC_2.2.5>
  4030c6:	68 4d 00 00 00       	pushq  $0x4d
  4030cb:	e9 10 fb ff ff       	jmpq   402be0 <.plt>

00000000004030d0 <crypt@plt>:
  4030d0:	ff 25 b2 e1 22 00    	jmpq   *0x22e1b2(%rip)        # 631288 <crypt@GLIBC_2.2.5>
  4030d6:	68 4e 00 00 00       	pushq  $0x4e
  4030db:	e9 00 fb ff ff       	jmpq   402be0 <.plt>

00000000004030e0 <exit@plt>:
  4030e0:	ff 25 aa e1 22 00    	jmpq   *0x22e1aa(%rip)        # 631290 <exit@GLIBC_2.2.5>
  4030e6:	68 4f 00 00 00       	pushq  $0x4f
  4030eb:	e9 f0 fa ff ff       	jmpq   402be0 <.plt>

00000000004030f0 <getenv@plt>:
  4030f0:	ff 25 a2 e1 22 00    	jmpq   *0x22e1a2(%rip)        # 631298 <getenv@GLIBC_2.2.5>
  4030f6:	68 50 00 00 00       	pushq  $0x50
  4030fb:	e9 e0 fa ff ff       	jmpq   402be0 <.plt>

0000000000403100 <strcspn@plt>:
  403100:	ff 25 9a e1 22 00    	jmpq   *0x22e19a(%rip)        # 6312a0 <strcspn>
  403106:	68 51 00 00 00       	pushq  $0x51
  40310b:	e9 d0 fa ff ff       	jmpq   402be0 <.plt>

0000000000403110 <__asan_report_load1@plt>:
  403110:	ff 25 92 e1 22 00    	jmpq   *0x22e192(%rip)        # 6312a8 <__asan_report_load1>
  403116:	68 52 00 00 00       	pushq  $0x52
  40311b:	e9 c0 fa ff ff       	jmpq   402be0 <.plt>

0000000000403120 <__asan_report_load16@plt>:
  403120:	ff 25 8a e1 22 00    	jmpq   *0x22e18a(%rip)        # 6312b0 <__asan_report_load16>
  403126:	68 53 00 00 00       	pushq  $0x53
  40312b:	e9 b0 fa ff ff       	jmpq   402be0 <.plt>

0000000000403130 <__asan_report_store1@plt>:
  403130:	ff 25 82 e1 22 00    	jmpq   *0x22e182(%rip)        # 6312b8 <__asan_report_store1>
  403136:	68 54 00 00 00       	pushq  $0x54
  40313b:	e9 a0 fa ff ff       	jmpq   402be0 <.plt>

0000000000403140 <memcpy@plt>:
  403140:	ff 25 7a e1 22 00    	jmpq   *0x22e17a(%rip)        # 6312c0 <memcpy>
  403146:	68 55 00 00 00       	pushq  $0x55
  40314b:	e9 90 fa ff ff       	jmpq   402be0 <.plt>

0000000000403150 <freeaddrinfo@plt>:
  403150:	ff 25 72 e1 22 00    	jmpq   *0x22e172(%rip)        # 6312c8 <freeaddrinfo@GLIBC_2.2.5>
  403156:	68 56 00 00 00       	pushq  $0x56
  40315b:	e9 80 fa ff ff       	jmpq   402be0 <.plt>

0000000000403160 <localtime@plt>:
  403160:	ff 25 6a e1 22 00    	jmpq   *0x22e16a(%rip)        # 6312d0 <localtime>
  403166:	68 57 00 00 00       	pushq  $0x57
  40316b:	e9 70 fa ff ff       	jmpq   402be0 <.plt>

0000000000403170 <getcwd@plt>:
  403170:	ff 25 62 e1 22 00    	jmpq   *0x22e162(%rip)        # 6312d8 <getcwd>
  403176:	68 58 00 00 00       	pushq  $0x58
  40317b:	e9 60 fa ff ff       	jmpq   402be0 <.plt>

0000000000403180 <waitpid@plt>:
  403180:	ff 25 5a e1 22 00    	jmpq   *0x22e15a(%rip)        # 6312e0 <waitpid>
  403186:	68 59 00 00 00       	pushq  $0x59
  40318b:	e9 50 fa ff ff       	jmpq   402be0 <.plt>

0000000000403190 <pipe@plt>:
  403190:	ff 25 52 e1 22 00    	jmpq   *0x22e152(%rip)        # 6312e8 <pipe@GLIBC_2.2.5>
  403196:	68 5a 00 00 00       	pushq  $0x5a
  40319b:	e9 40 fa ff ff       	jmpq   402be0 <.plt>

00000000004031a0 <writev@plt>:
  4031a0:	ff 25 4a e1 22 00    	jmpq   *0x22e14a(%rip)        # 6312f0 <writev>
  4031a6:	68 5b 00 00 00       	pushq  $0x5b
  4031ab:	e9 30 fa ff ff       	jmpq   402be0 <.plt>

00000000004031b0 <shutdown@plt>:
  4031b0:	ff 25 42 e1 22 00    	jmpq   *0x22e142(%rip)        # 6312f8 <shutdown@GLIBC_2.2.5>
  4031b6:	68 5c 00 00 00       	pushq  $0x5c
  4031bb:	e9 20 fa ff ff       	jmpq   402be0 <.plt>

00000000004031c0 <gai_strerror@plt>:
  4031c0:	ff 25 3a e1 22 00    	jmpq   *0x22e13a(%rip)        # 631300 <gai_strerror@GLIBC_2.2.5>
  4031c6:	68 5d 00 00 00       	pushq  $0x5d
  4031cb:	e9 10 fa ff ff       	jmpq   402be0 <.plt>

00000000004031d0 <__asan_stack_malloc_5@plt>:
  4031d0:	ff 25 32 e1 22 00    	jmpq   *0x22e132(%rip)        # 631308 <__asan_stack_malloc_5>
  4031d6:	68 5e 00 00 00       	pushq  $0x5e
  4031db:	e9 00 fa ff ff       	jmpq   402be0 <.plt>

00000000004031e0 <clock_gettime@plt>:
  4031e0:	ff 25 2a e1 22 00    	jmpq   *0x22e12a(%rip)        # 631310 <clock_gettime>
  4031e6:	68 5f 00 00 00       	pushq  $0x5f
  4031eb:	e9 f0 f9 ff ff       	jmpq   402be0 <.plt>

00000000004031f0 <getrlimit@plt>:
  4031f0:	ff 25 22 e1 22 00    	jmpq   *0x22e122(%rip)        # 631318 <getrlimit@GLIBC_2.2.5>
  4031f6:	68 60 00 00 00       	pushq  $0x60
  4031fb:	e9 e0 f9 ff ff       	jmpq   402be0 <.plt>

0000000000403200 <kill@plt>:
  403200:	ff 25 1a e1 22 00    	jmpq   *0x22e11a(%rip)        # 631320 <kill@GLIBC_2.2.5>
  403206:	68 61 00 00 00       	pushq  $0x61
  40320b:	e9 d0 f9 ff ff       	jmpq   402be0 <.plt>

0000000000403210 <tolower@plt>:
  403210:	ff 25 12 e1 22 00    	jmpq   *0x22e112(%rip)        # 631328 <tolower@GLIBC_2.2.5>
  403216:	68 62 00 00 00       	pushq  $0x62
  40321b:	e9 c0 f9 ff ff       	jmpq   402be0 <.plt>

0000000000403220 <getpid@plt>:
  403220:	ff 25 0a e1 22 00    	jmpq   *0x22e10a(%rip)        # 631330 <getpid@GLIBC_2.2.5>
  403226:	68 63 00 00 00       	pushq  $0x63
  40322b:	e9 b0 f9 ff ff       	jmpq   402be0 <.plt>

0000000000403230 <chdir@plt>:
  403230:	ff 25 02 e1 22 00    	jmpq   *0x22e102(%rip)        # 631338 <chdir@GLIBC_2.2.5>
  403236:	68 64 00 00 00       	pushq  $0x64
  40323b:	e9 a0 f9 ff ff       	jmpq   402be0 <.plt>

0000000000403240 <gethostname@plt>:
  403240:	ff 25 fa e0 22 00    	jmpq   *0x22e0fa(%rip)        # 631340 <gethostname@GLIBC_2.2.5>
  403246:	68 65 00 00 00       	pushq  $0x65
  40324b:	e9 90 f9 ff ff       	jmpq   402be0 <.plt>

0000000000403250 <__asan_report_load8@plt>:
  403250:	ff 25 f2 e0 22 00    	jmpq   *0x22e0f2(%rip)        # 631348 <__asan_report_load8>
  403256:	68 66 00 00 00       	pushq  $0x66
  40325b:	e9 80 f9 ff ff       	jmpq   402be0 <.plt>

0000000000403260 <__asan_report_store2@plt>:
  403260:	ff 25 ea e0 22 00    	jmpq   *0x22e0ea(%rip)        # 631350 <__asan_report_store2>
  403266:	68 67 00 00 00       	pushq  $0x67
  40326b:	e9 70 f9 ff ff       	jmpq   402be0 <.plt>

0000000000403270 <ctime@plt>:
  403270:	ff 25 e2 e0 22 00    	jmpq   *0x22e0e2(%rip)        # 631358 <ctime>
  403276:	68 68 00 00 00       	pushq  $0x68
  40327b:	e9 60 f9 ff ff       	jmpq   402be0 <.plt>

0000000000403280 <puts@plt>:
  403280:	ff 25 da e0 22 00    	jmpq   *0x22e0da(%rip)        # 631360 <puts@GLIBC_2.2.5>
  403286:	68 69 00 00 00       	pushq  $0x69
  40328b:	e9 50 f9 ff ff       	jmpq   402be0 <.plt>

0000000000403290 <opendir@plt>:
  403290:	ff 25 d2 e0 22 00    	jmpq   *0x22e0d2(%rip)        # 631368 <opendir>
  403296:	68 6a 00 00 00       	pushq  $0x6a
  40329b:	e9 40 f9 ff ff       	jmpq   402be0 <.plt>

00000000004032a0 <fgets@plt>:
  4032a0:	ff 25 ca e0 22 00    	jmpq   *0x22e0ca(%rip)        # 631370 <fgets@GLIBC_2.2.5>
  4032a6:	68 6b 00 00 00       	pushq  $0x6b
  4032ab:	e9 30 f9 ff ff       	jmpq   402be0 <.plt>

00000000004032b0 <__asan_stack_free_5@plt>:
  4032b0:	ff 25 c2 e0 22 00    	jmpq   *0x22e0c2(%rip)        # 631378 <__asan_stack_free_5>
  4032b6:	68 6c 00 00 00       	pushq  $0x6c
  4032bb:	e9 20 f9 ff ff       	jmpq   402be0 <.plt>

00000000004032c0 <sprintf@plt>:
  4032c0:	ff 25 ba e0 22 00    	jmpq   *0x22e0ba(%rip)        # 631380 <sprintf>
  4032c6:	68 6d 00 00 00       	pushq  $0x6d
  4032cb:	e9 10 f9 ff ff       	jmpq   402be0 <.plt>

00000000004032d0 <vsnprintf@plt>:
  4032d0:	ff 25 b2 e0 22 00    	jmpq   *0x22e0b2(%rip)        # 631388 <vsnprintf>
  4032d6:	68 6e 00 00 00       	pushq  $0x6e
  4032db:	e9 00 f9 ff ff       	jmpq   402be0 <.plt>

00000000004032e0 <closedir@plt>:
  4032e0:	ff 25 aa e0 22 00    	jmpq   *0x22e0aa(%rip)        # 631390 <closedir@GLIBC_2.2.5>
  4032e6:	68 6f 00 00 00       	pushq  $0x6f
  4032eb:	e9 f0 f8 ff ff       	jmpq   402be0 <.plt>

00000000004032f0 <setgroups@plt>:
  4032f0:	ff 25 a2 e0 22 00    	jmpq   *0x22e0a2(%rip)        # 631398 <setgroups@GLIBC_2.2.5>
  4032f6:	68 70 00 00 00       	pushq  $0x70
  4032fb:	e9 e0 f8 ff ff       	jmpq   402be0 <.plt>

0000000000403300 <gettimeofday@plt>:
  403300:	ff 25 9a e0 22 00    	jmpq   *0x22e09a(%rip)        # 6313a0 <gettimeofday@GLIBC_2.2.5>
  403306:	68 71 00 00 00       	pushq  $0x71
  40330b:	e9 d0 f8 ff ff       	jmpq   402be0 <.plt>

0000000000403310 <fclose@plt>:
  403310:	ff 25 92 e0 22 00    	jmpq   *0x22e092(%rip)        # 6313a8 <fclose>
  403316:	68 72 00 00 00       	pushq  $0x72
  40331b:	e9 c0 f8 ff ff       	jmpq   402be0 <.plt>

0000000000403320 <__asan_stack_malloc_2@plt>:
  403320:	ff 25 8a e0 22 00    	jmpq   *0x22e08a(%rip)        # 6313b0 <__asan_stack_malloc_2>
  403326:	68 73 00 00 00       	pushq  $0x73
  40332b:	e9 b0 f8 ff ff       	jmpq   402be0 <.plt>

0000000000403330 <getdtablesize@plt>:
  403330:	ff 25 82 e0 22 00    	jmpq   *0x22e082(%rip)        # 6313b8 <getdtablesize@GLIBC_2.2.5>
  403336:	68 74 00 00 00       	pushq  $0x74
  40333b:	e9 a0 f8 ff ff       	jmpq   402be0 <.plt>

0000000000403340 <atoll@plt>:
  403340:	ff 25 7a e0 22 00    	jmpq   *0x22e07a(%rip)        # 6313c0 <atoll>
  403346:	68 75 00 00 00       	pushq  $0x75
  40334b:	e9 90 f8 ff ff       	jmpq   402be0 <.plt>

0000000000403350 <getpwnam@plt>:
  403350:	ff 25 72 e0 22 00    	jmpq   *0x22e072(%rip)        # 6313c8 <getpwnam>
  403356:	68 76 00 00 00       	pushq  $0x76
  40335b:	e9 80 f8 ff ff       	jmpq   402be0 <.plt>

0000000000403360 <atol@plt>:
  403360:	ff 25 6a e0 22 00    	jmpq   *0x22e06a(%rip)        # 6313d0 <atol>
  403366:	68 77 00 00 00       	pushq  $0x77
  40336b:	e9 70 f8 ff ff       	jmpq   402be0 <.plt>

0000000000403370 <readdir@plt>:
  403370:	ff 25 62 e0 22 00    	jmpq   *0x22e062(%rip)        # 6313d8 <readdir>
  403376:	68 78 00 00 00       	pushq  $0x78
  40337b:	e9 60 f8 ff ff       	jmpq   402be0 <.plt>

0000000000403380 <strstr@plt>:
  403380:	ff 25 5a e0 22 00    	jmpq   *0x22e05a(%rip)        # 6313e0 <strstr>
  403386:	68 79 00 00 00       	pushq  $0x79
  40338b:	e9 50 f8 ff ff       	jmpq   402be0 <.plt>

0000000000403390 <fchown@plt>:
  403390:	ff 25 52 e0 22 00    	jmpq   *0x22e052(%rip)        # 6313e8 <fchown@GLIBC_2.2.5>
  403396:	68 7a 00 00 00       	pushq  $0x7a
  40339b:	e9 40 f8 ff ff       	jmpq   402be0 <.plt>

00000000004033a0 <getaddrinfo@plt>:
  4033a0:	ff 25 4a e0 22 00    	jmpq   *0x22e04a(%rip)        # 6313f0 <getaddrinfo>
  4033a6:	68 7b 00 00 00       	pushq  $0x7b
  4033ab:	e9 30 f8 ff ff       	jmpq   402be0 <.plt>

00000000004033b0 <realloc@plt>:
  4033b0:	ff 25 42 e0 22 00    	jmpq   *0x22e042(%rip)        # 6313f8 <realloc>
  4033b6:	68 7c 00 00 00       	pushq  $0x7c
  4033bb:	e9 20 f8 ff ff       	jmpq   402be0 <.plt>

00000000004033c0 <strchr@plt>:
  4033c0:	ff 25 3a e0 22 00    	jmpq   *0x22e03a(%rip)        # 631400 <strchr>
  4033c6:	68 7d 00 00 00       	pushq  $0x7d
  4033cb:	e9 10 f8 ff ff       	jmpq   402be0 <.plt>

00000000004033d0 <execve@plt>:
  4033d0:	ff 25 32 e0 22 00    	jmpq   *0x22e032(%rip)        # 631408 <execve@GLIBC_2.2.5>
  4033d6:	68 7e 00 00 00       	pushq  $0x7e
  4033db:	e9 00 f8 ff ff       	jmpq   402be0 <.plt>

00000000004033e0 <__asan_version_mismatch_check_v8@plt>:
  4033e0:	ff 25 2a e0 22 00    	jmpq   *0x22e02a(%rip)        # 631410 <__asan_version_mismatch_check_v8>
  4033e6:	68 7f 00 00 00       	pushq  $0x7f
  4033eb:	e9 f0 f7 ff ff       	jmpq   402be0 <.plt>

00000000004033f0 <strncmp@plt>:
  4033f0:	ff 25 22 e0 22 00    	jmpq   *0x22e022(%rip)        # 631418 <strncmp>
  4033f6:	68 80 00 00 00       	pushq  $0x80
  4033fb:	e9 e0 f7 ff ff       	jmpq   402be0 <.plt>

0000000000403400 <mmap@plt>:
  403400:	ff 25 1a e0 22 00    	jmpq   *0x22e01a(%rip)        # 631420 <mmap@GLIBC_2.2.5>
  403406:	68 81 00 00 00       	pushq  $0x81
  40340b:	e9 d0 f7 ff ff       	jmpq   402be0 <.plt>

0000000000403410 <setgid@plt>:
  403410:	ff 25 12 e0 22 00    	jmpq   *0x22e012(%rip)        # 631428 <setgid@GLIBC_2.2.5>
  403416:	68 82 00 00 00       	pushq  $0x82
  40341b:	e9 c0 f7 ff ff       	jmpq   402be0 <.plt>

0000000000403420 <setsockopt@plt>:
  403420:	ff 25 0a e0 22 00    	jmpq   *0x22e00a(%rip)        # 631430 <setsockopt@GLIBC_2.2.5>
  403426:	68 83 00 00 00       	pushq  $0x83
  40342b:	e9 b0 f7 ff ff       	jmpq   402be0 <.plt>

0000000000403430 <accept@plt>:
  403430:	ff 25 02 e0 22 00    	jmpq   *0x22e002(%rip)        # 631438 <accept>
  403436:	68 84 00 00 00       	pushq  $0x84
  40343b:	e9 a0 f7 ff ff       	jmpq   402be0 <.plt>

0000000000403440 <sigset@plt>:
  403440:	ff 25 fa df 22 00    	jmpq   *0x22dffa(%rip)        # 631440 <sigset@GLIBC_2.2.5>
  403446:	68 85 00 00 00       	pushq  $0x85
  40344b:	e9 90 f7 ff ff       	jmpq   402be0 <.plt>

0000000000403450 <__asan_report_store_n@plt>:
  403450:	ff 25 f2 df 22 00    	jmpq   *0x22dff2(%rip)        # 631448 <__asan_report_store_n>
  403456:	68 86 00 00 00       	pushq  $0x86
  40345b:	e9 80 f7 ff ff       	jmpq   402be0 <.plt>

0000000000403460 <__asan_stack_free_6@plt>:
  403460:	ff 25 ea df 22 00    	jmpq   *0x22dfea(%rip)        # 631450 <__asan_stack_free_6>
  403466:	68 87 00 00 00       	pushq  $0x87
  40346b:	e9 70 f7 ff ff       	jmpq   402be0 <.plt>

0000000000403470 <__libc_start_main@plt>:
  403470:	ff 25 e2 df 22 00    	jmpq   *0x22dfe2(%rip)        # 631458 <__libc_start_main@GLIBC_2.2.5>
  403476:	68 88 00 00 00       	pushq  $0x88
  40347b:	e9 60 f7 ff ff       	jmpq   402be0 <.plt>

0000000000403480 <__asan_stack_malloc_3@plt>:
  403480:	ff 25 da df 22 00    	jmpq   *0x22dfda(%rip)        # 631460 <__asan_stack_malloc_3>
  403486:	68 89 00 00 00       	pushq  $0x89
  40348b:	e9 50 f7 ff ff       	jmpq   402be0 <.plt>

0000000000403490 <setuid@plt>:
  403490:	ff 25 d2 df 22 00    	jmpq   *0x22dfd2(%rip)        # 631468 <setuid@GLIBC_2.2.5>
  403496:	68 8a 00 00 00       	pushq  $0x8a
  40349b:	e9 40 f7 ff ff       	jmpq   402be0 <.plt>

00000000004034a0 <alarm@plt>:
  4034a0:	ff 25 ca df 22 00    	jmpq   *0x22dfca(%rip)        # 631470 <alarm@GLIBC_2.2.5>
  4034a6:	68 8b 00 00 00       	pushq  $0x8b
  4034ab:	e9 30 f7 ff ff       	jmpq   402be0 <.plt>

00000000004034b0 <qsort@plt>:
  4034b0:	ff 25 c2 df 22 00    	jmpq   *0x22dfc2(%rip)        # 631478 <qsort@GLIBC_2.2.5>
  4034b6:	68 8c 00 00 00       	pushq  $0x8c
  4034bb:	e9 20 f7 ff ff       	jmpq   402be0 <.plt>

00000000004034c0 <strcat@plt>:
  4034c0:	ff 25 ba df 22 00    	jmpq   *0x22dfba(%rip)        # 631480 <strcat>
  4034c6:	68 8d 00 00 00       	pushq  $0x8d
  4034cb:	e9 10 f7 ff ff       	jmpq   402be0 <.plt>

00000000004034d0 <close@plt>:
  4034d0:	ff 25 b2 df 22 00    	jmpq   *0x22dfb2(%rip)        # 631488 <close@GLIBC_2.2.5>
  4034d6:	68 8e 00 00 00       	pushq  $0x8e
  4034db:	e9 00 f7 ff ff       	jmpq   402be0 <.plt>

00000000004034e0 <strspn@plt>:
  4034e0:	ff 25 aa df 22 00    	jmpq   *0x22dfaa(%rip)        # 631490 <strspn>
  4034e6:	68 8f 00 00 00       	pushq  $0x8f
  4034eb:	e9 f0 f6 ff ff       	jmpq   402be0 <.plt>

Disassembly of section .plt.got:

00000000004034f0 <.plt.got>:
  4034f0:	ff 25 02 db 22 00    	jmpq   *0x22db02(%rip)        # 630ff8 <__gmon_start__>
  4034f6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000403500 <_GLOBAL__sub_D_00099_0_terminate>:
  403500:	be a8 00 00 00       	mov    $0xa8,%esi
  403505:	bf 00 17 63 00       	mov    $0x631700,%edi
  40350a:	e9 c1 fa ff ff       	jmpq   402fd0 <__asan_unregister_globals@plt>
  40350f:	90                   	nop

0000000000403510 <_GLOBAL__sub_D_00099_0_fdwatch_get_nfiles>:
  403510:	be 13 00 00 00       	mov    $0x13,%esi
  403515:	bf a0 41 63 00       	mov    $0x6341a0,%edi
  40351a:	e9 b1 fa ff ff       	jmpq   402fd0 <__asan_unregister_globals@plt>
  40351f:	90                   	nop

0000000000403520 <_GLOBAL__sub_D_00099_0_httpd_initialize>:
  403520:	be 55 02 00 00       	mov    $0x255,%esi
  403525:	bf 80 64 63 00       	mov    $0x636480,%edi
  40352a:	e9 a1 fa ff ff       	jmpq   402fd0 <__asan_unregister_globals@plt>
  40352f:	90                   	nop

0000000000403530 <_GLOBAL__sub_D_00099_0_mmc_map>:
  403530:	be 16 00 00 00       	mov    $0x16,%esi
  403535:	bf a0 fa 63 00       	mov    $0x63faa0,%edi
  40353a:	e9 91 fa ff ff       	jmpq   402fd0 <__asan_unregister_globals@plt>
  40353f:	90                   	nop

0000000000403540 <_GLOBAL__sub_D_00099_0_tmr_init>:
  403540:	be 0b 00 00 00       	mov    $0xb,%esi
  403545:	bf a0 00 64 00       	mov    $0x6400a0,%edi
  40354a:	e9 81 fa ff ff       	jmpq   402fd0 <__asan_unregister_globals@plt>
  40354f:	90                   	nop

0000000000403550 <_GLOBAL__sub_D_00099_0_tdate_parse>:
  403550:	be 31 00 00 00       	mov    $0x31,%esi
  403555:	bf 60 06 64 00       	mov    $0x640660,%edi
  40355a:	e9 71 fa ff ff       	jmpq   402fd0 <__asan_unregister_globals@plt>
  40355f:	90                   	nop

0000000000403560 <_GLOBAL__sub_D_00099_0_match>:
  403560:	be 01 00 00 00       	mov    $0x1,%esi
  403565:	bf a0 12 64 00       	mov    $0x6412a0,%edi
  40356a:	e9 61 fa ff ff       	jmpq   402fd0 <__asan_unregister_globals@plt>
  40356f:	90                   	nop

0000000000403570 <main>:
    }


int
main( int argc, char** argv )
    {
  403570:	41 57                	push   %r15
  403572:	41 56                	push   %r14
  403574:	41 89 fe             	mov    %edi,%r14d
  403577:	41 55                	push   %r13
  403579:	49 89 f5             	mov    %rsi,%r13
  40357c:	41 54                	push   %r12
  40357e:	55                   	push   %rbp
  40357f:	53                   	push   %rbx
  403580:	48 81 ec a8 12 00 00 	sub    $0x12a8,%rsp
  403587:	8b 05 73 dd 23 00    	mov    0x23dd73(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  40358d:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
  403592:	85 c0                	test   %eax,%eax
  403594:	0f 85 e7 10 00 00    	jne    404681 <main+0x1111>
  40359a:	48 89 d8             	mov    %rbx,%rax
  40359d:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
  4035a4:	48 8d ab 60 12 00 00 	lea    0x1260(%rbx),%rbp
  4035ab:	48 c1 e8 03          	shr    $0x3,%rax
  4035af:	48 c7 43 08 30 1d 42 	movq   $0x421d30,0x8(%rbx)
  4035b6:	00 
  4035b7:	48 c7 43 10 70 35 40 	movq   $0x403570,0x10(%rbx)
  4035be:	00 
  4035bf:	c7 80 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rax)
  4035c6:	f1 f1 f1 
  4035c9:	c7 80 04 80 ff 7f 04 	movl   $0xf2f2f204,0x7fff8004(%rax)
  4035d0:	f2 f2 f2 
  4035d3:	c7 80 08 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8008(%rax)
  4035da:	f2 f2 f2 
  4035dd:	c7 80 0c 80 ff 7f 04 	movl   $0xf2f2f204,0x7fff800c(%rax)
  4035e4:	f2 f2 f2 
  4035e7:	c7 80 10 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8010(%rax)
  4035ee:	f2 f2 f2 
  4035f1:	c7 80 14 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8014(%rax)
  4035f8:	00 f2 f2 
  4035fb:	c7 80 18 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8018(%rax)
  403602:	f2 f2 f2 
  403605:	c7 80 2c 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff802c(%rax)
  40360c:	f2 f2 f2 
  40360f:	c7 80 40 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8040(%rax)
  403616:	f2 f2 f2 
  403619:	c7 80 44 82 ff 7f 01 	movl   $0xf2f2f201,0x7fff8244(%rax)
  403620:	f2 f2 f2 
  403623:	c7 80 48 82 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8248(%rax)
  40362a:	f3 f3 f3 
    httpd_sockaddr sa4;
    httpd_sockaddr sa6;
    int gotv4, gotv6;
    struct timeval tv;

    argv0 = argv[0];
  40362d:	4c 89 e8             	mov    %r13,%rax
  403630:	48 c1 e8 03          	shr    $0x3,%rax
  403634:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40363b:	0f 85 56 10 00 00    	jne    404697 <main+0x1127>
  403641:	4d 8b 65 00          	mov    0x0(%r13),%r12

    cp = strrchr( argv0, '/' );
  403645:	be 2f 00 00 00       	mov    $0x2f,%esi

    /* Read zone info now, in case we chroot(). */
    tzset();

    /* Look up hostname now, in case we chroot(). */
    lookup_hostname( &sa4, sizeof(sa4), &gotv4, &sa6, sizeof(sa6), &gotv6 );
  40364a:	4c 8d bb 80 01 00 00 	lea    0x180(%rbx),%r15
    cp = strrchr( argv0, '/' );
  403651:	4c 89 e7             	mov    %r12,%rdi
    argv0 = argv[0];
  403654:	4c 89 25 85 e5 23 00 	mov    %r12,0x23e585(%rip)        # 641be0 <argv0>
    cp = strrchr( argv0, '/' );
  40365b:	e8 20 f8 ff ff       	callq  402e80 <strrchr@plt>
    openlog( cp, LOG_NDELAY|LOG_PID, LOG_FACILITY );
  403660:	be 09 00 00 00       	mov    $0x9,%esi
	++cp;
  403665:	48 85 c0             	test   %rax,%rax
  403668:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40366c:	4c 0f 45 e2          	cmovne %rdx,%r12
    openlog( cp, LOG_NDELAY|LOG_PID, LOG_FACILITY );
  403670:	ba 18 00 00 00       	mov    $0x18,%edx
  403675:	4c 89 e7             	mov    %r12,%rdi
  403678:	e8 53 f8 ff ff       	callq  402ed0 <openlog@plt>
    parse_args( argc, argv );
  40367d:	4c 89 ee             	mov    %r13,%rsi
  403680:	44 89 f7             	mov    %r14d,%edi
    lookup_hostname( &sa4, sizeof(sa4), &gotv4, &sa6, sizeof(sa6), &gotv6 );
  403683:	4c 8d 6b 20          	lea    0x20(%rbx),%r13
    parse_args( argc, argv );
  403687:	e8 d4 28 00 00       	callq  405f60 <parse_args>
    lookup_hostname( &sa4, sizeof(sa4), &gotv4, &sa6, sizeof(sa6), &gotv6 );
  40368c:	4c 8d 73 60          	lea    0x60(%rbx),%r14
  403690:	48 81 c3 e0 00 00 00 	add    $0xe0,%rbx
    tzset();
  403697:	e8 84 f5 ff ff       	callq  402c20 <tzset@plt>
    lookup_hostname( &sa4, sizeof(sa4), &gotv4, &sa6, sizeof(sa6), &gotv6 );
  40369c:	4c 89 f1             	mov    %r14,%rcx
  40369f:	4c 89 fa             	mov    %r15,%rdx
  4036a2:	4c 89 ee             	mov    %r13,%rsi
  4036a5:	48 89 df             	mov    %rbx,%rdi
  4036a8:	e8 33 61 00 00       	callq  4097e0 <lookup_hostname.constprop.1>
    if ( ! ( gotv4 || gotv6 ) )
  4036ad:	4c 89 e8             	mov    %r13,%rax
  4036b0:	48 c1 e8 03          	shr    $0x3,%rax
  4036b4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4036bb:	84 c0                	test   %al,%al
  4036bd:	74 08                	je     4036c7 <main+0x157>
  4036bf:	3c 03                	cmp    $0x3,%al
  4036c1:	0f 8e 8e 0b 00 00    	jle    404255 <main+0xce5>
  4036c7:	4c 89 f0             	mov    %r14,%rax
  4036ca:	8b 95 c0 ed ff ff    	mov    -0x1240(%rbp),%edx
  4036d0:	48 c1 e8 03          	shr    $0x3,%rax
  4036d4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4036db:	84 c0                	test   %al,%al
  4036dd:	74 08                	je     4036e7 <main+0x177>
  4036df:	3c 03                	cmp    $0x3,%al
  4036e1:	0f 8e 66 0b 00 00    	jle    40424d <main+0xcdd>
  4036e7:	0b 95 00 ee ff ff    	or     -0x1200(%rbp),%edx
  4036ed:	0f 84 0f 09 00 00    	je     404002 <main+0xa92>

    /* Throttle file. */
    numthrottles = 0;
    maxthrottles = 0;
    throttles = (throttletab*) 0;
    if ( throttlefile != (char*) 0 )
  4036f3:	48 8b 3d e6 e0 23 00 	mov    0x23e0e6(%rip),%rdi        # 6417e0 <throttlefile>
    numthrottles = 0;
  4036fa:	c7 05 dc de 23 00 00 	movl   $0x0,0x23dedc(%rip)        # 6415e0 <numthrottles>
  403701:	00 00 00 
    maxthrottles = 0;
  403704:	c7 05 92 de 23 00 00 	movl   $0x0,0x23de92(%rip)        # 6415a0 <maxthrottles>
  40370b:	00 00 00 
    throttles = (throttletab*) 0;
  40370e:	48 c7 05 07 df 23 00 	movq   $0x0,0x23df07(%rip)        # 641620 <throttles>
  403715:	00 00 00 00 
    if ( throttlefile != (char*) 0 )
  403719:	48 85 ff             	test   %rdi,%rdi
  40371c:	74 05                	je     403723 <main+0x1b3>
	read_throttlefile( throttlefile );
  40371e:	e8 ed 2f 00 00       	callq  406710 <read_throttlefile>

    /* If we're root and we're going to become another user, get the uid/gid
    ** now.
    */
    if ( getuid() == 0 )
  403723:	e8 78 f6 ff ff       	callq  402da0 <getuid@plt>
    gid_t gid = 32767;
  403728:	c7 44 24 14 ff 7f 00 	movl   $0x7fff,0x14(%rsp)
  40372f:	00 
    uid_t uid = 32767;
  403730:	c7 44 24 28 ff 7f 00 	movl   $0x7fff,0x28(%rsp)
  403737:	00 
    if ( getuid() == 0 )
  403738:	85 c0                	test   %eax,%eax
  40373a:	0f 84 54 07 00 00    	je     403e94 <main+0x924>
	uid = pwd->pw_uid;
	gid = pwd->pw_gid;
	}

    /* Log file. */
    if ( logfile != (char*) 0 )
  403740:	4c 8b 25 d9 e0 23 00 	mov    0x23e0d9(%rip),%r12        # 641820 <logfile>
  403747:	4d 85 e4             	test   %r12,%r12
  40374a:	0f 84 b2 07 00 00    	je     403f02 <main+0x992>
	{
	if ( strcmp( logfile, "/dev/null" ) == 0 )
  403750:	be 80 0e 42 00       	mov    $0x420e80,%esi
  403755:	4c 89 e7             	mov    %r12,%rdi
  403758:	e8 e3 f6 ff ff       	callq  402e40 <strcmp@plt>
  40375d:	85 c0                	test   %eax,%eax
  40375f:	0f 85 c4 06 00 00    	jne    403e29 <main+0x8b9>
	    {
	    no_log = 1;
  403765:	c7 05 f1 e2 23 00 01 	movl   $0x1,0x23e2f1(%rip)        # 641a60 <no_log>
  40376c:	00 00 00 
	    logfp = (FILE*) 0;
  40376f:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  403776:	00 00 
	}
    else
	logfp = (FILE*) 0;

    /* Switch directories if requested. */
    if ( dir != (char*) 0 )
  403778:	48 8b 3d a1 e3 23 00 	mov    0x23e3a1(%rip),%rdi        # 641b20 <dir>
  40377f:	48 85 ff             	test   %rdi,%rdi
  403782:	74 0d                	je     403791 <main+0x221>
	{
	if ( chdir( dir ) < 0 )
  403784:	e8 a7 fa ff ff       	callq  403230 <chdir@plt>
  403789:	85 c0                	test   %eax,%eax
  40378b:	0f 88 c1 08 00 00    	js     404052 <main+0xae2>
	    }
	}
#endif /* USE_USER_DIR */

    /* Get current directory. */
    (void) getcwd( cwd, sizeof(cwd) - 1 );
  403791:	4c 8d a5 c0 ef ff ff 	lea    -0x1040(%rbp),%r12
  403798:	be 00 10 00 00       	mov    $0x1000,%esi
  40379d:	4c 89 e7             	mov    %r12,%rdi
  4037a0:	e8 cb f9 ff ff       	callq  403170 <getcwd@plt>
    if ( cwd[strlen( cwd ) - 1] != '/' )
  4037a5:	4c 89 e7             	mov    %r12,%rdi
  4037a8:	e8 d3 f4 ff ff       	callq  402c80 <strlen@plt>
  4037ad:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  4037b1:	49 8d 3c 14          	lea    (%r12,%rdx,1),%rdi
  4037b5:	48 89 f9             	mov    %rdi,%rcx
  4037b8:	48 89 fe             	mov    %rdi,%rsi
  4037bb:	48 c1 e9 03          	shr    $0x3,%rcx
  4037bf:	83 e6 07             	and    $0x7,%esi
  4037c2:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  4037c9:	40 38 f1             	cmp    %sil,%cl
  4037cc:	7f 08                	jg     4037d6 <main+0x266>
  4037ce:	84 c9                	test   %cl,%cl
  4037d0:	0f 85 c9 0e 00 00    	jne    40469f <main+0x112f>
  4037d6:	80 bc 2a c0 ef ff ff 	cmpb   $0x2f,-0x1040(%rdx,%rbp,1)
  4037dd:	2f 
  4037de:	74 13                	je     4037f3 <main+0x283>
	(void) strcat( cwd, "/" );
  4037e0:	49 8d 3c 04          	lea    (%r12,%rax,1),%rdi
  4037e4:	ba 02 00 00 00       	mov    $0x2,%edx
  4037e9:	be c0 10 42 00       	mov    $0x4210c0,%esi
  4037ee:	e8 4d f9 ff ff       	callq  403140 <memcpy@plt>

    if ( ! debug )
  4037f3:	83 3d a6 e3 23 00 00 	cmpl   $0x0,0x23e3a6(%rip)        # 641ba0 <debug>
  4037fa:	0f 85 8a 06 00 00    	jne    403e8a <main+0x91a>
	{
	/* We're not going to use stdin stdout or stderr from here on, so close
	** them to save file descriptors.
	*/
	(void) fclose( stdin );
  403800:	b8 e8 12 64 00       	mov    $0x6412e8,%eax
  403805:	48 c1 e8 03          	shr    $0x3,%rax
  403809:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  403810:	0f 85 98 0e 00 00    	jne    4046ae <main+0x113e>
  403816:	48 8b 3d cb da 23 00 	mov    0x23dacb(%rip),%rdi        # 6412e8 <stdin@@GLIBC_2.2.5>
  40381d:	e8 ee fa ff ff       	callq  403310 <fclose@plt>
	if ( logfp != stdout )
  403822:	b8 e0 12 64 00       	mov    $0x6412e0,%eax
  403827:	48 c1 e8 03          	shr    $0x3,%rax
  40382b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  403832:	0f 85 6c 0e 00 00    	jne    4046a4 <main+0x1134>
  403838:	48 8b 3d a1 da 23 00 	mov    0x23daa1(%rip),%rdi        # 6412e0 <stdout@@GLIBC_2.2.5>
  40383f:	48 3b 7c 24 08       	cmp    0x8(%rsp),%rdi
  403844:	74 05                	je     40384b <main+0x2db>
	    (void) fclose( stdout );
  403846:	e8 c5 fa ff ff       	callq  403310 <fclose@plt>
	(void) fclose( stderr );
  40384b:	b8 f0 12 64 00       	mov    $0x6412f0,%eax
  403850:	48 c1 e8 03          	shr    $0x3,%rax
  403854:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40385b:	0f 85 57 0e 00 00    	jne    4046b8 <main+0x1148>
  403861:	48 8b 3d 88 da 23 00 	mov    0x23da88(%rip),%rdi        # 6412f0 <stderr@@GLIBC_2.2.5>
  403868:	e8 a3 fa ff ff       	callq  403310 <fclose@plt>

	/* Daemonize - make ourselves a subprocess. */
#ifdef HAVE_DAEMON
	if ( daemon( 1, 1 ) < 0 )
  40386d:	be 01 00 00 00       	mov    $0x1,%esi
  403872:	bf 01 00 00 00       	mov    $0x1,%edi
  403877:	e8 44 f8 ff ff       	callq  4030c0 <daemon@plt>
	    {
	    syslog( LOG_CRIT, "daemon - %m" );
  40387c:	be 00 11 42 00       	mov    $0x421100,%esi
	if ( daemon( 1, 1 ) < 0 )
  403881:	85 c0                	test   %eax,%eax
  403883:	0f 88 e6 05 00 00    	js     403e6f <main+0x8ff>
#ifdef HAVE_SETSID
	(void) setsid();
#endif /* HAVE_SETSID */
	}

    if ( pidfile != (char*) 0 )
  403889:	48 8b 3d d0 de 23 00 	mov    0x23ded0(%rip),%rdi        # 641760 <pidfile>
  403890:	48 85 ff             	test   %rdi,%rdi
  403893:	74 40                	je     4038d5 <main+0x365>
	{
	/* Write the PID file. */
	FILE* pidfp = fopen( pidfile, "w" );
  403895:	be 40 11 42 00       	mov    $0x421140,%esi
  40389a:	e8 61 f6 ff ff       	callq  402f00 <fopen@plt>
	if ( pidfp == (FILE*) 0 )
  40389f:	48 85 c0             	test   %rax,%rax
  4038a2:	0f 84 d4 07 00 00    	je     40407c <main+0xb0c>
  4038a8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
	    {
	    syslog( LOG_CRIT, "%.80s - %m", pidfile );
	    exit( 1 );
	    }
	(void) fprintf( pidfp, "%d\n", (int) getpid() );
  4038ad:	e8 6e f9 ff ff       	callq  403220 <getpid@plt>
  4038b2:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  4038b7:	be 80 11 42 00       	mov    $0x421180,%esi
  4038bc:	89 c2                	mov    %eax,%edx
  4038be:	31 c0                	xor    %eax,%eax
  4038c0:	48 89 cf             	mov    %rcx,%rdi
  4038c3:	e8 68 f4 ff ff       	callq  402d30 <fprintf@plt>
	(void) fclose( pidfp );
  4038c8:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  4038cd:	48 89 cf             	mov    %rcx,%rdi
  4038d0:	e8 3b fa ff ff       	callq  403310 <fclose@plt>
	}

    /* Initialize the fdwatch package.  Have to do this before chroot,
    ** if /dev/poll is used.
    */
    max_connects = fdwatch_get_nfiles();
  4038d5:	e8 f6 6a 00 00       	callq  40a3d0 <fdwatch_get_nfiles>
  4038da:	89 05 00 dc 23 00    	mov    %eax,0x23dc00(%rip)        # 6414e0 <max_connects>
    if ( max_connects < 0 )
  4038e0:	85 c0                	test   %eax,%eax
  4038e2:	0f 88 82 05 00 00    	js     403e6a <main+0x8fa>
	{
	syslog( LOG_CRIT, "fdwatch initialization failure" );
	exit( 1 );
	}
    max_connects -= SPARE_FDS;
  4038e8:	83 e8 0a             	sub    $0xa,%eax

    /* Chroot if requested. */
    if ( do_chroot )
  4038eb:	83 3d ae e1 23 00 00 	cmpl   $0x0,0x23e1ae(%rip)        # 641aa0 <do_chroot>
    max_connects -= SPARE_FDS;
  4038f2:	89 05 e8 db 23 00    	mov    %eax,0x23dbe8(%rip)        # 6414e0 <max_connects>
    if ( do_chroot )
  4038f8:	0f 85 a5 07 00 00    	jne    4040a3 <main+0xb33>
	    exit( 1 );
	    }
	}

    /* Switch directories again if requested. */
    if ( data_dir != (char*) 0 )
  4038fe:	48 8b 3d db e1 23 00 	mov    0x23e1db(%rip),%rdi        # 641ae0 <data_dir>
  403905:	48 85 ff             	test   %rdi,%rdi
  403908:	74 0d                	je     403917 <main+0x3a7>
	{
	if ( chdir( data_dir ) < 0 )
  40390a:	e8 21 f9 ff ff       	callq  403230 <chdir@plt>
  40390f:	85 c0                	test   %eax,%eax
  403911:	0f 88 49 08 00 00    	js     404160 <main+0xbf0>
	    }
	}

    /* Set up to catch signals. */
#ifdef HAVE_SIGSET
    (void) sigset( SIGTERM, handle_term );
  403917:	be e0 79 40 00       	mov    $0x4079e0,%esi
  40391c:	bf 0f 00 00 00       	mov    $0xf,%edi
  403921:	31 c0                	xor    %eax,%eax
  403923:	e8 18 fb ff ff       	callq  403440 <sigset@plt>
    (void) sigset( SIGINT, handle_term );
  403928:	be e0 79 40 00       	mov    $0x4079e0,%esi
  40392d:	bf 02 00 00 00       	mov    $0x2,%edi
  403932:	31 c0                	xor    %eax,%eax
  403934:	e8 07 fb ff ff       	callq  403440 <sigset@plt>
    (void) sigset( SIGCHLD, handle_chld );
  403939:	be 40 54 40 00       	mov    $0x405440,%esi
  40393e:	bf 11 00 00 00       	mov    $0x11,%edi
  403943:	31 c0                	xor    %eax,%eax
  403945:	e8 f6 fa ff ff       	callq  403440 <sigset@plt>
    (void) sigset( SIGPIPE, SIG_IGN );          /* get EPIPE instead */
  40394a:	be 01 00 00 00       	mov    $0x1,%esi
  40394f:	bf 0d 00 00 00       	mov    $0xd,%edi
  403954:	31 c0                	xor    %eax,%eax
  403956:	e8 e5 fa ff ff       	callq  403440 <sigset@plt>
    (void) sigset( SIGHUP, handle_hup );
  40395b:	be 90 49 40 00       	mov    $0x404990,%esi
  403960:	bf 01 00 00 00       	mov    $0x1,%edi
  403965:	31 c0                	xor    %eax,%eax
  403967:	e8 d4 fa ff ff       	callq  403440 <sigset@plt>
    (void) sigset( SIGUSR1, handle_usr1 );
  40396c:	be 90 79 40 00       	mov    $0x407990,%esi
  403971:	bf 0a 00 00 00       	mov    $0xa,%edi
  403976:	31 c0                	xor    %eax,%eax
  403978:	e8 c3 fa ff ff       	callq  403440 <sigset@plt>
    (void) sigset( SIGUSR2, handle_usr2 );
  40397d:	be 10 53 40 00       	mov    $0x405310,%esi
  403982:	bf 0c 00 00 00       	mov    $0xc,%edi
  403987:	31 c0                	xor    %eax,%eax
  403989:	e8 b2 fa ff ff       	callq  403440 <sigset@plt>
    (void) sigset( SIGALRM, handle_alrm );
  40398e:	be a0 53 40 00       	mov    $0x4053a0,%esi
  403993:	bf 0e 00 00 00       	mov    $0xe,%edi
  403998:	31 c0                	xor    %eax,%eax
  40399a:	e8 a1 fa ff ff       	callq  403440 <sigset@plt>
    (void) signal( SIGALRM, handle_alrm );
#endif /* HAVE_SIGSET */
    got_hup = 0;
    got_usr1 = 0;
    watchdog_flag = 0;
    (void) alarm( OCCASIONAL_TIME * 3 );
  40399f:	bf 68 01 00 00       	mov    $0x168,%edi
    got_hup = 0;
  4039a4:	c7 05 f2 d9 23 00 00 	movl   $0x0,0x23d9f2(%rip)        # 6413a0 <got_hup>
  4039ab:	00 00 00 
    got_usr1 = 0;
  4039ae:	c7 05 a8 d9 23 00 00 	movl   $0x0,0x23d9a8(%rip)        # 641360 <got_usr1>
  4039b5:	00 00 00 
    watchdog_flag = 0;
  4039b8:	c7 05 5e d9 23 00 00 	movl   $0x0,0x23d95e(%rip)        # 641320 <watchdog_flag>
  4039bf:	00 00 00 
    (void) alarm( OCCASIONAL_TIME * 3 );
  4039c2:	e8 d9 fa ff ff       	callq  4034a0 <alarm@plt>

    /* Initialize the timer package. */
    tmr_init();
  4039c7:	e8 34 89 01 00       	callq  41c300 <tmr_init>

    /* Initialize the HTTP layer.  Got to do this before giving up root,
    ** so that we can bind to a privileged port.
    */
    hs = httpd_initialize(
  4039cc:	8b 05 ce df 23 00    	mov    0x23dfce(%rip),%eax        # 6419a0 <do_global_passwd>
	hostname,
	gotv4 ? &sa4 : (httpd_sockaddr*) 0, gotv6 ? &sa6 : (httpd_sockaddr*) 0,
  4039d2:	4c 89 f2             	mov    %r14,%rdx
    hs = httpd_initialize(
  4039d5:	44 8b 1d c4 de 23 00 	mov    0x23dec4(%rip),%r11d        # 6418a0 <no_empty_referers>
	gotv4 ? &sa4 : (httpd_sockaddr*) 0, gotv6 ? &sa6 : (httpd_sockaddr*) 0,
  4039dc:	48 c1 ea 03          	shr    $0x3,%rdx
    hs = httpd_initialize(
  4039e0:	4c 8b 15 79 de 23 00 	mov    0x23de79(%rip),%r10        # 641860 <local_pattern>
  4039e7:	48 8b 3d f2 de 23 00 	mov    0x23def2(%rip),%rdi        # 6418e0 <url_pattern>
  4039ee:	89 44 24 18          	mov    %eax,0x18(%rsp)
  4039f2:	8b 05 e8 df 23 00    	mov    0x23dfe8(%rip),%eax        # 6419e0 <do_vhost>
	gotv4 ? &sa4 : (httpd_sockaddr*) 0, gotv6 ? &sa6 : (httpd_sockaddr*) 0,
  4039f8:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
    hs = httpd_initialize(
  4039ff:	44 8b 0d 1a df 23 00 	mov    0x23df1a(%rip),%r9d        # 641920 <cgi_limit>
  403a06:	89 44 24 20          	mov    %eax,0x20(%rsp)
  403a0a:	8b 05 10 e0 23 00    	mov    0x23e010(%rip),%eax        # 641a20 <no_symlink_check>
  403a10:	4c 8b 05 49 df 23 00 	mov    0x23df49(%rip),%r8        # 641960 <cgi_pattern>
  403a17:	0f b7 0d 42 e1 23 00 	movzwl 0x23e142(%rip),%ecx        # 641b60 <port>
  403a1e:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
  403a22:	8b 05 38 e0 23 00    	mov    0x23e038(%rip),%eax        # 641a60 <no_log>
  403a28:	89 44 24 30          	mov    %eax,0x30(%rsp)
  403a2c:	8b 05 2e dc 23 00    	mov    0x23dc2e(%rip),%eax        # 641660 <max_age>
  403a32:	89 44 24 34          	mov    %eax,0x34(%rsp)
  403a36:	48 8b 05 63 dc 23 00 	mov    0x23dc63(%rip),%rax        # 6416a0 <p3p>
  403a3d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  403a42:	48 8b 05 97 dc 23 00 	mov    0x23dc97(%rip),%rax        # 6416e0 <charset>
	gotv4 ? &sa4 : (httpd_sockaddr*) 0, gotv6 ? &sa6 : (httpd_sockaddr*) 0,
  403a49:	84 d2                	test   %dl,%dl
  403a4b:	74 09                	je     403a56 <main+0x4e6>
  403a4d:	80 fa 03             	cmp    $0x3,%dl
  403a50:	0f 8e 07 08 00 00    	jle    40425d <main+0xced>
    hs = httpd_initialize(
  403a56:	83 bd 00 ee ff ff 00 	cmpl   $0x0,-0x1200(%rbp)
  403a5d:	ba 00 00 00 00       	mov    $0x0,%edx
	gotv4 ? &sa4 : (httpd_sockaddr*) 0, gotv6 ? &sa6 : (httpd_sockaddr*) 0,
  403a62:	4c 89 ee             	mov    %r13,%rsi
    hs = httpd_initialize(
  403a65:	49 0f 45 d7          	cmovne %r15,%rdx
	gotv4 ? &sa4 : (httpd_sockaddr*) 0, gotv6 ? &sa6 : (httpd_sockaddr*) 0,
  403a69:	48 c1 ee 03          	shr    $0x3,%rsi
  403a6d:	0f b6 b6 00 80 ff 7f 	movzbl 0x7fff8000(%rsi),%esi
  403a74:	40 84 f6             	test   %sil,%sil
  403a77:	74 0a                	je     403a83 <main+0x513>
  403a79:	40 80 fe 03          	cmp    $0x3,%sil
  403a7d:	0f 8e e2 07 00 00    	jle    404265 <main+0xcf5>
    hs = httpd_initialize(
  403a83:	83 bd c0 ed ff ff 00 	cmpl   $0x0,-0x1240(%rbp)
  403a8a:	be 00 00 00 00       	mov    $0x0,%esi
  403a8f:	41 53                	push   %r11
  403a91:	48 0f 45 f3          	cmovne %rbx,%rsi
  403a95:	41 52                	push   %r10
  403a97:	57                   	push   %rdi
  403a98:	8b 5c 24 30          	mov    0x30(%rsp),%ebx
  403a9c:	48 8b 3d fd dc 23 00 	mov    0x23dcfd(%rip),%rdi        # 6417a0 <hostname>
  403aa3:	53                   	push   %rbx
  403aa4:	8b 5c 24 40          	mov    0x40(%rsp),%ebx
  403aa8:	53                   	push   %rbx
  403aa9:	8b 5c 24 54          	mov    0x54(%rsp),%ebx
  403aad:	53                   	push   %rbx
  403aae:	ff 74 24 38          	pushq  0x38(%rsp)
  403ab2:	8b 5c 24 68          	mov    0x68(%rsp),%ebx
  403ab6:	53                   	push   %rbx
  403ab7:	41 54                	push   %r12
  403ab9:	8b 5c 24 7c          	mov    0x7c(%rsp),%ebx
  403abd:	53                   	push   %rbx
  403abe:	ff b4 24 88 00 00 00 	pushq  0x88(%rsp)
  403ac5:	50                   	push   %rax
  403ac6:	e8 85 e2 00 00       	callq  411d50 <httpd_initialize>
	port, cgi_pattern, cgi_limit, charset, p3p, max_age, cwd, no_log, logfp,
	no_symlink_check, do_vhost, do_global_passwd, url_pattern,
	local_pattern, no_empty_referers );
    if ( hs == (httpd_server*) 0 )
  403acb:	48 83 c4 60          	add    $0x60,%rsp
    hs = httpd_initialize(
  403acf:	48 89 05 4a d9 23 00 	mov    %rax,0x23d94a(%rip)        # 641420 <hs>
    if ( hs == (httpd_server*) 0 )
  403ad6:	48 85 c0             	test   %rax,%rax
  403ad9:	0f 84 9c 03 00 00    	je     403e7b <main+0x90b>
	exit( 1 );

    /* Set up the occasional timer. */
    if ( tmr_create( (struct timeval*) 0, occasional, JunkClientData, OCCASIONAL_TIME * 1000L, 1 ) == (Timer*) 0 )
  403adf:	bb e8 33 64 00       	mov    $0x6433e8,%ebx
  403ae4:	49 89 dc             	mov    %rbx,%r12
  403ae7:	49 c1 ec 03          	shr    $0x3,%r12
  403aeb:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  403af2:	7f 00 
  403af4:	0f 85 e4 0b 00 00    	jne    4046de <main+0x116e>
  403afa:	48 8b 15 e7 f8 23 00 	mov    0x23f8e7(%rip),%rdx        # 6433e8 <JunkClientData>
  403b01:	be 80 53 40 00       	mov    $0x405380,%esi
  403b06:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  403b0c:	31 ff                	xor    %edi,%edi
  403b0e:	b9 c0 d4 01 00       	mov    $0x1d4c0,%ecx
  403b13:	e8 78 94 01 00       	callq  41cf90 <tmr_create>
	{
	syslog( LOG_CRIT, "tmr_create(occasional) failed" );
  403b18:	be 40 14 42 00       	mov    $0x421440,%esi
    if ( tmr_create( (struct timeval*) 0, occasional, JunkClientData, OCCASIONAL_TIME * 1000L, 1 ) == (Timer*) 0 )
  403b1d:	48 85 c0             	test   %rax,%rax
  403b20:	0f 84 c3 04 00 00    	je     403fe9 <main+0xa79>
	exit( 1 );
	}
    /* Set up the idle timer. */
    if ( tmr_create( (struct timeval*) 0, idle, JunkClientData, 5 * 1000L, 1 ) == (Timer*) 0 )
  403b26:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  403b2d:	7f 00 
  403b2f:	0f 85 9f 0b 00 00    	jne    4046d4 <main+0x1164>
  403b35:	48 8b 15 ac f8 23 00 	mov    0x23f8ac(%rip),%rdx        # 6433e8 <JunkClientData>
  403b3c:	31 ff                	xor    %edi,%edi
  403b3e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  403b44:	b9 88 13 00 00       	mov    $0x1388,%ecx
  403b49:	be 70 88 40 00       	mov    $0x408870,%esi
  403b4e:	e8 3d 94 01 00       	callq  41cf90 <tmr_create>
  403b53:	48 85 c0             	test   %rax,%rax
  403b56:	0f 84 88 04 00 00    	je     403fe4 <main+0xa74>
	{
	syslog( LOG_CRIT, "tmr_create(idle) failed" );
	exit( 1 );
	}
    if ( numthrottles > 0 )
  403b5c:	83 3d 7d da 23 00 00 	cmpl   $0x0,0x23da7d(%rip)        # 6415e0 <numthrottles>
  403b63:	7e 3b                	jle    403ba0 <main+0x630>
	{
	/* Set up the throttles timer. */
	if ( tmr_create( (struct timeval*) 0, update_throttles, JunkClientData, THROTTLE_TIME * 1000L, 1 ) == (Timer*) 0 )
  403b65:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  403b6c:	7f 00 
  403b6e:	0f 85 9a 0b 00 00    	jne    40470e <main+0x119e>
  403b74:	48 8b 15 6d f8 23 00 	mov    0x23f86d(%rip),%rdx        # 6433e8 <JunkClientData>
  403b7b:	be 30 4a 40 00       	mov    $0x404a30,%esi
  403b80:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  403b86:	31 ff                	xor    %edi,%edi
  403b88:	b9 d0 07 00 00       	mov    $0x7d0,%ecx
  403b8d:	e8 fe 93 01 00       	callq  41cf90 <tmr_create>
	    {
	    syslog( LOG_CRIT, "tmr_create(update_throttles) failed" );
  403b92:	be c0 14 42 00       	mov    $0x4214c0,%esi
	if ( tmr_create( (struct timeval*) 0, update_throttles, JunkClientData, THROTTLE_TIME * 1000L, 1 ) == (Timer*) 0 )
  403b97:	48 85 c0             	test   %rax,%rax
  403b9a:	0f 84 49 04 00 00    	je     403fe9 <main+0xa79>
	    exit( 1 );
	    }
	}
#ifdef STATS_TIME
    /* Set up the stats timer. */
    if ( tmr_create( (struct timeval*) 0, show_stats, JunkClientData, STATS_TIME * 1000L, 1 ) == (Timer*) 0 )
  403ba0:	48 c1 eb 03          	shr    $0x3,%rbx
  403ba4:	80 bb 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rbx)
  403bab:	0f 85 53 0b 00 00    	jne    404704 <main+0x1194>
  403bb1:	48 8b 15 30 f8 23 00 	mov    0x23f830(%rip),%rdx        # 6433e8 <JunkClientData>
  403bb8:	be 00 53 40 00       	mov    $0x405300,%esi
  403bbd:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  403bc3:	31 ff                	xor    %edi,%edi
  403bc5:	b9 80 ee 36 00       	mov    $0x36ee80,%ecx
  403bca:	e8 c1 93 01 00       	callq  41cf90 <tmr_create>
	{
	syslog( LOG_CRIT, "tmr_create(show_stats) failed" );
  403bcf:	be 20 15 42 00       	mov    $0x421520,%esi
    if ( tmr_create( (struct timeval*) 0, show_stats, JunkClientData, STATS_TIME * 1000L, 1 ) == (Timer*) 0 )
  403bd4:	48 85 c0             	test   %rax,%rax
  403bd7:	0f 84 0c 04 00 00    	je     403fe9 <main+0xa79>
	exit( 1 );
	}
#endif /* STATS_TIME */
    start_time = stats_time = time( (time_t*) 0 );
  403bdd:	31 ff                	xor    %edi,%edi
  403bdf:	e8 8c f3 ff ff       	callq  402f70 <time@plt>
    stats_connections = 0;
  403be4:	48 c7 05 e9 f7 23 00 	movq   $0x0,0x23f7e9(%rip)        # 6433d8 <stats_connections>
  403beb:	00 00 00 00 
    start_time = stats_time = time( (time_t*) 0 );
  403bef:	48 89 05 da f7 23 00 	mov    %rax,0x23f7da(%rip)        # 6433d0 <stats_time>
  403bf6:	48 89 05 c3 f7 23 00 	mov    %rax,0x23f7c3(%rip)        # 6433c0 <start_time>
    stats_bytes = 0;
  403bfd:	48 c7 05 c0 f7 23 00 	movq   $0x0,0x23f7c0(%rip)        # 6433c8 <stats_bytes>
  403c04:	00 00 00 00 
    stats_simultaneous = 0;
  403c08:	c7 05 ce f7 23 00 00 	movl   $0x0,0x23f7ce(%rip)        # 6433e0 <stats_simultaneous>
  403c0f:	00 00 00 

    /* If we're root, try to become someone else. */
    if ( getuid() == 0 )
  403c12:	e8 89 f1 ff ff       	callq  402da0 <getuid@plt>
  403c17:	85 c0                	test   %eax,%eax
  403c19:	0f 84 b1 05 00 00    	je     4041d0 <main+0xc60>
		LOG_WARNING,
		"started as root without requesting chroot(), warning only" );
	}

    /* Initialize our connections table. */
    connects = NEW( connecttab, max_connects );
  403c1f:	4c 63 25 ba d8 23 00 	movslq 0x23d8ba(%rip),%r12        # 6414e0 <max_connects>
  403c26:	4c 89 e3             	mov    %r12,%rbx
  403c29:	4d 69 e4 90 00 00 00 	imul   $0x90,%r12,%r12
  403c30:	4c 89 e7             	mov    %r12,%rdi
  403c33:	e8 78 f4 ff ff       	callq  4030b0 <malloc@plt>
  403c38:	48 89 05 21 d9 23 00 	mov    %rax,0x23d921(%rip)        # 641560 <connects>
    if ( connects == (connecttab*) 0 )
  403c3f:	48 85 c0             	test   %rax,%rax
  403c42:	0f 84 ac 09 00 00    	je     4045f4 <main+0x1084>
  403c48:	48 89 c2             	mov    %rax,%rdx
	{
	syslog( LOG_CRIT, "out of memory allocating a connecttab" );
	exit( 1 );
	}
    for ( cnum = 0; cnum < max_connects; ++cnum )
  403c4b:	31 c9                	xor    %ecx,%ecx
  403c4d:	eb 7a                	jmp    403cc9 <main+0x759>
	{
	connects[cnum].conn_state = CNST_FREE;
  403c4f:	48 89 d6             	mov    %rdx,%rsi
  403c52:	48 c1 ee 03          	shr    $0x3,%rsi
  403c56:	0f b6 b6 00 80 ff 7f 	movzbl 0x7fff8000(%rsi),%esi
  403c5d:	40 84 f6             	test   %sil,%sil
  403c60:	74 0a                	je     403c6c <main+0x6fc>
  403c62:	40 80 fe 03          	cmp    $0x3,%sil
  403c66:	0f 8e 56 0a 00 00    	jle    4046c2 <main+0x1152>
	connects[cnum].next_free_connect = cnum + 1;
  403c6c:	48 8d 7a 04          	lea    0x4(%rdx),%rdi
	connects[cnum].conn_state = CNST_FREE;
  403c70:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
	connects[cnum].next_free_connect = cnum + 1;
  403c76:	83 c1 01             	add    $0x1,%ecx
  403c79:	48 89 fe             	mov    %rdi,%rsi
  403c7c:	48 c1 ee 03          	shr    $0x3,%rsi
  403c80:	44 0f b6 86 00 80 ff 	movzbl 0x7fff8000(%rsi),%r8d
  403c87:	7f 
  403c88:	48 89 fe             	mov    %rdi,%rsi
  403c8b:	83 e6 07             	and    $0x7,%esi
  403c8e:	83 c6 03             	add    $0x3,%esi
  403c91:	44 38 c6             	cmp    %r8b,%sil
  403c94:	7c 09                	jl     403c9f <main+0x72f>
  403c96:	45 84 c0             	test   %r8b,%r8b
  403c99:	0f 85 30 0a 00 00    	jne    4046cf <main+0x115f>
	connects[cnum].hc = (httpd_conn*) 0;
  403c9f:	48 8d 7a 08          	lea    0x8(%rdx),%rdi
	connects[cnum].next_free_connect = cnum + 1;
  403ca3:	89 4a 04             	mov    %ecx,0x4(%rdx)
	connects[cnum].hc = (httpd_conn*) 0;
  403ca6:	48 89 fe             	mov    %rdi,%rsi
  403ca9:	48 c1 ee 03          	shr    $0x3,%rsi
  403cad:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  403cb4:	0f 85 10 0a 00 00    	jne    4046ca <main+0x115a>
  403cba:	48 c7 42 08 00 00 00 	movq   $0x0,0x8(%rdx)
  403cc1:	00 
  403cc2:	48 81 c2 90 00 00 00 	add    $0x90,%rdx
    for ( cnum = 0; cnum < max_connects; ++cnum )
  403cc9:	39 cb                	cmp    %ecx,%ebx
  403ccb:	7f 82                	jg     403c4f <main+0x6df>
	}
    connects[max_connects - 1].next_free_connect = -1;	/* end of link list */
  403ccd:	4a 8d 94 20 70 ff ff 	lea    -0x90(%rax,%r12,1),%rdx
  403cd4:	ff 
  403cd5:	48 8d 7a 04          	lea    0x4(%rdx),%rdi
  403cd9:	48 89 f8             	mov    %rdi,%rax
  403cdc:	48 c1 e8 03          	shr    $0x3,%rax
  403ce0:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  403ce7:	48 89 f8             	mov    %rdi,%rax
  403cea:	83 e0 07             	and    $0x7,%eax
  403ced:	83 c0 03             	add    $0x3,%eax
  403cf0:	38 c8                	cmp    %cl,%al
  403cf2:	7c 08                	jl     403cfc <main+0x78c>
  403cf4:	84 c9                	test   %cl,%cl
  403cf6:	0f 85 35 0a 00 00    	jne    404731 <main+0x11c1>
    first_free_connect = 0;
    num_connects = 0;
    httpd_conn_count = 0;

    if ( hs != (httpd_server*) 0 )
  403cfc:	48 8b 05 1d d7 23 00 	mov    0x23d71d(%rip),%rax        # 641420 <hs>
    connects[max_connects - 1].next_free_connect = -1;	/* end of link list */
  403d03:	c7 42 04 ff ff ff ff 	movl   $0xffffffff,0x4(%rdx)
    first_free_connect = 0;
  403d0a:	c7 05 8c d7 23 00 00 	movl   $0x0,0x23d78c(%rip)        # 6414a0 <first_free_connect>
  403d11:	00 00 00 
    num_connects = 0;
  403d14:	c7 05 02 d8 23 00 00 	movl   $0x0,0x23d802(%rip)        # 641520 <num_connects>
  403d1b:	00 00 00 
    httpd_conn_count = 0;
  403d1e:	c7 05 38 d7 23 00 00 	movl   $0x0,0x23d738(%rip)        # 641460 <httpd_conn_count>
  403d25:	00 00 00 
    if ( hs != (httpd_server*) 0 )
  403d28:	48 85 c0             	test   %rax,%rax
  403d2b:	74 6f                	je     403d9c <main+0x82c>
	{
	if ( hs->listen4_fd != -1 )
  403d2d:	48 8d 78 48          	lea    0x48(%rax),%rdi
  403d31:	48 89 fa             	mov    %rdi,%rdx
  403d34:	48 c1 ea 03          	shr    $0x3,%rdx
  403d38:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  403d3f:	84 d2                	test   %dl,%dl
  403d41:	74 09                	je     403d4c <main+0x7dc>
  403d43:	80 fa 03             	cmp    $0x3,%dl
  403d46:	0f 8e 06 0a 00 00    	jle    404752 <main+0x11e2>
  403d4c:	8b 78 48             	mov    0x48(%rax),%edi
  403d4f:	83 ff ff             	cmp    $0xffffffff,%edi
  403d52:	74 10                	je     403d64 <main+0x7f4>
	    fdwatch_add_fd( hs->listen4_fd, (void*) 0, FDW_READ );
  403d54:	31 d2                	xor    %edx,%edx
  403d56:	31 f6                	xor    %esi,%esi
  403d58:	e8 d3 68 00 00       	callq  40a630 <fdwatch_add_fd>
  403d5d:	48 8b 05 bc d6 23 00 	mov    0x23d6bc(%rip),%rax        # 641420 <hs>
	if ( hs->listen6_fd != -1 )
  403d64:	48 8d 78 4c          	lea    0x4c(%rax),%rdi
  403d68:	48 89 fa             	mov    %rdi,%rdx
  403d6b:	48 c1 ea 03          	shr    $0x3,%rdx
  403d6f:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  403d76:	48 89 fa             	mov    %rdi,%rdx
  403d79:	83 e2 07             	and    $0x7,%edx
  403d7c:	83 c2 03             	add    $0x3,%edx
  403d7f:	38 ca                	cmp    %cl,%dl
  403d81:	7c 08                	jl     403d8b <main+0x81b>
  403d83:	84 c9                	test   %cl,%cl
  403d85:	0f 85 c2 09 00 00    	jne    40474d <main+0x11dd>
  403d8b:	8b 78 4c             	mov    0x4c(%rax),%edi
  403d8e:	83 ff ff             	cmp    $0xffffffff,%edi
  403d91:	74 09                	je     403d9c <main+0x82c>
	    fdwatch_add_fd( hs->listen6_fd, (void*) 0, FDW_READ );
  403d93:	31 d2                	xor    %edx,%edx
  403d95:	31 f6                	xor    %esi,%esi
  403d97:	e8 94 68 00 00       	callq  40a630 <fdwatch_add_fd>
	}

    /* Main loop. */
    tmr_prepare_timeval( &tv );
  403d9c:	48 81 ed c0 11 00 00 	sub    $0x11c0,%rbp
  403da3:	48 89 ef             	mov    %rbp,%rdi
  403da6:	e8 a5 8f 01 00       	callq  41cd50 <tmr_prepare_timeval>
    while ( ( ! terminate ) || num_connects > 0 )
  403dab:	83 3d 2e d6 23 00 00 	cmpl   $0x0,0x23d62e(%rip)        # 6413e0 <terminate>
  403db2:	74 0d                	je     403dc1 <main+0x851>
  403db4:	83 3d 65 d7 23 00 00 	cmpl   $0x0,0x23d765(%rip)        # 641520 <num_connects>
  403dbb:	0f 8e 83 08 00 00    	jle    404644 <main+0x10d4>
	{
	/* Do we need to re-open the log file? */
	if ( got_hup )
  403dc1:	8b 05 d9 d5 23 00    	mov    0x23d5d9(%rip),%eax        # 6413a0 <got_hup>
  403dc7:	85 c0                	test   %eax,%eax
  403dc9:	0f 85 90 06 00 00    	jne    40445f <main+0xeef>
	    re_open_logfile();
	    got_hup = 0;
	    }

	/* Do the fd watch. */
	num_ready = fdwatch( tmr_mstimeout( &tv ) );
  403dcf:	48 89 ef             	mov    %rbp,%rdi
  403dd2:	e8 09 88 01 00       	callq  41c5e0 <tmr_mstimeout>
  403dd7:	48 89 c7             	mov    %rax,%rdi
  403dda:	e8 41 6a 00 00       	callq  40a820 <fdwatch>
  403ddf:	89 c3                	mov    %eax,%ebx
	if ( num_ready < 0 )
  403de1:	85 c0                	test   %eax,%eax
  403de3:	0f 89 ea 04 00 00    	jns    4042d3 <main+0xd63>
	    {
	    if ( errno == EINTR || errno == EAGAIN )
  403de9:	e8 12 ee ff ff       	callq  402c00 <__errno_location@plt>
  403dee:	48 89 c2             	mov    %rax,%rdx
  403df1:	48 c1 ea 03          	shr    $0x3,%rdx
  403df5:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  403dfc:	48 89 c2             	mov    %rax,%rdx
  403dff:	83 e2 07             	and    $0x7,%edx
  403e02:	83 c2 03             	add    $0x3,%edx
  403e05:	38 ca                	cmp    %cl,%dl
  403e07:	7c 08                	jl     403e11 <main+0x8a1>
  403e09:	84 c9                	test   %cl,%cl
  403e0b:	0f 85 46 09 00 00    	jne    404757 <main+0x11e7>
  403e11:	8b 00                	mov    (%rax),%eax
  403e13:	83 f8 04             	cmp    $0x4,%eax
  403e16:	74 93                	je     403dab <main+0x83b>
  403e18:	83 f8 0b             	cmp    $0xb,%eax
  403e1b:	74 8e                	je     403dab <main+0x83b>
		continue;       /* try again */
	    syslog( LOG_ERR, "fdwatch - %m" );
  403e1d:	be 20 17 42 00       	mov    $0x421720,%esi
  403e22:	bf 03 00 00 00       	mov    $0x3,%edi
  403e27:	eb 4b                	jmp    403e74 <main+0x904>
	else if ( strcmp( logfile, "-" ) == 0 )
  403e29:	be e0 06 42 00       	mov    $0x4206e0,%esi
  403e2e:	4c 89 e7             	mov    %r12,%rdi
  403e31:	e8 0a f0 ff ff       	callq  402e40 <strcmp@plt>
  403e36:	85 c0                	test   %eax,%eax
  403e38:	0f 85 d2 00 00 00    	jne    403f10 <main+0x9a0>
	    logfp = stdout;
  403e3e:	b8 e0 12 64 00       	mov    $0x6412e0,%eax
  403e43:	48 8b 0d 96 d4 23 00 	mov    0x23d496(%rip),%rcx        # 6412e0 <stdout@@GLIBC_2.2.5>
  403e4a:	48 c1 e8 03          	shr    $0x3,%rax
  403e4e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  403e55:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  403e5a:	0f 84 18 f9 ff ff    	je     403778 <main+0x208>
  403e60:	bf e0 12 64 00       	mov    $0x6412e0,%edi
  403e65:	e8 e6 f3 ff ff       	callq  403250 <__asan_report_load8@plt>
	syslog( LOG_CRIT, "fdwatch initialization failure" );
  403e6a:	be c0 11 42 00       	mov    $0x4211c0,%esi
  403e6f:	bf 02 00 00 00       	mov    $0x2,%edi
  403e74:	31 c0                	xor    %eax,%eax
  403e76:	e8 c5 ed ff ff       	callq  402c40 <syslog@plt>
	exit( 1 );
  403e7b:	e8 c0 f1 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  403e80:	bf 01 00 00 00       	mov    $0x1,%edi
  403e85:	e8 56 f2 ff ff       	callq  4030e0 <exit@plt>
	(void) setsid();
  403e8a:	e8 81 f1 ff ff       	callq  403010 <setsid@plt>
  403e8f:	e9 f5 f9 ff ff       	jmpq   403889 <main+0x319>
	pwd = getpwnam( user );
  403e94:	48 8b 3d 85 d8 23 00 	mov    0x23d885(%rip),%rdi        # 641720 <user>
  403e9b:	e8 b0 f4 ff ff       	callq  403350 <getpwnam@plt>
	if ( pwd == (struct passwd*) 0 )
  403ea0:	48 85 c0             	test   %rax,%rax
  403ea3:	0f 84 ce 03 00 00    	je     404277 <main+0xd07>
	uid = pwd->pw_uid;
  403ea9:	48 8d 78 10          	lea    0x10(%rax),%rdi
  403ead:	48 89 fa             	mov    %rdi,%rdx
  403eb0:	48 c1 ea 03          	shr    $0x3,%rdx
  403eb4:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  403ebb:	84 d2                	test   %dl,%dl
  403ebd:	74 09                	je     403ec8 <main+0x958>
  403ebf:	80 fa 03             	cmp    $0x3,%dl
  403ec2:	0f 8e a5 03 00 00    	jle    40426d <main+0xcfd>
	gid = pwd->pw_gid;
  403ec8:	48 8d 78 14          	lea    0x14(%rax),%rdi
	uid = pwd->pw_uid;
  403ecc:	8b 48 10             	mov    0x10(%rax),%ecx
	gid = pwd->pw_gid;
  403ecf:	48 89 fa             	mov    %rdi,%rdx
  403ed2:	48 c1 ea 03          	shr    $0x3,%rdx
	uid = pwd->pw_uid;
  403ed6:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
	gid = pwd->pw_gid;
  403eda:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  403ee1:	48 89 fa             	mov    %rdi,%rdx
  403ee4:	83 e2 07             	and    $0x7,%edx
  403ee7:	83 c2 03             	add    $0x3,%edx
  403eea:	38 ca                	cmp    %cl,%dl
  403eec:	7c 08                	jl     403ef6 <main+0x986>
  403eee:	84 c9                	test   %cl,%cl
  403ef0:	0f 85 7c 03 00 00    	jne    404272 <main+0xd02>
  403ef6:	8b 40 14             	mov    0x14(%rax),%eax
  403ef9:	89 44 24 14          	mov    %eax,0x14(%rsp)
  403efd:	e9 3e f8 ff ff       	jmpq   403740 <main+0x1d0>
	logfp = (FILE*) 0;
  403f02:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  403f09:	00 00 
  403f0b:	e9 68 f8 ff ff       	jmpq   403778 <main+0x208>
	    logfp = fopen( logfile, "a" );
  403f10:	4c 89 e7             	mov    %r12,%rdi
  403f13:	be 60 07 42 00       	mov    $0x420760,%esi
  403f18:	e8 e3 ef ff ff       	callq  402f00 <fopen@plt>
	    retchmod = chmod( logfile, S_IRUSR|S_IWUSR );
  403f1d:	4c 8b 25 fc d8 23 00 	mov    0x23d8fc(%rip),%r12        # 641820 <logfile>
  403f24:	be 80 01 00 00       	mov    $0x180,%esi
	    logfp = fopen( logfile, "a" );
  403f29:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
	    retchmod = chmod( logfile, S_IRUSR|S_IWUSR );
  403f2e:	4c 89 e7             	mov    %r12,%rdi
  403f31:	e8 ea ef ff ff       	callq  402f20 <chmod@plt>
	    if ( logfp == (FILE*) 0 || retchmod != 0 )
  403f36:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
  403f3c:	0f 84 31 05 00 00    	je     404473 <main+0xf03>
  403f42:	85 c0                	test   %eax,%eax
  403f44:	0f 85 29 05 00 00    	jne    404473 <main+0xf03>
	    if ( logfile[0] != '/' )
  403f4a:	4c 89 e0             	mov    %r12,%rax
  403f4d:	4c 89 e2             	mov    %r12,%rdx
  403f50:	48 c1 e8 03          	shr    $0x3,%rax
  403f54:	83 e2 07             	and    $0x7,%edx
  403f57:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  403f5e:	38 d0                	cmp    %dl,%al
  403f60:	7f 0c                	jg     403f6e <main+0x9fe>
  403f62:	84 c0                	test   %al,%al
  403f64:	74 08                	je     403f6e <main+0x9fe>
  403f66:	4c 89 e7             	mov    %r12,%rdi
  403f69:	e8 a2 f1 ff ff       	callq  403110 <__asan_report_load1@plt>
  403f6e:	41 80 3c 24 2f       	cmpb   $0x2f,(%r12)
  403f73:	0f 85 11 02 00 00    	jne    40418a <main+0xc1a>
	    (void) fcntl( fileno( logfp ), F_SETFD, 1 );
  403f79:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  403f7e:	e8 3d f0 ff ff       	callq  402fc0 <fileno@plt>
  403f83:	ba 01 00 00 00       	mov    $0x1,%edx
  403f88:	be 02 00 00 00       	mov    $0x2,%esi
  403f8d:	89 c7                	mov    %eax,%edi
  403f8f:	31 c0                	xor    %eax,%eax
  403f91:	e8 6a ee ff ff       	callq  402e00 <fcntl@plt>
	    if ( getuid() == 0 )
  403f96:	e8 05 ee ff ff       	callq  402da0 <getuid@plt>
  403f9b:	85 c0                	test   %eax,%eax
  403f9d:	0f 85 d5 f7 ff ff    	jne    403778 <main+0x208>
		if ( fchown( fileno( logfp ), uid, gid ) < 0 )
  403fa3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  403fa8:	e8 13 f0 ff ff       	callq  402fc0 <fileno@plt>
  403fad:	8b 54 24 14          	mov    0x14(%rsp),%edx
  403fb1:	8b 74 24 28          	mov    0x28(%rsp),%esi
  403fb5:	89 c7                	mov    %eax,%edi
  403fb7:	e8 d4 f3 ff ff       	callq  403390 <fchown@plt>
  403fbc:	85 c0                	test   %eax,%eax
  403fbe:	0f 89 b4 f7 ff ff    	jns    403778 <main+0x208>
		    syslog( LOG_WARNING, "fchown logfile - %m" );
  403fc4:	be c0 0f 42 00       	mov    $0x420fc0,%esi
  403fc9:	bf 04 00 00 00       	mov    $0x4,%edi
  403fce:	31 c0                	xor    %eax,%eax
  403fd0:	e8 6b ec ff ff       	callq  402c40 <syslog@plt>
		    perror( "fchown logfile" );
  403fd5:	bf 00 10 42 00       	mov    $0x421000,%edi
  403fda:	e8 c1 ee ff ff       	callq  402ea0 <perror@plt>
  403fdf:	e9 94 f7 ff ff       	jmpq   403778 <main+0x208>
	syslog( LOG_CRIT, "tmr_create(idle) failed" );
  403fe4:	be 80 14 42 00       	mov    $0x421480,%esi
  403fe9:	bf 02 00 00 00       	mov    $0x2,%edi
  403fee:	e8 4d ec ff ff       	callq  402c40 <syslog@plt>
	exit( 1 );
  403ff3:	e8 48 f0 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  403ff8:	bf 01 00 00 00       	mov    $0x1,%edi
  403ffd:	e8 de f0 ff ff       	callq  4030e0 <exit@plt>
	syslog( LOG_ERR, "can't find any valid address" );
  404002:	31 c0                	xor    %eax,%eax
  404004:	be 60 0d 42 00       	mov    $0x420d60,%esi
  404009:	bf 03 00 00 00       	mov    $0x3,%edi
  40400e:	e8 2d ec ff ff       	callq  402c40 <syslog@plt>
	(void) fprintf( stderr, "%s: can't find any valid address\n", argv0 );
  404013:	b8 f0 12 64 00       	mov    $0x6412f0,%eax
  404018:	48 8b 15 c1 db 23 00 	mov    0x23dbc1(%rip),%rdx        # 641be0 <argv0>
  40401f:	48 c1 e8 03          	shr    $0x3,%rax
  404023:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40402a:	0f 85 b6 06 00 00    	jne    4046e6 <main+0x1176>
  404030:	48 8b 3d b9 d2 23 00 	mov    0x23d2b9(%rip),%rdi        # 6412f0 <stderr@@GLIBC_2.2.5>
  404037:	be a0 0d 42 00       	mov    $0x420da0,%esi
  40403c:	31 c0                	xor    %eax,%eax
  40403e:	e8 ed ec ff ff       	callq  402d30 <fprintf@plt>
	exit( 1 );
  404043:	e8 f8 ef ff ff       	callq  403040 <__asan_handle_no_return@plt>
  404048:	bf 01 00 00 00       	mov    $0x1,%edi
  40404d:	e8 8e f0 ff ff       	callq  4030e0 <exit@plt>
	    syslog( LOG_CRIT, "chdir - %m" );
  404052:	be 40 10 42 00       	mov    $0x421040,%esi
  404057:	31 c0                	xor    %eax,%eax
  404059:	bf 02 00 00 00       	mov    $0x2,%edi
  40405e:	e8 dd eb ff ff       	callq  402c40 <syslog@plt>
	    perror( "chdir" );
  404063:	bf 80 10 42 00       	mov    $0x421080,%edi
  404068:	e8 33 ee ff ff       	callq  402ea0 <perror@plt>
	    exit( 1 );
  40406d:	e8 ce ef ff ff       	callq  403040 <__asan_handle_no_return@plt>
  404072:	bf 01 00 00 00       	mov    $0x1,%edi
  404077:	e8 64 f0 ff ff       	callq  4030e0 <exit@plt>
	    syslog( LOG_CRIT, "%.80s - %m", pidfile );
  40407c:	48 8b 15 dd d6 23 00 	mov    0x23d6dd(%rip),%rdx        # 641760 <pidfile>
  404083:	bf 02 00 00 00       	mov    $0x2,%edi
  404088:	be 60 04 42 00       	mov    $0x420460,%esi
  40408d:	31 c0                	xor    %eax,%eax
  40408f:	e8 ac eb ff ff       	callq  402c40 <syslog@plt>
	    exit( 1 );
  404094:	e8 a7 ef ff ff       	callq  403040 <__asan_handle_no_return@plt>
  404099:	bf 01 00 00 00       	mov    $0x1,%edi
  40409e:	e8 3d f0 ff ff       	callq  4030e0 <exit@plt>
	if ( chroot( cwd ) < 0 )
  4040a3:	4c 89 e7             	mov    %r12,%rdi
  4040a6:	e8 a5 ee ff ff       	callq  402f50 <chroot@plt>
  4040ab:	85 c0                	test   %eax,%eax
  4040ad:	0f 88 ef 03 00 00    	js     4044a2 <main+0xf32>
	if ( logfile != (char*) 0 && strcmp( logfile, "-" ) != 0 )
  4040b3:	48 8b 0d 66 d7 23 00 	mov    0x23d766(%rip),%rcx        # 641820 <logfile>
  4040ba:	48 85 c9             	test   %rcx,%rcx
  4040bd:	74 55                	je     404114 <main+0xba4>
  4040bf:	be e0 06 42 00       	mov    $0x4206e0,%esi
  4040c4:	48 89 cf             	mov    %rcx,%rdi
  4040c7:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
  4040cc:	e8 6f ed ff ff       	callq  402e40 <strcmp@plt>
  4040d1:	85 c0                	test   %eax,%eax
  4040d3:	74 3f                	je     404114 <main+0xba4>
	    if ( strncmp( logfile, cwd, strlen( cwd ) ) == 0 )
  4040d5:	4c 89 e7             	mov    %r12,%rdi
  4040d8:	e8 a3 eb ff ff       	callq  402c80 <strlen@plt>
  4040dd:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  4040e2:	4c 89 e6             	mov    %r12,%rsi
  4040e5:	48 89 c2             	mov    %rax,%rdx
  4040e8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  4040ed:	48 89 cf             	mov    %rcx,%rdi
  4040f0:	e8 fb f2 ff ff       	callq  4033f0 <strncmp@plt>
  4040f5:	85 c0                	test   %eax,%eax
  4040f7:	0f 85 a4 04 00 00    	jne    4045a1 <main+0x1031>
		(void) strcpy( logfile, &logfile[strlen( cwd ) - 1] );
  4040fd:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  404102:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
  404107:	48 89 cf             	mov    %rcx,%rdi
  40410a:	4a 8d 74 01 ff       	lea    -0x1(%rcx,%r8,1),%rsi
  40410f:	e8 fc ed ff ff       	callq  402f10 <strcpy@plt>
	(void) strcpy( cwd, "/" );
  404114:	4c 89 e7             	mov    %r12,%rdi
  404117:	ba 02 00 00 00       	mov    $0x2,%edx
  40411c:	be c0 10 42 00       	mov    $0x4210c0,%esi
  404121:	e8 1a f0 ff ff       	callq  403140 <memcpy@plt>
	if ( chdir( cwd ) < 0 )
  404126:	4c 89 e7             	mov    %r12,%rdi
  404129:	e8 02 f1 ff ff       	callq  403230 <chdir@plt>
  40412e:	85 c0                	test   %eax,%eax
  404130:	0f 89 c8 f7 ff ff    	jns    4038fe <main+0x38e>
	    syslog( LOG_CRIT, "chroot chdir - %m" );
  404136:	be 40 13 42 00       	mov    $0x421340,%esi
  40413b:	31 c0                	xor    %eax,%eax
  40413d:	bf 02 00 00 00       	mov    $0x2,%edi
  404142:	e8 f9 ea ff ff       	callq  402c40 <syslog@plt>
	    perror( "chroot chdir" );
  404147:	bf 80 13 42 00       	mov    $0x421380,%edi
  40414c:	e8 4f ed ff ff       	callq  402ea0 <perror@plt>
	    exit( 1 );
  404151:	e8 ea ee ff ff       	callq  403040 <__asan_handle_no_return@plt>
  404156:	bf 01 00 00 00       	mov    $0x1,%edi
  40415b:	e8 80 ef ff ff       	callq  4030e0 <exit@plt>
	    syslog( LOG_CRIT, "data_dir chdir - %m" );
  404160:	be c0 13 42 00       	mov    $0x4213c0,%esi
  404165:	31 c0                	xor    %eax,%eax
  404167:	bf 02 00 00 00       	mov    $0x2,%edi
  40416c:	e8 cf ea ff ff       	callq  402c40 <syslog@plt>
	    perror( "data_dir chdir" );
  404171:	bf 00 14 42 00       	mov    $0x421400,%edi
  404176:	e8 25 ed ff ff       	callq  402ea0 <perror@plt>
	    exit( 1 );
  40417b:	e8 c0 ee ff ff       	callq  403040 <__asan_handle_no_return@plt>
  404180:	bf 01 00 00 00       	mov    $0x1,%edi
  404185:	e8 56 ef ff ff       	callq  4030e0 <exit@plt>
		syslog( LOG_WARNING, "logfile is not an absolute path, you may not be able to re-open it" );
  40418a:	31 c0                	xor    %eax,%eax
  40418c:	be c0 0e 42 00       	mov    $0x420ec0,%esi
  404191:	bf 04 00 00 00       	mov    $0x4,%edi
  404196:	e8 a5 ea ff ff       	callq  402c40 <syslog@plt>
		(void) fprintf( stderr, "%s: logfile is not an absolute path, you may not be able to re-open it\n", argv0 );
  40419b:	b8 f0 12 64 00       	mov    $0x6412f0,%eax
  4041a0:	48 8b 15 39 da 23 00 	mov    0x23da39(%rip),%rdx        # 641be0 <argv0>
  4041a7:	48 c1 e8 03          	shr    $0x3,%rax
  4041ab:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4041b2:	0f 85 a7 05 00 00    	jne    40475f <main+0x11ef>
  4041b8:	48 8b 3d 31 d1 23 00 	mov    0x23d131(%rip),%rdi        # 6412f0 <stderr@@GLIBC_2.2.5>
  4041bf:	be 40 0f 42 00       	mov    $0x420f40,%esi
  4041c4:	31 c0                	xor    %eax,%eax
  4041c6:	e8 65 eb ff ff       	callq  402d30 <fprintf@plt>
  4041cb:	e9 a9 fd ff ff       	jmpq   403f79 <main+0xa09>
	if ( setgroups( 0, (const gid_t*) 0 ) < 0 )
  4041d0:	31 f6                	xor    %esi,%esi
  4041d2:	31 ff                	xor    %edi,%edi
  4041d4:	e8 17 f1 ff ff       	callq  4032f0 <setgroups@plt>
	    syslog( LOG_CRIT, "setgroups - %m" );
  4041d9:	be 60 15 42 00       	mov    $0x421560,%esi
	if ( setgroups( 0, (const gid_t*) 0 ) < 0 )
  4041de:	85 c0                	test   %eax,%eax
  4041e0:	0f 88 89 fc ff ff    	js     403e6f <main+0x8ff>
	if ( setgid( gid ) < 0 )
  4041e6:	8b 7c 24 14          	mov    0x14(%rsp),%edi
  4041ea:	e8 21 f2 ff ff       	callq  403410 <setgid@plt>
	    syslog( LOG_CRIT, "setgid - %m" );
  4041ef:	be a0 15 42 00       	mov    $0x4215a0,%esi
	if ( setgid( gid ) < 0 )
  4041f4:	85 c0                	test   %eax,%eax
  4041f6:	0f 88 73 fc ff ff    	js     403e6f <main+0x8ff>
	if ( initgroups( user, gid ) < 0 )
  4041fc:	8b 74 24 14          	mov    0x14(%rsp),%esi
  404200:	48 8b 3d 19 d5 23 00 	mov    0x23d519(%rip),%rdi        # 641720 <user>
  404207:	e8 54 ee ff ff       	callq  403060 <initgroups@plt>
  40420c:	85 c0                	test   %eax,%eax
  40420e:	0f 88 57 04 00 00    	js     40466b <main+0x10fb>
	if ( setuid( uid ) < 0 )
  404214:	8b 7c 24 28          	mov    0x28(%rsp),%edi
  404218:	e8 73 f2 ff ff       	callq  403490 <setuid@plt>
	    syslog( LOG_CRIT, "setuid - %m" );
  40421d:	be 20 16 42 00       	mov    $0x421620,%esi
	if ( setuid( uid ) < 0 )
  404222:	85 c0                	test   %eax,%eax
  404224:	0f 88 45 fc ff ff    	js     403e6f <main+0x8ff>
	if ( ! do_chroot )
  40422a:	83 3d 6f d8 23 00 00 	cmpl   $0x0,0x23d86f(%rip)        # 641aa0 <do_chroot>
  404231:	0f 85 e8 f9 ff ff    	jne    403c1f <main+0x6af>
	    syslog(
  404237:	be 60 16 42 00       	mov    $0x421660,%esi
  40423c:	bf 04 00 00 00       	mov    $0x4,%edi
  404241:	31 c0                	xor    %eax,%eax
  404243:	e8 f8 e9 ff ff       	callq  402c40 <syslog@plt>
  404248:	e9 d2 f9 ff ff       	jmpq   403c1f <main+0x6af>
    if ( ! ( gotv4 || gotv6 ) )
  40424d:	4c 89 f7             	mov    %r14,%rdi
  404250:	e8 7b eb ff ff       	callq  402dd0 <__asan_report_load4@plt>
  404255:	4c 89 ef             	mov    %r13,%rdi
  404258:	e8 73 eb ff ff       	callq  402dd0 <__asan_report_load4@plt>
	gotv4 ? &sa4 : (httpd_sockaddr*) 0, gotv6 ? &sa6 : (httpd_sockaddr*) 0,
  40425d:	4c 89 f7             	mov    %r14,%rdi
  404260:	e8 6b eb ff ff       	callq  402dd0 <__asan_report_load4@plt>
  404265:	4c 89 ef             	mov    %r13,%rdi
  404268:	e8 63 eb ff ff       	callq  402dd0 <__asan_report_load4@plt>
	uid = pwd->pw_uid;
  40426d:	e8 5e eb ff ff       	callq  402dd0 <__asan_report_load4@plt>
	gid = pwd->pw_gid;
  404272:	e8 59 eb ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    syslog( LOG_CRIT, "unknown user - '%.80s'", user );
  404277:	48 8b 15 a2 d4 23 00 	mov    0x23d4a2(%rip),%rdx        # 641720 <user>
  40427e:	be 00 0e 42 00       	mov    $0x420e00,%esi
  404283:	bf 02 00 00 00       	mov    $0x2,%edi
  404288:	e8 b3 e9 ff ff       	callq  402c40 <syslog@plt>
	    (void) fprintf( stderr, "%s: unknown user - '%s'\n", argv0, user );
  40428d:	b8 f0 12 64 00       	mov    $0x6412f0,%eax
  404292:	48 8b 0d 87 d4 23 00 	mov    0x23d487(%rip),%rcx        # 641720 <user>
  404299:	48 8b 15 40 d9 23 00 	mov    0x23d940(%rip),%rdx        # 641be0 <argv0>
  4042a0:	48 c1 e8 03          	shr    $0x3,%rax
  4042a4:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4042ab:	0f 85 92 04 00 00    	jne    404743 <main+0x11d3>
  4042b1:	48 8b 3d 38 d0 23 00 	mov    0x23d038(%rip),%rdi        # 6412f0 <stderr@@GLIBC_2.2.5>
  4042b8:	be 40 0e 42 00       	mov    $0x420e40,%esi
  4042bd:	31 c0                	xor    %eax,%eax
  4042bf:	e8 6c ea ff ff       	callq  402d30 <fprintf@plt>
	    exit( 1 );
  4042c4:	e8 77 ed ff ff       	callq  403040 <__asan_handle_no_return@plt>
  4042c9:	bf 01 00 00 00       	mov    $0x1,%edi
  4042ce:	e8 0d ee ff ff       	callq  4030e0 <exit@plt>
	    exit( 1 );
	    }
	tmr_prepare_timeval( &tv );
  4042d3:	48 89 ef             	mov    %rbp,%rdi
  4042d6:	e8 75 8a 01 00       	callq  41cd50 <tmr_prepare_timeval>

	if ( num_ready == 0 )
  4042db:	85 db                	test   %ebx,%ebx
  4042dd:	0f 84 04 03 00 00    	je     4045e7 <main+0x1077>
	    tmr_run( &tv );
	    continue;
	    }

	/* Is it a new connection? */
	if ( hs != (httpd_server*) 0 && hs->listen6_fd != -1 &&
  4042e3:	48 8b 05 36 d1 23 00 	mov    0x23d136(%rip),%rax        # 641420 <hs>
  4042ea:	48 85 c0             	test   %rax,%rax
  4042ed:	0f 84 b1 00 00 00    	je     4043a4 <main+0xe34>
  4042f3:	48 8d 78 4c          	lea    0x4c(%rax),%rdi
  4042f7:	48 89 fa             	mov    %rdi,%rdx
  4042fa:	48 c1 ea 03          	shr    $0x3,%rdx
  4042fe:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  404305:	48 89 fa             	mov    %rdi,%rdx
  404308:	83 e2 07             	and    $0x7,%edx
  40430b:	83 c2 03             	add    $0x3,%edx
  40430e:	38 ca                	cmp    %cl,%dl
  404310:	7c 08                	jl     40431a <main+0xdaa>
  404312:	84 c9                	test   %cl,%cl
  404314:	0f 85 08 04 00 00    	jne    404722 <main+0x11b2>
  40431a:	8b 78 4c             	mov    0x4c(%rax),%edi
  40431d:	83 ff ff             	cmp    $0xffffffff,%edi
  404320:	74 19                	je     40433b <main+0xdcb>
	     fdwatch_check_fd( hs->listen6_fd ) )
  404322:	e8 29 65 00 00       	callq  40a850 <fdwatch_check_fd>
	if ( hs != (httpd_server*) 0 && hs->listen6_fd != -1 &&
  404327:	85 c0                	test   %eax,%eax
  404329:	0f 85 cf 02 00 00    	jne    4045fe <main+0x108e>
		** dropping through and processing existing connections.
		** New connections always get priority.
		*/
		continue;
	    }
	if ( hs != (httpd_server*) 0 && hs->listen4_fd != -1 &&
  40432f:	48 8b 05 ea d0 23 00 	mov    0x23d0ea(%rip),%rax        # 641420 <hs>
  404336:	48 85 c0             	test   %rax,%rax
  404339:	74 69                	je     4043a4 <main+0xe34>
  40433b:	48 8d 78 48          	lea    0x48(%rax),%rdi
  40433f:	48 89 fa             	mov    %rdi,%rdx
  404342:	48 c1 ea 03          	shr    $0x3,%rdx
  404346:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40434d:	84 d2                	test   %dl,%dl
  40434f:	74 09                	je     40435a <main+0xdea>
  404351:	80 fa 03             	cmp    $0x3,%dl
  404354:	0f 8e be 03 00 00    	jle    404718 <main+0x11a8>
  40435a:	8b 78 48             	mov    0x48(%rax),%edi
  40435d:	83 ff ff             	cmp    $0xffffffff,%edi
  404360:	74 42                	je     4043a4 <main+0xe34>
	     fdwatch_check_fd( hs->listen4_fd ) )
  404362:	e8 e9 64 00 00       	callq  40a850 <fdwatch_check_fd>
	if ( hs != (httpd_server*) 0 && hs->listen4_fd != -1 &&
  404367:	85 c0                	test   %eax,%eax
  404369:	74 39                	je     4043a4 <main+0xe34>
	    {
	    if ( handle_newconnect( &tv, hs->listen4_fd ) )
  40436b:	48 8b 05 ae d0 23 00 	mov    0x23d0ae(%rip),%rax        # 641420 <hs>
  404372:	48 8d 78 48          	lea    0x48(%rax),%rdi
  404376:	48 89 fa             	mov    %rdi,%rdx
  404379:	48 c1 ea 03          	shr    $0x3,%rdx
  40437d:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  404384:	84 d2                	test   %dl,%dl
  404386:	74 09                	je     404391 <main+0xe21>
  404388:	80 fa 03             	cmp    $0x3,%dl
  40438b:	0f 8e 8c 03 00 00    	jle    40471d <main+0x11ad>
  404391:	8b 70 48             	mov    0x48(%rax),%esi
  404394:	48 89 ef             	mov    %rbp,%rdi
  404397:	e8 24 2b 00 00       	callq  406ec0 <handle_newconnect>
  40439c:	85 c0                	test   %eax,%eax
  40439e:	0f 85 07 fa ff ff    	jne    403dab <main+0x83b>
		*/
		continue;
	    }

	/* Find the connections that need servicing. */
	while ( ( c = (connecttab*) fdwatch_get_next_client_data() ) != (connecttab*) -1 )
  4043a4:	e8 27 65 00 00       	callq  40a8d0 <fdwatch_get_next_client_data>
  4043a9:	48 89 c3             	mov    %rax,%rbx
  4043ac:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  4043b0:	0f 84 16 01 00 00    	je     4044cc <main+0xf5c>
	    {
	    if ( c == (connecttab*) 0 )
  4043b6:	48 85 db             	test   %rbx,%rbx
  4043b9:	74 e9                	je     4043a4 <main+0xe34>
		continue;
	    hc = c->hc;
  4043bb:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  4043bf:	48 89 f8             	mov    %rdi,%rax
  4043c2:	48 c1 e8 03          	shr    $0x3,%rax
  4043c6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4043cd:	0f 85 1d 03 00 00    	jne    4046f0 <main+0x1180>
  4043d3:	48 8b 43 08          	mov    0x8(%rbx),%rax
	    if ( ! fdwatch_check_fd( hc->conn_fd ) )
  4043d7:	48 8d b8 c0 02 00 00 	lea    0x2c0(%rax),%rdi
  4043de:	48 89 fa             	mov    %rdi,%rdx
  4043e1:	48 c1 ea 03          	shr    $0x3,%rdx
  4043e5:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  4043ec:	84 d2                	test   %dl,%dl
  4043ee:	74 09                	je     4043f9 <main+0xe89>
  4043f0:	80 fa 03             	cmp    $0x3,%dl
  4043f3:	0f 8e fc 02 00 00    	jle    4046f5 <main+0x1185>
  4043f9:	8b b8 c0 02 00 00    	mov    0x2c0(%rax),%edi
  4043ff:	e8 4c 64 00 00       	callq  40a850 <fdwatch_check_fd>
  404404:	85 c0                	test   %eax,%eax
  404406:	74 47                	je     40444f <main+0xedf>
		/* Something went wrong. */
		clear_connection( c, &tv );
	    else
		switch ( c->conn_state )
  404408:	48 89 d8             	mov    %rbx,%rax
  40440b:	48 c1 e8 03          	shr    $0x3,%rax
  40440f:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  404416:	84 c0                	test   %al,%al
  404418:	74 08                	je     404422 <main+0xeb2>
  40441a:	3c 03                	cmp    $0x3,%al
  40441c:	0f 8e 19 03 00 00    	jle    40473b <main+0x11cb>
  404422:	8b 03                	mov    (%rbx),%eax
  404424:	83 f8 02             	cmp    $0x2,%eax
  404427:	0f 84 64 01 00 00    	je     404591 <main+0x1021>
  40442d:	83 f8 04             	cmp    $0x4,%eax
  404430:	0f 84 4b 01 00 00    	je     404581 <main+0x1011>
  404436:	83 e8 01             	sub    $0x1,%eax
  404439:	0f 85 65 ff ff ff    	jne    4043a4 <main+0xe34>
		    {
		    case CNST_READING: handle_read( c, &tv ); break;
  40443f:	48 89 ee             	mov    %rbp,%rsi
  404442:	48 89 df             	mov    %rbx,%rdi
  404445:	e8 f6 3b 00 00       	callq  408040 <handle_read>
  40444a:	e9 55 ff ff ff       	jmpq   4043a4 <main+0xe34>
		clear_connection( c, &tv );
  40444f:	48 89 ee             	mov    %rbp,%rsi
  404452:	48 89 df             	mov    %rbx,%rdi
  404455:	e8 36 38 00 00       	callq  407c90 <clear_connection>
  40445a:	e9 45 ff ff ff       	jmpq   4043a4 <main+0xe34>
	    re_open_logfile();
  40445f:	e8 7c 29 00 00       	callq  406de0 <re_open_logfile>
	    got_hup = 0;
  404464:	c7 05 32 cf 23 00 00 	movl   $0x0,0x23cf32(%rip)        # 6413a0 <got_hup>
  40446b:	00 00 00 
  40446e:	e9 5c f9 ff ff       	jmpq   403dcf <main+0x85f>
		syslog( LOG_CRIT, "%.80s - %m", logfile );
  404473:	4c 89 e2             	mov    %r12,%rdx
  404476:	be 60 04 42 00       	mov    $0x420460,%esi
  40447b:	31 c0                	xor    %eax,%eax
  40447d:	bf 02 00 00 00       	mov    $0x2,%edi
  404482:	e8 b9 e7 ff ff       	callq  402c40 <syslog@plt>
		perror( logfile );
  404487:	48 8b 3d 92 d3 23 00 	mov    0x23d392(%rip),%rdi        # 641820 <logfile>
  40448e:	e8 0d ea ff ff       	callq  402ea0 <perror@plt>
		exit( 1 );
  404493:	e8 a8 eb ff ff       	callq  403040 <__asan_handle_no_return@plt>
  404498:	bf 01 00 00 00       	mov    $0x1,%edi
  40449d:	e8 3e ec ff ff       	callq  4030e0 <exit@plt>
	    syslog( LOG_CRIT, "chroot - %m" );
  4044a2:	be 00 12 42 00       	mov    $0x421200,%esi
  4044a7:	31 c0                	xor    %eax,%eax
  4044a9:	bf 02 00 00 00       	mov    $0x2,%edi
  4044ae:	e8 8d e7 ff ff       	callq  402c40 <syslog@plt>
	    perror( "chroot" );
  4044b3:	bf 60 f7 41 00       	mov    $0x41f760,%edi
  4044b8:	e8 e3 e9 ff ff       	callq  402ea0 <perror@plt>
	    exit( 1 );
  4044bd:	e8 7e eb ff ff       	callq  403040 <__asan_handle_no_return@plt>
  4044c2:	bf 01 00 00 00       	mov    $0x1,%edi
  4044c7:	e8 14 ec ff ff       	callq  4030e0 <exit@plt>
		    case CNST_SENDING: handle_send( c, &tv ); break;
		    case CNST_LINGERING: handle_linger( c, &tv ); break;
		    }
	    }
	tmr_run( &tv );
  4044cc:	48 89 ef             	mov    %rbp,%rdi
  4044cf:	e8 3c 84 01 00       	callq  41c910 <tmr_run>

	if ( got_usr1 && ! terminate )
  4044d4:	8b 05 86 ce 23 00    	mov    0x23ce86(%rip),%eax        # 641360 <got_usr1>
  4044da:	85 c0                	test   %eax,%eax
  4044dc:	0f 84 c9 f8 ff ff    	je     403dab <main+0x83b>
  4044e2:	83 3d f7 ce 23 00 00 	cmpl   $0x0,0x23cef7(%rip)        # 6413e0 <terminate>
  4044e9:	0f 85 bc f8 ff ff    	jne    403dab <main+0x83b>
	    {
	    terminate = 1;
	    if ( hs != (httpd_server*) 0 )
  4044ef:	48 8b 05 2a cf 23 00 	mov    0x23cf2a(%rip),%rax        # 641420 <hs>
	    terminate = 1;
  4044f6:	c7 05 e0 ce 23 00 01 	movl   $0x1,0x23cee0(%rip)        # 6413e0 <terminate>
  4044fd:	00 00 00 
	    if ( hs != (httpd_server*) 0 )
  404500:	48 85 c0             	test   %rax,%rax
  404503:	0f 84 a2 f8 ff ff    	je     403dab <main+0x83b>
		{
		if ( hs->listen4_fd != -1 )
  404509:	48 8d 78 48          	lea    0x48(%rax),%rdi
  40450d:	48 89 fa             	mov    %rdi,%rdx
  404510:	48 c1 ea 03          	shr    $0x3,%rdx
  404514:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40451b:	84 d2                	test   %dl,%dl
  40451d:	74 09                	je     404528 <main+0xfb8>
  40451f:	80 fa 03             	cmp    $0x3,%dl
  404522:	0f 8e d2 01 00 00    	jle    4046fa <main+0x118a>
  404528:	8b 78 48             	mov    0x48(%rax),%edi
  40452b:	83 ff ff             	cmp    $0xffffffff,%edi
  40452e:	74 0c                	je     40453c <main+0xfcc>
		    fdwatch_del_fd( hs->listen4_fd );
  404530:	e8 fb 61 00 00       	callq  40a730 <fdwatch_del_fd>
  404535:	48 8b 05 e4 ce 23 00 	mov    0x23cee4(%rip),%rax        # 641420 <hs>
		if ( hs->listen6_fd != -1 )
  40453c:	48 8d 78 4c          	lea    0x4c(%rax),%rdi
  404540:	48 89 fa             	mov    %rdi,%rdx
  404543:	48 c1 ea 03          	shr    $0x3,%rdx
  404547:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  40454e:	48 89 fa             	mov    %rdi,%rdx
  404551:	83 e2 07             	and    $0x7,%edx
  404554:	83 c2 03             	add    $0x3,%edx
  404557:	38 ca                	cmp    %cl,%dl
  404559:	7c 08                	jl     404563 <main+0xff3>
  40455b:	84 c9                	test   %cl,%cl
  40455d:	0f 85 d3 01 00 00    	jne    404736 <main+0x11c6>
  404563:	8b 78 4c             	mov    0x4c(%rax),%edi
  404566:	83 ff ff             	cmp    $0xffffffff,%edi
  404569:	74 05                	je     404570 <main+0x1000>
		    fdwatch_del_fd( hs->listen6_fd );
  40456b:	e8 c0 61 00 00       	callq  40a730 <fdwatch_del_fd>
		httpd_unlisten( hs );
  404570:	48 8b 3d a9 ce 23 00 	mov    0x23cea9(%rip),%rdi        # 641420 <hs>
  404577:	e8 c4 8a 00 00       	callq  40d040 <httpd_unlisten>
  40457c:	e9 2a f8 ff ff       	jmpq   403dab <main+0x83b>
		    case CNST_LINGERING: handle_linger( c, &tv ); break;
  404581:	48 89 ee             	mov    %rbp,%rsi
  404584:	48 89 df             	mov    %rbx,%rdi
  404587:	e8 d4 50 00 00       	callq  409660 <handle_linger>
  40458c:	e9 13 fe ff ff       	jmpq   4043a4 <main+0xe34>
		    case CNST_SENDING: handle_send( c, &tv ); break;
  404591:	48 89 ee             	mov    %rbp,%rsi
  404594:	48 89 df             	mov    %rbx,%rdi
  404597:	e8 34 45 00 00       	callq  408ad0 <handle_send>
  40459c:	e9 03 fe ff ff       	jmpq   4043a4 <main+0xe34>
		syslog( LOG_WARNING, "logfile is not within the chroot tree, you will not be able to re-open it" );
  4045a1:	31 c0                	xor    %eax,%eax
  4045a3:	be 40 12 42 00       	mov    $0x421240,%esi
  4045a8:	bf 04 00 00 00       	mov    $0x4,%edi
  4045ad:	e8 8e e6 ff ff       	callq  402c40 <syslog@plt>
		(void) fprintf( stderr, "%s: logfile is not within the chroot tree, you will not be able to re-open it\n", argv0 );
  4045b2:	b8 f0 12 64 00       	mov    $0x6412f0,%eax
  4045b7:	48 8b 15 22 d6 23 00 	mov    0x23d622(%rip),%rdx        # 641be0 <argv0>
  4045be:	48 c1 e8 03          	shr    $0x3,%rax
  4045c2:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4045c9:	0f 85 58 01 00 00    	jne    404727 <main+0x11b7>
  4045cf:	48 8b 3d 1a cd 23 00 	mov    0x23cd1a(%rip),%rdi        # 6412f0 <stderr@@GLIBC_2.2.5>
  4045d6:	be c0 12 42 00       	mov    $0x4212c0,%esi
  4045db:	31 c0                	xor    %eax,%eax
  4045dd:	e8 4e e7 ff ff       	callq  402d30 <fprintf@plt>
  4045e2:	e9 2d fb ff ff       	jmpq   404114 <main+0xba4>
	    tmr_run( &tv );
  4045e7:	48 89 ef             	mov    %rbp,%rdi
  4045ea:	e8 21 83 01 00       	callq  41c910 <tmr_run>
	    continue;
  4045ef:	e9 b7 f7 ff ff       	jmpq   403dab <main+0x83b>
	syslog( LOG_CRIT, "out of memory allocating a connecttab" );
  4045f4:	be c0 16 42 00       	mov    $0x4216c0,%esi
  4045f9:	e9 71 f8 ff ff       	jmpq   403e6f <main+0x8ff>
	    if ( handle_newconnect( &tv, hs->listen6_fd ) )
  4045fe:	48 8b 15 1b ce 23 00 	mov    0x23ce1b(%rip),%rdx        # 641420 <hs>
  404605:	48 8d 7a 4c          	lea    0x4c(%rdx),%rdi
  404609:	48 89 f8             	mov    %rdi,%rax
  40460c:	48 c1 e8 03          	shr    $0x3,%rax
  404610:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  404617:	48 89 f8             	mov    %rdi,%rax
  40461a:	83 e0 07             	and    $0x7,%eax
  40461d:	83 c0 03             	add    $0x3,%eax
  404620:	38 c8                	cmp    %cl,%al
  404622:	7c 08                	jl     40462c <main+0x10bc>
  404624:	84 c9                	test   %cl,%cl
  404626:	0f 85 d3 00 00 00    	jne    4046ff <main+0x118f>
  40462c:	8b 72 4c             	mov    0x4c(%rdx),%esi
  40462f:	48 89 ef             	mov    %rbp,%rdi
  404632:	e8 89 28 00 00       	callq  406ec0 <handle_newconnect>
  404637:	85 c0                	test   %eax,%eax
  404639:	0f 84 f0 fc ff ff    	je     40432f <main+0xdbf>
  40463f:	e9 67 f7 ff ff       	jmpq   403dab <main+0x83b>
		}
	    }
	}

    /* The main loop terminated. */
    shut_down();
  404644:	e8 57 30 00 00       	callq  4076a0 <shut_down>
    syslog( LOG_NOTICE, "exiting" );
  404649:	bf 05 00 00 00       	mov    $0x5,%edi
  40464e:	be 40 09 42 00       	mov    $0x420940,%esi
  404653:	31 c0                	xor    %eax,%eax
  404655:	e8 e6 e5 ff ff       	callq  402c40 <syslog@plt>
    closelog();
  40465a:	e8 31 e9 ff ff       	callq  402f90 <closelog@plt>
    exit( 0 );
  40465f:	e8 dc e9 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  404664:	31 ff                	xor    %edi,%edi
  404666:	e8 75 ea ff ff       	callq  4030e0 <exit@plt>
	    syslog( LOG_WARNING, "initgroups - %m" );
  40466b:	be e0 15 42 00       	mov    $0x4215e0,%esi
  404670:	bf 04 00 00 00       	mov    $0x4,%edi
  404675:	31 c0                	xor    %eax,%eax
  404677:	e8 c4 e5 ff ff       	callq  402c40 <syslog@plt>
  40467c:	e9 93 fb ff ff       	jmpq   404214 <main+0xca4>
    {
  404681:	bf 60 12 00 00       	mov    $0x1260,%edi
  404686:	e8 a5 e8 ff ff       	callq  402f30 <__asan_stack_malloc_7@plt>
  40468b:	48 85 c0             	test   %rax,%rax
  40468e:	48 0f 45 d8          	cmovne %rax,%rbx
  404692:	e9 03 ef ff ff       	jmpq   40359a <main+0x2a>
    argv0 = argv[0];
  404697:	4c 89 ef             	mov    %r13,%rdi
  40469a:	e8 b1 eb ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( cwd[strlen( cwd ) - 1] != '/' )
  40469f:	e8 6c ea ff ff       	callq  403110 <__asan_report_load1@plt>
	if ( logfp != stdout )
  4046a4:	bf e0 12 64 00       	mov    $0x6412e0,%edi
  4046a9:	e8 a2 eb ff ff       	callq  403250 <__asan_report_load8@plt>
	(void) fclose( stdin );
  4046ae:	bf e8 12 64 00       	mov    $0x6412e8,%edi
  4046b3:	e8 98 eb ff ff       	callq  403250 <__asan_report_load8@plt>
	(void) fclose( stderr );
  4046b8:	bf f0 12 64 00       	mov    $0x6412f0,%edi
  4046bd:	e8 8e eb ff ff       	callq  403250 <__asan_report_load8@plt>
	connects[cnum].conn_state = CNST_FREE;
  4046c2:	48 89 d7             	mov    %rdx,%rdi
  4046c5:	e8 26 e5 ff ff       	callq  402bf0 <__asan_report_store4@plt>
	connects[cnum].hc = (httpd_conn*) 0;
  4046ca:	e8 d1 e8 ff ff       	callq  402fa0 <__asan_report_store8@plt>
	connects[cnum].next_free_connect = cnum + 1;
  4046cf:	e8 1c e5 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    if ( tmr_create( (struct timeval*) 0, idle, JunkClientData, 5 * 1000L, 1 ) == (Timer*) 0 )
  4046d4:	bf e8 33 64 00       	mov    $0x6433e8,%edi
  4046d9:	e8 72 eb ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( tmr_create( (struct timeval*) 0, occasional, JunkClientData, OCCASIONAL_TIME * 1000L, 1 ) == (Timer*) 0 )
  4046de:	48 89 df             	mov    %rbx,%rdi
  4046e1:	e8 6a eb ff ff       	callq  403250 <__asan_report_load8@plt>
	(void) fprintf( stderr, "%s: can't find any valid address\n", argv0 );
  4046e6:	bf f0 12 64 00       	mov    $0x6412f0,%edi
  4046eb:	e8 60 eb ff ff       	callq  403250 <__asan_report_load8@plt>
	    hc = c->hc;
  4046f0:	e8 5b eb ff ff       	callq  403250 <__asan_report_load8@plt>
	    if ( ! fdwatch_check_fd( hc->conn_fd ) )
  4046f5:	e8 d6 e6 ff ff       	callq  402dd0 <__asan_report_load4@plt>
		if ( hs->listen4_fd != -1 )
  4046fa:	e8 d1 e6 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    if ( handle_newconnect( &tv, hs->listen6_fd ) )
  4046ff:	e8 cc e6 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( tmr_create( (struct timeval*) 0, show_stats, JunkClientData, STATS_TIME * 1000L, 1 ) == (Timer*) 0 )
  404704:	bf e8 33 64 00       	mov    $0x6433e8,%edi
  404709:	e8 42 eb ff ff       	callq  403250 <__asan_report_load8@plt>
	if ( tmr_create( (struct timeval*) 0, update_throttles, JunkClientData, THROTTLE_TIME * 1000L, 1 ) == (Timer*) 0 )
  40470e:	bf e8 33 64 00       	mov    $0x6433e8,%edi
  404713:	e8 38 eb ff ff       	callq  403250 <__asan_report_load8@plt>
	if ( hs != (httpd_server*) 0 && hs->listen4_fd != -1 &&
  404718:	e8 b3 e6 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    if ( handle_newconnect( &tv, hs->listen4_fd ) )
  40471d:	e8 ae e6 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( hs != (httpd_server*) 0 && hs->listen6_fd != -1 &&
  404722:	e8 a9 e6 ff ff       	callq  402dd0 <__asan_report_load4@plt>
		(void) fprintf( stderr, "%s: logfile is not within the chroot tree, you will not be able to re-open it\n", argv0 );
  404727:	bf f0 12 64 00       	mov    $0x6412f0,%edi
  40472c:	e8 1f eb ff ff       	callq  403250 <__asan_report_load8@plt>
    connects[max_connects - 1].next_free_connect = -1;	/* end of link list */
  404731:	e8 ba e4 ff ff       	callq  402bf0 <__asan_report_store4@plt>
		if ( hs->listen6_fd != -1 )
  404736:	e8 95 e6 ff ff       	callq  402dd0 <__asan_report_load4@plt>
		switch ( c->conn_state )
  40473b:	48 89 df             	mov    %rbx,%rdi
  40473e:	e8 8d e6 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    (void) fprintf( stderr, "%s: unknown user - '%s'\n", argv0, user );
  404743:	bf f0 12 64 00       	mov    $0x6412f0,%edi
  404748:	e8 03 eb ff ff       	callq  403250 <__asan_report_load8@plt>
	if ( hs->listen6_fd != -1 )
  40474d:	e8 7e e6 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( hs->listen4_fd != -1 )
  404752:	e8 79 e6 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    if ( errno == EINTR || errno == EAGAIN )
  404757:	48 89 c7             	mov    %rax,%rdi
  40475a:	e8 71 e6 ff ff       	callq  402dd0 <__asan_report_load4@plt>
		(void) fprintf( stderr, "%s: logfile is not an absolute path, you may not be able to re-open it\n", argv0 );
  40475f:	bf f0 12 64 00       	mov    $0x6412f0,%edi
  404764:	e8 e7 ea ff ff       	callq  403250 <__asan_report_load8@plt>
  404769:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000404770 <_GLOBAL__sub_I_00099_1_terminate>:
  404770:	48 83 ec 08          	sub    $0x8,%rsp
  404774:	e8 f7 e8 ff ff       	callq  403070 <__asan_init@plt>
  404779:	e8 62 ec ff ff       	callq  4033e0 <__asan_version_mismatch_check_v8@plt>
  40477e:	be a8 00 00 00       	mov    $0xa8,%esi
  404783:	bf 00 17 63 00       	mov    $0x631700,%edi
  404788:	48 83 c4 08          	add    $0x8,%rsp
  40478c:	e9 0f e5 ff ff       	jmpq   402ca0 <__asan_register_globals@plt>
  404791:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  404798:	00 00 00 
  40479b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004047a0 <_GLOBAL__sub_I_00099_1_fdwatch_get_nfiles>:
  4047a0:	48 83 ec 08          	sub    $0x8,%rsp
  4047a4:	e8 c7 e8 ff ff       	callq  403070 <__asan_init@plt>
  4047a9:	e8 32 ec ff ff       	callq  4033e0 <__asan_version_mismatch_check_v8@plt>
  4047ae:	be 13 00 00 00       	mov    $0x13,%esi
  4047b3:	bf a0 41 63 00       	mov    $0x6341a0,%edi
  4047b8:	48 83 c4 08          	add    $0x8,%rsp
  4047bc:	e9 df e4 ff ff       	jmpq   402ca0 <__asan_register_globals@plt>
  4047c1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4047c8:	00 00 00 
  4047cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004047d0 <_GLOBAL__sub_I_00099_1_httpd_initialize>:
  4047d0:	48 83 ec 08          	sub    $0x8,%rsp
  4047d4:	e8 97 e8 ff ff       	callq  403070 <__asan_init@plt>
  4047d9:	e8 02 ec ff ff       	callq  4033e0 <__asan_version_mismatch_check_v8@plt>
  4047de:	be 55 02 00 00       	mov    $0x255,%esi
  4047e3:	bf 80 64 63 00       	mov    $0x636480,%edi
  4047e8:	48 83 c4 08          	add    $0x8,%rsp
  4047ec:	e9 af e4 ff ff       	jmpq   402ca0 <__asan_register_globals@plt>
  4047f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4047f8:	00 00 00 
  4047fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000404800 <_GLOBAL__sub_I_00099_1_mmc_map>:
  404800:	48 83 ec 08          	sub    $0x8,%rsp
  404804:	e8 67 e8 ff ff       	callq  403070 <__asan_init@plt>
  404809:	e8 d2 eb ff ff       	callq  4033e0 <__asan_version_mismatch_check_v8@plt>
  40480e:	be 16 00 00 00       	mov    $0x16,%esi
  404813:	bf a0 fa 63 00       	mov    $0x63faa0,%edi
  404818:	48 83 c4 08          	add    $0x8,%rsp
  40481c:	e9 7f e4 ff ff       	jmpq   402ca0 <__asan_register_globals@plt>
  404821:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  404828:	00 00 00 
  40482b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000404830 <_GLOBAL__sub_I_00099_1_tmr_init>:
  404830:	48 83 ec 08          	sub    $0x8,%rsp
  404834:	e8 37 e8 ff ff       	callq  403070 <__asan_init@plt>
  404839:	e8 a2 eb ff ff       	callq  4033e0 <__asan_version_mismatch_check_v8@plt>
  40483e:	be 0b 00 00 00       	mov    $0xb,%esi
  404843:	bf a0 00 64 00       	mov    $0x6400a0,%edi
  404848:	48 83 c4 08          	add    $0x8,%rsp
  40484c:	e9 4f e4 ff ff       	jmpq   402ca0 <__asan_register_globals@plt>
  404851:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  404858:	00 00 00 
  40485b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000404860 <_GLOBAL__sub_I_00099_1_tdate_parse>:
  404860:	48 83 ec 08          	sub    $0x8,%rsp
  404864:	e8 07 e8 ff ff       	callq  403070 <__asan_init@plt>
  404869:	e8 72 eb ff ff       	callq  4033e0 <__asan_version_mismatch_check_v8@plt>
  40486e:	be 31 00 00 00       	mov    $0x31,%esi
  404873:	bf 60 06 64 00       	mov    $0x640660,%edi
  404878:	48 83 c4 08          	add    $0x8,%rsp
  40487c:	e9 1f e4 ff ff       	jmpq   402ca0 <__asan_register_globals@plt>
  404881:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  404888:	00 00 00 
  40488b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000404890 <_GLOBAL__sub_I_00099_1_match>:
  404890:	48 83 ec 08          	sub    $0x8,%rsp
  404894:	e8 d7 e7 ff ff       	callq  403070 <__asan_init@plt>
  404899:	e8 42 eb ff ff       	callq  4033e0 <__asan_version_mismatch_check_v8@plt>
  40489e:	be 01 00 00 00       	mov    $0x1,%esi
  4048a3:	bf a0 12 64 00       	mov    $0x6412a0,%edi
  4048a8:	48 83 c4 08          	add    $0x8,%rsp
  4048ac:	e9 ef e3 ff ff       	jmpq   402ca0 <__asan_register_globals@plt>

00000000004048b1 <_start>:
  4048b1:	31 ed                	xor    %ebp,%ebp
  4048b3:	49 89 d1             	mov    %rdx,%r9
  4048b6:	5e                   	pop    %rsi
  4048b7:	48 89 e2             	mov    %rsp,%rdx
  4048ba:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4048be:	50                   	push   %rax
  4048bf:	54                   	push   %rsp
  4048c0:	49 c7 c0 70 f0 41 00 	mov    $0x41f070,%r8
  4048c7:	48 c7 c1 00 f0 41 00 	mov    $0x41f000,%rcx
  4048ce:	48 c7 c7 70 35 40 00 	mov    $0x403570,%rdi
  4048d5:	e8 96 eb ff ff       	callq  403470 <__libc_start_main@plt>
  4048da:	f4                   	hlt    
  4048db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004048e0 <deregister_tm_clones>:
  4048e0:	b8 e0 12 64 00       	mov    $0x6412e0,%eax
  4048e5:	48 3d e0 12 64 00    	cmp    $0x6412e0,%rax
  4048eb:	74 13                	je     404900 <deregister_tm_clones+0x20>
  4048ed:	b8 00 00 00 00       	mov    $0x0,%eax
  4048f2:	48 85 c0             	test   %rax,%rax
  4048f5:	74 09                	je     404900 <deregister_tm_clones+0x20>
  4048f7:	bf e0 12 64 00       	mov    $0x6412e0,%edi
  4048fc:	ff e0                	jmpq   *%rax
  4048fe:	66 90                	xchg   %ax,%ax
  404900:	c3                   	retq   
  404901:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  404906:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40490d:	00 00 00 

0000000000404910 <register_tm_clones>:
  404910:	be e0 12 64 00       	mov    $0x6412e0,%esi
  404915:	48 81 ee e0 12 64 00 	sub    $0x6412e0,%rsi
  40491c:	48 c1 fe 03          	sar    $0x3,%rsi
  404920:	48 89 f0             	mov    %rsi,%rax
  404923:	48 c1 e8 3f          	shr    $0x3f,%rax
  404927:	48 01 c6             	add    %rax,%rsi
  40492a:	48 d1 fe             	sar    %rsi
  40492d:	74 11                	je     404940 <register_tm_clones+0x30>
  40492f:	b8 00 00 00 00       	mov    $0x0,%eax
  404934:	48 85 c0             	test   %rax,%rax
  404937:	74 07                	je     404940 <register_tm_clones+0x30>
  404939:	bf e0 12 64 00       	mov    $0x6412e0,%edi
  40493e:	ff e0                	jmpq   *%rax
  404940:	c3                   	retq   
  404941:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  404946:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40494d:	00 00 00 

0000000000404950 <__do_global_dtors_aux>:
  404950:	80 3d ad c9 23 00 00 	cmpb   $0x0,0x23c9ad(%rip)        # 641304 <completed.7242>
  404957:	75 17                	jne    404970 <__do_global_dtors_aux+0x20>
  404959:	55                   	push   %rbp
  40495a:	48 89 e5             	mov    %rsp,%rbp
  40495d:	e8 7e ff ff ff       	callq  4048e0 <deregister_tm_clones>
  404962:	c6 05 9b c9 23 00 01 	movb   $0x1,0x23c99b(%rip)        # 641304 <completed.7242>
  404969:	5d                   	pop    %rbp
  40496a:	c3                   	retq   
  40496b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  404970:	c3                   	retq   
  404971:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  404976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40497d:	00 00 00 

0000000000404980 <frame_dummy>:
  404980:	eb 8e                	jmp    404910 <register_tm_clones>
  404982:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  404989:	00 00 00 
  40498c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000404990 <handle_hup>:
    got_hup = 1;
  404990:	c7 05 06 ca 23 00 01 	movl   $0x1,0x23ca06(%rip)        # 6413a0 <got_hup>
  404997:	00 00 00 
    }
  40499a:	c3                   	retq   
  40499b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004049a0 <thttpd_logstats>:


/* Generate debugging statistics syslog message. */
static void
thttpd_logstats( long secs )
    {
  4049a0:	48 83 ec 08          	sub    $0x8,%rsp
    if ( secs > 0 )
  4049a4:	48 85 ff             	test   %rdi,%rdi
  4049a7:	7e 5a                	jle    404a03 <thttpd_logstats+0x63>
	syslog( LOG_INFO,
	    "  thttpd - %ld connections (%g/sec), %d max simultaneous, %lld bytes (%g/sec), %d httpd_conns allocated",
	    stats_connections, (float) stats_connections / secs,
	    stats_simultaneous, (int64_t) stats_bytes,
	    (float) stats_bytes / secs, httpd_conn_count );
  4049a9:	4c 8b 05 18 ea 23 00 	mov    0x23ea18(%rip),%r8        # 6433c8 <stats_bytes>
  4049b0:	66 0f ef d2          	pxor   %xmm2,%xmm2
  4049b4:	66 0f ef c9          	pxor   %xmm1,%xmm1
	    stats_connections, (float) stats_connections / secs,
  4049b8:	66 0f ef c0          	pxor   %xmm0,%xmm0
	    (float) stats_bytes / secs, httpd_conn_count );
  4049bc:	f3 48 0f 2a d7       	cvtsi2ss %rdi,%xmm2
	syslog( LOG_INFO,
  4049c1:	be e0 f0 41 00       	mov    $0x41f0e0,%esi
  4049c6:	bf 06 00 00 00       	mov    $0x6,%edi
	    stats_connections, (float) stats_connections / secs,
  4049cb:	48 8b 15 06 ea 23 00 	mov    0x23ea06(%rip),%rdx        # 6433d8 <stats_connections>
	    (float) stats_bytes / secs, httpd_conn_count );
  4049d2:	f3 49 0f 2a c8       	cvtsi2ss %r8,%xmm1
	syslog( LOG_INFO,
  4049d7:	8b 0d 03 ea 23 00    	mov    0x23ea03(%rip),%ecx        # 6433e0 <stats_simultaneous>
  4049dd:	b8 02 00 00 00       	mov    $0x2,%eax
  4049e2:	44 8b 0d 77 ca 23 00 	mov    0x23ca77(%rip),%r9d        # 641460 <httpd_conn_count>
	    stats_connections, (float) stats_connections / secs,
  4049e9:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
	    (float) stats_bytes / secs, httpd_conn_count );
  4049ee:	f3 0f 5e ca          	divss  %xmm2,%xmm1
	    stats_connections, (float) stats_connections / secs,
  4049f2:	f3 0f 5e c2          	divss  %xmm2,%xmm0
	syslog( LOG_INFO,
  4049f6:	f3 0f 5a c9          	cvtss2sd %xmm1,%xmm1
  4049fa:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
  4049fe:	e8 3d e2 ff ff       	callq  402c40 <syslog@plt>
    stats_connections = 0;
  404a03:	48 c7 05 ca e9 23 00 	movq   $0x0,0x23e9ca(%rip)        # 6433d8 <stats_connections>
  404a0a:	00 00 00 00 
    stats_bytes = 0;
  404a0e:	48 c7 05 af e9 23 00 	movq   $0x0,0x23e9af(%rip)        # 6433c8 <stats_bytes>
  404a15:	00 00 00 00 
    stats_simultaneous = 0;
  404a19:	c7 05 bd e9 23 00 00 	movl   $0x0,0x23e9bd(%rip)        # 6433e0 <stats_simultaneous>
  404a20:	00 00 00 
    }
  404a23:	48 83 c4 08          	add    $0x8,%rsp
  404a27:	c3                   	retq   
  404a28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  404a2f:	00 

0000000000404a30 <update_throttles>:
    for ( tnum = 0; tnum < numthrottles; ++tnum )
  404a30:	44 8b 1d a9 cb 23 00 	mov    0x23cba9(%rip),%r11d        # 6415e0 <numthrottles>
    {
  404a37:	41 54                	push   %r12
  404a39:	49 bc 56 55 55 55 55 	movabs $0x5555555555555556,%r12
  404a40:	55 55 55 
  404a43:	55                   	push   %rbp
  404a44:	31 ed                	xor    %ebp,%ebp
  404a46:	53                   	push   %rbx
  404a47:	31 db                	xor    %ebx,%ebx
    for ( tnum = 0; tnum < numthrottles; ++tnum )
  404a49:	45 85 db             	test   %r11d,%r11d
  404a4c:	0f 8f d1 00 00 00    	jg     404b23 <update_throttles+0xf3>
  404a52:	e9 f9 01 00 00       	jmpq   404c50 <update_throttles+0x220>
  404a57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  404a5e:	00 00 
	    if ( throttles[tnum].rate > throttles[tnum].max_limit * 2 )
  404a60:	48 89 ce             	mov    %rcx,%rsi
  404a63:	4b 8d 14 09          	lea    (%r9,%r9,1),%rdx
  404a67:	48 c1 ee 03          	shr    $0x3,%rsi
  404a6b:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  404a72:	0f 85 47 04 00 00    	jne    404ebf <update_throttles+0x48f>
  404a78:	48 8b 09             	mov    (%rcx),%rcx
  404a7b:	49 39 d0             	cmp    %rdx,%r8
  404a7e:	0f 8e ac 03 00 00    	jle    404e30 <update_throttles+0x400>
		syslog( LOG_NOTICE, "throttle #%d '%.80s' rate %ld greatly exceeding limit %ld; %d sending", tnum, throttles[tnum].pattern, throttles[tnum].rate, throttles[tnum].max_limit, throttles[tnum].num_sending );
  404a84:	48 83 ec 08          	sub    $0x8,%rsp
  404a88:	bf 05 00 00 00       	mov    $0x5,%edi
  404a8d:	89 da                	mov    %ebx,%edx
  404a8f:	be 80 f1 41 00       	mov    $0x41f180,%esi
  404a94:	50                   	push   %rax
  404a95:	31 c0                	xor    %eax,%eax
  404a97:	e8 a4 e1 ff ff       	callq  402c40 <syslog@plt>
  404a9c:	48 8b 0d 7d cb 23 00 	mov    0x23cb7d(%rip),%rcx        # 641620 <throttles>
  404aa3:	41 59                	pop    %r9
  404aa5:	41 5a                	pop    %r10
  404aa7:	48 01 e9             	add    %rbp,%rcx
  404aaa:	48 8d 79 18          	lea    0x18(%rcx),%rdi
  404aae:	48 89 f8             	mov    %rdi,%rax
  404ab1:	48 c1 e8 03          	shr    $0x3,%rax
  404ab5:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  404abc:	0f 85 19 04 00 00    	jne    404edb <update_throttles+0x4ab>
  404ac2:	4c 8b 41 18          	mov    0x18(%rcx),%r8
	if ( throttles[tnum].rate < throttles[tnum].min_limit && throttles[tnum].num_sending != 0 )
  404ac6:	48 8d 79 10          	lea    0x10(%rcx),%rdi
  404aca:	48 89 f8             	mov    %rdi,%rax
  404acd:	48 c1 e8 03          	shr    $0x3,%rax
  404ad1:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  404ad8:	0f 85 dc 03 00 00    	jne    404eba <update_throttles+0x48a>
  404ade:	4c 8b 49 10          	mov    0x10(%rcx),%r9
  404ae2:	4d 39 c1             	cmp    %r8,%r9
  404ae5:	7e 29                	jle    404b10 <update_throttles+0xe0>
  404ae7:	48 8d 79 28          	lea    0x28(%rcx),%rdi
  404aeb:	48 89 f8             	mov    %rdi,%rax
  404aee:	48 c1 e8 03          	shr    $0x3,%rax
  404af2:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  404af9:	84 c0                	test   %al,%al
  404afb:	74 08                	je     404b05 <update_throttles+0xd5>
  404afd:	3c 03                	cmp    $0x3,%al
  404aff:	0f 8e c7 03 00 00    	jle    404ecc <update_throttles+0x49c>
  404b05:	8b 41 28             	mov    0x28(%rcx),%eax
  404b08:	85 c0                	test   %eax,%eax
  404b0a:	0f 85 f8 00 00 00    	jne    404c08 <update_throttles+0x1d8>
    for ( tnum = 0; tnum < numthrottles; ++tnum )
  404b10:	83 c3 01             	add    $0x1,%ebx
  404b13:	48 83 c5 30          	add    $0x30,%rbp
  404b17:	39 1d c3 ca 23 00    	cmp    %ebx,0x23cac3(%rip)        # 6415e0 <numthrottles>
  404b1d:	0f 8e 2d 01 00 00    	jle    404c50 <update_throttles+0x220>
	throttles[tnum].rate = ( 2 * throttles[tnum].rate + throttles[tnum].bytes_since_avg / THROTTLE_TIME ) / 3;
  404b23:	48 8b 0d f6 ca 23 00 	mov    0x23caf6(%rip),%rcx        # 641620 <throttles>
  404b2a:	48 01 e9             	add    %rbp,%rcx
  404b2d:	48 8d 79 18          	lea    0x18(%rcx),%rdi
  404b31:	48 89 f8             	mov    %rdi,%rax
  404b34:	48 c1 e8 03          	shr    $0x3,%rax
  404b38:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  404b3f:	0f 85 5e 03 00 00    	jne    404ea3 <update_throttles+0x473>
  404b45:	48 8d 79 20          	lea    0x20(%rcx),%rdi
  404b49:	48 8b 41 18          	mov    0x18(%rcx),%rax
  404b4d:	48 89 fa             	mov    %rdi,%rdx
  404b50:	48 c1 ea 03          	shr    $0x3,%rdx
  404b54:	48 01 c0             	add    %rax,%rax
  404b57:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  404b5e:	0f 85 49 03 00 00    	jne    404ead <update_throttles+0x47d>
  404b64:	48 8b 51 20          	mov    0x20(%rcx),%rdx
	if ( throttles[tnum].rate > throttles[tnum].max_limit && throttles[tnum].num_sending != 0 )
  404b68:	48 8d 79 08          	lea    0x8(%rcx),%rdi
	throttles[tnum].bytes_since_avg = 0;
  404b6c:	48 c7 41 20 00 00 00 	movq   $0x0,0x20(%rcx)
  404b73:	00 
	throttles[tnum].rate = ( 2 * throttles[tnum].rate + throttles[tnum].bytes_since_avg / THROTTLE_TIME ) / 3;
  404b74:	48 89 d6             	mov    %rdx,%rsi
  404b77:	48 c1 ee 3f          	shr    $0x3f,%rsi
  404b7b:	48 01 d6             	add    %rdx,%rsi
  404b7e:	48 d1 fe             	sar    %rsi
  404b81:	48 01 c6             	add    %rax,%rsi
  404b84:	48 89 f0             	mov    %rsi,%rax
  404b87:	48 c1 fe 3f          	sar    $0x3f,%rsi
  404b8b:	49 f7 ec             	imul   %r12
	if ( throttles[tnum].rate > throttles[tnum].max_limit && throttles[tnum].num_sending != 0 )
  404b8e:	48 89 f8             	mov    %rdi,%rax
  404b91:	48 c1 e8 03          	shr    $0x3,%rax
	throttles[tnum].rate = ( 2 * throttles[tnum].rate + throttles[tnum].bytes_since_avg / THROTTLE_TIME ) / 3;
  404b95:	48 29 f2             	sub    %rsi,%rdx
	if ( throttles[tnum].rate > throttles[tnum].max_limit && throttles[tnum].num_sending != 0 )
  404b98:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
	throttles[tnum].rate = ( 2 * throttles[tnum].rate + throttles[tnum].bytes_since_avg / THROTTLE_TIME ) / 3;
  404b9f:	49 89 d0             	mov    %rdx,%r8
  404ba2:	48 89 51 18          	mov    %rdx,0x18(%rcx)
	if ( throttles[tnum].rate > throttles[tnum].max_limit && throttles[tnum].num_sending != 0 )
  404ba6:	0f 85 fc 02 00 00    	jne    404ea8 <update_throttles+0x478>
  404bac:	4c 8b 49 08          	mov    0x8(%rcx),%r9
  404bb0:	4c 39 ca             	cmp    %r9,%rdx
  404bb3:	0f 8e 0d ff ff ff    	jle    404ac6 <update_throttles+0x96>
  404bb9:	48 8d 79 28          	lea    0x28(%rcx),%rdi
  404bbd:	48 89 f8             	mov    %rdi,%rax
  404bc0:	48 c1 e8 03          	shr    $0x3,%rax
  404bc4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  404bcb:	84 c0                	test   %al,%al
  404bcd:	74 08                	je     404bd7 <update_throttles+0x1a7>
  404bcf:	3c 03                	cmp    $0x3,%al
  404bd1:	0f 8e f0 02 00 00    	jle    404ec7 <update_throttles+0x497>
  404bd7:	8b 41 28             	mov    0x28(%rcx),%eax
  404bda:	85 c0                	test   %eax,%eax
  404bdc:	0f 85 7e fe ff ff    	jne    404a60 <update_throttles+0x30>
	if ( throttles[tnum].rate < throttles[tnum].min_limit && throttles[tnum].num_sending != 0 )
  404be2:	48 83 c1 10          	add    $0x10,%rcx
  404be6:	48 89 c8             	mov    %rcx,%rax
  404be9:	48 c1 e8 03          	shr    $0x3,%rax
  404bed:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  404bf4:	0f 84 16 ff ff ff    	je     404b10 <update_throttles+0xe0>
  404bfa:	48 89 cf             	mov    %rcx,%rdi
  404bfd:	e8 4e e6 ff ff       	callq  403250 <__asan_report_load8@plt>
  404c02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	    syslog( LOG_NOTICE, "throttle #%d '%.80s' rate %ld lower than minimum %ld; %d sending", tnum, throttles[tnum].pattern, throttles[tnum].rate, throttles[tnum].min_limit, throttles[tnum].num_sending );
  404c08:	48 89 ca             	mov    %rcx,%rdx
  404c0b:	48 c1 ea 03          	shr    $0x3,%rdx
  404c0f:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  404c16:	0f 85 c4 02 00 00    	jne    404ee0 <update_throttles+0x4b0>
  404c1c:	48 83 ec 08          	sub    $0x8,%rsp
  404c20:	48 8b 09             	mov    (%rcx),%rcx
  404c23:	89 da                	mov    %ebx,%edx
  404c25:	be 60 f2 41 00       	mov    $0x41f260,%esi
  404c2a:	50                   	push   %rax
  404c2b:	bf 05 00 00 00       	mov    $0x5,%edi
  404c30:	31 c0                	xor    %eax,%eax
    for ( tnum = 0; tnum < numthrottles; ++tnum )
  404c32:	83 c3 01             	add    $0x1,%ebx
  404c35:	48 83 c5 30          	add    $0x30,%rbp
	    syslog( LOG_NOTICE, "throttle #%d '%.80s' rate %ld lower than minimum %ld; %d sending", tnum, throttles[tnum].pattern, throttles[tnum].rate, throttles[tnum].min_limit, throttles[tnum].num_sending );
  404c39:	e8 02 e0 ff ff       	callq  402c40 <syslog@plt>
    for ( tnum = 0; tnum < numthrottles; ++tnum )
  404c3e:	39 1d 9c c9 23 00    	cmp    %ebx,0x23c99c(%rip)        # 6415e0 <numthrottles>
	    syslog( LOG_NOTICE, "throttle #%d '%.80s' rate %ld lower than minimum %ld; %d sending", tnum, throttles[tnum].pattern, throttles[tnum].rate, throttles[tnum].min_limit, throttles[tnum].num_sending );
  404c44:	58                   	pop    %rax
  404c45:	5a                   	pop    %rdx
    for ( tnum = 0; tnum < numthrottles; ++tnum )
  404c46:	0f 8f d7 fe ff ff    	jg     404b23 <update_throttles+0xf3>
  404c4c:	0f 1f 40 00          	nopl   0x0(%rax)
    for ( cnum = 0; cnum < max_connects; ++cnum )
  404c50:	8b 05 8a c8 23 00    	mov    0x23c88a(%rip),%eax        # 6414e0 <max_connects>
  404c56:	85 c0                	test   %eax,%eax
  404c58:	0f 8e 2e 02 00 00    	jle    404e8c <update_throttles+0x45c>
  404c5e:	83 e8 01             	sub    $0x1,%eax
  404c61:	4c 8b 05 f8 c8 23 00 	mov    0x23c8f8(%rip),%r8        # 641560 <connects>
		l = throttles[tnum].max_limit / throttles[tnum].num_sending;
  404c68:	4c 8b 1d b1 c9 23 00 	mov    0x23c9b1(%rip),%r11        # 641620 <throttles>
	    c->max_limit = THROTTLE_NOLIMIT;
  404c6f:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
  404c76:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
  404c7a:	48 c1 e0 04          	shl    $0x4,%rax
  404c7e:	49 8d 9c 00 90 00 00 	lea    0x90(%r8,%rax,1),%rbx
  404c85:	00 
  404c86:	eb 18                	jmp    404ca0 <update_throttles+0x270>
  404c88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  404c8f:	00 
  404c90:	49 81 c0 90 00 00 00 	add    $0x90,%r8
    for ( cnum = 0; cnum < max_connects; ++cnum )
  404c97:	49 39 d8             	cmp    %rbx,%r8
  404c9a:	0f 84 ec 01 00 00    	je     404e8c <update_throttles+0x45c>
	if ( c->conn_state == CNST_SENDING || c->conn_state == CNST_PAUSING )
  404ca0:	4c 89 c0             	mov    %r8,%rax
  404ca3:	48 c1 e8 03          	shr    $0x3,%rax
  404ca7:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  404cae:	84 c0                	test   %al,%al
  404cb0:	74 08                	je     404cba <update_throttles+0x28a>
  404cb2:	3c 03                	cmp    $0x3,%al
  404cb4:	0f 8e f8 01 00 00    	jle    404eb2 <update_throttles+0x482>
  404cba:	41 8b 00             	mov    (%r8),%eax
  404cbd:	83 e8 02             	sub    $0x2,%eax
  404cc0:	83 f8 01             	cmp    $0x1,%eax
  404cc3:	77 cb                	ja     404c90 <update_throttles+0x260>
	    c->max_limit = THROTTLE_NOLIMIT;
  404cc5:	49 8d 78 40          	lea    0x40(%r8),%rdi
  404cc9:	48 89 f8             	mov    %rdi,%rax
  404ccc:	48 c1 e8 03          	shr    $0x3,%rax
  404cd0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  404cd7:	0f 85 f4 01 00 00    	jne    404ed1 <update_throttles+0x4a1>
	    for ( tind = 0; tind < c->numtnums; ++tind )
  404cdd:	49 8d 78 38          	lea    0x38(%r8),%rdi
	    c->max_limit = THROTTLE_NOLIMIT;
  404ce1:	49 89 68 40          	mov    %rbp,0x40(%r8)
	    for ( tind = 0; tind < c->numtnums; ++tind )
  404ce5:	48 89 f8             	mov    %rdi,%rax
  404ce8:	48 c1 e8 03          	shr    $0x3,%rax
  404cec:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  404cf3:	84 c0                	test   %al,%al
  404cf5:	74 08                	je     404cff <update_throttles+0x2cf>
  404cf7:	3c 03                	cmp    $0x3,%al
  404cf9:	0f 8e d7 01 00 00    	jle    404ed6 <update_throttles+0x4a6>
  404cff:	45 8b 50 38          	mov    0x38(%r8),%r10d
  404d03:	45 85 d2             	test   %r10d,%r10d
  404d06:	7e 88                	jle    404c90 <update_throttles+0x260>
		tnum = c->tnums[tind];
  404d08:	49 8d 78 10          	lea    0x10(%r8),%rdi
  404d0c:	48 89 f8             	mov    %rdi,%rax
  404d0f:	48 c1 e8 03          	shr    $0x3,%rax
  404d13:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  404d1a:	84 c0                	test   %al,%al
  404d1c:	74 08                	je     404d26 <update_throttles+0x2f6>
  404d1e:	3c 03                	cmp    $0x3,%al
  404d20:	0f 8e cc 01 00 00    	jle    404ef2 <update_throttles+0x4c2>
		l = throttles[tnum].max_limit / throttles[tnum].num_sending;
  404d26:	49 63 40 10          	movslq 0x10(%r8),%rax
  404d2a:	48 8d 0c 40          	lea    (%rax,%rax,2),%rcx
  404d2e:	48 c1 e1 04          	shl    $0x4,%rcx
  404d32:	4c 01 d9             	add    %r11,%rcx
  404d35:	48 8d 79 08          	lea    0x8(%rcx),%rdi
  404d39:	48 89 f8             	mov    %rdi,%rax
  404d3c:	48 c1 e8 03          	shr    $0x3,%rax
  404d40:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  404d47:	0f 85 a0 01 00 00    	jne    404eed <update_throttles+0x4bd>
  404d4d:	48 8d 79 28          	lea    0x28(%rcx),%rdi
  404d51:	48 8b 41 08          	mov    0x8(%rcx),%rax
  404d55:	48 89 fa             	mov    %rdi,%rdx
  404d58:	48 c1 ea 03          	shr    $0x3,%rdx
  404d5c:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  404d63:	84 d2                	test   %dl,%dl
  404d65:	74 09                	je     404d70 <update_throttles+0x340>
  404d67:	80 fa 03             	cmp    $0x3,%dl
  404d6a:	0f 8e 78 01 00 00    	jle    404ee8 <update_throttles+0x4b8>
  404d70:	48 63 49 28          	movslq 0x28(%rcx),%rcx
  404d74:	48 99                	cqto   
  404d76:	49 8d 70 14          	lea    0x14(%r8),%rsi
  404d7a:	48 f7 f9             	idiv   %rcx
  404d7d:	49 89 c1             	mov    %rax,%r9
		if ( c->max_limit == THROTTLE_NOLIMIT )
  404d80:	41 8d 42 ff          	lea    -0x1(%r10),%eax
  404d84:	4c 8d 14 86          	lea    (%rsi,%rax,4),%r10
  404d88:	eb 11                	jmp    404d9b <update_throttles+0x36b>
  404d8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
		    c->max_limit = MIN( c->max_limit, l );
  404d90:	49 39 c1             	cmp    %rax,%r9
  404d93:	4c 0f 4f c8          	cmovg  %rax,%r9
  404d97:	48 83 c6 04          	add    $0x4,%rsi
	    for ( tind = 0; tind < c->numtnums; ++tind )
  404d9b:	4c 39 d6             	cmp    %r10,%rsi
  404d9e:	0f 84 d4 00 00 00    	je     404e78 <update_throttles+0x448>
		tnum = c->tnums[tind];
  404da4:	48 89 f0             	mov    %rsi,%rax
  404da7:	48 89 f1             	mov    %rsi,%rcx
  404daa:	48 c1 e8 03          	shr    $0x3,%rax
  404dae:	83 e1 07             	and    $0x7,%ecx
  404db1:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  404db8:	83 c1 03             	add    $0x3,%ecx
  404dbb:	38 c1                	cmp    %al,%cl
  404dbd:	7c 08                	jl     404dc7 <update_throttles+0x397>
  404dbf:	84 c0                	test   %al,%al
  404dc1:	0f 85 d4 00 00 00    	jne    404e9b <update_throttles+0x46b>
		l = throttles[tnum].max_limit / throttles[tnum].num_sending;
  404dc7:	48 63 06             	movslq (%rsi),%rax
  404dca:	48 8d 0c 40          	lea    (%rax,%rax,2),%rcx
  404dce:	48 c1 e1 04          	shl    $0x4,%rcx
  404dd2:	4c 01 d9             	add    %r11,%rcx
  404dd5:	48 8d 79 08          	lea    0x8(%rcx),%rdi
  404dd9:	48 89 f8             	mov    %rdi,%rax
  404ddc:	48 c1 e8 03          	shr    $0x3,%rax
  404de0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  404de7:	0f 85 a9 00 00 00    	jne    404e96 <update_throttles+0x466>
  404ded:	48 8d 79 28          	lea    0x28(%rcx),%rdi
  404df1:	48 8b 41 08          	mov    0x8(%rcx),%rax
  404df5:	48 89 fa             	mov    %rdi,%rdx
  404df8:	48 c1 ea 03          	shr    $0x3,%rdx
  404dfc:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  404e03:	84 d2                	test   %dl,%dl
  404e05:	74 09                	je     404e10 <update_throttles+0x3e0>
  404e07:	80 fa 03             	cmp    $0x3,%dl
  404e0a:	0f 8e 81 00 00 00    	jle    404e91 <update_throttles+0x461>
  404e10:	48 63 49 28          	movslq 0x28(%rcx),%rcx
  404e14:	48 99                	cqto   
  404e16:	48 f7 f9             	idiv   %rcx
		if ( c->max_limit == THROTTLE_NOLIMIT )
  404e19:	49 83 f9 ff          	cmp    $0xffffffffffffffff,%r9
  404e1d:	0f 85 6d ff ff ff    	jne    404d90 <update_throttles+0x360>
		l = throttles[tnum].max_limit / throttles[tnum].num_sending;
  404e23:	49 89 c1             	mov    %rax,%r9
  404e26:	e9 6c ff ff ff       	jmpq   404d97 <update_throttles+0x367>
  404e2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
		syslog( LOG_INFO, "throttle #%d '%.80s' rate %ld exceeding limit %ld; %d sending", tnum, throttles[tnum].pattern, throttles[tnum].rate, throttles[tnum].max_limit, throttles[tnum].num_sending );
  404e30:	48 83 ec 08          	sub    $0x8,%rsp
  404e34:	be 00 f2 41 00       	mov    $0x41f200,%esi
  404e39:	bf 06 00 00 00       	mov    $0x6,%edi
  404e3e:	89 da                	mov    %ebx,%edx
  404e40:	50                   	push   %rax
  404e41:	31 c0                	xor    %eax,%eax
  404e43:	e8 f8 dd ff ff       	callq  402c40 <syslog@plt>
  404e48:	48 8b 0d d1 c7 23 00 	mov    0x23c7d1(%rip),%rcx        # 641620 <throttles>
  404e4f:	5e                   	pop    %rsi
  404e50:	41 58                	pop    %r8
  404e52:	48 01 e9             	add    %rbp,%rcx
  404e55:	48 8d 79 18          	lea    0x18(%rcx),%rdi
  404e59:	48 89 f8             	mov    %rdi,%rax
  404e5c:	48 c1 e8 03          	shr    $0x3,%rax
  404e60:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  404e67:	0f 84 55 fc ff ff    	je     404ac2 <update_throttles+0x92>
  404e6d:	e8 de e3 ff ff       	callq  403250 <__asan_report_load8@plt>
  404e72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  404e78:	4d 89 48 40          	mov    %r9,0x40(%r8)
  404e7c:	49 81 c0 90 00 00 00 	add    $0x90,%r8
    for ( cnum = 0; cnum < max_connects; ++cnum )
  404e83:	49 39 d8             	cmp    %rbx,%r8
  404e86:	0f 85 14 fe ff ff    	jne    404ca0 <update_throttles+0x270>
    }
  404e8c:	5b                   	pop    %rbx
  404e8d:	5d                   	pop    %rbp
  404e8e:	41 5c                	pop    %r12
  404e90:	c3                   	retq   
		l = throttles[tnum].max_limit / throttles[tnum].num_sending;
  404e91:	e8 3a df ff ff       	callq  402dd0 <__asan_report_load4@plt>
  404e96:	e8 b5 e3 ff ff       	callq  403250 <__asan_report_load8@plt>
		tnum = c->tnums[tind];
  404e9b:	48 89 f7             	mov    %rsi,%rdi
  404e9e:	e8 2d df ff ff       	callq  402dd0 <__asan_report_load4@plt>
	throttles[tnum].rate = ( 2 * throttles[tnum].rate + throttles[tnum].bytes_since_avg / THROTTLE_TIME ) / 3;
  404ea3:	e8 a8 e3 ff ff       	callq  403250 <__asan_report_load8@plt>
	if ( throttles[tnum].rate > throttles[tnum].max_limit && throttles[tnum].num_sending != 0 )
  404ea8:	e8 a3 e3 ff ff       	callq  403250 <__asan_report_load8@plt>
	throttles[tnum].rate = ( 2 * throttles[tnum].rate + throttles[tnum].bytes_since_avg / THROTTLE_TIME ) / 3;
  404ead:	e8 9e e3 ff ff       	callq  403250 <__asan_report_load8@plt>
	if ( c->conn_state == CNST_SENDING || c->conn_state == CNST_PAUSING )
  404eb2:	4c 89 c7             	mov    %r8,%rdi
  404eb5:	e8 16 df ff ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( throttles[tnum].rate < throttles[tnum].min_limit && throttles[tnum].num_sending != 0 )
  404eba:	e8 91 e3 ff ff       	callq  403250 <__asan_report_load8@plt>
  404ebf:	48 89 cf             	mov    %rcx,%rdi
  404ec2:	e8 89 e3 ff ff       	callq  403250 <__asan_report_load8@plt>
	if ( throttles[tnum].rate > throttles[tnum].max_limit && throttles[tnum].num_sending != 0 )
  404ec7:	e8 04 df ff ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( throttles[tnum].rate < throttles[tnum].min_limit && throttles[tnum].num_sending != 0 )
  404ecc:	e8 ff de ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    c->max_limit = THROTTLE_NOLIMIT;
  404ed1:	e8 ca e0 ff ff       	callq  402fa0 <__asan_report_store8@plt>
	    for ( tind = 0; tind < c->numtnums; ++tind )
  404ed6:	e8 f5 de ff ff       	callq  402dd0 <__asan_report_load4@plt>
  404edb:	e8 70 e3 ff ff       	callq  403250 <__asan_report_load8@plt>
	    syslog( LOG_NOTICE, "throttle #%d '%.80s' rate %ld lower than minimum %ld; %d sending", tnum, throttles[tnum].pattern, throttles[tnum].rate, throttles[tnum].min_limit, throttles[tnum].num_sending );
  404ee0:	48 89 cf             	mov    %rcx,%rdi
  404ee3:	e8 68 e3 ff ff       	callq  403250 <__asan_report_load8@plt>
		l = throttles[tnum].max_limit / throttles[tnum].num_sending;
  404ee8:	e8 e3 de ff ff       	callq  402dd0 <__asan_report_load4@plt>
  404eed:	e8 5e e3 ff ff       	callq  403250 <__asan_report_load8@plt>
		tnum = c->tnums[tind];
  404ef2:	e8 d9 de ff ff       	callq  402dd0 <__asan_report_load4@plt>
  404ef7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  404efe:	00 00 

0000000000404f00 <no_value_required>:
    if ( value != (char*) 0 )
  404f00:	48 85 f6             	test   %rsi,%rsi
  404f03:	75 01                	jne    404f06 <no_value_required+0x6>
  404f05:	c3                   	retq   
    {
  404f06:	50                   	push   %rax
	(void) fprintf(
  404f07:	b8 f0 12 64 00       	mov    $0x6412f0,%eax
  404f0c:	48 89 f9             	mov    %rdi,%rcx
  404f0f:	48 8b 15 ca cc 23 00 	mov    0x23ccca(%rip),%rdx        # 641be0 <argv0>
  404f16:	48 c1 e8 03          	shr    $0x3,%rax
  404f1a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  404f21:	75 22                	jne    404f45 <no_value_required+0x45>
  404f23:	48 8b 3d c6 c3 23 00 	mov    0x23c3c6(%rip),%rdi        # 6412f0 <stderr@@GLIBC_2.2.5>
  404f2a:	be e0 f2 41 00       	mov    $0x41f2e0,%esi
  404f2f:	31 c0                	xor    %eax,%eax
  404f31:	e8 fa dd ff ff       	callq  402d30 <fprintf@plt>
	exit( 1 );
  404f36:	e8 05 e1 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  404f3b:	bf 01 00 00 00       	mov    $0x1,%edi
  404f40:	e8 9b e1 ff ff       	callq  4030e0 <exit@plt>
	(void) fprintf(
  404f45:	bf f0 12 64 00       	mov    $0x6412f0,%edi
  404f4a:	e8 01 e3 ff ff       	callq  403250 <__asan_report_load8@plt>
  404f4f:	90                   	nop

0000000000404f50 <value_required>:
    if ( value == (char*) 0 )
  404f50:	48 85 f6             	test   %rsi,%rsi
  404f53:	74 01                	je     404f56 <value_required+0x6>
  404f55:	c3                   	retq   
    {
  404f56:	50                   	push   %rax
	(void) fprintf(
  404f57:	b8 f0 12 64 00       	mov    $0x6412f0,%eax
  404f5c:	48 89 f9             	mov    %rdi,%rcx
  404f5f:	48 8b 15 7a cc 23 00 	mov    0x23cc7a(%rip),%rdx        # 641be0 <argv0>
  404f66:	48 c1 e8 03          	shr    $0x3,%rax
  404f6a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  404f71:	75 22                	jne    404f95 <value_required+0x45>
  404f73:	48 8b 3d 76 c3 23 00 	mov    0x23c376(%rip),%rdi        # 6412f0 <stderr@@GLIBC_2.2.5>
  404f7a:	be 40 f3 41 00       	mov    $0x41f340,%esi
  404f7f:	31 c0                	xor    %eax,%eax
  404f81:	e8 aa dd ff ff       	callq  402d30 <fprintf@plt>
	exit( 1 );
  404f86:	e8 b5 e0 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  404f8b:	bf 01 00 00 00       	mov    $0x1,%edi
  404f90:	e8 4b e1 ff ff       	callq  4030e0 <exit@plt>
	(void) fprintf(
  404f95:	bf f0 12 64 00       	mov    $0x6412f0,%edi
  404f9a:	e8 b1 e2 ff ff       	callq  403250 <__asan_report_load8@plt>
  404f9f:	90                   	nop

0000000000404fa0 <usage>:
    (void) fprintf( stderr,
  404fa0:	b8 f0 12 64 00       	mov    $0x6412f0,%eax
    {
  404fa5:	48 83 ec 08          	sub    $0x8,%rsp
    (void) fprintf( stderr,
  404fa9:	48 8b 15 30 cc 23 00 	mov    0x23cc30(%rip),%rdx        # 641be0 <argv0>
  404fb0:	48 c1 e8 03          	shr    $0x3,%rax
  404fb4:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  404fbb:	75 22                	jne    404fdf <usage+0x3f>
  404fbd:	48 8b 3d 2c c3 23 00 	mov    0x23c32c(%rip),%rdi        # 6412f0 <stderr@@GLIBC_2.2.5>
  404fc4:	be a0 f3 41 00       	mov    $0x41f3a0,%esi
  404fc9:	31 c0                	xor    %eax,%eax
  404fcb:	e8 60 dd ff ff       	callq  402d30 <fprintf@plt>
    exit( 1 );
  404fd0:	e8 6b e0 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  404fd5:	bf 01 00 00 00       	mov    $0x1,%edi
  404fda:	e8 01 e1 ff ff       	callq  4030e0 <exit@plt>
    (void) fprintf( stderr,
  404fdf:	bf f0 12 64 00       	mov    $0x6412f0,%edi
  404fe4:	e8 67 e2 ff ff       	callq  403250 <__asan_report_load8@plt>
  404fe9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000404ff0 <wakeup_connection>:
    {
  404ff0:	41 54                	push   %r12
  404ff2:	48 89 fe             	mov    %rdi,%rsi
  404ff5:	55                   	push   %rbp
  404ff6:	53                   	push   %rbx
  404ff7:	48 83 ec 70          	sub    $0x70,%rsp
  404ffb:	8b 05 ff c2 23 00    	mov    0x23c2ff(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  405001:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
  405006:	49 89 dc             	mov    %rbx,%r12
  405009:	85 c0                	test   %eax,%eax
  40500b:	0f 85 4f 01 00 00    	jne    405160 <wakeup_connection+0x170>
    c = (connecttab*) client_data.p;
  405011:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
    {
  405015:	48 89 dd             	mov    %rbx,%rbp
  405018:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    c = (connecttab*) client_data.p;
  40501f:	48 89 f8             	mov    %rdi,%rax
    {
  405022:	48 c1 ed 03          	shr    $0x3,%rbp
  405026:	48 c7 43 08 60 17 42 	movq   $0x421760,0x8(%rbx)
  40502d:	00 
    c = (connecttab*) client_data.p;
  40502e:	48 c1 e8 03          	shr    $0x3,%rax
    {
  405032:	48 c7 43 10 f0 4f 40 	movq   $0x404ff0,0x10(%rbx)
  405039:	00 
  40503a:	c7 85 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbp)
  405041:	f1 f1 f1 
  405044:	c7 85 04 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff8004(%rbp)
  40504b:	f2 f2 f2 
  40504e:	c7 85 08 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8008(%rbp)
  405055:	f3 f3 f3 
    c = (connecttab*) client_data.p;
  405058:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
wakeup_connection( ClientData client_data, struct timeval* nowP )
  40505f:	48 89 73 20          	mov    %rsi,0x20(%rbx)
    c = (connecttab*) client_data.p;
  405063:	0f 85 f2 00 00 00    	jne    40515b <wakeup_connection+0x16b>
    c->wakeup_timer = (Timer*) 0;
  405069:	48 8d 7e 60          	lea    0x60(%rsi),%rdi
  40506d:	48 89 f8             	mov    %rdi,%rax
  405070:	48 c1 e8 03          	shr    $0x3,%rax
  405074:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40507b:	0f 85 ae 00 00 00    	jne    40512f <wakeup_connection+0x13f>
    if ( c->conn_state == CNST_PAUSING )
  405081:	48 89 f0             	mov    %rsi,%rax
    c->wakeup_timer = (Timer*) 0;
  405084:	48 c7 46 60 00 00 00 	movq   $0x0,0x60(%rsi)
  40508b:	00 
    if ( c->conn_state == CNST_PAUSING )
  40508c:	48 c1 e8 03          	shr    $0x3,%rax
  405090:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  405097:	84 c0                	test   %al,%al
  405099:	74 08                	je     4050a3 <wakeup_connection+0xb3>
  40509b:	3c 03                	cmp    $0x3,%al
  40509d:	0f 8e 7f 00 00 00    	jle    405122 <wakeup_connection+0x132>
  4050a3:	83 3e 03             	cmpl   $0x3,(%rsi)
  4050a6:	74 28                	je     4050d0 <wakeup_connection+0xe0>
    {
  4050a8:	49 39 dc             	cmp    %rbx,%r12
  4050ab:	0f 85 83 00 00 00    	jne    405134 <wakeup_connection+0x144>
  4050b1:	48 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbp)
  4050b8:	00 00 00 00 
  4050bc:	c7 85 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbp)
  4050c3:	00 00 00 
    }
  4050c6:	48 83 c4 70          	add    $0x70,%rsp
  4050ca:	5b                   	pop    %rbx
  4050cb:	5d                   	pop    %rbp
  4050cc:	41 5c                	pop    %r12
  4050ce:	c3                   	retq   
  4050cf:	90                   	nop
	fdwatch_add_fd( c->hc->conn_fd, c, FDW_WRITE );
  4050d0:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
	c->conn_state = CNST_SENDING;
  4050d4:	c7 06 02 00 00 00    	movl   $0x2,(%rsi)
	fdwatch_add_fd( c->hc->conn_fd, c, FDW_WRITE );
  4050da:	48 89 f8             	mov    %rdi,%rax
  4050dd:	48 c1 e8 03          	shr    $0x3,%rax
  4050e1:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4050e8:	0f 85 92 00 00 00    	jne    405180 <wakeup_connection+0x190>
  4050ee:	48 8b 46 08          	mov    0x8(%rsi),%rax
  4050f2:	48 8d b8 c0 02 00 00 	lea    0x2c0(%rax),%rdi
  4050f9:	48 89 fa             	mov    %rdi,%rdx
  4050fc:	48 c1 ea 03          	shr    $0x3,%rdx
  405100:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  405107:	84 d2                	test   %dl,%dl
  405109:	74 05                	je     405110 <wakeup_connection+0x120>
  40510b:	80 fa 03             	cmp    $0x3,%dl
  40510e:	7e 1a                	jle    40512a <wakeup_connection+0x13a>
  405110:	8b b8 c0 02 00 00    	mov    0x2c0(%rax),%edi
  405116:	ba 01 00 00 00       	mov    $0x1,%edx
  40511b:	e8 10 55 00 00       	callq  40a630 <fdwatch_add_fd>
    }
  405120:	eb 86                	jmp    4050a8 <wakeup_connection+0xb8>
    if ( c->conn_state == CNST_PAUSING )
  405122:	48 89 f7             	mov    %rsi,%rdi
  405125:	e8 a6 dc ff ff       	callq  402dd0 <__asan_report_load4@plt>
	fdwatch_add_fd( c->hc->conn_fd, c, FDW_WRITE );
  40512a:	e8 a1 dc ff ff       	callq  402dd0 <__asan_report_load4@plt>
    c->wakeup_timer = (Timer*) 0;
  40512f:	e8 6c de ff ff       	callq  402fa0 <__asan_report_store8@plt>
    {
  405134:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
  40513b:	f5 f5 f5 
  40513e:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  405145:	48 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%rbp)
  40514c:	c7 85 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rbp)
  405153:	f5 f5 f5 
  405156:	e9 6b ff ff ff       	jmpq   4050c6 <wakeup_connection+0xd6>
    c = (connecttab*) client_data.p;
  40515b:	e8 f0 e0 ff ff       	callq  403250 <__asan_report_load8@plt>
  405160:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    {
  405165:	bf 60 00 00 00       	mov    $0x60,%edi
  40516a:	e8 41 dc ff ff       	callq  402db0 <__asan_stack_malloc_1@plt>
  40516f:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  405174:	48 85 c0             	test   %rax,%rax
  405177:	48 0f 45 d8          	cmovne %rax,%rbx
  40517b:	e9 91 fe ff ff       	jmpq   405011 <wakeup_connection+0x21>
	fdwatch_add_fd( c->hc->conn_fd, c, FDW_WRITE );
  405180:	e8 cb e0 ff ff       	callq  403250 <__asan_report_load8@plt>
  405185:	90                   	nop
  405186:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40518d:	00 00 00 

0000000000405190 <logstats>:
    {
  405190:	41 55                	push   %r13
  405192:	41 54                	push   %r12
  405194:	55                   	push   %rbp
  405195:	53                   	push   %rbx
  405196:	48 89 fb             	mov    %rdi,%rbx
  405199:	48 83 ec 68          	sub    $0x68,%rsp
  40519d:	8b 05 5d c1 23 00    	mov    0x23c15d(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  4051a3:	48 89 e5             	mov    %rsp,%rbp
  4051a6:	49 89 ed             	mov    %rbp,%r13
  4051a9:	85 c0                	test   %eax,%eax
  4051ab:	0f 85 0a 01 00 00    	jne    4052bb <logstats+0x12b>
  4051b1:	49 89 ec             	mov    %rbp,%r12
  4051b4:	48 c7 45 00 b3 8a b5 	movq   $0x41b58ab3,0x0(%rbp)
  4051bb:	41 
  4051bc:	49 c1 ec 03          	shr    $0x3,%r12
  4051c0:	48 c7 45 08 77 17 42 	movq   $0x421777,0x8(%rbp)
  4051c7:	00 
  4051c8:	48 c7 45 10 90 51 40 	movq   $0x405190,0x10(%rbp)
  4051cf:	00 
  4051d0:	41 c7 84 24 00 80 ff 	movl   $0xf1f1f1f1,0x7fff8000(%r12)
  4051d7:	7f f1 f1 f1 f1 
  4051dc:	41 c7 84 24 04 80 ff 	movl   $0xf2f20000,0x7fff8004(%r12)
  4051e3:	7f 00 00 f2 f2 
  4051e8:	41 c7 84 24 08 80 ff 	movl   $0xf3f3f3f3,0x7fff8008(%r12)
  4051ef:	7f f3 f3 f3 f3 
    if ( nowP == (struct timeval*) 0 )
  4051f4:	48 85 db             	test   %rbx,%rbx
  4051f7:	0f 84 a3 00 00 00    	je     4052a0 <logstats+0x110>
    now = nowP->tv_sec;
  4051fd:	48 89 d8             	mov    %rbx,%rax
  405200:	48 c1 e8 03          	shr    $0x3,%rax
  405204:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40520b:	0f 85 a2 00 00 00    	jne    4052b3 <logstats+0x123>
  405211:	48 8b 03             	mov    (%rbx),%rax
	stats_secs = 1;	/* fudge */
  405214:	b9 01 00 00 00       	mov    $0x1,%ecx
    syslog( LOG_INFO,
  405219:	be a0 f4 41 00       	mov    $0x41f4a0,%esi
  40521e:	bf 06 00 00 00       	mov    $0x6,%edi
    up_secs = now - start_time;
  405223:	48 89 c2             	mov    %rax,%rdx
	stats_secs = 1;	/* fudge */
  405226:	48 89 c3             	mov    %rax,%rbx
    up_secs = now - start_time;
  405229:	48 2b 15 90 e1 23 00 	sub    0x23e190(%rip),%rdx        # 6433c0 <start_time>
	stats_secs = 1;	/* fudge */
  405230:	48 2b 1d 99 e1 23 00 	sub    0x23e199(%rip),%rbx        # 6433d0 <stats_time>
  405237:	48 0f 44 d9          	cmove  %rcx,%rbx
    stats_time = now;
  40523b:	48 89 05 8e e1 23 00 	mov    %rax,0x23e18e(%rip)        # 6433d0 <stats_time>
    syslog( LOG_INFO,
  405242:	31 c0                	xor    %eax,%eax
  405244:	48 89 d9             	mov    %rbx,%rcx
  405247:	e8 f4 d9 ff ff       	callq  402c40 <syslog@plt>
    thttpd_logstats( stats_secs );
  40524c:	48 89 df             	mov    %rbx,%rdi
  40524f:	e8 4c f7 ff ff       	callq  4049a0 <thttpd_logstats>
    httpd_logstats( stats_secs );
  405254:	48 89 df             	mov    %rbx,%rdi
  405257:	e8 f4 55 01 00       	callq  41a850 <httpd_logstats>
    mmc_logstats( stats_secs );
  40525c:	48 89 df             	mov    %rbx,%rdi
  40525f:	e8 4c 6a 01 00       	callq  41bcb0 <mmc_logstats>
    fdwatch_logstats( stats_secs );
  405264:	48 89 df             	mov    %rbx,%rdi
  405267:	e8 e4 56 00 00       	callq  40a950 <fdwatch_logstats>
    tmr_logstats( stats_secs );
  40526c:	48 89 df             	mov    %rbx,%rdi
  40526f:	e8 7c 7a 01 00       	callq  41ccf0 <tmr_logstats>
    {
  405274:	49 39 ed             	cmp    %rbp,%r13
  405277:	75 58                	jne    4052d1 <logstats+0x141>
  405279:	49 c7 84 24 00 80 ff 	movq   $0x0,0x7fff8000(%r12)
  405280:	7f 00 00 00 00 
  405285:	41 c7 84 24 08 80 ff 	movl   $0x0,0x7fff8008(%r12)
  40528c:	7f 00 00 00 00 
    }
  405291:	48 83 c4 68          	add    $0x68,%rsp
  405295:	5b                   	pop    %rbx
  405296:	5d                   	pop    %rbp
  405297:	41 5c                	pop    %r12
  405299:	41 5d                	pop    %r13
  40529b:	c3                   	retq   
  40529c:	0f 1f 40 00          	nopl   0x0(%rax)
	(void) gettimeofday( &tv, (struct timezone*) 0 );
  4052a0:	48 8d 5d 20          	lea    0x20(%rbp),%rbx
  4052a4:	31 f6                	xor    %esi,%esi
  4052a6:	48 89 df             	mov    %rbx,%rdi
  4052a9:	e8 52 e0 ff ff       	callq  403300 <gettimeofday@plt>
	nowP = &tv;
  4052ae:	e9 4a ff ff ff       	jmpq   4051fd <logstats+0x6d>
    now = nowP->tv_sec;
  4052b3:	48 89 df             	mov    %rbx,%rdi
  4052b6:	e8 95 df ff ff       	callq  403250 <__asan_report_load8@plt>
    {
  4052bb:	bf 60 00 00 00       	mov    $0x60,%edi
  4052c0:	e8 eb da ff ff       	callq  402db0 <__asan_stack_malloc_1@plt>
  4052c5:	48 85 c0             	test   %rax,%rax
  4052c8:	48 0f 45 e8          	cmovne %rax,%rbp
  4052cc:	e9 e0 fe ff ff       	jmpq   4051b1 <logstats+0x21>
  4052d1:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
  4052d8:	f5 f5 f5 
  4052db:	48 c7 45 00 0e 36 e0 	movq   $0x45e0360e,0x0(%rbp)
  4052e2:	45 
  4052e3:	49 89 84 24 00 80 ff 	mov    %rax,0x7fff8000(%r12)
  4052ea:	7f 
  4052eb:	41 c7 84 24 08 80 ff 	movl   $0xf5f5f5f5,0x7fff8008(%r12)
  4052f2:	7f f5 f5 f5 f5 
  4052f7:	eb 98                	jmp    405291 <logstats+0x101>
  4052f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000405300 <show_stats>:
    logstats( nowP );
  405300:	48 89 f7             	mov    %rsi,%rdi
  405303:	e9 88 fe ff ff       	jmpq   405190 <logstats>
  405308:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40530f:	00 

0000000000405310 <handle_usr2>:
    {
  405310:	55                   	push   %rbp
  405311:	53                   	push   %rbx
  405312:	48 83 ec 08          	sub    $0x8,%rsp
    const int oerrno = errno;
  405316:	e8 e5 d8 ff ff       	callq  402c00 <__errno_location@plt>
  40531b:	48 89 c3             	mov    %rax,%rbx
  40531e:	48 c1 e8 03          	shr    $0x3,%rax
  405322:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  405329:	48 89 d8             	mov    %rbx,%rax
  40532c:	83 e0 07             	and    $0x7,%eax
  40532f:	83 c0 03             	add    $0x3,%eax
  405332:	38 d0                	cmp    %dl,%al
  405334:	7c 04                	jl     40533a <handle_usr2+0x2a>
  405336:	84 d2                	test   %dl,%dl
  405338:	75 39                	jne    405373 <handle_usr2+0x63>
    logstats( (struct timeval*) 0 );
  40533a:	31 ff                	xor    %edi,%edi
    const int oerrno = errno;
  40533c:	8b 2b                	mov    (%rbx),%ebp
    logstats( (struct timeval*) 0 );
  40533e:	e8 4d fe ff ff       	callq  405190 <logstats>
    errno = oerrno;
  405343:	48 89 d8             	mov    %rbx,%rax
  405346:	48 c1 e8 03          	shr    $0x3,%rax
  40534a:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  405351:	48 89 d8             	mov    %rbx,%rax
  405354:	83 e0 07             	and    $0x7,%eax
  405357:	83 c0 03             	add    $0x3,%eax
  40535a:	38 d0                	cmp    %dl,%al
  40535c:	7c 04                	jl     405362 <handle_usr2+0x52>
  40535e:	84 d2                	test   %dl,%dl
  405360:	75 09                	jne    40536b <handle_usr2+0x5b>
  405362:	89 2b                	mov    %ebp,(%rbx)
    }
  405364:	48 83 c4 08          	add    $0x8,%rsp
  405368:	5b                   	pop    %rbx
  405369:	5d                   	pop    %rbp
  40536a:	c3                   	retq   
    errno = oerrno;
  40536b:	48 89 df             	mov    %rbx,%rdi
  40536e:	e8 7d d8 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    const int oerrno = errno;
  405373:	48 89 df             	mov    %rbx,%rdi
  405376:	e8 55 da ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40537b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000405380 <occasional>:
    {
  405380:	48 83 ec 08          	sub    $0x8,%rsp
    mmc_cleanup( nowP );
  405384:	48 89 f7             	mov    %rsi,%rdi
  405387:	e8 84 66 01 00       	callq  41ba10 <mmc_cleanup>
    tmr_cleanup();
  40538c:	e8 8f 78 01 00       	callq  41cc20 <tmr_cleanup>
    watchdog_flag = 1;		/* let the watchdog know that we are alive */
  405391:	c7 05 85 bf 23 00 01 	movl   $0x1,0x23bf85(%rip)        # 641320 <watchdog_flag>
  405398:	00 00 00 
    }
  40539b:	48 83 c4 08          	add    $0x8,%rsp
  40539f:	c3                   	retq   

00000000004053a0 <handle_alrm>:
    {
  4053a0:	55                   	push   %rbp
  4053a1:	53                   	push   %rbx
  4053a2:	48 83 ec 08          	sub    $0x8,%rsp
    const int oerrno = errno;
  4053a6:	e8 55 d8 ff ff       	callq  402c00 <__errno_location@plt>
  4053ab:	48 89 c3             	mov    %rax,%rbx
  4053ae:	48 c1 e8 03          	shr    $0x3,%rax
  4053b2:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4053b9:	48 89 d8             	mov    %rbx,%rax
  4053bc:	83 e0 07             	and    $0x7,%eax
  4053bf:	83 c0 03             	add    $0x3,%eax
  4053c2:	38 d0                	cmp    %dl,%al
  4053c4:	7c 04                	jl     4053ca <handle_alrm+0x2a>
  4053c6:	84 d2                	test   %dl,%dl
  4053c8:	75 50                	jne    40541a <handle_alrm+0x7a>
    if ( ! watchdog_flag )
  4053ca:	8b 05 50 bf 23 00    	mov    0x23bf50(%rip),%eax        # 641320 <watchdog_flag>
    const int oerrno = errno;
  4053d0:	8b 2b                	mov    (%rbx),%ebp
    if ( ! watchdog_flag )
  4053d2:	85 c0                	test   %eax,%eax
  4053d4:	74 4c                	je     405422 <handle_alrm+0x82>
    watchdog_flag = 0;
  4053d6:	c7 05 40 bf 23 00 00 	movl   $0x0,0x23bf40(%rip)        # 641320 <watchdog_flag>
  4053dd:	00 00 00 
    (void) alarm( OCCASIONAL_TIME * 3 );
  4053e0:	bf 68 01 00 00       	mov    $0x168,%edi
  4053e5:	e8 b6 e0 ff ff       	callq  4034a0 <alarm@plt>
    errno = oerrno;
  4053ea:	48 89 d8             	mov    %rbx,%rax
  4053ed:	48 c1 e8 03          	shr    $0x3,%rax
  4053f1:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4053f8:	48 89 d8             	mov    %rbx,%rax
  4053fb:	83 e0 07             	and    $0x7,%eax
  4053fe:	83 c0 03             	add    $0x3,%eax
  405401:	38 d0                	cmp    %dl,%al
  405403:	7c 04                	jl     405409 <handle_alrm+0x69>
  405405:	84 d2                	test   %dl,%dl
  405407:	75 09                	jne    405412 <handle_alrm+0x72>
  405409:	89 2b                	mov    %ebp,(%rbx)
    }
  40540b:	48 83 c4 08          	add    $0x8,%rsp
  40540f:	5b                   	pop    %rbx
  405410:	5d                   	pop    %rbp
  405411:	c3                   	retq   
    errno = oerrno;
  405412:	48 89 df             	mov    %rbx,%rdi
  405415:	e8 d6 d7 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    const int oerrno = errno;
  40541a:	48 89 df             	mov    %rbx,%rdi
  40541d:	e8 ae d9 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	(void) chdir( "/tmp" );
  405422:	bf 00 f5 41 00       	mov    $0x41f500,%edi
  405427:	e8 04 de ff ff       	callq  403230 <chdir@plt>
	abort();
  40542c:	e8 0f dc ff ff       	callq  403040 <__asan_handle_no_return@plt>
  405431:	e8 8a d9 ff ff       	callq  402dc0 <abort@plt>
  405436:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40543d:	00 00 00 

0000000000405440 <handle_chld>:
    {
  405440:	41 57                	push   %r15
  405442:	41 56                	push   %r14
  405444:	41 55                	push   %r13
  405446:	41 54                	push   %r12
  405448:	55                   	push   %rbp
  405449:	53                   	push   %rbx
  40544a:	48 83 ec 78          	sub    $0x78,%rsp
  40544e:	8b 05 ac be 23 00    	mov    0x23beac(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  405454:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
  405459:	85 c0                	test   %eax,%eax
  40545b:	0f 85 cb 01 00 00    	jne    40562c <handle_chld+0x1ec>
  405461:	48 89 dd             	mov    %rbx,%rbp
  405464:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
  40546b:	4c 8d 63 60          	lea    0x60(%rbx),%r12
  40546f:	48 c1 ed 03          	shr    $0x3,%rbp
  405473:	48 c7 43 08 85 17 42 	movq   $0x421785,0x8(%rbx)
  40547a:	00 
  40547b:	48 c7 43 10 40 54 40 	movq   $0x405440,0x10(%rbx)
  405482:	00 
  405483:	c7 85 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbp)
  40548a:	f1 f1 f1 
  40548d:	c7 85 04 80 ff 7f 04 	movl   $0xf2f2f204,0x7fff8004(%rbp)
  405494:	f2 f2 f2 
  405497:	c7 85 08 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8008(%rbp)
  40549e:	f3 f3 f3 
    const int oerrno = errno;
  4054a1:	e8 5a d7 ff ff       	callq  402c00 <__errno_location@plt>
  4054a6:	49 89 c7             	mov    %rax,%r15
  4054a9:	48 c1 e8 03          	shr    $0x3,%rax
  4054ad:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4054b4:	4c 89 f8             	mov    %r15,%rax
  4054b7:	83 e0 07             	and    $0x7,%eax
  4054ba:	83 c0 03             	add    $0x3,%eax
  4054bd:	38 d0                	cmp    %dl,%al
  4054bf:	7c 08                	jl     4054c9 <handle_chld+0x89>
  4054c1:	84 d2                	test   %dl,%dl
  4054c3:	0f 85 22 01 00 00    	jne    4055eb <handle_chld+0x1ab>
  4054c9:	41 8b 07             	mov    (%r15),%eax
	    if ( errno == EINTR || errno == EAGAIN )
  4054cc:	4d 89 fe             	mov    %r15,%r14
  4054cf:	49 83 ec 40          	sub    $0x40,%r12
	    --hs->cgi_count;
  4054d3:	45 31 ed             	xor    %r13d,%r13d
	    if ( errno == EINTR || errno == EAGAIN )
  4054d6:	49 c1 ee 03          	shr    $0x3,%r14
    const int oerrno = errno;
  4054da:	89 44 24 0c          	mov    %eax,0xc(%rsp)
	    if ( errno == EINTR || errno == EAGAIN )
  4054de:	4c 89 f8             	mov    %r15,%rax
  4054e1:	83 e0 07             	and    $0x7,%eax
  4054e4:	83 c0 03             	add    $0x3,%eax
  4054e7:	88 44 24 0b          	mov    %al,0xb(%rsp)
	pid = waitpid( (pid_t) -1, &status, WNOHANG );
  4054eb:	ba 01 00 00 00       	mov    $0x1,%edx
  4054f0:	4c 89 e6             	mov    %r12,%rsi
  4054f3:	bf ff ff ff ff       	mov    $0xffffffff,%edi
  4054f8:	e8 83 dc ff ff       	callq  403180 <waitpid@plt>
	if ( (int) pid == 0 )		/* none left */
  4054fd:	85 c0                	test   %eax,%eax
  4054ff:	74 7f                	je     405580 <handle_chld+0x140>
	if ( (int) pid < 0 )
  405501:	78 4d                	js     405550 <handle_chld+0x110>
	if ( hs != (httpd_server*) 0 )
  405503:	48 8b 15 16 bf 23 00 	mov    0x23bf16(%rip),%rdx        # 641420 <hs>
  40550a:	48 85 d2             	test   %rdx,%rdx
  40550d:	74 dc                	je     4054eb <handle_chld+0xab>
	    --hs->cgi_count;
  40550f:	48 8d 7a 24          	lea    0x24(%rdx),%rdi
  405513:	48 89 f8             	mov    %rdi,%rax
  405516:	48 c1 e8 03          	shr    $0x3,%rax
  40551a:	0f b6 b0 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%esi
  405521:	48 89 f8             	mov    %rdi,%rax
  405524:	83 e0 07             	and    $0x7,%eax
  405527:	83 c0 03             	add    $0x3,%eax
  40552a:	40 38 f0             	cmp    %sil,%al
  40552d:	7c 09                	jl     405538 <handle_chld+0xf8>
  40552f:	40 84 f6             	test   %sil,%sil
  405532:	0f 85 e7 00 00 00    	jne    40561f <handle_chld+0x1df>
  405538:	8b 42 24             	mov    0x24(%rdx),%eax
  40553b:	83 e8 01             	sub    $0x1,%eax
  40553e:	41 0f 48 c5          	cmovs  %r13d,%eax
  405542:	89 42 24             	mov    %eax,0x24(%rdx)
  405545:	eb a4                	jmp    4054eb <handle_chld+0xab>
  405547:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40554e:	00 00 
	    if ( errno == EINTR || errno == EAGAIN )
  405550:	41 0f b6 86 00 80 ff 	movzbl 0x7fff8000(%r14),%eax
  405557:	7f 
  405558:	38 44 24 0b          	cmp    %al,0xb(%rsp)
  40555c:	7c 08                	jl     405566 <handle_chld+0x126>
  40555e:	84 c0                	test   %al,%al
  405560:	0f 85 be 00 00 00    	jne    405624 <handle_chld+0x1e4>
  405566:	41 8b 07             	mov    (%r15),%eax
  405569:	83 f8 04             	cmp    $0x4,%eax
  40556c:	0f 84 79 ff ff ff    	je     4054eb <handle_chld+0xab>
  405572:	83 f8 0b             	cmp    $0xb,%eax
  405575:	0f 84 70 ff ff ff    	je     4054eb <handle_chld+0xab>
	    if ( errno != ECHILD )
  40557b:	83 f8 0a             	cmp    $0xa,%eax
  40557e:	75 58                	jne    4055d8 <handle_chld+0x198>
    errno = oerrno;
  405580:	4c 89 f8             	mov    %r15,%rax
  405583:	48 c1 e8 03          	shr    $0x3,%rax
  405587:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  40558e:	4c 89 f8             	mov    %r15,%rax
  405591:	83 e0 07             	and    $0x7,%eax
  405594:	83 c0 03             	add    $0x3,%eax
  405597:	38 d0                	cmp    %dl,%al
  405599:	7c 04                	jl     40559f <handle_chld+0x15f>
  40559b:	84 d2                	test   %dl,%dl
  40559d:	75 54                	jne    4055f3 <handle_chld+0x1b3>
  40559f:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  4055a3:	41 89 07             	mov    %eax,(%r15)
    {
  4055a6:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  4055ab:	48 39 d8             	cmp    %rbx,%rax
  4055ae:	75 4b                	jne    4055fb <handle_chld+0x1bb>
  4055b0:	48 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbp)
  4055b7:	00 00 00 00 
  4055bb:	c7 85 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbp)
  4055c2:	00 00 00 
    }
  4055c5:	48 83 c4 78          	add    $0x78,%rsp
  4055c9:	5b                   	pop    %rbx
  4055ca:	5d                   	pop    %rbp
  4055cb:	41 5c                	pop    %r12
  4055cd:	41 5d                	pop    %r13
  4055cf:	41 5e                	pop    %r14
  4055d1:	41 5f                	pop    %r15
  4055d3:	c3                   	retq   
  4055d4:	0f 1f 40 00          	nopl   0x0(%rax)
		syslog( LOG_ERR, "child wait - %m" );
  4055d8:	be 40 f5 41 00       	mov    $0x41f540,%esi
  4055dd:	bf 03 00 00 00       	mov    $0x3,%edi
  4055e2:	31 c0                	xor    %eax,%eax
  4055e4:	e8 57 d6 ff ff       	callq  402c40 <syslog@plt>
  4055e9:	eb 95                	jmp    405580 <handle_chld+0x140>
    const int oerrno = errno;
  4055eb:	4c 89 ff             	mov    %r15,%rdi
  4055ee:	e8 dd d7 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    errno = oerrno;
  4055f3:	4c 89 ff             	mov    %r15,%rdi
  4055f6:	e8 f5 d5 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    {
  4055fb:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
  405602:	f5 f5 f5 
  405605:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  40560c:	48 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%rbp)
  405613:	c7 85 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rbp)
  40561a:	f5 f5 f5 
  40561d:	eb a6                	jmp    4055c5 <handle_chld+0x185>
	    --hs->cgi_count;
  40561f:	e8 ac d7 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    if ( errno == EINTR || errno == EAGAIN )
  405624:	4c 89 ff             	mov    %r15,%rdi
  405627:	e8 a4 d7 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    {
  40562c:	bf 60 00 00 00       	mov    $0x60,%edi
  405631:	e8 7a d7 ff ff       	callq  402db0 <__asan_stack_malloc_1@plt>
  405636:	48 85 c0             	test   %rax,%rax
  405639:	48 0f 45 d8          	cmovne %rax,%rbx
  40563d:	e9 1f fe ff ff       	jmpq   405461 <handle_chld+0x21>
  405642:	0f 1f 40 00          	nopl   0x0(%rax)
  405646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40564d:	00 00 00 

0000000000405650 <e_strdup>:
    {
  405650:	48 83 ec 08          	sub    $0x8,%rsp
    newstr = strdup( oldstr );
  405654:	e8 57 d6 ff ff       	callq  402cb0 <strdup@plt>
    if ( newstr == (char*) 0 )
  405659:	48 85 c0             	test   %rax,%rax
  40565c:	74 05                	je     405663 <e_strdup+0x13>
    }
  40565e:	48 83 c4 08          	add    $0x8,%rsp
  405662:	c3                   	retq   
	syslog( LOG_CRIT, "out of memory copying a string" );
  405663:	be 80 f5 41 00       	mov    $0x41f580,%esi
  405668:	bf 02 00 00 00       	mov    $0x2,%edi
  40566d:	e8 ce d5 ff ff       	callq  402c40 <syslog@plt>
	(void) fprintf( stderr, "%s: out of memory copying a string\n", argv0 );
  405672:	b8 f0 12 64 00       	mov    $0x6412f0,%eax
  405677:	48 8b 15 62 c5 23 00 	mov    0x23c562(%rip),%rdx        # 641be0 <argv0>
  40567e:	48 c1 e8 03          	shr    $0x3,%rax
  405682:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  405689:	75 22                	jne    4056ad <e_strdup+0x5d>
  40568b:	48 8b 3d 5e bc 23 00 	mov    0x23bc5e(%rip),%rdi        # 6412f0 <stderr@@GLIBC_2.2.5>
  405692:	be c0 f5 41 00       	mov    $0x41f5c0,%esi
  405697:	31 c0                	xor    %eax,%eax
  405699:	e8 92 d6 ff ff       	callq  402d30 <fprintf@plt>
	exit( 1 );
  40569e:	e8 9d d9 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  4056a3:	bf 01 00 00 00       	mov    $0x1,%edi
  4056a8:	e8 33 da ff ff       	callq  4030e0 <exit@plt>
	(void) fprintf( stderr, "%s: out of memory copying a string\n", argv0 );
  4056ad:	bf f0 12 64 00       	mov    $0x6412f0,%edi
  4056b2:	e8 99 db ff ff       	callq  403250 <__asan_report_load8@plt>
  4056b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4056be:	00 00 

00000000004056c0 <read_config>:
    {
  4056c0:	41 57                	push   %r15
  4056c2:	41 56                	push   %r14
  4056c4:	41 55                	push   %r13
  4056c6:	41 54                	push   %r12
  4056c8:	55                   	push   %rbp
  4056c9:	53                   	push   %rbx
  4056ca:	48 89 fb             	mov    %rdi,%rbx
  4056cd:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
  4056d4:	8b 05 26 bc 23 00    	mov    0x23bc26(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  4056da:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
  4056df:	85 c0                	test   %eax,%eax
  4056e1:	0f 85 5d 08 00 00    	jne    405f44 <read_config+0x884>
  4056e7:	4d 89 ef             	mov    %r13,%r15
    fp = fopen( filename, "r" );
  4056ea:	be 20 f6 41 00       	mov    $0x41f620,%esi
  4056ef:	48 89 df             	mov    %rbx,%rdi
    {
  4056f2:	49 c7 45 00 b3 8a b5 	movq   $0x41b58ab3,0x0(%r13)
  4056f9:	41 
  4056fa:	49 c1 ef 03          	shr    $0x3,%r15
  4056fe:	49 c7 45 08 96 17 42 	movq   $0x421796,0x8(%r13)
  405705:	00 
  405706:	49 c7 45 10 c0 56 40 	movq   $0x4056c0,0x10(%r13)
  40570d:	00 
  40570e:	41 c7 87 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r15)
  405715:	f1 f1 f1 f1 
  405719:	41 c7 87 10 80 ff 7f 	movl   $0xf2f2f204,0x7fff8010(%r15)
  405720:	04 f2 f2 f2 
  405724:	41 c7 87 14 80 ff 7f 	movl   $0xf3f3f3f3,0x7fff8014(%r15)
  40572b:	f3 f3 f3 f3 
    fp = fopen( filename, "r" );
  40572f:	e8 cc d7 ff ff       	callq  402f00 <fopen@plt>
  405734:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    if ( fp == (FILE*) 0 )
  405739:	48 85 c0             	test   %rax,%rax
  40573c:	0f 84 eb 07 00 00    	je     405f2d <read_config+0x86d>
	    while ( *cp2 == ' ' || *cp2 == '\t' || *cp2 == '\n' || *cp2 == '\r' )
  405742:	48 bd 00 26 00 00 01 	movabs $0x100002600,%rbp
  405749:	00 00 00 
  40574c:	49 8d 45 20          	lea    0x20(%r13),%rax
  405750:	48 89 04 24          	mov    %rax,(%rsp)
    while ( fgets( line, 1000, fp ) != (char*) 0 )
  405754:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  405759:	48 8b 3c 24          	mov    (%rsp),%rdi
  40575d:	be e8 03 00 00       	mov    $0x3e8,%esi
  405762:	e8 39 db ff ff       	callq  4032a0 <fgets@plt>
  405767:	48 85 c0             	test   %rax,%rax
  40576a:	0f 84 22 05 00 00    	je     405c92 <read_config+0x5d2>
	if ( ( cp = strchr( line, '#' ) ) != (char*) 0 )
  405770:	48 8b 3c 24          	mov    (%rsp),%rdi
  405774:	be 23 00 00 00       	mov    $0x23,%esi
  405779:	e8 42 dc ff ff       	callq  4033c0 <strchr@plt>
  40577e:	48 85 c0             	test   %rax,%rax
  405781:	74 23                	je     4057a6 <read_config+0xe6>
	    *cp = '\0';
  405783:	48 89 c2             	mov    %rax,%rdx
  405786:	48 89 c1             	mov    %rax,%rcx
  405789:	48 c1 ea 03          	shr    $0x3,%rdx
  40578d:	83 e1 07             	and    $0x7,%ecx
  405790:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  405797:	38 ca                	cmp    %cl,%dl
  405799:	7f 08                	jg     4057a3 <read_config+0xe3>
  40579b:	84 d2                	test   %dl,%dl
  40579d:	0f 85 82 07 00 00    	jne    405f25 <read_config+0x865>
  4057a3:	c6 00 00             	movb   $0x0,(%rax)
	cp += strspn( cp, " \t\n\r" );
  4057a6:	48 8b 1c 24          	mov    (%rsp),%rbx
  4057aa:	be 60 f6 41 00       	mov    $0x41f660,%esi
  4057af:	48 89 df             	mov    %rbx,%rdi
  4057b2:	e8 29 dd ff ff       	callq  4034e0 <strspn@plt>
  4057b7:	48 8d 1c 03          	lea    (%rbx,%rax,1),%rbx
	while ( *cp != '\0' )
  4057bb:	48 89 d8             	mov    %rbx,%rax
  4057be:	48 89 da             	mov    %rbx,%rdx
  4057c1:	48 c1 e8 03          	shr    $0x3,%rax
  4057c5:	83 e2 07             	and    $0x7,%edx
  4057c8:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4057cf:	38 d0                	cmp    %dl,%al
  4057d1:	7f 0d                	jg     4057e0 <read_config+0x120>
  4057d3:	84 c0                	test   %al,%al
  4057d5:	0f 85 42 07 00 00    	jne    405f1d <read_config+0x85d>
  4057db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4057e0:	80 3b 00             	cmpb   $0x0,(%rbx)
  4057e3:	0f 84 6b ff ff ff    	je     405754 <read_config+0x94>
	    cp2 = cp + strcspn( cp, " \t\n\r" );
  4057e9:	be 60 f6 41 00       	mov    $0x41f660,%esi
  4057ee:	48 89 df             	mov    %rbx,%rdi
  4057f1:	e8 0a d9 ff ff       	callq  403100 <strcspn@plt>
  4057f6:	4c 8d 34 03          	lea    (%rbx,%rax,1),%r14
	    while ( *cp2 == ' ' || *cp2 == '\t' || *cp2 == '\n' || *cp2 == '\r' )
  4057fa:	4c 89 f0             	mov    %r14,%rax
  4057fd:	4c 89 f1             	mov    %r14,%rcx
  405800:	48 c1 e8 03          	shr    $0x3,%rax
  405804:	83 e1 07             	and    $0x7,%ecx
  405807:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40580e:	38 c8                	cmp    %cl,%al
  405810:	7f 08                	jg     40581a <read_config+0x15a>
  405812:	84 c0                	test   %al,%al
  405814:	0f 85 6c 05 00 00    	jne    405d86 <read_config+0x6c6>
  40581a:	41 0f b6 06          	movzbl (%r14),%eax
  40581e:	3c 20                	cmp    $0x20,%al
  405820:	77 63                	ja     405885 <read_config+0x1c5>
  405822:	48 0f a3 c5          	bt     %rax,%rbp
  405826:	73 5d                	jae    405885 <read_config+0x1c5>
  405828:	4c 89 f7             	mov    %r14,%rdi
  40582b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
		*cp2++ = '\0';
  405830:	48 89 f8             	mov    %rdi,%rax
  405833:	48 89 f9             	mov    %rdi,%rcx
  405836:	49 83 c6 01          	add    $0x1,%r14
  40583a:	48 c1 e8 03          	shr    $0x3,%rax
  40583e:	83 e1 07             	and    $0x7,%ecx
  405841:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  405848:	38 c8                	cmp    %cl,%al
  40584a:	7f 08                	jg     405854 <read_config+0x194>
  40584c:	84 c0                	test   %al,%al
  40584e:	0f 85 1a 04 00 00    	jne    405c6e <read_config+0x5ae>
	    while ( *cp2 == ' ' || *cp2 == '\t' || *cp2 == '\n' || *cp2 == '\r' )
  405854:	4c 89 f0             	mov    %r14,%rax
		*cp2++ = '\0';
  405857:	41 c6 46 ff 00       	movb   $0x0,-0x1(%r14)
	    while ( *cp2 == ' ' || *cp2 == '\t' || *cp2 == '\n' || *cp2 == '\r' )
  40585c:	4c 89 f1             	mov    %r14,%rcx
  40585f:	48 c1 e8 03          	shr    $0x3,%rax
  405863:	83 e1 07             	and    $0x7,%ecx
  405866:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40586d:	38 c8                	cmp    %cl,%al
  40586f:	7f 08                	jg     405879 <read_config+0x1b9>
  405871:	84 c0                	test   %al,%al
  405873:	0f 85 ed 03 00 00    	jne    405c66 <read_config+0x5a6>
  405879:	41 0f b6 06          	movzbl (%r14),%eax
  40587d:	3c 20                	cmp    $0x20,%al
  40587f:	0f 86 93 02 00 00    	jbe    405b18 <read_config+0x458>
	    value = strchr( name, '=' );
  405885:	be 3d 00 00 00       	mov    $0x3d,%esi
  40588a:	48 89 df             	mov    %rbx,%rdi
  40588d:	e8 2e db ff ff       	callq  4033c0 <strchr@plt>
	    if ( value != (char*) 0 )
  405892:	48 85 c0             	test   %rax,%rax
  405895:	0f 84 ed 02 00 00    	je     405b88 <read_config+0x4c8>
		*value++ = '\0';
  40589b:	48 89 c1             	mov    %rax,%rcx
  40589e:	48 89 c6             	mov    %rax,%rsi
  4058a1:	4c 8d 60 01          	lea    0x1(%rax),%r12
  4058a5:	48 c1 e9 03          	shr    $0x3,%rcx
  4058a9:	83 e6 07             	and    $0x7,%esi
  4058ac:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  4058b3:	40 38 f1             	cmp    %sil,%cl
  4058b6:	7f 08                	jg     4058c0 <read_config+0x200>
  4058b8:	84 c9                	test   %cl,%cl
  4058ba:	0f 85 ce 04 00 00    	jne    405d8e <read_config+0x6ce>
  4058c0:	c6 00 00             	movb   $0x0,(%rax)
	    if ( strcasecmp( name, "debug" ) == 0 )
  4058c3:	be a0 f6 41 00       	mov    $0x41f6a0,%esi
  4058c8:	48 89 df             	mov    %rbx,%rdi
  4058cb:	e8 c0 d7 ff ff       	callq  403090 <strcasecmp@plt>
  4058d0:	85 c0                	test   %eax,%eax
  4058d2:	0f 84 58 02 00 00    	je     405b30 <read_config+0x470>
	    else if ( strcasecmp( name, "port" ) == 0 )
  4058d8:	be e0 f6 41 00       	mov    $0x41f6e0,%esi
  4058dd:	48 89 df             	mov    %rbx,%rdi
  4058e0:	e8 ab d7 ff ff       	callq  403090 <strcasecmp@plt>
  4058e5:	85 c0                	test   %eax,%eax
  4058e7:	0f 84 a3 02 00 00    	je     405b90 <read_config+0x4d0>
	    else if ( strcasecmp( name, "dir" ) == 0 )
  4058ed:	be 20 f7 41 00       	mov    $0x41f720,%esi
  4058f2:	48 89 df             	mov    %rbx,%rdi
  4058f5:	e8 96 d7 ff ff       	callq  403090 <strcasecmp@plt>
  4058fa:	85 c0                	test   %eax,%eax
  4058fc:	0f 84 aa 02 00 00    	je     405bac <read_config+0x4ec>
	    else if ( strcasecmp( name, "chroot" ) == 0 )
  405902:	be 60 f7 41 00       	mov    $0x41f760,%esi
  405907:	48 89 df             	mov    %rbx,%rdi
  40590a:	e8 81 d7 ff ff       	callq  403090 <strcasecmp@plt>
  40590f:	85 c0                	test   %eax,%eax
  405911:	0f 84 b4 02 00 00    	je     405bcb <read_config+0x50b>
	    else if ( strcasecmp( name, "nochroot" ) == 0 )
  405917:	be a0 f7 41 00       	mov    $0x41f7a0,%esi
  40591c:	48 89 df             	mov    %rbx,%rdi
  40591f:	e8 6c d7 ff ff       	callq  403090 <strcasecmp@plt>
  405924:	85 c0                	test   %eax,%eax
  405926:	0f 84 c3 02 00 00    	je     405bef <read_config+0x52f>
	    else if ( strcasecmp( name, "data_dir" ) == 0 )
  40592c:	be e0 f7 41 00       	mov    $0x41f7e0,%esi
  405931:	48 89 df             	mov    %rbx,%rdi
  405934:	e8 57 d7 ff ff       	callq  403090 <strcasecmp@plt>
  405939:	85 c0                	test   %eax,%eax
  40593b:	0f 84 d2 02 00 00    	je     405c13 <read_config+0x553>
	    else if ( strcasecmp( name, "symlink" ) == 0 )
  405941:	be 20 f8 41 00       	mov    $0x41f820,%esi
  405946:	48 89 df             	mov    %rbx,%rdi
  405949:	e8 42 d7 ff ff       	callq  403090 <strcasecmp@plt>
  40594e:	85 c0                	test   %eax,%eax
  405950:	0f 84 dc 02 00 00    	je     405c32 <read_config+0x572>
	    else if ( strcasecmp( name, "nosymlink" ) == 0 )
  405956:	be 60 f8 41 00       	mov    $0x41f860,%esi
  40595b:	48 89 df             	mov    %rbx,%rdi
  40595e:	e8 2d d7 ff ff       	callq  403090 <strcasecmp@plt>
  405963:	85 c0                	test   %eax,%eax
  405965:	0f 84 e1 02 00 00    	je     405c4c <read_config+0x58c>
	    else if ( strcasecmp( name, "symlinks" ) == 0 )
  40596b:	be a0 f8 41 00       	mov    $0x41f8a0,%esi
  405970:	48 89 df             	mov    %rbx,%rdi
  405973:	e8 18 d7 ff ff       	callq  403090 <strcasecmp@plt>
  405978:	85 c0                	test   %eax,%eax
  40597a:	0f 84 b2 02 00 00    	je     405c32 <read_config+0x572>
	    else if ( strcasecmp( name, "nosymlinks" ) == 0 )
  405980:	be e0 f8 41 00       	mov    $0x41f8e0,%esi
  405985:	48 89 df             	mov    %rbx,%rdi
  405988:	e8 03 d7 ff ff       	callq  403090 <strcasecmp@plt>
  40598d:	85 c0                	test   %eax,%eax
  40598f:	0f 84 b7 02 00 00    	je     405c4c <read_config+0x58c>
	    else if ( strcasecmp( name, "user" ) == 0 )
  405995:	be 20 f9 41 00       	mov    $0x41f920,%esi
  40599a:	48 89 df             	mov    %rbx,%rdi
  40599d:	e8 ee d6 ff ff       	callq  403090 <strcasecmp@plt>
  4059a2:	85 c0                	test   %eax,%eax
  4059a4:	0f 84 c9 02 00 00    	je     405c73 <read_config+0x5b3>
	    else if ( strcasecmp( name, "cgipat" ) == 0 )
  4059aa:	be 60 f9 41 00       	mov    $0x41f960,%esi
  4059af:	48 89 df             	mov    %rbx,%rdi
  4059b2:	e8 d9 d6 ff ff       	callq  403090 <strcasecmp@plt>
  4059b7:	85 c0                	test   %eax,%eax
  4059b9:	0f 84 13 03 00 00    	je     405cd2 <read_config+0x612>
	    else if ( strcasecmp( name, "cgilimit" ) == 0 )
  4059bf:	be a0 f9 41 00       	mov    $0x41f9a0,%esi
  4059c4:	48 89 df             	mov    %rbx,%rdi
  4059c7:	e8 c4 d6 ff ff       	callq  403090 <strcasecmp@plt>
  4059cc:	85 c0                	test   %eax,%eax
  4059ce:	0f 84 3c 03 00 00    	je     405d10 <read_config+0x650>
	    else if ( strcasecmp( name, "urlpat" ) == 0 )
  4059d4:	be e0 f9 41 00       	mov    $0x41f9e0,%esi
  4059d9:	48 89 df             	mov    %rbx,%rdi
  4059dc:	e8 af d6 ff ff       	callq  403090 <strcasecmp@plt>
  4059e1:	85 c0                	test   %eax,%eax
  4059e3:	0f 84 08 03 00 00    	je     405cf1 <read_config+0x631>
	    else if ( strcasecmp( name, "noemptyreferers" ) == 0 )
  4059e9:	be 20 fa 41 00       	mov    $0x41fa20,%esi
  4059ee:	48 89 df             	mov    %rbx,%rdi
  4059f1:	e8 9a d6 ff ff       	callq  403090 <strcasecmp@plt>
  4059f6:	85 c0                	test   %eax,%eax
  4059f8:	0f 84 4f 03 00 00    	je     405d4d <read_config+0x68d>
	    else if ( strcasecmp( name, "localpat" ) == 0 )
  4059fe:	be 60 fa 41 00       	mov    $0x41fa60,%esi
  405a03:	48 89 df             	mov    %rbx,%rdi
  405a06:	e8 85 d6 ff ff       	callq  403090 <strcasecmp@plt>
  405a0b:	85 c0                	test   %eax,%eax
  405a0d:	0f 84 1b 03 00 00    	je     405d2e <read_config+0x66e>
	    else if ( strcasecmp( name, "throttles" ) == 0 )
  405a13:	be a0 fa 41 00       	mov    $0x41faa0,%esi
  405a18:	48 89 df             	mov    %rbx,%rdi
  405a1b:	e8 70 d6 ff ff       	callq  403090 <strcasecmp@plt>
  405a20:	85 c0                	test   %eax,%eax
  405a22:	0f 84 3f 03 00 00    	je     405d67 <read_config+0x6a7>
	    else if ( strcasecmp( name, "host" ) == 0 )
  405a28:	be e0 fa 41 00       	mov    $0x41fae0,%esi
  405a2d:	48 89 df             	mov    %rbx,%rdi
  405a30:	e8 5b d6 ff ff       	callq  403090 <strcasecmp@plt>
  405a35:	85 c0                	test   %eax,%eax
  405a37:	0f 84 78 03 00 00    	je     405db5 <read_config+0x6f5>
	    else if ( strcasecmp( name, "logfile" ) == 0 )
  405a3d:	be 20 fb 41 00       	mov    $0x41fb20,%esi
  405a42:	48 89 df             	mov    %rbx,%rdi
  405a45:	e8 46 d6 ff ff       	callq  403090 <strcasecmp@plt>
  405a4a:	85 c0                	test   %eax,%eax
  405a4c:	0f 84 44 03 00 00    	je     405d96 <read_config+0x6d6>
	    else if ( strcasecmp( name, "vhost" ) == 0 )
  405a52:	be 60 fb 41 00       	mov    $0x41fb60,%esi
  405a57:	48 89 df             	mov    %rbx,%rdi
  405a5a:	e8 31 d6 ff ff       	callq  403090 <strcasecmp@plt>
  405a5f:	85 c0                	test   %eax,%eax
  405a61:	0f 84 9c 04 00 00    	je     405f03 <read_config+0x843>
	    else if ( strcasecmp( name, "novhost" ) == 0 )
  405a67:	be a0 fb 41 00       	mov    $0x41fba0,%esi
  405a6c:	48 89 df             	mov    %rbx,%rdi
  405a6f:	e8 1c d6 ff ff       	callq  403090 <strcasecmp@plt>
  405a74:	85 c0                	test   %eax,%eax
  405a76:	0f 84 6d 04 00 00    	je     405ee9 <read_config+0x829>
	    else if ( strcasecmp( name, "globalpasswd" ) == 0 )
  405a7c:	be e0 fb 41 00       	mov    $0x41fbe0,%esi
  405a81:	48 89 df             	mov    %rbx,%rdi
  405a84:	e8 07 d6 ff ff       	callq  403090 <strcasecmp@plt>
  405a89:	85 c0                	test   %eax,%eax
  405a8b:	0f 84 77 03 00 00    	je     405e08 <read_config+0x748>
	    else if ( strcasecmp( name, "noglobalpasswd" ) == 0 )
  405a91:	be 20 fc 41 00       	mov    $0x41fc20,%esi
  405a96:	48 89 df             	mov    %rbx,%rdi
  405a99:	e8 f2 d5 ff ff       	callq  403090 <strcasecmp@plt>
  405a9e:	85 c0                	test   %eax,%eax
  405aa0:	0f 84 29 04 00 00    	je     405ecf <read_config+0x80f>
	    else if ( strcasecmp( name, "pidfile" ) == 0 )
  405aa6:	be 60 fc 41 00       	mov    $0x41fc60,%esi
  405aab:	48 89 df             	mov    %rbx,%rdi
  405aae:	e8 dd d5 ff ff       	callq  403090 <strcasecmp@plt>
  405ab3:	85 c0                	test   %eax,%eax
  405ab5:	0f 84 f5 03 00 00    	je     405eb0 <read_config+0x7f0>
	    else if ( strcasecmp( name, "charset" ) == 0 )
  405abb:	be a0 fc 41 00       	mov    $0x41fca0,%esi
  405ac0:	48 89 df             	mov    %rbx,%rdi
  405ac3:	e8 c8 d5 ff ff       	callq  403090 <strcasecmp@plt>
  405ac8:	85 c0                	test   %eax,%eax
  405aca:	0f 84 af 03 00 00    	je     405e7f <read_config+0x7bf>
	    else if ( strcasecmp( name, "p3p" ) == 0 )
  405ad0:	be e0 fc 41 00       	mov    $0x41fce0,%esi
  405ad5:	48 89 df             	mov    %rbx,%rdi
  405ad8:	e8 b3 d5 ff ff       	callq  403090 <strcasecmp@plt>
  405add:	85 c0                	test   %eax,%eax
  405adf:	0f 84 7b 03 00 00    	je     405e60 <read_config+0x7a0>
	    else if ( strcasecmp( name, "max_age" ) == 0 )
  405ae5:	be 20 fd 41 00       	mov    $0x41fd20,%esi
  405aea:	48 89 df             	mov    %rbx,%rdi
  405aed:	e8 9e d5 ff ff       	callq  403090 <strcasecmp@plt>
  405af2:	85 c0                	test   %eax,%eax
  405af4:	0f 85 28 03 00 00    	jne    405e22 <read_config+0x762>
		value_required( name, value );
  405afa:	4c 89 e6             	mov    %r12,%rsi
  405afd:	48 89 df             	mov    %rbx,%rdi
  405b00:	e8 4b f4 ff ff       	callq  404f50 <value_required>
		max_age = atoi( value );
  405b05:	4c 89 e7             	mov    %r12,%rdi
  405b08:	e8 53 d2 ff ff       	callq  402d60 <atoi@plt>
  405b0d:	89 05 4d bb 23 00    	mov    %eax,0x23bb4d(%rip)        # 641660 <max_age>
  405b13:	eb 30                	jmp    405b45 <read_config+0x485>
  405b15:	0f 1f 00             	nopl   (%rax)
	    while ( *cp2 == ' ' || *cp2 == '\t' || *cp2 == '\n' || *cp2 == '\r' )
  405b18:	48 0f a3 c5          	bt     %rax,%rbp
  405b1c:	4c 89 f7             	mov    %r14,%rdi
  405b1f:	0f 82 0b fd ff ff    	jb     405830 <read_config+0x170>
  405b25:	e9 5b fd ff ff       	jmpq   405885 <read_config+0x1c5>
  405b2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
		no_value_required( name, value );
  405b30:	4c 89 e6             	mov    %r12,%rsi
  405b33:	48 89 df             	mov    %rbx,%rdi
  405b36:	e8 c5 f3 ff ff       	callq  404f00 <no_value_required>
		debug = 1;
  405b3b:	c7 05 5b c0 23 00 01 	movl   $0x1,0x23c05b(%rip)        # 641ba0 <debug>
  405b42:	00 00 00 
	    cp += strspn( cp, " \t\n\r" );
  405b45:	be 60 f6 41 00       	mov    $0x41f660,%esi
  405b4a:	4c 89 f7             	mov    %r14,%rdi
  405b4d:	e8 8e d9 ff ff       	callq  4034e0 <strspn@plt>
  405b52:	49 8d 1c 06          	lea    (%r14,%rax,1),%rbx
	while ( *cp != '\0' )
  405b56:	48 89 d8             	mov    %rbx,%rax
  405b59:	48 89 da             	mov    %rbx,%rdx
  405b5c:	48 c1 e8 03          	shr    $0x3,%rax
  405b60:	83 e2 07             	and    $0x7,%edx
  405b63:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  405b6a:	38 d0                	cmp    %dl,%al
  405b6c:	0f 8f 6e fc ff ff    	jg     4057e0 <read_config+0x120>
  405b72:	84 c0                	test   %al,%al
  405b74:	0f 84 66 fc ff ff    	je     4057e0 <read_config+0x120>
  405b7a:	48 89 df             	mov    %rbx,%rdi
  405b7d:	e8 8e d5 ff ff       	callq  403110 <__asan_report_load1@plt>
  405b82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  405b88:	45 31 e4             	xor    %r12d,%r12d
  405b8b:	e9 33 fd ff ff       	jmpq   4058c3 <read_config+0x203>
		value_required( name, value );
  405b90:	4c 89 e6             	mov    %r12,%rsi
  405b93:	48 89 df             	mov    %rbx,%rdi
  405b96:	e8 b5 f3 ff ff       	callq  404f50 <value_required>
		port = (unsigned short) atoi( value );
  405b9b:	4c 89 e7             	mov    %r12,%rdi
  405b9e:	e8 bd d1 ff ff       	callq  402d60 <atoi@plt>
  405ba3:	66 89 05 b6 bf 23 00 	mov    %ax,0x23bfb6(%rip)        # 641b60 <port>
  405baa:	eb 99                	jmp    405b45 <read_config+0x485>
		value_required( name, value );
  405bac:	4c 89 e6             	mov    %r12,%rsi
  405baf:	48 89 df             	mov    %rbx,%rdi
  405bb2:	e8 99 f3 ff ff       	callq  404f50 <value_required>
		dir = e_strdup( value );
  405bb7:	4c 89 e7             	mov    %r12,%rdi
  405bba:	e8 91 fa ff ff       	callq  405650 <e_strdup>
  405bbf:	48 89 05 5a bf 23 00 	mov    %rax,0x23bf5a(%rip)        # 641b20 <dir>
  405bc6:	e9 7a ff ff ff       	jmpq   405b45 <read_config+0x485>
		no_value_required( name, value );
  405bcb:	4c 89 e6             	mov    %r12,%rsi
  405bce:	48 89 df             	mov    %rbx,%rdi
  405bd1:	e8 2a f3 ff ff       	callq  404f00 <no_value_required>
		do_chroot = 1;
  405bd6:	c7 05 c0 be 23 00 01 	movl   $0x1,0x23bec0(%rip)        # 641aa0 <do_chroot>
  405bdd:	00 00 00 
		no_symlink_check = 1;
  405be0:	c7 05 36 be 23 00 01 	movl   $0x1,0x23be36(%rip)        # 641a20 <no_symlink_check>
  405be7:	00 00 00 
  405bea:	e9 56 ff ff ff       	jmpq   405b45 <read_config+0x485>
		no_value_required( name, value );
  405bef:	4c 89 e6             	mov    %r12,%rsi
  405bf2:	48 89 df             	mov    %rbx,%rdi
  405bf5:	e8 06 f3 ff ff       	callq  404f00 <no_value_required>
		do_chroot = 0;
  405bfa:	c7 05 9c be 23 00 00 	movl   $0x0,0x23be9c(%rip)        # 641aa0 <do_chroot>
  405c01:	00 00 00 
		no_symlink_check = 0;
  405c04:	c7 05 12 be 23 00 00 	movl   $0x0,0x23be12(%rip)        # 641a20 <no_symlink_check>
  405c0b:	00 00 00 
  405c0e:	e9 32 ff ff ff       	jmpq   405b45 <read_config+0x485>
		value_required( name, value );
  405c13:	4c 89 e6             	mov    %r12,%rsi
  405c16:	48 89 df             	mov    %rbx,%rdi
  405c19:	e8 32 f3 ff ff       	callq  404f50 <value_required>
		data_dir = e_strdup( value );
  405c1e:	4c 89 e7             	mov    %r12,%rdi
  405c21:	e8 2a fa ff ff       	callq  405650 <e_strdup>
  405c26:	48 89 05 b3 be 23 00 	mov    %rax,0x23beb3(%rip)        # 641ae0 <data_dir>
  405c2d:	e9 13 ff ff ff       	jmpq   405b45 <read_config+0x485>
		no_value_required( name, value );
  405c32:	4c 89 e6             	mov    %r12,%rsi
  405c35:	48 89 df             	mov    %rbx,%rdi
  405c38:	e8 c3 f2 ff ff       	callq  404f00 <no_value_required>
		no_symlink_check = 0;
  405c3d:	c7 05 d9 bd 23 00 00 	movl   $0x0,0x23bdd9(%rip)        # 641a20 <no_symlink_check>
  405c44:	00 00 00 
  405c47:	e9 f9 fe ff ff       	jmpq   405b45 <read_config+0x485>
		no_value_required( name, value );
  405c4c:	4c 89 e6             	mov    %r12,%rsi
  405c4f:	48 89 df             	mov    %rbx,%rdi
  405c52:	e8 a9 f2 ff ff       	callq  404f00 <no_value_required>
		no_symlink_check = 1;
  405c57:	c7 05 bf bd 23 00 01 	movl   $0x1,0x23bdbf(%rip)        # 641a20 <no_symlink_check>
  405c5e:	00 00 00 
  405c61:	e9 df fe ff ff       	jmpq   405b45 <read_config+0x485>
	    while ( *cp2 == ' ' || *cp2 == '\t' || *cp2 == '\n' || *cp2 == '\r' )
  405c66:	4c 89 f7             	mov    %r14,%rdi
  405c69:	e8 a2 d4 ff ff       	callq  403110 <__asan_report_load1@plt>
		*cp2++ = '\0';
  405c6e:	e8 bd d4 ff ff       	callq  403130 <__asan_report_store1@plt>
		value_required( name, value );
  405c73:	4c 89 e6             	mov    %r12,%rsi
  405c76:	48 89 df             	mov    %rbx,%rdi
  405c79:	e8 d2 f2 ff ff       	callq  404f50 <value_required>
		user = e_strdup( value );
  405c7e:	4c 89 e7             	mov    %r12,%rdi
  405c81:	e8 ca f9 ff ff       	callq  405650 <e_strdup>
  405c86:	48 89 05 93 ba 23 00 	mov    %rax,0x23ba93(%rip)        # 641720 <user>
  405c8d:	e9 b3 fe ff ff       	jmpq   405b45 <read_config+0x485>
    (void) fclose( fp );
  405c92:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  405c97:	e8 74 d6 ff ff       	callq  403310 <fclose@plt>
    {
  405c9c:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  405ca1:	4c 39 e8             	cmp    %r13,%rax
  405ca4:	0f 85 2a 01 00 00    	jne    405dd4 <read_config+0x714>
  405caa:	41 c7 87 00 80 ff 7f 	movl   $0x0,0x7fff8000(%r15)
  405cb1:	00 00 00 00 
  405cb5:	49 c7 87 10 80 ff 7f 	movq   $0x0,0x7fff8010(%r15)
  405cbc:	00 00 00 00 
    }
  405cc0:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
  405cc7:	5b                   	pop    %rbx
  405cc8:	5d                   	pop    %rbp
  405cc9:	41 5c                	pop    %r12
  405ccb:	41 5d                	pop    %r13
  405ccd:	41 5e                	pop    %r14
  405ccf:	41 5f                	pop    %r15
  405cd1:	c3                   	retq   
		value_required( name, value );
  405cd2:	4c 89 e6             	mov    %r12,%rsi
  405cd5:	48 89 df             	mov    %rbx,%rdi
  405cd8:	e8 73 f2 ff ff       	callq  404f50 <value_required>
		cgi_pattern = e_strdup( value );
  405cdd:	4c 89 e7             	mov    %r12,%rdi
  405ce0:	e8 6b f9 ff ff       	callq  405650 <e_strdup>
  405ce5:	48 89 05 74 bc 23 00 	mov    %rax,0x23bc74(%rip)        # 641960 <cgi_pattern>
  405cec:	e9 54 fe ff ff       	jmpq   405b45 <read_config+0x485>
		value_required( name, value );
  405cf1:	4c 89 e6             	mov    %r12,%rsi
  405cf4:	48 89 df             	mov    %rbx,%rdi
  405cf7:	e8 54 f2 ff ff       	callq  404f50 <value_required>
		url_pattern = e_strdup( value );
  405cfc:	4c 89 e7             	mov    %r12,%rdi
  405cff:	e8 4c f9 ff ff       	callq  405650 <e_strdup>
  405d04:	48 89 05 d5 bb 23 00 	mov    %rax,0x23bbd5(%rip)        # 6418e0 <url_pattern>
  405d0b:	e9 35 fe ff ff       	jmpq   405b45 <read_config+0x485>
		value_required( name, value );
  405d10:	4c 89 e6             	mov    %r12,%rsi
  405d13:	48 89 df             	mov    %rbx,%rdi
  405d16:	e8 35 f2 ff ff       	callq  404f50 <value_required>
		cgi_limit = atoi( value );
  405d1b:	4c 89 e7             	mov    %r12,%rdi
  405d1e:	e8 3d d0 ff ff       	callq  402d60 <atoi@plt>
  405d23:	89 05 f7 bb 23 00    	mov    %eax,0x23bbf7(%rip)        # 641920 <cgi_limit>
  405d29:	e9 17 fe ff ff       	jmpq   405b45 <read_config+0x485>
		value_required( name, value );
  405d2e:	4c 89 e6             	mov    %r12,%rsi
  405d31:	48 89 df             	mov    %rbx,%rdi
  405d34:	e8 17 f2 ff ff       	callq  404f50 <value_required>
		local_pattern = e_strdup( value );
  405d39:	4c 89 e7             	mov    %r12,%rdi
  405d3c:	e8 0f f9 ff ff       	callq  405650 <e_strdup>
  405d41:	48 89 05 18 bb 23 00 	mov    %rax,0x23bb18(%rip)        # 641860 <local_pattern>
  405d48:	e9 f8 fd ff ff       	jmpq   405b45 <read_config+0x485>
		no_value_required( name, value );
  405d4d:	4c 89 e6             	mov    %r12,%rsi
  405d50:	48 89 df             	mov    %rbx,%rdi
  405d53:	e8 a8 f1 ff ff       	callq  404f00 <no_value_required>
		no_empty_referers = 1;
  405d58:	c7 05 3e bb 23 00 01 	movl   $0x1,0x23bb3e(%rip)        # 6418a0 <no_empty_referers>
  405d5f:	00 00 00 
  405d62:	e9 de fd ff ff       	jmpq   405b45 <read_config+0x485>
		value_required( name, value );
  405d67:	4c 89 e6             	mov    %r12,%rsi
  405d6a:	48 89 df             	mov    %rbx,%rdi
  405d6d:	e8 de f1 ff ff       	callq  404f50 <value_required>
		throttlefile = e_strdup( value );
  405d72:	4c 89 e7             	mov    %r12,%rdi
  405d75:	e8 d6 f8 ff ff       	callq  405650 <e_strdup>
  405d7a:	48 89 05 5f ba 23 00 	mov    %rax,0x23ba5f(%rip)        # 6417e0 <throttlefile>
  405d81:	e9 bf fd ff ff       	jmpq   405b45 <read_config+0x485>
	    while ( *cp2 == ' ' || *cp2 == '\t' || *cp2 == '\n' || *cp2 == '\r' )
  405d86:	4c 89 f7             	mov    %r14,%rdi
  405d89:	e8 82 d3 ff ff       	callq  403110 <__asan_report_load1@plt>
		*value++ = '\0';
  405d8e:	48 89 c7             	mov    %rax,%rdi
  405d91:	e8 9a d3 ff ff       	callq  403130 <__asan_report_store1@plt>
		value_required( name, value );
  405d96:	4c 89 e6             	mov    %r12,%rsi
  405d99:	48 89 df             	mov    %rbx,%rdi
  405d9c:	e8 af f1 ff ff       	callq  404f50 <value_required>
		logfile = e_strdup( value );
  405da1:	4c 89 e7             	mov    %r12,%rdi
  405da4:	e8 a7 f8 ff ff       	callq  405650 <e_strdup>
  405da9:	48 89 05 70 ba 23 00 	mov    %rax,0x23ba70(%rip)        # 641820 <logfile>
  405db0:	e9 90 fd ff ff       	jmpq   405b45 <read_config+0x485>
		value_required( name, value );
  405db5:	4c 89 e6             	mov    %r12,%rsi
  405db8:	48 89 df             	mov    %rbx,%rdi
  405dbb:	e8 90 f1 ff ff       	callq  404f50 <value_required>
		hostname = e_strdup( value );
  405dc0:	4c 89 e7             	mov    %r12,%rdi
  405dc3:	e8 88 f8 ff ff       	callq  405650 <e_strdup>
  405dc8:	48 89 05 d1 b9 23 00 	mov    %rax,0x23b9d1(%rip)        # 6417a0 <hostname>
  405dcf:	e9 71 fd ff ff       	jmpq   405b45 <read_config+0x485>
    {
  405dd4:	66 0f 6f 05 b4 bf 01 	movdqa 0x1bfb4(%rip),%xmm0        # 421d90 <_IO_stdin_used+0x2cd0>
  405ddb:	00 
  405ddc:	49 c7 45 00 0e 36 e0 	movq   $0x45e0360e,0x0(%r13)
  405de3:	45 
  405de4:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
  405deb:	f5 f5 f5 
  405dee:	49 89 87 10 80 ff 7f 	mov    %rax,0x7fff8010(%r15)
  405df5:	41 0f 11 87 00 80 ff 	movups %xmm0,0x7fff8000(%r15)
  405dfc:	7f 
  405dfd:	e9 be fe ff ff       	jmpq   405cc0 <read_config+0x600>
  405e02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
		no_value_required( name, value );
  405e08:	4c 89 e6             	mov    %r12,%rsi
  405e0b:	48 89 df             	mov    %rbx,%rdi
  405e0e:	e8 ed f0 ff ff       	callq  404f00 <no_value_required>
		do_global_passwd = 1;
  405e13:	c7 05 83 bb 23 00 01 	movl   $0x1,0x23bb83(%rip)        # 6419a0 <do_global_passwd>
  405e1a:	00 00 00 
  405e1d:	e9 23 fd ff ff       	jmpq   405b45 <read_config+0x485>
		(void) fprintf(
  405e22:	b8 f0 12 64 00       	mov    $0x6412f0,%eax
  405e27:	48 8b 15 b2 bd 23 00 	mov    0x23bdb2(%rip),%rdx        # 641be0 <argv0>
  405e2e:	48 c1 e8 03          	shr    $0x3,%rax
  405e32:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  405e39:	75 63                	jne    405e9e <read_config+0x7de>
  405e3b:	48 8b 3d ae b4 23 00 	mov    0x23b4ae(%rip),%rdi        # 6412f0 <stderr@@GLIBC_2.2.5>
  405e42:	48 89 d9             	mov    %rbx,%rcx
  405e45:	be 60 fd 41 00       	mov    $0x41fd60,%esi
  405e4a:	31 c0                	xor    %eax,%eax
  405e4c:	e8 df ce ff ff       	callq  402d30 <fprintf@plt>
		exit( 1 );
  405e51:	e8 ea d1 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  405e56:	bf 01 00 00 00       	mov    $0x1,%edi
  405e5b:	e8 80 d2 ff ff       	callq  4030e0 <exit@plt>
		value_required( name, value );
  405e60:	4c 89 e6             	mov    %r12,%rsi
  405e63:	48 89 df             	mov    %rbx,%rdi
  405e66:	e8 e5 f0 ff ff       	callq  404f50 <value_required>
		p3p = e_strdup( value );
  405e6b:	4c 89 e7             	mov    %r12,%rdi
  405e6e:	e8 dd f7 ff ff       	callq  405650 <e_strdup>
  405e73:	48 89 05 26 b8 23 00 	mov    %rax,0x23b826(%rip)        # 6416a0 <p3p>
  405e7a:	e9 c6 fc ff ff       	jmpq   405b45 <read_config+0x485>
		value_required( name, value );
  405e7f:	4c 89 e6             	mov    %r12,%rsi
  405e82:	48 89 df             	mov    %rbx,%rdi
  405e85:	e8 c6 f0 ff ff       	callq  404f50 <value_required>
		charset = e_strdup( value );
  405e8a:	4c 89 e7             	mov    %r12,%rdi
  405e8d:	e8 be f7 ff ff       	callq  405650 <e_strdup>
  405e92:	48 89 05 47 b8 23 00 	mov    %rax,0x23b847(%rip)        # 6416e0 <charset>
  405e99:	e9 a7 fc ff ff       	jmpq   405b45 <read_config+0x485>
		(void) fprintf(
  405e9e:	bf f0 12 64 00       	mov    $0x6412f0,%edi
  405ea3:	e8 a8 d3 ff ff       	callq  403250 <__asan_report_load8@plt>
  405ea8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  405eaf:	00 
		value_required( name, value );
  405eb0:	4c 89 e6             	mov    %r12,%rsi
  405eb3:	48 89 df             	mov    %rbx,%rdi
  405eb6:	e8 95 f0 ff ff       	callq  404f50 <value_required>
		pidfile = e_strdup( value );
  405ebb:	4c 89 e7             	mov    %r12,%rdi
  405ebe:	e8 8d f7 ff ff       	callq  405650 <e_strdup>
  405ec3:	48 89 05 96 b8 23 00 	mov    %rax,0x23b896(%rip)        # 641760 <pidfile>
  405eca:	e9 76 fc ff ff       	jmpq   405b45 <read_config+0x485>
		no_value_required( name, value );
  405ecf:	4c 89 e6             	mov    %r12,%rsi
  405ed2:	48 89 df             	mov    %rbx,%rdi
  405ed5:	e8 26 f0 ff ff       	callq  404f00 <no_value_required>
		do_global_passwd = 0;
  405eda:	c7 05 bc ba 23 00 00 	movl   $0x0,0x23babc(%rip)        # 6419a0 <do_global_passwd>
  405ee1:	00 00 00 
  405ee4:	e9 5c fc ff ff       	jmpq   405b45 <read_config+0x485>
		no_value_required( name, value );
  405ee9:	4c 89 e6             	mov    %r12,%rsi
  405eec:	48 89 df             	mov    %rbx,%rdi
  405eef:	e8 0c f0 ff ff       	callq  404f00 <no_value_required>
		do_vhost = 0;
  405ef4:	c7 05 e2 ba 23 00 00 	movl   $0x0,0x23bae2(%rip)        # 6419e0 <do_vhost>
  405efb:	00 00 00 
  405efe:	e9 42 fc ff ff       	jmpq   405b45 <read_config+0x485>
		no_value_required( name, value );
  405f03:	4c 89 e6             	mov    %r12,%rsi
  405f06:	48 89 df             	mov    %rbx,%rdi
  405f09:	e8 f2 ef ff ff       	callq  404f00 <no_value_required>
		do_vhost = 1;
  405f0e:	c7 05 c8 ba 23 00 01 	movl   $0x1,0x23bac8(%rip)        # 6419e0 <do_vhost>
  405f15:	00 00 00 
  405f18:	e9 28 fc ff ff       	jmpq   405b45 <read_config+0x485>
	while ( *cp != '\0' )
  405f1d:	48 89 df             	mov    %rbx,%rdi
  405f20:	e8 eb d1 ff ff       	callq  403110 <__asan_report_load1@plt>
	    *cp = '\0';
  405f25:	48 89 c7             	mov    %rax,%rdi
  405f28:	e8 03 d2 ff ff       	callq  403130 <__asan_report_store1@plt>
	perror( filename );
  405f2d:	48 89 df             	mov    %rbx,%rdi
  405f30:	e8 6b cf ff ff       	callq  402ea0 <perror@plt>
	exit( 1 );
  405f35:	e8 06 d1 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  405f3a:	bf 01 00 00 00       	mov    $0x1,%edi
  405f3f:	e8 9c d1 ff ff       	callq  4030e0 <exit@plt>
    {
  405f44:	bf c0 00 00 00       	mov    $0xc0,%edi
  405f49:	e8 d2 d3 ff ff       	callq  403320 <__asan_stack_malloc_2@plt>
  405f4e:	48 85 c0             	test   %rax,%rax
  405f51:	4c 0f 45 e8          	cmovne %rax,%r13
  405f55:	e9 8d f7 ff ff       	jmpq   4056e7 <read_config+0x27>
  405f5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000405f60 <parse_args>:
    port = DEFAULT_PORT;
  405f60:	b8 50 00 00 00       	mov    $0x50,%eax
    {
  405f65:	41 56                	push   %r14
    debug = 0;
  405f67:	c7 05 2f bc 23 00 00 	movl   $0x0,0x23bc2f(%rip)        # 641ba0 <debug>
  405f6e:	00 00 00 
    {
  405f71:	41 55                	push   %r13
    port = DEFAULT_PORT;
  405f73:	66 89 05 e6 bb 23 00 	mov    %ax,0x23bbe6(%rip)        # 641b60 <port>
    {
  405f7a:	41 54                	push   %r12
  405f7c:	41 89 fc             	mov    %edi,%r12d
  405f7f:	55                   	push   %rbp
    dir = (char*) 0;
  405f80:	48 c7 05 95 bb 23 00 	movq   $0x0,0x23bb95(%rip)        # 641b20 <dir>
  405f87:	00 00 00 00 
    {
  405f8b:	53                   	push   %rbx
    data_dir = (char*) 0;
  405f8c:	48 c7 05 49 bb 23 00 	movq   $0x0,0x23bb49(%rip)        # 641ae0 <data_dir>
  405f93:	00 00 00 00 
    do_chroot = 0;
  405f97:	c7 05 ff ba 23 00 00 	movl   $0x0,0x23baff(%rip)        # 641aa0 <do_chroot>
  405f9e:	00 00 00 
    no_log = 0;
  405fa1:	c7 05 b5 ba 23 00 00 	movl   $0x0,0x23bab5(%rip)        # 641a60 <no_log>
  405fa8:	00 00 00 
    no_symlink_check = do_chroot;
  405fab:	c7 05 6b ba 23 00 00 	movl   $0x0,0x23ba6b(%rip)        # 641a20 <no_symlink_check>
  405fb2:	00 00 00 
    do_vhost = 0;
  405fb5:	c7 05 21 ba 23 00 00 	movl   $0x0,0x23ba21(%rip)        # 6419e0 <do_vhost>
  405fbc:	00 00 00 
    do_global_passwd = 0;
  405fbf:	c7 05 d7 b9 23 00 00 	movl   $0x0,0x23b9d7(%rip)        # 6419a0 <do_global_passwd>
  405fc6:	00 00 00 
    cgi_pattern = (char*) 0;
  405fc9:	48 c7 05 8c b9 23 00 	movq   $0x0,0x23b98c(%rip)        # 641960 <cgi_pattern>
  405fd0:	00 00 00 00 
    cgi_limit = 0;
  405fd4:	c7 05 42 b9 23 00 00 	movl   $0x0,0x23b942(%rip)        # 641920 <cgi_limit>
  405fdb:	00 00 00 
    url_pattern = (char*) 0;
  405fde:	48 c7 05 f7 b8 23 00 	movq   $0x0,0x23b8f7(%rip)        # 6418e0 <url_pattern>
  405fe5:	00 00 00 00 
    no_empty_referers = 0;
  405fe9:	c7 05 ad b8 23 00 00 	movl   $0x0,0x23b8ad(%rip)        # 6418a0 <no_empty_referers>
  405ff0:	00 00 00 
    local_pattern = (char*) 0;
  405ff3:	48 c7 05 62 b8 23 00 	movq   $0x0,0x23b862(%rip)        # 641860 <local_pattern>
  405ffa:	00 00 00 00 
    throttlefile = (char*) 0;
  405ffe:	48 c7 05 d7 b7 23 00 	movq   $0x0,0x23b7d7(%rip)        # 6417e0 <throttlefile>
  406005:	00 00 00 00 
    hostname = (char*) 0;
  406009:	48 c7 05 8c b7 23 00 	movq   $0x0,0x23b78c(%rip)        # 6417a0 <hostname>
  406010:	00 00 00 00 
    logfile = (char*) 0;
  406014:	48 c7 05 01 b8 23 00 	movq   $0x0,0x23b801(%rip)        # 641820 <logfile>
  40601b:	00 00 00 00 
    pidfile = (char*) 0;
  40601f:	48 c7 05 36 b7 23 00 	movq   $0x0,0x23b736(%rip)        # 641760 <pidfile>
  406026:	00 00 00 00 
    user = DEFAULT_USER;
  40602a:	48 c7 05 eb b6 23 00 	movq   $0x41fda0,0x23b6eb(%rip)        # 641720 <user>
  406031:	a0 fd 41 00 
    charset = DEFAULT_CHARSET;
  406035:	48 c7 05 a0 b6 23 00 	movq   $0x41fde0,0x23b6a0(%rip)        # 6416e0 <charset>
  40603c:	e0 fd 41 00 
    p3p = "";
  406040:	48 c7 05 55 b6 23 00 	movq   $0x41fe20,0x23b655(%rip)        # 6416a0 <p3p>
  406047:	20 fe 41 00 
    max_age = -1;
  40604b:	c7 05 0b b6 23 00 ff 	movl   $0xffffffff,0x23b60b(%rip)        # 641660 <max_age>
  406052:	ff ff ff 
    while ( argn < argc && argv[argn][0] == '-' )
  406055:	83 ff 01             	cmp    $0x1,%edi
  406058:	0f 8e ab 04 00 00    	jle    406509 <parse_args+0x5a9>
  40605e:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
  406062:	49 89 f5             	mov    %rsi,%r13
  406065:	48 89 f8             	mov    %rdi,%rax
  406068:	48 c1 e8 03          	shr    $0x3,%rax
  40606c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  406073:	0f 85 58 06 00 00    	jne    4066d1 <parse_args+0x771>
  406079:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  40607d:	48 89 d8             	mov    %rbx,%rax
  406080:	48 89 da             	mov    %rbx,%rdx
  406083:	48 c1 e8 03          	shr    $0x3,%rax
  406087:	83 e2 07             	and    $0x7,%edx
  40608a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  406091:	38 d0                	cmp    %dl,%al
  406093:	7f 08                	jg     40609d <parse_args+0x13d>
  406095:	84 c0                	test   %al,%al
  406097:	0f 85 39 06 00 00    	jne    4066d6 <parse_args+0x776>
    argn = 1;
  40609d:	bd 01 00 00 00       	mov    $0x1,%ebp
  4060a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    while ( argn < argc && argv[argn][0] == '-' )
  4060a8:	80 3b 2d             	cmpb   $0x2d,(%rbx)
  4060ab:	0f 85 2d 06 00 00    	jne    4066de <parse_args+0x77e>
	if ( strcmp( argv[argn], "-V" ) == 0 )
  4060b1:	be 60 fe 41 00       	mov    $0x41fe60,%esi
  4060b6:	48 89 df             	mov    %rbx,%rdi
  4060b9:	e8 82 cd ff ff       	callq  402e40 <strcmp@plt>
  4060be:	85 c0                	test   %eax,%eax
  4060c0:	0f 84 c0 02 00 00    	je     406386 <parse_args+0x426>
	else if ( strcmp( argv[argn], "-C" ) == 0 && argn + 1 < argc )
  4060c6:	be e0 fe 41 00       	mov    $0x41fee0,%esi
  4060cb:	48 89 df             	mov    %rbx,%rdi
  4060ce:	e8 6d cd ff ff       	callq  402e40 <strcmp@plt>
  4060d3:	85 c0                	test   %eax,%eax
  4060d5:	0f 85 d5 00 00 00    	jne    4061b0 <parse_args+0x250>
  4060db:	44 8d 75 01          	lea    0x1(%rbp),%r14d
  4060df:	45 39 e6             	cmp    %r12d,%r14d
  4060e2:	0f 8c a0 01 00 00    	jl     406288 <parse_args+0x328>
	else if ( strcmp( argv[argn], "-p" ) == 0 && argn + 1 < argc )
  4060e8:	be 20 ff 41 00       	mov    $0x41ff20,%esi
  4060ed:	48 89 df             	mov    %rbx,%rdi
  4060f0:	e8 4b cd ff ff       	callq  402e40 <strcmp@plt>
  4060f5:	85 c0                	test   %eax,%eax
  4060f7:	0f 84 2b 01 00 00    	je     406228 <parse_args+0x2c8>
	else if ( strcmp( argv[argn], "-d" ) == 0 && argn + 1 < argc )
  4060fd:	be 60 ff 41 00       	mov    $0x41ff60,%esi
  406102:	48 89 df             	mov    %rbx,%rdi
  406105:	e8 36 cd ff ff       	callq  402e40 <strcmp@plt>
  40610a:	85 c0                	test   %eax,%eax
  40610c:	0f 85 16 01 00 00    	jne    406228 <parse_args+0x2c8>
  406112:	8d 45 01             	lea    0x1(%rbp),%eax
  406115:	44 39 e0             	cmp    %r12d,%eax
  406118:	0f 8d 0a 01 00 00    	jge    406228 <parse_args+0x2c8>
	    dir = argv[argn];
  40611e:	48 63 d0             	movslq %eax,%rdx
  406121:	49 8d 7c d5 00       	lea    0x0(%r13,%rdx,8),%rdi
  406126:	48 89 fa             	mov    %rdi,%rdx
  406129:	48 c1 ea 03          	shr    $0x3,%rdx
  40612d:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  406134:	0f 85 7e 05 00 00    	jne    4066b8 <parse_args+0x758>
  40613a:	48 8b 17             	mov    (%rdi),%rdx
  40613d:	89 c5                	mov    %eax,%ebp
  40613f:	48 89 15 da b9 23 00 	mov    %rdx,0x23b9da(%rip)        # 641b20 <dir>
  406146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40614d:	00 00 00 
	++argn;
  406150:	83 c5 01             	add    $0x1,%ebp
    while ( argn < argc && argv[argn][0] == '-' )
  406153:	41 39 ec             	cmp    %ebp,%r12d
  406156:	0f 8e b4 00 00 00    	jle    406210 <parse_args+0x2b0>
  40615c:	48 63 c5             	movslq %ebp,%rax
  40615f:	49 8d 7c c5 00       	lea    0x0(%r13,%rax,8),%rdi
  406164:	48 89 f8             	mov    %rdi,%rax
  406167:	48 c1 e8 03          	shr    $0x3,%rax
  40616b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  406172:	0f 85 db 03 00 00    	jne    406553 <parse_args+0x5f3>
  406178:	48 8b 1f             	mov    (%rdi),%rbx
  40617b:	48 89 d8             	mov    %rbx,%rax
  40617e:	48 89 da             	mov    %rbx,%rdx
  406181:	48 c1 e8 03          	shr    $0x3,%rax
  406185:	83 e2 07             	and    $0x7,%edx
  406188:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40618f:	38 d0                	cmp    %dl,%al
  406191:	0f 8f 11 ff ff ff    	jg     4060a8 <parse_args+0x148>
  406197:	84 c0                	test   %al,%al
  406199:	0f 84 09 ff ff ff    	je     4060a8 <parse_args+0x148>
  40619f:	48 89 df             	mov    %rbx,%rdi
  4061a2:	e8 69 cf ff ff       	callq  403110 <__asan_report_load1@plt>
  4061a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4061ae:	00 00 
	else if ( strcmp( argv[argn], "-p" ) == 0 && argn + 1 < argc )
  4061b0:	be 20 ff 41 00       	mov    $0x41ff20,%esi
  4061b5:	48 89 df             	mov    %rbx,%rdi
  4061b8:	e8 83 cc ff ff       	callq  402e40 <strcmp@plt>
  4061bd:	85 c0                	test   %eax,%eax
  4061bf:	0f 85 38 ff ff ff    	jne    4060fd <parse_args+0x19d>
  4061c5:	44 8d 75 01          	lea    0x1(%rbp),%r14d
  4061c9:	45 39 e6             	cmp    %r12d,%r14d
  4061cc:	7d 5a                	jge    406228 <parse_args+0x2c8>
	    port = (unsigned short) atoi( argv[argn] );
  4061ce:	49 63 c6             	movslq %r14d,%rax
  4061d1:	49 8d 7c c5 00       	lea    0x0(%r13,%rax,8),%rdi
  4061d6:	48 89 f8             	mov    %rdi,%rax
  4061d9:	48 c1 e8 03          	shr    $0x3,%rax
  4061dd:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4061e4:	0f 85 c9 04 00 00    	jne    4066b3 <parse_args+0x753>
  4061ea:	48 8b 3f             	mov    (%rdi),%rdi
  4061ed:	44 89 f5             	mov    %r14d,%ebp
	++argn;
  4061f0:	83 c5 01             	add    $0x1,%ebp
	    port = (unsigned short) atoi( argv[argn] );
  4061f3:	e8 68 cb ff ff       	callq  402d60 <atoi@plt>
  4061f8:	66 89 05 61 b9 23 00 	mov    %ax,0x23b961(%rip)        # 641b60 <port>
    while ( argn < argc && argv[argn][0] == '-' )
  4061ff:	41 39 ec             	cmp    %ebp,%r12d
  406202:	0f 8f 54 ff ff ff    	jg     40615c <parse_args+0x1fc>
  406208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40620f:	00 
    if ( argn != argc )
  406210:	41 39 ec             	cmp    %ebp,%r12d
  406213:	0f 85 c5 04 00 00    	jne    4066de <parse_args+0x77e>
    }
  406219:	5b                   	pop    %rbx
  40621a:	5d                   	pop    %rbp
  40621b:	41 5c                	pop    %r12
  40621d:	41 5d                	pop    %r13
  40621f:	41 5e                	pop    %r14
  406221:	c3                   	retq   
  406222:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	else if ( strcmp( argv[argn], "-r" ) == 0 )
  406228:	be a0 ff 41 00       	mov    $0x41ffa0,%esi
  40622d:	48 89 df             	mov    %rbx,%rdi
  406230:	e8 0b cc ff ff       	callq  402e40 <strcmp@plt>
  406235:	85 c0                	test   %eax,%eax
  406237:	75 1f                	jne    406258 <parse_args+0x2f8>
	    do_chroot = 1;
  406239:	c7 05 5d b8 23 00 01 	movl   $0x1,0x23b85d(%rip)        # 641aa0 <do_chroot>
  406240:	00 00 00 
	    no_symlink_check = 1;
  406243:	c7 05 d3 b7 23 00 01 	movl   $0x1,0x23b7d3(%rip)        # 641a20 <no_symlink_check>
  40624a:	00 00 00 
  40624d:	e9 fe fe ff ff       	jmpq   406150 <parse_args+0x1f0>
  406252:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	else if ( strcmp( argv[argn], "-nor" ) == 0 )
  406258:	be e0 ff 41 00       	mov    $0x41ffe0,%esi
  40625d:	48 89 df             	mov    %rbx,%rdi
  406260:	e8 db cb ff ff       	callq  402e40 <strcmp@plt>
  406265:	85 c0                	test   %eax,%eax
  406267:	75 4f                	jne    4062b8 <parse_args+0x358>
	    do_chroot = 0;
  406269:	c7 05 2d b8 23 00 00 	movl   $0x0,0x23b82d(%rip)        # 641aa0 <do_chroot>
  406270:	00 00 00 
	    no_symlink_check = 0;
  406273:	c7 05 a3 b7 23 00 00 	movl   $0x0,0x23b7a3(%rip)        # 641a20 <no_symlink_check>
  40627a:	00 00 00 
  40627d:	e9 ce fe ff ff       	jmpq   406150 <parse_args+0x1f0>
  406282:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	    read_config( argv[argn] );
  406288:	49 63 c6             	movslq %r14d,%rax
  40628b:	49 8d 7c c5 00       	lea    0x0(%r13,%rax,8),%rdi
  406290:	48 89 f8             	mov    %rdi,%rax
  406293:	48 c1 e8 03          	shr    $0x3,%rax
  406297:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40629e:	0f 85 19 04 00 00    	jne    4066bd <parse_args+0x75d>
  4062a4:	48 8b 3f             	mov    (%rdi),%rdi
  4062a7:	44 89 f5             	mov    %r14d,%ebp
  4062aa:	e8 11 f4 ff ff       	callq  4056c0 <read_config>
  4062af:	e9 9c fe ff ff       	jmpq   406150 <parse_args+0x1f0>
  4062b4:	0f 1f 40 00          	nopl   0x0(%rax)
	else if ( strcmp( argv[argn], "-dd" ) == 0 && argn + 1 < argc )
  4062b8:	be 20 00 42 00       	mov    $0x420020,%esi
  4062bd:	48 89 df             	mov    %rbx,%rdi
  4062c0:	e8 7b cb ff ff       	callq  402e40 <strcmp@plt>
  4062c5:	85 c0                	test   %eax,%eax
  4062c7:	75 37                	jne    406300 <parse_args+0x3a0>
  4062c9:	8d 45 01             	lea    0x1(%rbp),%eax
  4062cc:	44 39 e0             	cmp    %r12d,%eax
  4062cf:	7d 2f                	jge    406300 <parse_args+0x3a0>
	    data_dir = argv[argn];
  4062d1:	48 63 d0             	movslq %eax,%rdx
  4062d4:	49 8d 7c d5 00       	lea    0x0(%r13,%rdx,8),%rdi
  4062d9:	48 89 fa             	mov    %rdi,%rdx
  4062dc:	48 c1 ea 03          	shr    $0x3,%rdx
  4062e0:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4062e7:	0f 85 d5 03 00 00    	jne    4066c2 <parse_args+0x762>
  4062ed:	48 8b 17             	mov    (%rdi),%rdx
  4062f0:	89 c5                	mov    %eax,%ebp
  4062f2:	48 89 15 e7 b7 23 00 	mov    %rdx,0x23b7e7(%rip)        # 641ae0 <data_dir>
  4062f9:	e9 52 fe ff ff       	jmpq   406150 <parse_args+0x1f0>
  4062fe:	66 90                	xchg   %ax,%ax
	else if ( strcmp( argv[argn], "-s" ) == 0 )
  406300:	be 60 00 42 00       	mov    $0x420060,%esi
  406305:	48 89 df             	mov    %rbx,%rdi
  406308:	e8 33 cb ff ff       	callq  402e40 <strcmp@plt>
  40630d:	85 c0                	test   %eax,%eax
  40630f:	75 0f                	jne    406320 <parse_args+0x3c0>
	    no_symlink_check = 0;
  406311:	c7 05 05 b7 23 00 00 	movl   $0x0,0x23b705(%rip)        # 641a20 <no_symlink_check>
  406318:	00 00 00 
  40631b:	e9 30 fe ff ff       	jmpq   406150 <parse_args+0x1f0>
	else if ( strcmp( argv[argn], "-nos" ) == 0 )
  406320:	be a0 00 42 00       	mov    $0x4200a0,%esi
  406325:	48 89 df             	mov    %rbx,%rdi
  406328:	e8 13 cb ff ff       	callq  402e40 <strcmp@plt>
  40632d:	85 c0                	test   %eax,%eax
  40632f:	75 0f                	jne    406340 <parse_args+0x3e0>
	    no_symlink_check = 1;
  406331:	c7 05 e5 b6 23 00 01 	movl   $0x1,0x23b6e5(%rip)        # 641a20 <no_symlink_check>
  406338:	00 00 00 
  40633b:	e9 10 fe ff ff       	jmpq   406150 <parse_args+0x1f0>
	else if ( strcmp( argv[argn], "-u" ) == 0 && argn + 1 < argc )
  406340:	be e0 00 42 00       	mov    $0x4200e0,%esi
  406345:	48 89 df             	mov    %rbx,%rdi
  406348:	e8 f3 ca ff ff       	callq  402e40 <strcmp@plt>
  40634d:	85 c0                	test   %eax,%eax
  40634f:	75 4b                	jne    40639c <parse_args+0x43c>
  406351:	8d 45 01             	lea    0x1(%rbp),%eax
  406354:	44 39 e0             	cmp    %r12d,%eax
  406357:	7d 43                	jge    40639c <parse_args+0x43c>
	    user = argv[argn];
  406359:	48 63 d0             	movslq %eax,%rdx
  40635c:	49 8d 7c d5 00       	lea    0x0(%r13,%rdx,8),%rdi
  406361:	48 89 fa             	mov    %rdi,%rdx
  406364:	48 c1 ea 03          	shr    $0x3,%rdx
  406368:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40636f:	0f 85 73 03 00 00    	jne    4066e8 <parse_args+0x788>
  406375:	48 8b 17             	mov    (%rdi),%rdx
  406378:	89 c5                	mov    %eax,%ebp
  40637a:	48 89 15 9f b3 23 00 	mov    %rdx,0x23b39f(%rip)        # 641720 <user>
  406381:	e9 ca fd ff ff       	jmpq   406150 <parse_args+0x1f0>
	    (void) printf( "%s\n", SERVER_SOFTWARE );
  406386:	bf a0 fe 41 00       	mov    $0x41fea0,%edi
  40638b:	e8 f0 ce ff ff       	callq  403280 <puts@plt>
	    exit( 0 );
  406390:	e8 ab cc ff ff       	callq  403040 <__asan_handle_no_return@plt>
  406395:	31 ff                	xor    %edi,%edi
  406397:	e8 44 cd ff ff       	callq  4030e0 <exit@plt>
	else if ( strcmp( argv[argn], "-c" ) == 0 && argn + 1 < argc )
  40639c:	be 20 01 42 00       	mov    $0x420120,%esi
  4063a1:	48 89 df             	mov    %rbx,%rdi
  4063a4:	e8 97 ca ff ff       	callq  402e40 <strcmp@plt>
  4063a9:	85 c0                	test   %eax,%eax
  4063ab:	75 35                	jne    4063e2 <parse_args+0x482>
  4063ad:	8d 45 01             	lea    0x1(%rbp),%eax
  4063b0:	44 39 e0             	cmp    %r12d,%eax
  4063b3:	7d 2d                	jge    4063e2 <parse_args+0x482>
	    cgi_pattern = argv[argn];
  4063b5:	48 63 d0             	movslq %eax,%rdx
  4063b8:	49 8d 7c d5 00       	lea    0x0(%r13,%rdx,8),%rdi
  4063bd:	48 89 fa             	mov    %rdi,%rdx
  4063c0:	48 c1 ea 03          	shr    $0x3,%rdx
  4063c4:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4063cb:	0f 85 fb 02 00 00    	jne    4066cc <parse_args+0x76c>
  4063d1:	48 8b 17             	mov    (%rdi),%rdx
  4063d4:	89 c5                	mov    %eax,%ebp
  4063d6:	48 89 15 83 b5 23 00 	mov    %rdx,0x23b583(%rip)        # 641960 <cgi_pattern>
  4063dd:	e9 6e fd ff ff       	jmpq   406150 <parse_args+0x1f0>
	else if ( strcmp( argv[argn], "-t" ) == 0 && argn + 1 < argc )
  4063e2:	be 60 01 42 00       	mov    $0x420160,%esi
  4063e7:	48 89 df             	mov    %rbx,%rdi
  4063ea:	e8 51 ca ff ff       	callq  402e40 <strcmp@plt>
  4063ef:	85 c0                	test   %eax,%eax
  4063f1:	75 35                	jne    406428 <parse_args+0x4c8>
  4063f3:	8d 45 01             	lea    0x1(%rbp),%eax
  4063f6:	44 39 e0             	cmp    %r12d,%eax
  4063f9:	7d 77                	jge    406472 <parse_args+0x512>
	    throttlefile = argv[argn];
  4063fb:	48 63 d0             	movslq %eax,%rdx
  4063fe:	49 8d 7c d5 00       	lea    0x0(%r13,%rdx,8),%rdi
  406403:	48 89 fa             	mov    %rdi,%rdx
  406406:	48 c1 ea 03          	shr    $0x3,%rdx
  40640a:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  406411:	0f 85 b0 02 00 00    	jne    4066c7 <parse_args+0x767>
  406417:	48 8b 17             	mov    (%rdi),%rdx
  40641a:	89 c5                	mov    %eax,%ebp
  40641c:	48 89 15 bd b3 23 00 	mov    %rdx,0x23b3bd(%rip)        # 6417e0 <throttlefile>
  406423:	e9 28 fd ff ff       	jmpq   406150 <parse_args+0x1f0>
	else if ( strcmp( argv[argn], "-h" ) == 0 && argn + 1 < argc )
  406428:	be a0 01 42 00       	mov    $0x4201a0,%esi
  40642d:	48 89 df             	mov    %rbx,%rdi
  406430:	e8 0b ca ff ff       	callq  402e40 <strcmp@plt>
  406435:	85 c0                	test   %eax,%eax
  406437:	75 4a                	jne    406483 <parse_args+0x523>
  406439:	8d 45 01             	lea    0x1(%rbp),%eax
  40643c:	44 39 e0             	cmp    %r12d,%eax
  40643f:	0f 8d 84 00 00 00    	jge    4064c9 <parse_args+0x569>
	    hostname = argv[argn];
  406445:	48 63 d0             	movslq %eax,%rdx
  406448:	49 8d 7c d5 00       	lea    0x0(%r13,%rdx,8),%rdi
  40644d:	48 89 fa             	mov    %rdi,%rdx
  406450:	48 c1 ea 03          	shr    $0x3,%rdx
  406454:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40645b:	0f 85 8c 02 00 00    	jne    4066ed <parse_args+0x78d>
  406461:	48 8b 17             	mov    (%rdi),%rdx
  406464:	89 c5                	mov    %eax,%ebp
  406466:	48 89 15 33 b3 23 00 	mov    %rdx,0x23b333(%rip)        # 6417a0 <hostname>
  40646d:	e9 de fc ff ff       	jmpq   406150 <parse_args+0x1f0>
	else if ( strcmp( argv[argn], "-h" ) == 0 && argn + 1 < argc )
  406472:	be a0 01 42 00       	mov    $0x4201a0,%esi
  406477:	48 89 df             	mov    %rbx,%rdi
  40647a:	e8 c1 c9 ff ff       	callq  402e40 <strcmp@plt>
  40647f:	85 c0                	test   %eax,%eax
  406481:	74 46                	je     4064c9 <parse_args+0x569>
	else if ( strcmp( argv[argn], "-l" ) == 0 && argn + 1 < argc )
  406483:	be e0 01 42 00       	mov    $0x4201e0,%esi
  406488:	48 89 df             	mov    %rbx,%rdi
  40648b:	e8 b0 c9 ff ff       	callq  402e40 <strcmp@plt>
  406490:	85 c0                	test   %eax,%eax
  406492:	75 35                	jne    4064c9 <parse_args+0x569>
  406494:	8d 45 01             	lea    0x1(%rbp),%eax
  406497:	44 39 e0             	cmp    %r12d,%eax
  40649a:	7d 2d                	jge    4064c9 <parse_args+0x569>
	    logfile = argv[argn];
  40649c:	48 63 d0             	movslq %eax,%rdx
  40649f:	49 8d 7c d5 00       	lea    0x0(%r13,%rdx,8),%rdi
  4064a4:	48 89 fa             	mov    %rdi,%rdx
  4064a7:	48 c1 ea 03          	shr    $0x3,%rdx
  4064ab:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4064b2:	0f 85 3a 02 00 00    	jne    4066f2 <parse_args+0x792>
  4064b8:	48 8b 17             	mov    (%rdi),%rdx
  4064bb:	89 c5                	mov    %eax,%ebp
  4064bd:	48 89 15 5c b3 23 00 	mov    %rdx,0x23b35c(%rip)        # 641820 <logfile>
  4064c4:	e9 87 fc ff ff       	jmpq   406150 <parse_args+0x1f0>
	else if ( strcmp( argv[argn], "-v" ) == 0 )
  4064c9:	be 20 02 42 00       	mov    $0x420220,%esi
  4064ce:	48 89 df             	mov    %rbx,%rdi
  4064d1:	e8 6a c9 ff ff       	callq  402e40 <strcmp@plt>
  4064d6:	85 c0                	test   %eax,%eax
  4064d8:	74 20                	je     4064fa <parse_args+0x59a>
	else if ( strcmp( argv[argn], "-nov" ) == 0 )
  4064da:	be 60 02 42 00       	mov    $0x420260,%esi
  4064df:	48 89 df             	mov    %rbx,%rdi
  4064e2:	e8 59 c9 ff ff       	callq  402e40 <strcmp@plt>
  4064e7:	85 c0                	test   %eax,%eax
  4064e9:	75 28                	jne    406513 <parse_args+0x5b3>
	    do_vhost = 0;
  4064eb:	c7 05 eb b4 23 00 00 	movl   $0x0,0x23b4eb(%rip)        # 6419e0 <do_vhost>
  4064f2:	00 00 00 
  4064f5:	e9 56 fc ff ff       	jmpq   406150 <parse_args+0x1f0>
	    do_vhost = 1;
  4064fa:	c7 05 dc b4 23 00 01 	movl   $0x1,0x23b4dc(%rip)        # 6419e0 <do_vhost>
  406501:	00 00 00 
  406504:	e9 47 fc ff ff       	jmpq   406150 <parse_args+0x1f0>
    argn = 1;
  406509:	bd 01 00 00 00       	mov    $0x1,%ebp
  40650e:	e9 fd fc ff ff       	jmpq   406210 <parse_args+0x2b0>
	else if ( strcmp( argv[argn], "-g" ) == 0 )
  406513:	be a0 02 42 00       	mov    $0x4202a0,%esi
  406518:	48 89 df             	mov    %rbx,%rdi
  40651b:	e8 20 c9 ff ff       	callq  402e40 <strcmp@plt>
  406520:	85 c0                	test   %eax,%eax
  406522:	75 0f                	jne    406533 <parse_args+0x5d3>
	    do_global_passwd = 1;
  406524:	c7 05 72 b4 23 00 01 	movl   $0x1,0x23b472(%rip)        # 6419a0 <do_global_passwd>
  40652b:	00 00 00 
  40652e:	e9 1d fc ff ff       	jmpq   406150 <parse_args+0x1f0>
	else if ( strcmp( argv[argn], "-nog" ) == 0 )
  406533:	be e0 02 42 00       	mov    $0x4202e0,%esi
  406538:	48 89 df             	mov    %rbx,%rdi
  40653b:	e8 00 c9 ff ff       	callq  402e40 <strcmp@plt>
  406540:	85 c0                	test   %eax,%eax
  406542:	75 14                	jne    406558 <parse_args+0x5f8>
	    do_global_passwd = 0;
  406544:	c7 05 52 b4 23 00 00 	movl   $0x0,0x23b452(%rip)        # 6419a0 <do_global_passwd>
  40654b:	00 00 00 
  40654e:	e9 fd fb ff ff       	jmpq   406150 <parse_args+0x1f0>
    while ( argn < argc && argv[argn][0] == '-' )
  406553:	e8 f8 cc ff ff       	callq  403250 <__asan_report_load8@plt>
	else if ( strcmp( argv[argn], "-i" ) == 0 && argn + 1 < argc )
  406558:	be 20 03 42 00       	mov    $0x420320,%esi
  40655d:	48 89 df             	mov    %rbx,%rdi
  406560:	e8 db c8 ff ff       	callq  402e40 <strcmp@plt>
  406565:	85 c0                	test   %eax,%eax
  406567:	75 35                	jne    40659e <parse_args+0x63e>
  406569:	8d 45 01             	lea    0x1(%rbp),%eax
  40656c:	44 39 e0             	cmp    %r12d,%eax
  40656f:	7d 77                	jge    4065e8 <parse_args+0x688>
	    pidfile = argv[argn];
  406571:	48 63 d0             	movslq %eax,%rdx
  406574:	49 8d 7c d5 00       	lea    0x0(%r13,%rdx,8),%rdi
  406579:	48 89 fa             	mov    %rdi,%rdx
  40657c:	48 c1 ea 03          	shr    $0x3,%rdx
  406580:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  406587:	0f 85 6a 01 00 00    	jne    4066f7 <parse_args+0x797>
  40658d:	48 8b 17             	mov    (%rdi),%rdx
  406590:	89 c5                	mov    %eax,%ebp
  406592:	48 89 15 c7 b1 23 00 	mov    %rdx,0x23b1c7(%rip)        # 641760 <pidfile>
  406599:	e9 b2 fb ff ff       	jmpq   406150 <parse_args+0x1f0>
	else if ( strcmp( argv[argn], "-T" ) == 0 && argn + 1 < argc )
  40659e:	be 60 03 42 00       	mov    $0x420360,%esi
  4065a3:	48 89 df             	mov    %rbx,%rdi
  4065a6:	e8 95 c8 ff ff       	callq  402e40 <strcmp@plt>
  4065ab:	85 c0                	test   %eax,%eax
  4065ad:	0f 85 9a 00 00 00    	jne    40664d <parse_args+0x6ed>
  4065b3:	8d 45 01             	lea    0x1(%rbp),%eax
  4065b6:	44 39 e0             	cmp    %r12d,%eax
  4065b9:	7d 2d                	jge    4065e8 <parse_args+0x688>
	    charset = argv[argn];
  4065bb:	48 63 d0             	movslq %eax,%rdx
  4065be:	49 8d 7c d5 00       	lea    0x0(%r13,%rdx,8),%rdi
  4065c3:	48 89 fa             	mov    %rdi,%rdx
  4065c6:	48 c1 ea 03          	shr    $0x3,%rdx
  4065ca:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4065d1:	0f 85 25 01 00 00    	jne    4066fc <parse_args+0x79c>
  4065d7:	48 8b 17             	mov    (%rdi),%rdx
  4065da:	89 c5                	mov    %eax,%ebp
  4065dc:	48 89 15 fd b0 23 00 	mov    %rdx,0x23b0fd(%rip)        # 6416e0 <charset>
  4065e3:	e9 68 fb ff ff       	jmpq   406150 <parse_args+0x1f0>
	else if ( strcmp( argv[argn], "-P" ) == 0 && argn + 1 < argc )
  4065e8:	be a0 03 42 00       	mov    $0x4203a0,%esi
  4065ed:	48 89 df             	mov    %rbx,%rdi
  4065f0:	e8 4b c8 ff ff       	callq  402e40 <strcmp@plt>
  4065f5:	85 c0                	test   %eax,%eax
  4065f7:	0f 84 96 00 00 00    	je     406693 <parse_args+0x733>
	else if ( strcmp( argv[argn], "-M" ) == 0 && argn + 1 < argc )
  4065fd:	be e0 03 42 00       	mov    $0x4203e0,%esi
  406602:	48 89 df             	mov    %rbx,%rdi
  406605:	e8 36 c8 ff ff       	callq  402e40 <strcmp@plt>
  40660a:	85 c0                	test   %eax,%eax
  40660c:	0f 85 81 00 00 00    	jne    406693 <parse_args+0x733>
  406612:	44 8d 75 01          	lea    0x1(%rbp),%r14d
  406616:	45 39 e6             	cmp    %r12d,%r14d
  406619:	7d 78                	jge    406693 <parse_args+0x733>
	    max_age = atoi( argv[argn] );
  40661b:	49 63 c6             	movslq %r14d,%rax
  40661e:	49 8d 7c c5 00       	lea    0x0(%r13,%rax,8),%rdi
  406623:	48 89 f8             	mov    %rdi,%rax
  406626:	48 c1 e8 03          	shr    $0x3,%rax
  40662a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  406631:	0f 85 ca 00 00 00    	jne    406701 <parse_args+0x7a1>
  406637:	48 8b 3f             	mov    (%rdi),%rdi
  40663a:	44 89 f5             	mov    %r14d,%ebp
  40663d:	e8 1e c7 ff ff       	callq  402d60 <atoi@plt>
  406642:	89 05 18 b0 23 00    	mov    %eax,0x23b018(%rip)        # 641660 <max_age>
  406648:	e9 03 fb ff ff       	jmpq   406150 <parse_args+0x1f0>
	else if ( strcmp( argv[argn], "-P" ) == 0 && argn + 1 < argc )
  40664d:	be a0 03 42 00       	mov    $0x4203a0,%esi
  406652:	48 89 df             	mov    %rbx,%rdi
  406655:	e8 e6 c7 ff ff       	callq  402e40 <strcmp@plt>
  40665a:	85 c0                	test   %eax,%eax
  40665c:	75 9f                	jne    4065fd <parse_args+0x69d>
  40665e:	8d 45 01             	lea    0x1(%rbp),%eax
  406661:	44 39 e0             	cmp    %r12d,%eax
  406664:	7d 2d                	jge    406693 <parse_args+0x733>
	    p3p = argv[argn];
  406666:	48 63 d0             	movslq %eax,%rdx
  406669:	49 8d 7c d5 00       	lea    0x0(%r13,%rdx,8),%rdi
  40666e:	48 89 fa             	mov    %rdi,%rdx
  406671:	48 c1 ea 03          	shr    $0x3,%rdx
  406675:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40667c:	0f 85 84 00 00 00    	jne    406706 <parse_args+0x7a6>
  406682:	48 8b 17             	mov    (%rdi),%rdx
  406685:	89 c5                	mov    %eax,%ebp
  406687:	48 89 15 12 b0 23 00 	mov    %rdx,0x23b012(%rip)        # 6416a0 <p3p>
  40668e:	e9 bd fa ff ff       	jmpq   406150 <parse_args+0x1f0>
	else if ( strcmp( argv[argn], "-D" ) == 0 )
  406693:	be 20 04 42 00       	mov    $0x420420,%esi
  406698:	48 89 df             	mov    %rbx,%rdi
  40669b:	e8 a0 c7 ff ff       	callq  402e40 <strcmp@plt>
  4066a0:	85 c0                	test   %eax,%eax
  4066a2:	75 3a                	jne    4066de <parse_args+0x77e>
	    debug = 1;
  4066a4:	c7 05 f2 b4 23 00 01 	movl   $0x1,0x23b4f2(%rip)        # 641ba0 <debug>
  4066ab:	00 00 00 
  4066ae:	e9 9d fa ff ff       	jmpq   406150 <parse_args+0x1f0>
	    port = (unsigned short) atoi( argv[argn] );
  4066b3:	e8 98 cb ff ff       	callq  403250 <__asan_report_load8@plt>
	    dir = argv[argn];
  4066b8:	e8 93 cb ff ff       	callq  403250 <__asan_report_load8@plt>
	    read_config( argv[argn] );
  4066bd:	e8 8e cb ff ff       	callq  403250 <__asan_report_load8@plt>
	    data_dir = argv[argn];
  4066c2:	e8 89 cb ff ff       	callq  403250 <__asan_report_load8@plt>
	    throttlefile = argv[argn];
  4066c7:	e8 84 cb ff ff       	callq  403250 <__asan_report_load8@plt>
	    cgi_pattern = argv[argn];
  4066cc:	e8 7f cb ff ff       	callq  403250 <__asan_report_load8@plt>
    while ( argn < argc && argv[argn][0] == '-' )
  4066d1:	e8 7a cb ff ff       	callq  403250 <__asan_report_load8@plt>
  4066d6:	48 89 df             	mov    %rbx,%rdi
  4066d9:	e8 32 ca ff ff       	callq  403110 <__asan_report_load1@plt>
	    usage();
  4066de:	e8 5d c9 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  4066e3:	e8 b8 e8 ff ff       	callq  404fa0 <usage>
	    user = argv[argn];
  4066e8:	e8 63 cb ff ff       	callq  403250 <__asan_report_load8@plt>
	    hostname = argv[argn];
  4066ed:	e8 5e cb ff ff       	callq  403250 <__asan_report_load8@plt>
	    logfile = argv[argn];
  4066f2:	e8 59 cb ff ff       	callq  403250 <__asan_report_load8@plt>
	    pidfile = argv[argn];
  4066f7:	e8 54 cb ff ff       	callq  403250 <__asan_report_load8@plt>
	    charset = argv[argn];
  4066fc:	e8 4f cb ff ff       	callq  403250 <__asan_report_load8@plt>
	    max_age = atoi( argv[argn] );
  406701:	e8 4a cb ff ff       	callq  403250 <__asan_report_load8@plt>
	    p3p = argv[argn];
  406706:	e8 45 cb ff ff       	callq  403250 <__asan_report_load8@plt>
  40670b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000406710 <read_throttlefile>:
    {
  406710:	41 57                	push   %r15
  406712:	41 56                	push   %r14
  406714:	41 55                	push   %r13
  406716:	41 54                	push   %r12
  406718:	55                   	push   %rbp
  406719:	53                   	push   %rbx
  40671a:	48 81 ec 98 28 00 00 	sub    $0x2898,%rsp
  406721:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  406726:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
  40672b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  406730:	8b 05 ca ab 23 00    	mov    0x23abca(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  406736:	85 c0                	test   %eax,%eax
  406738:	0f 85 c1 05 00 00    	jne    406cff <read_throttlefile+0x5ef>
  40673e:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    fp = fopen( throttlefile, "r" );
  406743:	be 20 f6 41 00       	mov    $0x41f620,%esi
    {
  406748:	48 c7 00 b3 8a b5 41 	movq   $0x41b58ab3,(%rax)
  40674f:	4c 8d a8 60 28 00 00 	lea    0x2860(%rax),%r13
  406756:	48 c7 40 08 a8 1c 42 	movq   $0x421ca8,0x8(%rax)
  40675d:	00 
  40675e:	48 c7 40 10 10 67 40 	movq   $0x406710,0x10(%rax)
  406765:	00 
  406766:	48 c1 e8 03          	shr    $0x3,%rax
    fp = fopen( throttlefile, "r" );
  40676a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    {
  40676f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  406774:	c7 80 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rax)
  40677b:	f1 f1 f1 
  40677e:	c7 80 04 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff8004(%rax)
  406785:	f2 f2 f2 
  406788:	c7 80 08 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8008(%rax)
  40678f:	f2 f2 f2 
  406792:	c7 80 0c 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff800c(%rax)
  406799:	f2 f2 f2 
  40679c:	c7 80 10 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8010(%rax)
  4067a3:	f2 f2 f2 
  4067a6:	c7 80 14 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8014(%rax)
  4067ad:	00 f2 f2 
  4067b0:	c7 80 18 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8018(%rax)
  4067b7:	f2 f2 f2 
  4067ba:	c7 80 8c 82 ff 7f 00 	movl   $0xf2f2f200,0x7fff828c(%rax)
  4067c1:	f2 f2 f2 
  4067c4:	c7 80 90 82 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8290(%rax)
  4067cb:	f2 f2 f2 
  4067ce:	c7 80 04 85 ff 7f 00 	movl   $0xf2f2f200,0x7fff8504(%rax)
  4067d5:	f2 f2 f2 
  4067d8:	c7 80 08 85 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8508(%rax)
  4067df:	f3 f3 f3 
    fp = fopen( throttlefile, "r" );
  4067e2:	e8 19 c7 ff ff       	callq  402f00 <fopen@plt>
  4067e7:	49 89 c6             	mov    %rax,%r14
    if ( fp == (FILE*) 0 )
  4067ea:	48 85 c0             	test   %rax,%rax
  4067ed:	0f 84 dc 04 00 00    	je     406ccf <read_throttlefile+0x5bf>
    (void) gettimeofday( &tv, (struct timezone*) 0 );
  4067f3:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
  4067f8:	31 f6                	xor    %esi,%esi
  4067fa:	48 8d bb a0 00 00 00 	lea    0xa0(%rbx),%rdi
  406801:	48 8d ab e0 00 00 00 	lea    0xe0(%rbx),%rbp
  406808:	e8 f3 ca ff ff       	callq  403300 <gettimeofday@plt>
    while ( fgets( buf, sizeof(buf), fp ) != (char*) 0 )
  40680d:	48 89 d8             	mov    %rbx,%rax
		( buf[len-1] == ' ' || buf[len-1] == '\t' ||
  406810:	48 bb 00 26 00 00 01 	movabs $0x100002600,%rbx
  406817:	00 00 00 
  40681a:	48 05 df 00 00 00    	add    $0xdf,%rax
  406820:	48 89 04 24          	mov    %rax,(%rsp)
  406824:	0f 1f 40 00          	nopl   0x0(%rax)
    while ( fgets( buf, sizeof(buf), fp ) != (char*) 0 )
  406828:	4c 89 f2             	mov    %r14,%rdx
  40682b:	be 88 13 00 00       	mov    $0x1388,%esi
  406830:	48 89 ef             	mov    %rbp,%rdi
  406833:	e8 68 ca ff ff       	callq  4032a0 <fgets@plt>
  406838:	48 85 c0             	test   %rax,%rax
  40683b:	0f 84 ff 03 00 00    	je     406c40 <read_throttlefile+0x530>
	cp = strchr( buf, '#' );
  406841:	be 23 00 00 00       	mov    $0x23,%esi
  406846:	48 89 ef             	mov    %rbp,%rdi
  406849:	e8 72 cb ff ff       	callq  4033c0 <strchr@plt>
	if ( cp != (char*) 0 )
  40684e:	48 85 c0             	test   %rax,%rax
  406851:	74 23                	je     406876 <read_throttlefile+0x166>
	    *cp = '\0';
  406853:	48 89 c2             	mov    %rax,%rdx
  406856:	48 89 c1             	mov    %rax,%rcx
  406859:	48 c1 ea 03          	shr    $0x3,%rdx
  40685d:	83 e1 07             	and    $0x7,%ecx
  406860:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  406867:	38 ca                	cmp    %cl,%dl
  406869:	7f 08                	jg     406873 <read_throttlefile+0x163>
  40686b:	84 d2                	test   %dl,%dl
  40686d:	0f 85 54 04 00 00    	jne    406cc7 <read_throttlefile+0x5b7>
  406873:	c6 00 00             	movb   $0x0,(%rax)
	len = strlen( buf );
  406876:	48 89 ef             	mov    %rbp,%rdi
  406879:	e8 02 c4 ff ff       	callq  402c80 <strlen@plt>
	while ( len > 0 &&
  40687e:	48 85 c0             	test   %rax,%rax
  406881:	74 a5                	je     406828 <read_throttlefile+0x118>
		( buf[len-1] == ' ' || buf[len-1] == '\t' ||
  406883:	8d 50 ff             	lea    -0x1(%rax),%edx
  406886:	48 63 fa             	movslq %edx,%rdi
  406889:	48 8d 4c 3d 00       	lea    0x0(%rbp,%rdi,1),%rcx
  40688e:	48 89 ce             	mov    %rcx,%rsi
  406891:	49 89 c8             	mov    %rcx,%r8
  406894:	48 c1 ee 03          	shr    $0x3,%rsi
  406898:	41 83 e0 07          	and    $0x7,%r8d
  40689c:	0f b6 b6 00 80 ff 7f 	movzbl 0x7fff8000(%rsi),%esi
  4068a3:	44 38 c6             	cmp    %r8b,%sil
  4068a6:	7f 09                	jg     4068b1 <read_throttlefile+0x1a1>
  4068a8:	40 84 f6             	test   %sil,%sil
  4068ab:	0f 85 14 05 00 00    	jne    406dc5 <read_throttlefile+0x6b5>
  4068b1:	41 0f b6 8c 3d 80 d8 	movzbl -0x2780(%r13,%rdi,1),%ecx
  4068b8:	ff ff 
  4068ba:	80 f9 20             	cmp    $0x20,%cl
  4068bd:	0f 86 bd 00 00 00    	jbe    406980 <read_throttlefile+0x270>
  4068c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	if ( sscanf( buf, " %4900[^ \t] %ld-%ld", pattern, &min_limit, &max_limit ) == 3 )
  4068c8:	49 8d 85 00 d8 ff ff 	lea    -0x2800(%r13),%rax
  4068cf:	4d 8d bd c0 d7 ff ff 	lea    -0x2840(%r13),%r15
  4068d6:	be a0 06 42 00       	mov    $0x4206a0,%esi
  4068db:	48 89 ef             	mov    %rbp,%rdi
  4068de:	4d 8d a5 40 ec ff ff 	lea    -0x13c0(%r13),%r12
  4068e5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4068ea:	48 89 c1             	mov    %rax,%rcx
  4068ed:	4d 89 f8             	mov    %r15,%r8
  4068f0:	31 c0                	xor    %eax,%eax
  4068f2:	4c 89 e2             	mov    %r12,%rdx
  4068f5:	e8 16 c3 ff ff       	callq  402c10 <__isoc99_sscanf@plt>
  4068fa:	83 f8 03             	cmp    $0x3,%eax
  4068fd:	0f 84 2e 01 00 00    	je     406a31 <read_throttlefile+0x321>
	else if ( sscanf( buf, " %4900[^ \t] %ld", pattern, &max_limit ) == 2 )
  406903:	31 c0                	xor    %eax,%eax
  406905:	4c 89 f9             	mov    %r15,%rcx
  406908:	4c 89 e2             	mov    %r12,%rdx
  40690b:	be a0 04 42 00       	mov    $0x4204a0,%esi
  406910:	48 89 ef             	mov    %rbp,%rdi
  406913:	e8 f8 c2 ff ff       	callq  402c10 <__isoc99_sscanf@plt>
  406918:	83 f8 02             	cmp    $0x2,%eax
  40691b:	0f 84 ef 00 00 00    	je     406a10 <read_throttlefile+0x300>
	    syslog( LOG_CRIT,
  406921:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  406926:	31 c0                	xor    %eax,%eax
  406928:	48 89 e9             	mov    %rbp,%rcx
  40692b:	be e0 04 42 00       	mov    $0x4204e0,%esi
  406930:	bf 02 00 00 00       	mov    $0x2,%edi
  406935:	e8 06 c3 ff ff       	callq  402c40 <syslog@plt>
	    (void) fprintf( stderr,
  40693a:	b8 f0 12 64 00       	mov    $0x6412f0,%eax
  40693f:	48 8b 15 9a b2 23 00 	mov    0x23b29a(%rip),%rdx        # 641be0 <argv0>
  406946:	48 c1 e8 03          	shr    $0x3,%rax
  40694a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  406951:	0f 85 64 04 00 00    	jne    406dbb <read_throttlefile+0x6ab>
  406957:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  40695c:	49 89 e8             	mov    %rbp,%r8
  40695f:	be 40 05 42 00       	mov    $0x420540,%esi
  406964:	31 c0                	xor    %eax,%eax
  406966:	48 8b 3d 83 a9 23 00 	mov    0x23a983(%rip),%rdi        # 6412f0 <stderr@@GLIBC_2.2.5>
  40696d:	e8 be c3 ff ff       	callq  402d30 <fprintf@plt>
	    continue;
  406972:	e9 b1 fe ff ff       	jmpq   406828 <read_throttlefile+0x118>
  406977:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40697e:	00 00 
		  buf[len-1] == '\n' || buf[len-1] == '\r' ) )
  406980:	48 0f a3 cb          	bt     %rcx,%rbx
  406984:	0f 83 3e ff ff ff    	jae    4068c8 <read_throttlefile+0x1b8>
  40698a:	48 63 f0             	movslq %eax,%rsi
  40698d:	89 d2                	mov    %edx,%edx
  40698f:	48 03 34 24          	add    (%rsp),%rsi
  406993:	48 01 ef             	add    %rbp,%rdi
  406996:	48 29 d6             	sub    %rdx,%rsi
  406999:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    buf[--len] = '\0';
  4069a0:	48 89 f8             	mov    %rdi,%rax
  4069a3:	48 89 fa             	mov    %rdi,%rdx
  4069a6:	48 c1 e8 03          	shr    $0x3,%rax
  4069aa:	83 e2 07             	and    $0x7,%edx
  4069ad:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4069b4:	38 d0                	cmp    %dl,%al
  4069b6:	7f 08                	jg     4069c0 <read_throttlefile+0x2b0>
  4069b8:	84 c0                	test   %al,%al
  4069ba:	0f 85 e5 02 00 00    	jne    406ca5 <read_throttlefile+0x595>
  4069c0:	c6 07 00             	movb   $0x0,(%rdi)
	while ( len > 0 &&
  4069c3:	48 39 f7             	cmp    %rsi,%rdi
  4069c6:	0f 84 5c fe ff ff    	je     406828 <read_throttlefile+0x118>
		( buf[len-1] == ' ' || buf[len-1] == '\t' ||
  4069cc:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  4069d0:	48 89 c2             	mov    %rax,%rdx
  4069d3:	48 89 c1             	mov    %rax,%rcx
  4069d6:	48 c1 ea 03          	shr    $0x3,%rdx
  4069da:	83 e1 07             	and    $0x7,%ecx
  4069dd:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  4069e4:	38 ca                	cmp    %cl,%dl
  4069e6:	7f 08                	jg     4069f0 <read_throttlefile+0x2e0>
  4069e8:	84 d2                	test   %dl,%dl
  4069ea:	0f 85 ba 02 00 00    	jne    406caa <read_throttlefile+0x59a>
  4069f0:	0f b6 57 ff          	movzbl -0x1(%rdi),%edx
  4069f4:	80 fa 20             	cmp    $0x20,%dl
  4069f7:	0f 87 cb fe ff ff    	ja     4068c8 <read_throttlefile+0x1b8>
		  buf[len-1] == '\n' || buf[len-1] == '\r' ) )
  4069fd:	48 0f a3 d3          	bt     %rdx,%rbx
  406a01:	48 89 c7             	mov    %rax,%rdi
  406a04:	72 9a                	jb     4069a0 <read_throttlefile+0x290>
  406a06:	e9 bd fe ff ff       	jmpq   4068c8 <read_throttlefile+0x1b8>
  406a0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	    min_limit = 0;
  406a10:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  406a15:	48 c1 e8 03          	shr    $0x3,%rax
  406a19:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  406a20:	0f 85 19 03 00 00    	jne    406d3f <read_throttlefile+0x62f>
  406a26:	49 c7 85 00 d8 ff ff 	movq   $0x0,-0x2800(%r13)
  406a2d:	00 00 00 00 
	if ( pattern[0] == '/' )
  406a31:	4c 89 e0             	mov    %r12,%rax
  406a34:	48 c1 e8 03          	shr    $0x3,%rax
  406a38:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  406a3f:	84 c0                	test   %al,%al
  406a41:	74 06                	je     406a49 <read_throttlefile+0x339>
  406a43:	0f 8e 69 02 00 00    	jle    406cb2 <read_throttlefile+0x5a2>
  406a49:	41 80 bd 40 ec ff ff 	cmpb   $0x2f,-0x13c0(%r13)
  406a50:	2f 
  406a51:	75 1a                	jne    406a6d <read_throttlefile+0x35d>
  406a53:	e9 d6 01 00 00       	jmpq   406c2e <read_throttlefile+0x51e>
  406a58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  406a5f:	00 
	    (void) strcpy( cp + 1, cp + 2 );
  406a60:	48 8d 70 02          	lea    0x2(%rax),%rsi
  406a64:	48 8d 78 01          	lea    0x1(%rax),%rdi
  406a68:	e8 a3 c4 ff ff       	callq  402f10 <strcpy@plt>
	while ( ( cp = strstr( pattern, "|/" ) ) != (char*) 0 )
  406a6d:	be a0 05 42 00       	mov    $0x4205a0,%esi
  406a72:	4c 89 e7             	mov    %r12,%rdi
  406a75:	e8 06 c9 ff ff       	callq  403380 <strstr@plt>
  406a7a:	48 85 c0             	test   %rax,%rax
  406a7d:	75 e1                	jne    406a60 <read_throttlefile+0x350>
	if ( numthrottles >= maxthrottles )
  406a7f:	48 63 15 5a ab 23 00 	movslq 0x23ab5a(%rip),%rdx        # 6415e0 <numthrottles>
  406a86:	8b 05 14 ab 23 00    	mov    0x23ab14(%rip),%eax        # 6415a0 <maxthrottles>
  406a8c:	39 c2                	cmp    %eax,%edx
  406a8e:	0f 8c 8e 01 00 00    	jl     406c22 <read_throttlefile+0x512>
	    if ( maxthrottles == 0 )
  406a94:	85 c0                	test   %eax,%eax
  406a96:	0f 85 5c 01 00 00    	jne    406bf8 <read_throttlefile+0x4e8>
		maxthrottles = 100;     /* arbitrary */
  406a9c:	c7 05 fa aa 23 00 64 	movl   $0x64,0x23aafa(%rip)        # 6415a0 <maxthrottles>
  406aa3:	00 00 00 
		throttles = NEW( throttletab, maxthrottles );
  406aa6:	bf c0 12 00 00       	mov    $0x12c0,%edi
  406aab:	e8 00 c6 ff ff       	callq  4030b0 <malloc@plt>
  406ab0:	48 89 05 69 ab 23 00 	mov    %rax,0x23ab69(%rip)        # 641620 <throttles>
	    if ( throttles == (throttletab*) 0 )
  406ab7:	48 85 c0             	test   %rax,%rax
  406aba:	0f 84 96 02 00 00    	je     406d56 <read_throttlefile+0x646>
  406ac0:	48 63 15 19 ab 23 00 	movslq 0x23ab19(%rip),%rdx        # 6415e0 <numthrottles>
	throttles[numthrottles].pattern = e_strdup( pattern );
  406ac7:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
  406acb:	4c 89 e7             	mov    %r12,%rdi
  406ace:	48 c1 e2 04          	shl    $0x4,%rdx
  406ad2:	48 01 c2             	add    %rax,%rdx
  406ad5:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
  406ada:	e8 71 eb ff ff       	callq  405650 <e_strdup>
  406adf:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  406ae4:	48 89 d1             	mov    %rdx,%rcx
  406ae7:	48 c1 e9 03          	shr    $0x3,%rcx
  406aeb:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  406af2:	0f 85 56 02 00 00    	jne    406d4e <read_throttlefile+0x63e>
  406af8:	48 89 02             	mov    %rax,(%rdx)
	throttles[numthrottles].max_limit = max_limit;
  406afb:	48 63 05 de aa 23 00 	movslq 0x23aade(%rip),%rax        # 6415e0 <numthrottles>
  406b02:	4c 89 f9             	mov    %r15,%rcx
  406b05:	48 c1 e9 03          	shr    $0x3,%rcx
  406b09:	48 89 c2             	mov    %rax,%rdx
  406b0c:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  406b10:	48 c1 e0 04          	shl    $0x4,%rax
  406b14:	48 03 05 05 ab 23 00 	add    0x23ab05(%rip),%rax        # 641620 <throttles>
  406b1b:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  406b22:	0f 85 97 01 00 00    	jne    406cbf <read_throttlefile+0x5af>
  406b28:	48 8d 78 08          	lea    0x8(%rax),%rdi
  406b2c:	49 8b 8d c0 d7 ff ff 	mov    -0x2840(%r13),%rcx
  406b33:	48 89 fe             	mov    %rdi,%rsi
  406b36:	48 c1 ee 03          	shr    $0x3,%rsi
  406b3a:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  406b41:	0f 85 73 01 00 00    	jne    406cba <read_throttlefile+0x5aa>
  406b47:	48 89 48 08          	mov    %rcx,0x8(%rax)
	throttles[numthrottles].min_limit = min_limit;
  406b4b:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  406b50:	48 c1 e9 03          	shr    $0x3,%rcx
  406b54:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  406b5b:	0f 85 46 02 00 00    	jne    406da7 <read_throttlefile+0x697>
  406b61:	48 8d 78 10          	lea    0x10(%rax),%rdi
  406b65:	49 8b 8d 00 d8 ff ff 	mov    -0x2800(%r13),%rcx
  406b6c:	48 89 fe             	mov    %rdi,%rsi
  406b6f:	48 c1 ee 03          	shr    $0x3,%rsi
  406b73:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  406b7a:	0f 85 22 02 00 00    	jne    406da2 <read_throttlefile+0x692>
	throttles[numthrottles].rate = 0;
  406b80:	48 8d 78 18          	lea    0x18(%rax),%rdi
	throttles[numthrottles].min_limit = min_limit;
  406b84:	48 89 48 10          	mov    %rcx,0x10(%rax)
	throttles[numthrottles].rate = 0;
  406b88:	48 89 f9             	mov    %rdi,%rcx
  406b8b:	48 c1 e9 03          	shr    $0x3,%rcx
  406b8f:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  406b96:	0f 85 36 02 00 00    	jne    406dd2 <read_throttlefile+0x6c2>
	throttles[numthrottles].bytes_since_avg = 0;
  406b9c:	48 8d 78 20          	lea    0x20(%rax),%rdi
	throttles[numthrottles].rate = 0;
  406ba0:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  406ba7:	00 
	throttles[numthrottles].bytes_since_avg = 0;
  406ba8:	48 89 f9             	mov    %rdi,%rcx
  406bab:	48 c1 e9 03          	shr    $0x3,%rcx
  406baf:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  406bb6:	0f 85 11 02 00 00    	jne    406dcd <read_throttlefile+0x6bd>
	throttles[numthrottles].num_sending = 0;
  406bbc:	48 8d 78 28          	lea    0x28(%rax),%rdi
	throttles[numthrottles].bytes_since_avg = 0;
  406bc0:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  406bc7:	00 
	throttles[numthrottles].num_sending = 0;
  406bc8:	48 89 f9             	mov    %rdi,%rcx
  406bcb:	48 c1 e9 03          	shr    $0x3,%rcx
  406bcf:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  406bd6:	84 c9                	test   %cl,%cl
  406bd8:	74 09                	je     406be3 <read_throttlefile+0x4d3>
  406bda:	80 f9 03             	cmp    $0x3,%cl
  406bdd:	0f 8e 66 01 00 00    	jle    406d49 <read_throttlefile+0x639>
  406be3:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
	++numthrottles;
  406bea:	8d 42 01             	lea    0x1(%rdx),%eax
  406bed:	89 05 ed a9 23 00    	mov    %eax,0x23a9ed(%rip)        # 6415e0 <numthrottles>
  406bf3:	e9 30 fc ff ff       	jmpq   406828 <read_throttlefile+0x118>
		maxthrottles *= 2;
  406bf8:	01 c0                	add    %eax,%eax
		throttles = RENEW( throttles, throttletab, maxthrottles );
  406bfa:	48 8b 3d 1f aa 23 00 	mov    0x23aa1f(%rip),%rdi        # 641620 <throttles>
		maxthrottles *= 2;
  406c01:	89 05 99 a9 23 00    	mov    %eax,0x23a999(%rip)        # 6415a0 <maxthrottles>
		throttles = RENEW( throttles, throttletab, maxthrottles );
  406c07:	48 98                	cltq   
  406c09:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
  406c0d:	48 c1 e6 04          	shl    $0x4,%rsi
  406c11:	e8 9a c7 ff ff       	callq  4033b0 <realloc@plt>
  406c16:	48 89 05 03 aa 23 00 	mov    %rax,0x23aa03(%rip)        # 641620 <throttles>
  406c1d:	e9 95 fe ff ff       	jmpq   406ab7 <read_throttlefile+0x3a7>
  406c22:	48 8b 05 f7 a9 23 00 	mov    0x23a9f7(%rip),%rax        # 641620 <throttles>
  406c29:	e9 99 fe ff ff       	jmpq   406ac7 <read_throttlefile+0x3b7>
	    (void) strcpy( pattern, &pattern[1] );
  406c2e:	49 8d 74 24 01       	lea    0x1(%r12),%rsi
  406c33:	4c 89 e7             	mov    %r12,%rdi
  406c36:	e8 d5 c2 ff ff       	callq  402f10 <strcpy@plt>
  406c3b:	e9 2d fe ff ff       	jmpq   406a6d <read_throttlefile+0x35d>
    (void) fclose( fp );
  406c40:	4c 89 f7             	mov    %r14,%rdi
  406c43:	e8 c8 c6 ff ff       	callq  403310 <fclose@plt>
    {
  406c48:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  406c4d:	48 3b 44 24 20       	cmp    0x20(%rsp),%rax
  406c52:	0f 85 c4 00 00 00    	jne    406d1c <read_throttlefile+0x60c>
  406c58:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  406c5d:	66 0f ef c0          	pxor   %xmm0,%xmm0
  406c61:	48 c7 80 10 80 ff 7f 	movq   $0x0,0x7fff8010(%rax)
  406c68:	00 00 00 00 
  406c6c:	c7 80 18 80 ff 7f 00 	movl   $0x0,0x7fff8018(%rax)
  406c73:	00 00 00 
  406c76:	48 c7 80 8c 82 ff 7f 	movq   $0x0,0x7fff828c(%rax)
  406c7d:	00 00 00 00 
  406c81:	48 c7 80 04 85 ff 7f 	movq   $0x0,0x7fff8504(%rax)
  406c88:	00 00 00 00 
  406c8c:	0f 11 80 00 80 ff 7f 	movups %xmm0,0x7fff8000(%rax)
    }
  406c93:	48 81 c4 98 28 00 00 	add    $0x2898,%rsp
  406c9a:	5b                   	pop    %rbx
  406c9b:	5d                   	pop    %rbp
  406c9c:	41 5c                	pop    %r12
  406c9e:	41 5d                	pop    %r13
  406ca0:	41 5e                	pop    %r14
  406ca2:	41 5f                	pop    %r15
  406ca4:	c3                   	retq   
	    buf[--len] = '\0';
  406ca5:	e8 86 c4 ff ff       	callq  403130 <__asan_report_store1@plt>
		( buf[len-1] == ' ' || buf[len-1] == '\t' ||
  406caa:	48 89 c7             	mov    %rax,%rdi
  406cad:	e8 5e c4 ff ff       	callq  403110 <__asan_report_load1@plt>
	if ( pattern[0] == '/' )
  406cb2:	4c 89 e7             	mov    %r12,%rdi
  406cb5:	e8 56 c4 ff ff       	callq  403110 <__asan_report_load1@plt>
	throttles[numthrottles].max_limit = max_limit;
  406cba:	e8 e1 c2 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  406cbf:	4c 89 ff             	mov    %r15,%rdi
  406cc2:	e8 89 c5 ff ff       	callq  403250 <__asan_report_load8@plt>
	    *cp = '\0';
  406cc7:	48 89 c7             	mov    %rax,%rdi
  406cca:	e8 61 c4 ff ff       	callq  403130 <__asan_report_store1@plt>
	syslog( LOG_CRIT, "%.80s - %m", throttlefile );
  406ccf:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  406cd4:	be 60 04 42 00       	mov    $0x420460,%esi
  406cd9:	31 c0                	xor    %eax,%eax
  406cdb:	bf 02 00 00 00       	mov    $0x2,%edi
  406ce0:	48 89 da             	mov    %rbx,%rdx
  406ce3:	e8 58 bf ff ff       	callq  402c40 <syslog@plt>
	perror( throttlefile );
  406ce8:	48 89 df             	mov    %rbx,%rdi
  406ceb:	e8 b0 c1 ff ff       	callq  402ea0 <perror@plt>
	exit( 1 );
  406cf0:	e8 4b c3 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  406cf5:	bf 01 00 00 00       	mov    $0x1,%edi
  406cfa:	e8 e1 c3 ff ff       	callq  4030e0 <exit@plt>
    {
  406cff:	bf 60 28 00 00       	mov    $0x2860,%edi
  406d04:	e8 b7 bf ff ff       	callq  402cc0 <__asan_stack_malloc_8@plt>
  406d09:	48 85 c0             	test   %rax,%rax
  406d0c:	48 0f 44 44 24 20    	cmove  0x20(%rsp),%rax
  406d12:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  406d17:	e9 22 fa ff ff       	jmpq   40673e <read_throttlefile+0x2e>
  406d1c:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  406d21:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
  406d26:	be 60 28 00 00       	mov    $0x2860,%esi
  406d2b:	48 c7 00 0e 36 e0 45 	movq   $0x45e0360e,(%rax)
  406d32:	48 89 c7             	mov    %rax,%rdi
  406d35:	e8 06 c0 ff ff       	callq  402d40 <__asan_stack_free_8@plt>
  406d3a:	e9 54 ff ff ff       	jmpq   406c93 <read_throttlefile+0x583>
	    min_limit = 0;
  406d3f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  406d44:	e8 57 c2 ff ff       	callq  402fa0 <__asan_report_store8@plt>
	throttles[numthrottles].num_sending = 0;
  406d49:	e8 a2 be ff ff       	callq  402bf0 <__asan_report_store4@plt>
	throttles[numthrottles].pattern = e_strdup( pattern );
  406d4e:	48 89 d7             	mov    %rdx,%rdi
  406d51:	e8 4a c2 ff ff       	callq  402fa0 <__asan_report_store8@plt>
		syslog( LOG_CRIT, "out of memory allocating a throttletab" );
  406d56:	31 c0                	xor    %eax,%eax
  406d58:	be e0 05 42 00       	mov    $0x4205e0,%esi
  406d5d:	bf 02 00 00 00       	mov    $0x2,%edi
  406d62:	e8 d9 be ff ff       	callq  402c40 <syslog@plt>
		(void) fprintf(
  406d67:	b8 f0 12 64 00       	mov    $0x6412f0,%eax
  406d6c:	48 8b 15 6d ae 23 00 	mov    0x23ae6d(%rip),%rdx        # 641be0 <argv0>
  406d73:	48 c1 e8 03          	shr    $0x3,%rax
  406d77:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  406d7e:	75 31                	jne    406db1 <read_throttlefile+0x6a1>
  406d80:	48 8b 3d 69 a5 23 00 	mov    0x23a569(%rip),%rdi        # 6412f0 <stderr@@GLIBC_2.2.5>
  406d87:	be 40 06 42 00       	mov    $0x420640,%esi
  406d8c:	31 c0                	xor    %eax,%eax
  406d8e:	e8 9d bf ff ff       	callq  402d30 <fprintf@plt>
		exit( 1 );
  406d93:	e8 a8 c2 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  406d98:	bf 01 00 00 00       	mov    $0x1,%edi
  406d9d:	e8 3e c3 ff ff       	callq  4030e0 <exit@plt>
	throttles[numthrottles].min_limit = min_limit;
  406da2:	e8 f9 c1 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  406da7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  406dac:	e8 9f c4 ff ff       	callq  403250 <__asan_report_load8@plt>
		(void) fprintf(
  406db1:	bf f0 12 64 00       	mov    $0x6412f0,%edi
  406db6:	e8 95 c4 ff ff       	callq  403250 <__asan_report_load8@plt>
	    (void) fprintf( stderr,
  406dbb:	bf f0 12 64 00       	mov    $0x6412f0,%edi
  406dc0:	e8 8b c4 ff ff       	callq  403250 <__asan_report_load8@plt>
		( buf[len-1] == ' ' || buf[len-1] == '\t' ||
  406dc5:	48 89 cf             	mov    %rcx,%rdi
  406dc8:	e8 43 c3 ff ff       	callq  403110 <__asan_report_load1@plt>
	throttles[numthrottles].bytes_since_avg = 0;
  406dcd:	e8 ce c1 ff ff       	callq  402fa0 <__asan_report_store8@plt>
	throttles[numthrottles].rate = 0;
  406dd2:	e8 c9 c1 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  406dd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  406dde:	00 00 

0000000000406de0 <re_open_logfile>:
    if ( no_log || hs == (httpd_server*) 0 )
  406de0:	8b 05 7a ac 23 00    	mov    0x23ac7a(%rip),%eax        # 641a60 <no_log>
  406de6:	85 c0                	test   %eax,%eax
  406de8:	75 36                	jne    406e20 <re_open_logfile+0x40>
  406dea:	48 83 3d 2e a6 23 00 	cmpq   $0x0,0x23a62e(%rip)        # 641420 <hs>
  406df1:	00 
  406df2:	74 2c                	je     406e20 <re_open_logfile+0x40>
    if ( logfile != (char*) 0 && strcmp( logfile, "-" ) != 0 )
  406df4:	48 8b 3d 25 aa 23 00 	mov    0x23aa25(%rip),%rdi        # 641820 <logfile>
  406dfb:	48 85 ff             	test   %rdi,%rdi
  406dfe:	74 20                	je     406e20 <re_open_logfile+0x40>
    {
  406e00:	55                   	push   %rbp
    if ( logfile != (char*) 0 && strcmp( logfile, "-" ) != 0 )
  406e01:	be e0 06 42 00       	mov    $0x4206e0,%esi
    {
  406e06:	53                   	push   %rbx
  406e07:	48 83 ec 08          	sub    $0x8,%rsp
    if ( logfile != (char*) 0 && strcmp( logfile, "-" ) != 0 )
  406e0b:	e8 30 c0 ff ff       	callq  402e40 <strcmp@plt>
  406e10:	85 c0                	test   %eax,%eax
  406e12:	75 14                	jne    406e28 <re_open_logfile+0x48>
    }
  406e14:	48 83 c4 08          	add    $0x8,%rsp
  406e18:	5b                   	pop    %rbx
  406e19:	5d                   	pop    %rbp
  406e1a:	c3                   	retq   
  406e1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  406e20:	c3                   	retq   
  406e21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	syslog( LOG_NOTICE, "re-opening logfile" );
  406e28:	31 c0                	xor    %eax,%eax
  406e2a:	be 20 07 42 00       	mov    $0x420720,%esi
  406e2f:	bf 05 00 00 00       	mov    $0x5,%edi
  406e34:	e8 07 be ff ff       	callq  402c40 <syslog@plt>
	logfp = fopen( logfile, "a" );
  406e39:	48 8b 3d e0 a9 23 00 	mov    0x23a9e0(%rip),%rdi        # 641820 <logfile>
  406e40:	be 60 07 42 00       	mov    $0x420760,%esi
  406e45:	e8 b6 c0 ff ff       	callq  402f00 <fopen@plt>
	retchmod = chmod( logfile, S_IRUSR|S_IWUSR );
  406e4a:	48 8b 2d cf a9 23 00 	mov    0x23a9cf(%rip),%rbp        # 641820 <logfile>
  406e51:	be 80 01 00 00       	mov    $0x180,%esi
	logfp = fopen( logfile, "a" );
  406e56:	48 89 c3             	mov    %rax,%rbx
	retchmod = chmod( logfile, S_IRUSR|S_IWUSR );
  406e59:	48 89 ef             	mov    %rbp,%rdi
  406e5c:	e8 bf c0 ff ff       	callq  402f20 <chmod@plt>
	if ( logfp == (FILE*) 0 || retchmod != 0 )
  406e61:	48 85 db             	test   %rbx,%rbx
  406e64:	74 3a                	je     406ea0 <re_open_logfile+0xc0>
  406e66:	85 c0                	test   %eax,%eax
  406e68:	75 36                	jne    406ea0 <re_open_logfile+0xc0>
	(void) fcntl( fileno( logfp ), F_SETFD, 1 );
  406e6a:	48 89 df             	mov    %rbx,%rdi
  406e6d:	e8 4e c1 ff ff       	callq  402fc0 <fileno@plt>
  406e72:	be 02 00 00 00       	mov    $0x2,%esi
  406e77:	ba 01 00 00 00       	mov    $0x1,%edx
  406e7c:	89 c7                	mov    %eax,%edi
  406e7e:	31 c0                	xor    %eax,%eax
  406e80:	e8 7b bf ff ff       	callq  402e00 <fcntl@plt>
	httpd_set_logfp( hs, logfp );
  406e85:	48 8b 3d 94 a5 23 00 	mov    0x23a594(%rip),%rdi        # 641420 <hs>
    }
  406e8c:	48 83 c4 08          	add    $0x8,%rsp
	httpd_set_logfp( hs, logfp );
  406e90:	48 89 de             	mov    %rbx,%rsi
    }
  406e93:	5b                   	pop    %rbx
  406e94:	5d                   	pop    %rbp
	httpd_set_logfp( hs, logfp );
  406e95:	e9 46 61 00 00       	jmpq   40cfe0 <httpd_set_logfp>
  406e9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    }
  406ea0:	48 83 c4 08          	add    $0x8,%rsp
	    syslog( LOG_CRIT, "re-opening %.80s - %m", logfile );
  406ea4:	48 89 ea             	mov    %rbp,%rdx
  406ea7:	be a0 07 42 00       	mov    $0x4207a0,%esi
  406eac:	31 c0                	xor    %eax,%eax
    }
  406eae:	5b                   	pop    %rbx
	    syslog( LOG_CRIT, "re-opening %.80s - %m", logfile );
  406eaf:	bf 02 00 00 00       	mov    $0x2,%edi
    }
  406eb4:	5d                   	pop    %rbp
	    syslog( LOG_CRIT, "re-opening %.80s - %m", logfile );
  406eb5:	e9 86 bd ff ff       	jmpq   402c40 <syslog@plt>
  406eba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000406ec0 <handle_newconnect>:
    {
  406ec0:	41 56                	push   %r14
  406ec2:	41 55                	push   %r13
	c->active_at = tvP->tv_sec;
  406ec4:	49 89 fd             	mov    %rdi,%r13
    {
  406ec7:	41 54                	push   %r12
	c->active_at = tvP->tv_sec;
  406ec9:	49 c1 ed 03          	shr    $0x3,%r13
    {
  406ecd:	41 89 f4             	mov    %esi,%r12d
  406ed0:	55                   	push   %rbp
  406ed1:	48 89 fd             	mov    %rdi,%rbp
  406ed4:	53                   	push   %rbx
  406ed5:	48 83 ec 10          	sub    $0x10,%rsp
  406ed9:	8b 05 41 a6 23 00    	mov    0x23a641(%rip),%eax        # 641520 <num_connects>
	if ( num_connects >= max_connects )
  406edf:	39 05 fb a5 23 00    	cmp    %eax,0x23a5fb(%rip)        # 6414e0 <max_connects>
  406ee5:	0f 8e e5 02 00 00    	jle    4071d0 <handle_newconnect+0x310>
	if ( first_free_connect == -1 || connects[first_free_connect].conn_state != CNST_FREE )
  406eeb:	48 63 05 ae a5 23 00 	movslq 0x23a5ae(%rip),%rax        # 6414a0 <first_free_connect>
  406ef2:	83 f8 ff             	cmp    $0xffffffff,%eax
  406ef5:	0f 84 f5 02 00 00    	je     4071f0 <handle_newconnect+0x330>
  406efb:	48 8d 1c c0          	lea    (%rax,%rax,8),%rbx
  406eff:	48 c1 e3 04          	shl    $0x4,%rbx
  406f03:	48 03 1d 56 a6 23 00 	add    0x23a656(%rip),%rbx        # 641560 <connects>
  406f0a:	48 89 d8             	mov    %rbx,%rax
  406f0d:	48 c1 e8 03          	shr    $0x3,%rax
  406f11:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  406f18:	84 c0                	test   %al,%al
  406f1a:	74 08                	je     406f24 <handle_newconnect+0x64>
  406f1c:	3c 03                	cmp    $0x3,%al
  406f1e:	0f 8e f4 02 00 00    	jle    407218 <handle_newconnect+0x358>
  406f24:	8b 03                	mov    (%rbx),%eax
  406f26:	85 c0                	test   %eax,%eax
  406f28:	0f 85 c2 02 00 00    	jne    4071f0 <handle_newconnect+0x330>
	if ( c->hc == (httpd_conn*) 0 )
  406f2e:	4c 8d 73 08          	lea    0x8(%rbx),%r14
  406f32:	4c 89 f0             	mov    %r14,%rax
  406f35:	48 c1 e8 03          	shr    $0x3,%rax
  406f39:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  406f40:	0f 85 ca 02 00 00    	jne    407210 <handle_newconnect+0x350>
  406f46:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  406f4a:	48 85 d2             	test   %rdx,%rdx
  406f4d:	0f 84 25 02 00 00    	je     407178 <handle_newconnect+0x2b8>
	switch ( httpd_get_conn( hs, listen_fd, c->hc ) )
  406f53:	48 8b 3d c6 a4 23 00 	mov    0x23a4c6(%rip),%rdi        # 641420 <hs>
  406f5a:	44 89 e6             	mov    %r12d,%esi
  406f5d:	e8 fe 92 00 00       	callq  410260 <httpd_get_conn>
  406f62:	85 c0                	test   %eax,%eax
  406f64:	0f 84 ee 01 00 00    	je     407158 <handle_newconnect+0x298>
  406f6a:	83 f8 02             	cmp    $0x2,%eax
  406f6d:	0f 84 cd 01 00 00    	je     407140 <handle_newconnect+0x280>
	c->conn_state = CNST_READING;
  406f73:	48 89 d8             	mov    %rbx,%rax
  406f76:	48 c1 e8 03          	shr    $0x3,%rax
  406f7a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  406f81:	84 c0                	test   %al,%al
  406f83:	74 08                	je     406f8d <handle_newconnect+0xcd>
  406f85:	3c 03                	cmp    $0x3,%al
  406f87:	0f 8e 32 02 00 00    	jle    4071bf <handle_newconnect+0x2ff>
	first_free_connect = c->next_free_connect;
  406f8d:	48 8d 7b 04          	lea    0x4(%rbx),%rdi
	c->conn_state = CNST_READING;
  406f91:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
	first_free_connect = c->next_free_connect;
  406f97:	48 89 f8             	mov    %rdi,%rax
  406f9a:	48 c1 e8 03          	shr    $0x3,%rax
  406f9e:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  406fa5:	48 89 f8             	mov    %rdi,%rax
  406fa8:	83 e0 07             	and    $0x7,%eax
  406fab:	83 c0 03             	add    $0x3,%eax
  406fae:	38 d0                	cmp    %dl,%al
  406fb0:	7c 08                	jl     406fba <handle_newconnect+0xfa>
  406fb2:	84 d2                	test   %dl,%dl
  406fb4:	0f 85 66 02 00 00    	jne    407220 <handle_newconnect+0x360>
  406fba:	8b 43 04             	mov    0x4(%rbx),%eax
	++num_connects;
  406fbd:	83 05 5c a5 23 00 01 	addl   $0x1,0x23a55c(%rip)        # 641520 <num_connects>
	c->active_at = tvP->tv_sec;
  406fc4:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  406fcb:	00 
	c->next_free_connect = -1;
  406fcc:	c7 43 04 ff ff ff ff 	movl   $0xffffffff,0x4(%rbx)
	first_free_connect = c->next_free_connect;
  406fd3:	89 05 c7 a4 23 00    	mov    %eax,0x23a4c7(%rip)        # 6414a0 <first_free_connect>
	c->active_at = tvP->tv_sec;
  406fd9:	0f 85 53 02 00 00    	jne    407232 <handle_newconnect+0x372>
  406fdf:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
  406fe3:	48 8b 45 00          	mov    0x0(%rbp),%rax
  406fe7:	48 89 fa             	mov    %rdi,%rdx
  406fea:	48 c1 ea 03          	shr    $0x3,%rdx
  406fee:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  406ff5:	0f 85 3f 02 00 00    	jne    40723a <handle_newconnect+0x37a>
	c->wakeup_timer = (Timer*) 0;
  406ffb:	48 8d 7b 60          	lea    0x60(%rbx),%rdi
	c->active_at = tvP->tv_sec;
  406fff:	48 89 43 58          	mov    %rax,0x58(%rbx)
	c->wakeup_timer = (Timer*) 0;
  407003:	48 89 f8             	mov    %rdi,%rax
  407006:	48 c1 e8 03          	shr    $0x3,%rax
  40700a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  407011:	0f 85 28 02 00 00    	jne    40723f <handle_newconnect+0x37f>
	c->linger_timer = (Timer*) 0;
  407017:	48 8d 7b 68          	lea    0x68(%rbx),%rdi
	c->wakeup_timer = (Timer*) 0;
  40701b:	48 c7 43 60 00 00 00 	movq   $0x0,0x60(%rbx)
  407022:	00 
	c->linger_timer = (Timer*) 0;
  407023:	48 89 f8             	mov    %rdi,%rax
  407026:	48 c1 e8 03          	shr    $0x3,%rax
  40702a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  407031:	0f 85 0d 02 00 00    	jne    407244 <handle_newconnect+0x384>
	c->next_byte_index = 0;
  407037:	48 8d bb 88 00 00 00 	lea    0x88(%rbx),%rdi
	c->linger_timer = (Timer*) 0;
  40703e:	48 c7 43 68 00 00 00 	movq   $0x0,0x68(%rbx)
  407045:	00 
	c->next_byte_index = 0;
  407046:	48 89 f8             	mov    %rdi,%rax
  407049:	48 c1 e8 03          	shr    $0x3,%rax
  40704d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  407054:	0f 85 ef 01 00 00    	jne    407249 <handle_newconnect+0x389>
  40705a:	48 c7 83 88 00 00 00 	movq   $0x0,0x88(%rbx)
  407061:	00 00 00 00 
	c->numtnums = 0;
  407065:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
  407069:	48 89 f8             	mov    %rdi,%rax
  40706c:	48 c1 e8 03          	shr    $0x3,%rax
  407070:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  407077:	84 c0                	test   %al,%al
  407079:	74 08                	je     407083 <handle_newconnect+0x1c3>
  40707b:	3c 03                	cmp    $0x3,%al
  40707d:	0f 8e cb 01 00 00    	jle    40724e <handle_newconnect+0x38e>
	httpd_set_ndelay( c->hc->conn_fd );
  407083:	4c 89 f0             	mov    %r14,%rax
	c->numtnums = 0;
  407086:	c7 43 38 00 00 00 00 	movl   $0x0,0x38(%rbx)
	httpd_set_ndelay( c->hc->conn_fd );
  40708d:	48 c1 e8 03          	shr    $0x3,%rax
  407091:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  407098:	0f 85 b5 01 00 00    	jne    407253 <handle_newconnect+0x393>
  40709e:	48 8b 43 08          	mov    0x8(%rbx),%rax
  4070a2:	48 8d b8 c0 02 00 00 	lea    0x2c0(%rax),%rdi
  4070a9:	48 89 fa             	mov    %rdi,%rdx
  4070ac:	48 c1 ea 03          	shr    $0x3,%rdx
  4070b0:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  4070b7:	84 d2                	test   %dl,%dl
  4070b9:	74 09                	je     4070c4 <handle_newconnect+0x204>
  4070bb:	80 fa 03             	cmp    $0x3,%dl
  4070be:	0f 8e 97 01 00 00    	jle    40725b <handle_newconnect+0x39b>
  4070c4:	8b b8 c0 02 00 00    	mov    0x2c0(%rax),%edi
  4070ca:	e8 a1 60 00 00       	callq  40d170 <httpd_set_ndelay>
	fdwatch_add_fd( c->hc->conn_fd, c, FDW_READ );
  4070cf:	4c 89 f0             	mov    %r14,%rax
  4070d2:	48 c1 e8 03          	shr    $0x3,%rax
  4070d6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4070dd:	0f 85 42 01 00 00    	jne    407225 <handle_newconnect+0x365>
  4070e3:	48 8b 43 08          	mov    0x8(%rbx),%rax
  4070e7:	48 8d b8 c0 02 00 00 	lea    0x2c0(%rax),%rdi
  4070ee:	48 89 fa             	mov    %rdi,%rdx
  4070f1:	48 c1 ea 03          	shr    $0x3,%rdx
  4070f5:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  4070fc:	84 d2                	test   %dl,%dl
  4070fe:	74 09                	je     407109 <handle_newconnect+0x249>
  407100:	80 fa 03             	cmp    $0x3,%dl
  407103:	0f 8e 24 01 00 00    	jle    40722d <handle_newconnect+0x36d>
  407109:	8b b8 c0 02 00 00    	mov    0x2c0(%rax),%edi
  40710f:	31 d2                	xor    %edx,%edx
  407111:	48 89 de             	mov    %rbx,%rsi
  407114:	e8 17 35 00 00       	callq  40a630 <fdwatch_add_fd>
	++stats_connections;
  407119:	48 83 05 b7 c2 23 00 	addq   $0x1,0x23c2b7(%rip)        # 6433d8 <stats_connections>
  407120:	01 
	if ( num_connects > stats_simultaneous )
  407121:	8b 05 f9 a3 23 00    	mov    0x23a3f9(%rip),%eax        # 641520 <num_connects>
  407127:	3b 05 b3 c2 23 00    	cmp    0x23c2b3(%rip),%eax        # 6433e0 <stats_simultaneous>
  40712d:	0f 8e ac fd ff ff    	jle    406edf <handle_newconnect+0x1f>
	    stats_simultaneous = num_connects;
  407133:	89 05 a7 c2 23 00    	mov    %eax,0x23c2a7(%rip)        # 6433e0 <stats_simultaneous>
  407139:	e9 a1 fd ff ff       	jmpq   406edf <handle_newconnect+0x1f>
  40713e:	66 90                	xchg   %ax,%ax
	    return 1;
  407140:	b8 01 00 00 00       	mov    $0x1,%eax
    }
  407145:	48 83 c4 10          	add    $0x10,%rsp
  407149:	5b                   	pop    %rbx
  40714a:	5d                   	pop    %rbp
  40714b:	41 5c                	pop    %r12
  40714d:	41 5d                	pop    %r13
  40714f:	41 5e                	pop    %r14
  407151:	c3                   	retq   
  407152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	    tmr_run( tvP );
  407158:	48 89 ef             	mov    %rbp,%rdi
  40715b:	89 44 24 0c          	mov    %eax,0xc(%rsp)
  40715f:	e8 ac 57 01 00       	callq  41c910 <tmr_run>
	    return 0;
  407164:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    }
  407168:	48 83 c4 10          	add    $0x10,%rsp
  40716c:	5b                   	pop    %rbx
  40716d:	5d                   	pop    %rbp
  40716e:	41 5c                	pop    %r12
  407170:	41 5d                	pop    %r13
  407172:	41 5e                	pop    %r14
  407174:	c3                   	retq   
  407175:	0f 1f 00             	nopl   (%rax)
	    c->hc = NEW( httpd_conn, 1 );
  407178:	bf d0 02 00 00       	mov    $0x2d0,%edi
  40717d:	e8 2e bf ff ff       	callq  4030b0 <malloc@plt>
  407182:	48 89 c2             	mov    %rax,%rdx
  407185:	48 89 43 08          	mov    %rax,0x8(%rbx)
	    if ( c->hc == (httpd_conn*) 0 )
  407189:	48 85 c0             	test   %rax,%rax
  40718c:	0f 84 d6 00 00 00    	je     407268 <handle_newconnect+0x3a8>
	    c->hc->initialized = 0;
  407192:	48 89 c1             	mov    %rax,%rcx
  407195:	48 c1 e9 03          	shr    $0x3,%rcx
  407199:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  4071a0:	84 c9                	test   %cl,%cl
  4071a2:	74 09                	je     4071ad <handle_newconnect+0x2ed>
  4071a4:	80 f9 03             	cmp    $0x3,%cl
  4071a7:	0f 8e b3 00 00 00    	jle    407260 <handle_newconnect+0x3a0>
  4071ad:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
	    ++httpd_conn_count;
  4071b3:	83 05 a6 a2 23 00 01 	addl   $0x1,0x23a2a6(%rip)        # 641460 <httpd_conn_count>
  4071ba:	e9 94 fd ff ff       	jmpq   406f53 <handle_newconnect+0x93>
	c->conn_state = CNST_READING;
  4071bf:	48 89 df             	mov    %rbx,%rdi
  4071c2:	e8 29 ba ff ff       	callq  402bf0 <__asan_report_store4@plt>
  4071c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4071ce:	00 00 
	    syslog( LOG_WARNING, "too many connections!" );
  4071d0:	31 c0                	xor    %eax,%eax
  4071d2:	be e0 07 42 00       	mov    $0x4207e0,%esi
  4071d7:	bf 04 00 00 00       	mov    $0x4,%edi
  4071dc:	e8 5f ba ff ff       	callq  402c40 <syslog@plt>
	    tmr_run( tvP );
  4071e1:	48 89 ef             	mov    %rbp,%rdi
  4071e4:	e8 27 57 01 00       	callq  41c910 <tmr_run>
	    return 0;
  4071e9:	31 c0                	xor    %eax,%eax
  4071eb:	e9 55 ff ff ff       	jmpq   407145 <handle_newconnect+0x285>
	    syslog( LOG_CRIT, "the connects free list is messed up" );
  4071f0:	bf 02 00 00 00       	mov    $0x2,%edi
  4071f5:	be 20 08 42 00       	mov    $0x420820,%esi
  4071fa:	31 c0                	xor    %eax,%eax
  4071fc:	e8 3f ba ff ff       	callq  402c40 <syslog@plt>
	    exit( 1 );
  407201:	e8 3a be ff ff       	callq  403040 <__asan_handle_no_return@plt>
  407206:	bf 01 00 00 00       	mov    $0x1,%edi
  40720b:	e8 d0 be ff ff       	callq  4030e0 <exit@plt>
	if ( c->hc == (httpd_conn*) 0 )
  407210:	4c 89 f7             	mov    %r14,%rdi
  407213:	e8 38 c0 ff ff       	callq  403250 <__asan_report_load8@plt>
	if ( first_free_connect == -1 || connects[first_free_connect].conn_state != CNST_FREE )
  407218:	48 89 df             	mov    %rbx,%rdi
  40721b:	e8 b0 bb ff ff       	callq  402dd0 <__asan_report_load4@plt>
	first_free_connect = c->next_free_connect;
  407220:	e8 ab bb ff ff       	callq  402dd0 <__asan_report_load4@plt>
	fdwatch_add_fd( c->hc->conn_fd, c, FDW_READ );
  407225:	4c 89 f7             	mov    %r14,%rdi
  407228:	e8 23 c0 ff ff       	callq  403250 <__asan_report_load8@plt>
  40722d:	e8 9e bb ff ff       	callq  402dd0 <__asan_report_load4@plt>
	c->active_at = tvP->tv_sec;
  407232:	48 89 ef             	mov    %rbp,%rdi
  407235:	e8 16 c0 ff ff       	callq  403250 <__asan_report_load8@plt>
  40723a:	e8 61 bd ff ff       	callq  402fa0 <__asan_report_store8@plt>
	c->wakeup_timer = (Timer*) 0;
  40723f:	e8 5c bd ff ff       	callq  402fa0 <__asan_report_store8@plt>
	c->linger_timer = (Timer*) 0;
  407244:	e8 57 bd ff ff       	callq  402fa0 <__asan_report_store8@plt>
	c->next_byte_index = 0;
  407249:	e8 52 bd ff ff       	callq  402fa0 <__asan_report_store8@plt>
	c->numtnums = 0;
  40724e:	e8 9d b9 ff ff       	callq  402bf0 <__asan_report_store4@plt>
	httpd_set_ndelay( c->hc->conn_fd );
  407253:	4c 89 f7             	mov    %r14,%rdi
  407256:	e8 f5 bf ff ff       	callq  403250 <__asan_report_load8@plt>
  40725b:	e8 70 bb ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    c->hc->initialized = 0;
  407260:	48 89 c7             	mov    %rax,%rdi
  407263:	e8 88 b9 ff ff       	callq  402bf0 <__asan_report_store4@plt>
		syslog( LOG_CRIT, "out of memory allocating an httpd_conn" );
  407268:	bf 02 00 00 00       	mov    $0x2,%edi
  40726d:	be 80 08 42 00       	mov    $0x420880,%esi
  407272:	e8 c9 b9 ff ff       	callq  402c40 <syslog@plt>
		exit( 1 );
  407277:	e8 c4 bd ff ff       	callq  403040 <__asan_handle_no_return@plt>
  40727c:	bf 01 00 00 00       	mov    $0x1,%edi
  407281:	e8 5a be ff ff       	callq  4030e0 <exit@plt>
  407286:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40728d:	00 00 00 

0000000000407290 <check_throttles>:
    {
  407290:	41 57                	push   %r15
  407292:	41 56                	push   %r14
  407294:	41 55                	push   %r13
    c->numtnums = 0;
  407296:	4c 8d 6f 38          	lea    0x38(%rdi),%r13
    {
  40729a:	41 54                	push   %r12
    c->numtnums = 0;
  40729c:	4c 89 e8             	mov    %r13,%rax
    {
  40729f:	55                   	push   %rbp
    c->numtnums = 0;
  4072a0:	48 c1 e8 03          	shr    $0x3,%rax
    {
  4072a4:	53                   	push   %rbx
  4072a5:	48 89 fb             	mov    %rdi,%rbx
  4072a8:	48 83 ec 28          	sub    $0x28,%rsp
    c->numtnums = 0;
  4072ac:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4072b3:	84 c0                	test   %al,%al
  4072b5:	74 08                	je     4072bf <check_throttles+0x2f>
  4072b7:	3c 03                	cmp    $0x3,%al
  4072b9:	0f 8e c0 03 00 00    	jle    40767f <check_throttles+0x3ef>
    c->max_limit = c->min_limit = THROTTLE_NOLIMIT;
  4072bf:	48 8d 43 48          	lea    0x48(%rbx),%rax
    c->numtnums = 0;
  4072c3:	c7 43 38 00 00 00 00 	movl   $0x0,0x38(%rbx)
    c->max_limit = c->min_limit = THROTTLE_NOLIMIT;
  4072ca:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  4072cf:	48 c1 e8 03          	shr    $0x3,%rax
  4072d3:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4072da:	0f 85 af 03 00 00    	jne    40768f <check_throttles+0x3ff>
  4072e0:	48 8d 4b 40          	lea    0x40(%rbx),%rcx
  4072e4:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  4072eb:	48 89 ca             	mov    %rcx,%rdx
  4072ee:	48 89 43 48          	mov    %rax,0x48(%rbx)
  4072f2:	48 c1 ea 03          	shr    $0x3,%rdx
  4072f6:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  4072fb:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  407302:	0f 85 7f 03 00 00    	jne    407687 <check_throttles+0x3f7>
  407308:	48 89 43 40          	mov    %rax,0x40(%rbx)
    for ( tnum = 0; tnum < numthrottles && c->numtnums < MAXTHROTTLENUMS;
  40730c:	48 8d 43 08          	lea    0x8(%rbx),%rax
  407310:	31 ed                	xor    %ebp,%ebp
  407312:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
	if ( match( throttles[tnum].pattern, c->hc->expnfilename ) )
  407317:	48 c1 e8 03          	shr    $0x3,%rax
  40731b:	48 89 04 24          	mov    %rax,(%rsp)
    for ( tnum = 0; tnum < numthrottles && c->numtnums < MAXTHROTTLENUMS;
  40731f:	8b 05 bb a2 23 00    	mov    0x23a2bb(%rip),%eax        # 6415e0 <numthrottles>
  407325:	85 c0                	test   %eax,%eax
  407327:	0f 8f 1c 01 00 00    	jg     407449 <check_throttles+0x1b9>
  40732d:	e9 b6 02 00 00       	jmpq   4075e8 <check_throttles+0x358>
  407332:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  407338:	41 83 c0 01          	add    $0x1,%r8d
  40733c:	48 99                	cqto   
  40733e:	49 63 f0             	movslq %r8d,%rsi
  407341:	48 f7 fe             	idiv   %rsi
	    c->tnums[c->numtnums++] = tnum;
  407344:	4c 89 ea             	mov    %r13,%rdx
  407347:	48 c1 ea 03          	shr    $0x3,%rdx
  40734b:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  407352:	84 d2                	test   %dl,%dl
  407354:	74 09                	je     40735f <check_throttles+0xcf>
  407356:	80 fa 03             	cmp    $0x3,%dl
  407359:	0f 8e ef 02 00 00    	jle    40764e <check_throttles+0x3be>
  40735f:	48 63 73 38          	movslq 0x38(%rbx),%rsi
  407363:	8d 56 01             	lea    0x1(%rsi),%edx
  407366:	89 53 38             	mov    %edx,0x38(%rbx)
  407369:	48 8d 54 b3 10       	lea    0x10(%rbx,%rsi,4),%rdx
  40736e:	49 89 d1             	mov    %rdx,%r9
  407371:	49 c1 e9 03          	shr    $0x3,%r9
  407375:	45 0f b6 99 00 80 ff 	movzbl 0x7fff8000(%r9),%r11d
  40737c:	7f 
  40737d:	49 89 d1             	mov    %rdx,%r9
  407380:	41 83 e1 07          	and    $0x7,%r9d
  407384:	41 83 c1 03          	add    $0x3,%r9d
  407388:	45 38 d9             	cmp    %r11b,%r9b
  40738b:	7c 09                	jl     407396 <check_throttles+0x106>
  40738d:	45 84 db             	test   %r11b,%r11b
  407390:	0f 85 b0 02 00 00    	jne    407646 <check_throttles+0x3b6>
	    ++throttles[tnum].num_sending;
  407396:	48 89 fa             	mov    %rdi,%rdx
	    c->tnums[c->numtnums++] = tnum;
  407399:	44 89 74 b3 10       	mov    %r14d,0x10(%rbx,%rsi,4)
	    ++throttles[tnum].num_sending;
  40739e:	48 c1 ea 03          	shr    $0x3,%rdx
  4073a2:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  4073a9:	84 d2                	test   %dl,%dl
  4073ab:	74 09                	je     4073b6 <check_throttles+0x126>
  4073ad:	80 fa 03             	cmp    $0x3,%dl
  4073b0:	0f 8e 8b 02 00 00    	jle    407641 <check_throttles+0x3b1>
	    if ( c->max_limit == THROTTLE_NOLIMIT )
  4073b6:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
	    ++throttles[tnum].num_sending;
  4073bb:	44 89 41 28          	mov    %r8d,0x28(%rcx)
	    if ( c->max_limit == THROTTLE_NOLIMIT )
  4073bf:	48 c1 ea 03          	shr    $0x3,%rdx
  4073c3:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4073ca:	0f 85 67 02 00 00    	jne    407637 <check_throttles+0x3a7>
  4073d0:	48 8b 53 40          	mov    0x40(%rbx),%rdx
  4073d4:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
  4073d8:	74 07                	je     4073e1 <check_throttles+0x151>
		c->max_limit = MIN( c->max_limit, l );
  4073da:	48 39 d0             	cmp    %rdx,%rax
  4073dd:	48 0f 4f c2          	cmovg  %rdx,%rax
  4073e1:	48 89 43 40          	mov    %rax,0x40(%rbx)
	    if ( c->min_limit == THROTTLE_NOLIMIT )
  4073e5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  4073ea:	48 c1 e8 03          	shr    $0x3,%rax
  4073ee:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4073f5:	0f 85 32 02 00 00    	jne    40762d <check_throttles+0x39d>
  4073fb:	48 8b 43 48          	mov    0x48(%rbx),%rax
  4073ff:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  407403:	74 07                	je     40740c <check_throttles+0x17c>
		c->min_limit = MAX( c->min_limit, l );
  407405:	4c 39 d0             	cmp    %r10,%rax
  407408:	4c 0f 4d d0          	cmovge %rax,%r10
  40740c:	4c 89 53 48          	mov    %r10,0x48(%rbx)
    for ( tnum = 0; tnum < numthrottles && c->numtnums < MAXTHROTTLENUMS;
  407410:	41 83 c4 01          	add    $0x1,%r12d
  407414:	44 39 25 c5 a1 23 00 	cmp    %r12d,0x23a1c5(%rip)        # 6415e0 <numthrottles>
  40741b:	0f 8e c7 01 00 00    	jle    4075e8 <check_throttles+0x358>
  407421:	4c 89 e8             	mov    %r13,%rax
  407424:	48 c1 e8 03          	shr    $0x3,%rax
  407428:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40742f:	84 c0                	test   %al,%al
  407431:	74 08                	je     40743b <check_throttles+0x1ab>
  407433:	3c 03                	cmp    $0x3,%al
  407435:	0f 8e ea 01 00 00    	jle    407625 <check_throttles+0x395>
  40743b:	48 83 c5 01          	add    $0x1,%rbp
  40743f:	83 7b 38 09          	cmpl   $0x9,0x38(%rbx)
  407443:	0f 8f 9f 01 00 00    	jg     4075e8 <check_throttles+0x358>
	if ( match( throttles[tnum].pattern, c->hc->expnfilename ) )
  407449:	48 8b 04 24          	mov    (%rsp),%rax
  40744d:	41 89 ec             	mov    %ebp,%r12d
  407450:	41 89 ee             	mov    %ebp,%r14d
  407453:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40745a:	0f 85 bb 01 00 00    	jne    40761b <check_throttles+0x38b>
  407460:	48 8b 43 08          	mov    0x8(%rbx),%rax
  407464:	48 8d b8 f0 00 00 00 	lea    0xf0(%rax),%rdi
  40746b:	48 89 fa             	mov    %rdi,%rdx
  40746e:	48 c1 ea 03          	shr    $0x3,%rdx
  407472:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  407479:	0f 85 97 01 00 00    	jne    407616 <check_throttles+0x386>
  40747f:	4c 8d 4c 6d 00       	lea    0x0(%rbp,%rbp,2),%r9
  407484:	48 8b 3d 95 a1 23 00 	mov    0x23a195(%rip),%rdi        # 641620 <throttles>
  40748b:	48 8b b0 f0 00 00 00 	mov    0xf0(%rax),%rsi
  407492:	4d 89 cf             	mov    %r9,%r15
  407495:	49 c1 e7 04          	shl    $0x4,%r15
  407499:	4c 01 ff             	add    %r15,%rdi
  40749c:	48 89 f8             	mov    %rdi,%rax
  40749f:	48 c1 e8 03          	shr    $0x3,%rax
  4074a3:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4074aa:	0f 85 61 01 00 00    	jne    407611 <check_throttles+0x381>
  4074b0:	48 8b 3f             	mov    (%rdi),%rdi
  4074b3:	e8 d8 7a 01 00       	callq  41ef90 <match>
  4074b8:	85 c0                	test   %eax,%eax
  4074ba:	0f 84 50 ff ff ff    	je     407410 <check_throttles+0x180>
	    if ( throttles[tnum].rate > throttles[tnum].max_limit * 2 )
  4074c0:	48 8b 0d 59 a1 23 00 	mov    0x23a159(%rip),%rcx        # 641620 <throttles>
  4074c7:	4c 01 f9             	add    %r15,%rcx
  4074ca:	48 8d 79 18          	lea    0x18(%rcx),%rdi
  4074ce:	48 89 f8             	mov    %rdi,%rax
  4074d1:	48 c1 e8 03          	shr    $0x3,%rax
  4074d5:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4074dc:	0f 85 83 01 00 00    	jne    407665 <check_throttles+0x3d5>
  4074e2:	48 8d 79 08          	lea    0x8(%rcx),%rdi
  4074e6:	48 8b 51 18          	mov    0x18(%rcx),%rdx
  4074ea:	48 89 f8             	mov    %rdi,%rax
  4074ed:	48 c1 e8 03          	shr    $0x3,%rax
  4074f1:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4074f8:	0f 85 62 01 00 00    	jne    407660 <check_throttles+0x3d0>
  4074fe:	48 8b 41 08          	mov    0x8(%rcx),%rax
  407502:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
  407506:	48 39 f2             	cmp    %rsi,%rdx
  407509:	0f 8f f1 00 00 00    	jg     407600 <check_throttles+0x370>
	    if ( throttles[tnum].rate < throttles[tnum].min_limit )
  40750f:	48 8d 79 10          	lea    0x10(%rcx),%rdi
  407513:	48 89 fe             	mov    %rdi,%rsi
  407516:	48 c1 ee 03          	shr    $0x3,%rsi
  40751a:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  407521:	0f 85 34 01 00 00    	jne    40765b <check_throttles+0x3cb>
  407527:	4c 8b 51 10          	mov    0x10(%rcx),%r10
  40752b:	4c 39 d2             	cmp    %r10,%rdx
  40752e:	0f 8c cc 00 00 00    	jl     407600 <check_throttles+0x370>
	    if ( throttles[tnum].num_sending < 0 )
  407534:	48 8d 79 28          	lea    0x28(%rcx),%rdi
  407538:	48 89 fa             	mov    %rdi,%rdx
  40753b:	48 c1 ea 03          	shr    $0x3,%rdx
  40753f:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  407546:	84 d2                	test   %dl,%dl
  407548:	74 09                	je     407553 <check_throttles+0x2c3>
  40754a:	80 fa 03             	cmp    $0x3,%dl
  40754d:	0f 8e 03 01 00 00    	jle    407656 <check_throttles+0x3c6>
  407553:	44 8b 41 28          	mov    0x28(%rcx),%r8d
  407557:	45 85 c0             	test   %r8d,%r8d
  40755a:	0f 89 d8 fd ff ff    	jns    407338 <check_throttles+0xa8>
		syslog( LOG_ERR, "throttle sending count was negative - shouldn't happen!" );
  407560:	bf 03 00 00 00       	mov    $0x3,%edi
  407565:	31 c0                	xor    %eax,%eax
  407567:	be e0 08 42 00       	mov    $0x4208e0,%esi
  40756c:	e8 cf b6 ff ff       	callq  402c40 <syslog@plt>
		throttles[tnum].num_sending = 0;
  407571:	48 8b 0d a8 a0 23 00 	mov    0x23a0a8(%rip),%rcx        # 641620 <throttles>
  407578:	4c 01 f9             	add    %r15,%rcx
  40757b:	48 8d 79 28          	lea    0x28(%rcx),%rdi
  40757f:	48 89 f8             	mov    %rdi,%rax
  407582:	48 c1 e8 03          	shr    $0x3,%rax
  407586:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40758d:	84 c0                	test   %al,%al
  40758f:	74 08                	je     407599 <check_throttles+0x309>
  407591:	3c 03                	cmp    $0x3,%al
  407593:	0f 8e e1 00 00 00    	jle    40767a <check_throttles+0x3ea>
  407599:	48 8d 41 08          	lea    0x8(%rcx),%rax
  40759d:	c7 41 28 00 00 00 00 	movl   $0x0,0x28(%rcx)
  4075a4:	48 89 c2             	mov    %rax,%rdx
  4075a7:	48 c1 ea 03          	shr    $0x3,%rdx
  4075ab:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4075b2:	0f 85 ba 00 00 00    	jne    407672 <check_throttles+0x3e2>
  4075b8:	48 8d 51 10          	lea    0x10(%rcx),%rdx
  4075bc:	48 8b 41 08          	mov    0x8(%rcx),%rax
  4075c0:	48 89 d6             	mov    %rdx,%rsi
  4075c3:	48 c1 ee 03          	shr    $0x3,%rsi
  4075c7:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  4075ce:	0f 85 96 00 00 00    	jne    40766a <check_throttles+0x3da>
  4075d4:	4c 8b 51 10          	mov    0x10(%rcx),%r10
  4075d8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4075de:	e9 61 fd ff ff       	jmpq   407344 <check_throttles+0xb4>
  4075e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    }
  4075e8:	48 83 c4 28          	add    $0x28,%rsp
    return 1;
  4075ec:	b8 01 00 00 00       	mov    $0x1,%eax
    }
  4075f1:	5b                   	pop    %rbx
  4075f2:	5d                   	pop    %rbp
  4075f3:	41 5c                	pop    %r12
  4075f5:	41 5d                	pop    %r13
  4075f7:	41 5e                	pop    %r14
  4075f9:	41 5f                	pop    %r15
  4075fb:	c3                   	retq   
  4075fc:	0f 1f 40 00          	nopl   0x0(%rax)
  407600:	48 83 c4 28          	add    $0x28,%rsp
		return 0;
  407604:	31 c0                	xor    %eax,%eax
    }
  407606:	5b                   	pop    %rbx
  407607:	5d                   	pop    %rbp
  407608:	41 5c                	pop    %r12
  40760a:	41 5d                	pop    %r13
  40760c:	41 5e                	pop    %r14
  40760e:	41 5f                	pop    %r15
  407610:	c3                   	retq   
	if ( match( throttles[tnum].pattern, c->hc->expnfilename ) )
  407611:	e8 3a bc ff ff       	callq  403250 <__asan_report_load8@plt>
  407616:	e8 35 bc ff ff       	callq  403250 <__asan_report_load8@plt>
  40761b:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  407620:	e8 2b bc ff ff       	callq  403250 <__asan_report_load8@plt>
    for ( tnum = 0; tnum < numthrottles && c->numtnums < MAXTHROTTLENUMS;
  407625:	4c 89 ef             	mov    %r13,%rdi
  407628:	e8 a3 b7 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    if ( c->min_limit == THROTTLE_NOLIMIT )
  40762d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  407632:	e8 19 bc ff ff       	callq  403250 <__asan_report_load8@plt>
	    if ( c->max_limit == THROTTLE_NOLIMIT )
  407637:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  40763c:	e8 0f bc ff ff       	callq  403250 <__asan_report_load8@plt>
	    ++throttles[tnum].num_sending;
  407641:	e8 aa b5 ff ff       	callq  402bf0 <__asan_report_store4@plt>
	    c->tnums[c->numtnums++] = tnum;
  407646:	48 89 d7             	mov    %rdx,%rdi
  407649:	e8 a2 b5 ff ff       	callq  402bf0 <__asan_report_store4@plt>
  40764e:	4c 89 ef             	mov    %r13,%rdi
  407651:	e8 7a b7 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    if ( throttles[tnum].num_sending < 0 )
  407656:	e8 75 b7 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    if ( throttles[tnum].rate < throttles[tnum].min_limit )
  40765b:	e8 f0 bb ff ff       	callq  403250 <__asan_report_load8@plt>
	    if ( throttles[tnum].rate > throttles[tnum].max_limit * 2 )
  407660:	e8 eb bb ff ff       	callq  403250 <__asan_report_load8@plt>
  407665:	e8 e6 bb ff ff       	callq  403250 <__asan_report_load8@plt>
  40766a:	48 89 d7             	mov    %rdx,%rdi
  40766d:	e8 de bb ff ff       	callq  403250 <__asan_report_load8@plt>
  407672:	48 89 c7             	mov    %rax,%rdi
  407675:	e8 d6 bb ff ff       	callq  403250 <__asan_report_load8@plt>
		throttles[tnum].num_sending = 0;
  40767a:	e8 71 b5 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    c->numtnums = 0;
  40767f:	4c 89 ef             	mov    %r13,%rdi
  407682:	e8 69 b5 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    c->max_limit = c->min_limit = THROTTLE_NOLIMIT;
  407687:	48 89 cf             	mov    %rcx,%rdi
  40768a:	e8 11 b9 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  40768f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  407694:	e8 07 b9 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  407699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004076a0 <shut_down>:
    {
  4076a0:	41 57                	push   %r15
  4076a2:	41 56                	push   %r14
  4076a4:	41 55                	push   %r13
  4076a6:	41 54                	push   %r12
  4076a8:	55                   	push   %rbp
  4076a9:	53                   	push   %rbx
  4076aa:	48 83 ec 78          	sub    $0x78,%rsp
  4076ae:	8b 15 4c 9c 23 00    	mov    0x239c4c(%rip),%edx        # 641300 <__asan_option_detect_stack_use_after_return>
  4076b4:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
  4076b9:	85 d2                	test   %edx,%edx
  4076bb:	0f 85 a2 02 00 00    	jne    407963 <shut_down+0x2c3>
  4076c1:	48 89 e8             	mov    %rbp,%rax
  4076c4:	48 c7 45 00 b3 8a b5 	movq   $0x41b58ab3,0x0(%rbp)
  4076cb:	41 
    (void) gettimeofday( &tv, (struct timezone*) 0 );
  4076cc:	31 f6                	xor    %esi,%esi
    for ( cnum = 0; cnum < max_connects; ++cnum )
  4076ce:	45 31 ff             	xor    %r15d,%r15d
    {
  4076d1:	48 c1 e8 03          	shr    $0x3,%rax
  4076d5:	48 c7 45 08 77 17 42 	movq   $0x421777,0x8(%rbp)
  4076dc:	00 
    (void) gettimeofday( &tv, (struct timezone*) 0 );
  4076dd:	48 8d 5d 20          	lea    0x20(%rbp),%rbx
    {
  4076e1:	48 c7 45 10 a0 76 40 	movq   $0x4076a0,0x10(%rbp)
  4076e8:	00 
    (void) gettimeofday( &tv, (struct timezone*) 0 );
  4076e9:	48 89 df             	mov    %rbx,%rdi
    {
  4076ec:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4076f1:	c7 80 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rax)
  4076f8:	f1 f1 f1 
  4076fb:	c7 80 04 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8004(%rax)
  407702:	00 f2 f2 
  407705:	c7 80 08 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8008(%rax)
  40770c:	f3 f3 f3 
    (void) gettimeofday( &tv, (struct timezone*) 0 );
  40770f:	e8 ec bb ff ff       	callq  403300 <gettimeofday@plt>
    logstats( &tv );
  407714:	48 89 df             	mov    %rbx,%rdi
    for ( cnum = 0; cnum < max_connects; ++cnum )
  407717:	31 db                	xor    %ebx,%ebx
    logstats( &tv );
  407719:	e8 72 da ff ff       	callq  405190 <logstats>
	    httpd_close_conn( connects[cnum].hc, &tv );
  40771e:	48 8d 45 20          	lea    0x20(%rbp),%rax
  407722:	48 89 04 24          	mov    %rax,(%rsp)
    for ( cnum = 0; cnum < max_connects; ++cnum )
  407726:	8b 05 b4 9d 23 00    	mov    0x239db4(%rip),%eax        # 6414e0 <max_connects>
  40772c:	85 c0                	test   %eax,%eax
  40772e:	7f 73                	jg     4077a3 <shut_down+0x103>
  407730:	e9 f3 00 00 00       	jmpq   407828 <shut_down+0x188>
  407735:	0f 1f 00             	nopl   (%rax)
	if ( connects[cnum].hc != (httpd_conn*) 0 )
  407738:	48 85 ff             	test   %rdi,%rdi
  40773b:	74 50                	je     40778d <shut_down+0xed>
	    httpd_destroy_conn( connects[cnum].hc );
  40773d:	e8 2e 9f 00 00       	callq  411670 <httpd_destroy_conn>
	    free( (void*) connects[cnum].hc );
  407742:	4c 8b 2d 17 9e 23 00 	mov    0x239e17(%rip),%r13        # 641560 <connects>
  407749:	4d 01 fd             	add    %r15,%r13
  40774c:	4d 8d 75 08          	lea    0x8(%r13),%r14
  407750:	4d 89 f4             	mov    %r14,%r12
  407753:	49 c1 ec 03          	shr    $0x3,%r12
  407757:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  40775e:	7f 00 
  407760:	0f 85 be 01 00 00    	jne    407924 <shut_down+0x284>
  407766:	49 8b 7d 08          	mov    0x8(%r13),%rdi
  40776a:	e8 61 b5 ff ff       	callq  402cd0 <free@plt>
	    --httpd_conn_count;
  40776f:	83 2d ea 9c 23 00 01 	subl   $0x1,0x239cea(%rip)        # 641460 <httpd_conn_count>
	    connects[cnum].hc = (httpd_conn*) 0;
  407776:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  40777d:	7f 00 
  40777f:	0f 85 a7 01 00 00    	jne    40792c <shut_down+0x28c>
  407785:	49 c7 45 08 00 00 00 	movq   $0x0,0x8(%r13)
  40778c:	00 
    for ( cnum = 0; cnum < max_connects; ++cnum )
  40778d:	83 c3 01             	add    $0x1,%ebx
  407790:	49 81 c7 90 00 00 00 	add    $0x90,%r15
  407797:	39 1d 43 9d 23 00    	cmp    %ebx,0x239d43(%rip)        # 6414e0 <max_connects>
  40779d:	0f 8e 85 00 00 00    	jle    407828 <shut_down+0x188>
	if ( connects[cnum].conn_state != CNST_FREE )
  4077a3:	48 8b 3d b6 9d 23 00 	mov    0x239db6(%rip),%rdi        # 641560 <connects>
  4077aa:	4c 01 ff             	add    %r15,%rdi
  4077ad:	48 89 f8             	mov    %rdi,%rax
  4077b0:	48 c1 e8 03          	shr    $0x3,%rax
  4077b4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4077bb:	84 c0                	test   %al,%al
  4077bd:	74 08                	je     4077c7 <shut_down+0x127>
  4077bf:	3c 03                	cmp    $0x3,%al
  4077c1:	0f 8e 50 01 00 00    	jle    407917 <shut_down+0x277>
  4077c7:	48 8d 47 08          	lea    0x8(%rdi),%rax
  4077cb:	8b 17                	mov    (%rdi),%edx
  4077cd:	48 89 c1             	mov    %rax,%rcx
  4077d0:	48 c1 e9 03          	shr    $0x3,%rcx
  4077d4:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  4077db:	0f 85 3b 01 00 00    	jne    40791c <shut_down+0x27c>
  4077e1:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  4077e5:	85 d2                	test   %edx,%edx
  4077e7:	0f 84 4b ff ff ff    	je     407738 <shut_down+0x98>
	    httpd_close_conn( connects[cnum].hc, &tv );
  4077ed:	48 8b 34 24          	mov    (%rsp),%rsi
  4077f1:	e8 1a d7 00 00       	callq  414f10 <httpd_close_conn>
  4077f6:	48 8b 05 63 9d 23 00 	mov    0x239d63(%rip),%rax        # 641560 <connects>
  4077fd:	4c 01 f8             	add    %r15,%rax
  407800:	48 8d 78 08          	lea    0x8(%rax),%rdi
  407804:	48 89 fa             	mov    %rdi,%rdx
  407807:	48 c1 ea 03          	shr    $0x3,%rdx
  40780b:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  407812:	0f 85 1c 01 00 00    	jne    407934 <shut_down+0x294>
  407818:	48 8b 78 08          	mov    0x8(%rax),%rdi
  40781c:	e9 17 ff ff ff       	jmpq   407738 <shut_down+0x98>
  407821:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    if ( hs != (httpd_server*) 0 )
  407828:	48 8b 1d f1 9b 23 00 	mov    0x239bf1(%rip),%rbx        # 641420 <hs>
  40782f:	48 85 db             	test   %rbx,%rbx
  407832:	74 6c                	je     4078a0 <shut_down+0x200>
	hs = (httpd_server*) 0;
  407834:	48 c7 05 e1 9b 23 00 	movq   $0x0,0x239be1(%rip)        # 641420 <hs>
  40783b:	00 00 00 00 
	if ( ths->listen4_fd != -1 )
  40783f:	48 8d 7b 48          	lea    0x48(%rbx),%rdi
  407843:	48 89 f8             	mov    %rdi,%rax
  407846:	48 c1 e8 03          	shr    $0x3,%rax
  40784a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  407851:	84 c0                	test   %al,%al
  407853:	74 08                	je     40785d <shut_down+0x1bd>
  407855:	3c 03                	cmp    $0x3,%al
  407857:	0f 8e 21 01 00 00    	jle    40797e <shut_down+0x2de>
  40785d:	8b 7b 48             	mov    0x48(%rbx),%edi
  407860:	83 ff ff             	cmp    $0xffffffff,%edi
  407863:	0f 85 97 00 00 00    	jne    407900 <shut_down+0x260>
	if ( ths->listen6_fd != -1 )
  407869:	48 8d 7b 4c          	lea    0x4c(%rbx),%rdi
  40786d:	48 89 f8             	mov    %rdi,%rax
  407870:	48 c1 e8 03          	shr    $0x3,%rax
  407874:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  40787b:	48 89 f8             	mov    %rdi,%rax
  40787e:	83 e0 07             	and    $0x7,%eax
  407881:	83 c0 03             	add    $0x3,%eax
  407884:	38 d0                	cmp    %dl,%al
  407886:	7c 08                	jl     407890 <shut_down+0x1f0>
  407888:	84 d2                	test   %dl,%dl
  40788a:	0f 85 e9 00 00 00    	jne    407979 <shut_down+0x2d9>
  407890:	8b 7b 4c             	mov    0x4c(%rbx),%edi
  407893:	83 ff ff             	cmp    $0xffffffff,%edi
  407896:	75 78                	jne    407910 <shut_down+0x270>
	httpd_terminate( ths );
  407898:	48 89 df             	mov    %rbx,%rdi
  40789b:	e8 90 58 00 00       	callq  40d130 <httpd_terminate>
    mmc_destroy();
  4078a0:	e8 6b 43 01 00       	callq  41bc10 <mmc_destroy>
    tmr_destroy();
  4078a5:	e8 f6 53 01 00       	callq  41cca0 <tmr_destroy>
    free( (void*) connects );
  4078aa:	48 8b 3d af 9c 23 00 	mov    0x239caf(%rip),%rdi        # 641560 <connects>
  4078b1:	e8 1a b4 ff ff       	callq  402cd0 <free@plt>
    if ( throttles != (throttletab*) 0 )
  4078b6:	48 8b 3d 63 9d 23 00 	mov    0x239d63(%rip),%rdi        # 641620 <throttles>
  4078bd:	48 85 ff             	test   %rdi,%rdi
  4078c0:	74 05                	je     4078c7 <shut_down+0x227>
	free( (void*) throttles );
  4078c2:	e8 09 b4 ff ff       	callq  402cd0 <free@plt>
    {
  4078c7:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  4078cc:	48 39 e8             	cmp    %rbp,%rax
  4078cf:	75 68                	jne    407939 <shut_down+0x299>
  4078d1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4078d6:	48 c7 80 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rax)
  4078dd:	00 00 00 00 
  4078e1:	c7 80 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rax)
  4078e8:	00 00 00 
    }
  4078eb:	48 83 c4 78          	add    $0x78,%rsp
  4078ef:	5b                   	pop    %rbx
  4078f0:	5d                   	pop    %rbp
  4078f1:	41 5c                	pop    %r12
  4078f3:	41 5d                	pop    %r13
  4078f5:	41 5e                	pop    %r14
  4078f7:	41 5f                	pop    %r15
  4078f9:	c3                   	retq   
  4078fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	    fdwatch_del_fd( ths->listen4_fd );
  407900:	e8 2b 2e 00 00       	callq  40a730 <fdwatch_del_fd>
  407905:	e9 5f ff ff ff       	jmpq   407869 <shut_down+0x1c9>
  40790a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	    fdwatch_del_fd( ths->listen6_fd );
  407910:	e8 1b 2e 00 00       	callq  40a730 <fdwatch_del_fd>
  407915:	eb 81                	jmp    407898 <shut_down+0x1f8>
	if ( connects[cnum].conn_state != CNST_FREE )
  407917:	e8 b4 b4 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40791c:	48 89 c7             	mov    %rax,%rdi
  40791f:	e8 2c b9 ff ff       	callq  403250 <__asan_report_load8@plt>
	    free( (void*) connects[cnum].hc );
  407924:	4c 89 f7             	mov    %r14,%rdi
  407927:	e8 24 b9 ff ff       	callq  403250 <__asan_report_load8@plt>
	    connects[cnum].hc = (httpd_conn*) 0;
  40792c:	4c 89 f7             	mov    %r14,%rdi
  40792f:	e8 6c b6 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  407934:	e8 17 b9 ff ff       	callq  403250 <__asan_report_load8@plt>
    {
  407939:	48 c7 45 00 0e 36 e0 	movq   $0x45e0360e,0x0(%rbp)
  407940:	45 
  407941:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  407946:	48 be f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rsi
  40794d:	f5 f5 f5 
  407950:	48 89 b0 00 80 ff 7f 	mov    %rsi,0x7fff8000(%rax)
  407957:	c7 80 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rax)
  40795e:	f5 f5 f5 
  407961:	eb 88                	jmp    4078eb <shut_down+0x24b>
  407963:	bf 60 00 00 00       	mov    $0x60,%edi
  407968:	e8 43 b4 ff ff       	callq  402db0 <__asan_stack_malloc_1@plt>
  40796d:	48 85 c0             	test   %rax,%rax
  407970:	48 0f 45 e8          	cmovne %rax,%rbp
  407974:	e9 48 fd ff ff       	jmpq   4076c1 <shut_down+0x21>
	if ( ths->listen6_fd != -1 )
  407979:	e8 52 b4 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( ths->listen4_fd != -1 )
  40797e:	e8 4d b4 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  407983:	0f 1f 00             	nopl   (%rax)
  407986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40798d:	00 00 00 

0000000000407990 <handle_usr1>:
    if ( num_connects == 0 )
  407990:	8b 05 8a 9b 23 00    	mov    0x239b8a(%rip),%eax        # 641520 <num_connects>
  407996:	85 c0                	test   %eax,%eax
  407998:	74 0e                	je     4079a8 <handle_usr1+0x18>
    got_usr1 = 1;
  40799a:	c7 05 bc 99 23 00 01 	movl   $0x1,0x2399bc(%rip)        # 641360 <got_usr1>
  4079a1:	00 00 00 
  4079a4:	c3                   	retq   
  4079a5:	0f 1f 00             	nopl   (%rax)
    {
  4079a8:	48 83 ec 08          	sub    $0x8,%rsp
	shut_down();
  4079ac:	e8 ef fc ff ff       	callq  4076a0 <shut_down>
	syslog( LOG_NOTICE, "exiting" );
  4079b1:	bf 05 00 00 00       	mov    $0x5,%edi
  4079b6:	be 40 09 42 00       	mov    $0x420940,%esi
  4079bb:	31 c0                	xor    %eax,%eax
  4079bd:	e8 7e b2 ff ff       	callq  402c40 <syslog@plt>
	closelog();
  4079c2:	e8 c9 b5 ff ff       	callq  402f90 <closelog@plt>
	exit( 0 );
  4079c7:	e8 74 b6 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  4079cc:	31 ff                	xor    %edi,%edi
  4079ce:	e8 0d b7 ff ff       	callq  4030e0 <exit@plt>
  4079d3:	0f 1f 00             	nopl   (%rax)
  4079d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4079dd:	00 00 00 

00000000004079e0 <handle_term>:
    {
  4079e0:	53                   	push   %rbx
  4079e1:	89 fb                	mov    %edi,%ebx
    shut_down();
  4079e3:	e8 b8 fc ff ff       	callq  4076a0 <shut_down>
    syslog( LOG_NOTICE, "exiting due to signal %d", sig );
  4079e8:	bf 05 00 00 00       	mov    $0x5,%edi
  4079ed:	89 da                	mov    %ebx,%edx
  4079ef:	31 c0                	xor    %eax,%eax
  4079f1:	be 80 09 42 00       	mov    $0x420980,%esi
  4079f6:	e8 45 b2 ff ff       	callq  402c40 <syslog@plt>
    closelog();
  4079fb:	e8 90 b5 ff ff       	callq  402f90 <closelog@plt>
    exit( 1 );
  407a00:	e8 3b b6 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  407a05:	bf 01 00 00 00       	mov    $0x1,%edi
  407a0a:	e8 d1 b6 ff ff       	callq  4030e0 <exit@plt>
  407a0f:	90                   	nop

0000000000407a10 <clear_throttles.isra.0>:
    for ( tind = 0; tind < c->numtnums; ++tind )
  407a10:	48 8d 57 38          	lea    0x38(%rdi),%rdx
clear_throttles( connecttab* c, struct timeval* tvP )
  407a14:	48 83 ec 08          	sub    $0x8,%rsp
    for ( tind = 0; tind < c->numtnums; ++tind )
  407a18:	48 89 d0             	mov    %rdx,%rax
  407a1b:	48 c1 e8 03          	shr    $0x3,%rax
  407a1f:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  407a26:	84 c0                	test   %al,%al
  407a28:	74 04                	je     407a2e <clear_throttles.isra.0+0x1e>
  407a2a:	3c 03                	cmp    $0x3,%al
  407a2c:	7e 7c                	jle    407aaa <clear_throttles.isra.0+0x9a>
  407a2e:	8b 47 38             	mov    0x38(%rdi),%eax
  407a31:	85 c0                	test   %eax,%eax
  407a33:	7e 70                	jle    407aa5 <clear_throttles.isra.0+0x95>
  407a35:	83 e8 01             	sub    $0x1,%eax
	--throttles[c->tnums[tind]].num_sending;
  407a38:	4c 8b 05 e1 9b 23 00 	mov    0x239be1(%rip),%r8        # 641620 <throttles>
  407a3f:	48 8d 57 10          	lea    0x10(%rdi),%rdx
  407a43:	48 8d 74 87 14       	lea    0x14(%rdi,%rax,4),%rsi
  407a48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  407a4f:	00 
  407a50:	48 89 d0             	mov    %rdx,%rax
  407a53:	48 c1 e8 03          	shr    $0x3,%rax
  407a57:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  407a5e:	48 89 d0             	mov    %rdx,%rax
  407a61:	83 e0 07             	and    $0x7,%eax
  407a64:	83 c0 03             	add    $0x3,%eax
  407a67:	38 c8                	cmp    %cl,%al
  407a69:	7c 04                	jl     407a6f <clear_throttles.isra.0+0x5f>
  407a6b:	84 c9                	test   %cl,%cl
  407a6d:	75 48                	jne    407ab7 <clear_throttles.isra.0+0xa7>
  407a6f:	48 63 02             	movslq (%rdx),%rax
  407a72:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  407a76:	48 c1 e0 04          	shl    $0x4,%rax
  407a7a:	4c 01 c0             	add    %r8,%rax
  407a7d:	48 8d 78 28          	lea    0x28(%rax),%rdi
  407a81:	48 89 f9             	mov    %rdi,%rcx
  407a84:	48 c1 e9 03          	shr    $0x3,%rcx
  407a88:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  407a8f:	84 c9                	test   %cl,%cl
  407a91:	74 05                	je     407a98 <clear_throttles.isra.0+0x88>
  407a93:	80 f9 03             	cmp    $0x3,%cl
  407a96:	7e 1a                	jle    407ab2 <clear_throttles.isra.0+0xa2>
  407a98:	48 83 c2 04          	add    $0x4,%rdx
  407a9c:	83 68 28 01          	subl   $0x1,0x28(%rax)
    for ( tind = 0; tind < c->numtnums; ++tind )
  407aa0:	48 39 f2             	cmp    %rsi,%rdx
  407aa3:	75 ab                	jne    407a50 <clear_throttles.isra.0+0x40>
    }
  407aa5:	48 83 c4 08          	add    $0x8,%rsp
  407aa9:	c3                   	retq   
    for ( tind = 0; tind < c->numtnums; ++tind )
  407aaa:	48 89 d7             	mov    %rdx,%rdi
  407aad:	e8 1e b3 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	--throttles[c->tnums[tind]].num_sending;
  407ab2:	e8 19 b3 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  407ab7:	48 89 d7             	mov    %rdx,%rdi
  407aba:	e8 11 b3 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  407abf:	90                   	nop

0000000000407ac0 <really_clear_connection>:
    {
  407ac0:	41 54                	push   %r12
  407ac2:	55                   	push   %rbp
    stats_bytes += c->hc->bytes_sent;
  407ac3:	48 8d 6f 08          	lea    0x8(%rdi),%rbp
    {
  407ac7:	53                   	push   %rbx
    stats_bytes += c->hc->bytes_sent;
  407ac8:	48 89 e8             	mov    %rbp,%rax
  407acb:	48 c1 e8 03          	shr    $0x3,%rax
    {
  407acf:	48 83 ec 10          	sub    $0x10,%rsp
    stats_bytes += c->hc->bytes_sent;
  407ad3:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  407ada:	0f 85 88 01 00 00    	jne    407c68 <really_clear_connection+0x1a8>
  407ae0:	48 89 fb             	mov    %rdi,%rbx
  407ae3:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  407ae7:	48 8d 87 c8 00 00 00 	lea    0xc8(%rdi),%rax
  407aee:	48 89 c2             	mov    %rax,%rdx
  407af1:	48 c1 ea 03          	shr    $0x3,%rdx
  407af5:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  407afc:	0f 85 5e 01 00 00    	jne    407c60 <really_clear_connection+0x1a0>
  407b02:	48 8b 87 c8 00 00 00 	mov    0xc8(%rdi),%rax
  407b09:	48 01 05 b8 b8 23 00 	add    %rax,0x23b8b8(%rip)        # 6433c8 <stats_bytes>
    if ( c->conn_state != CNST_PAUSING )
  407b10:	48 89 d8             	mov    %rbx,%rax
  407b13:	48 c1 e8 03          	shr    $0x3,%rax
  407b17:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  407b1e:	84 c0                	test   %al,%al
  407b20:	74 08                	je     407b2a <really_clear_connection+0x6a>
  407b22:	3c 03                	cmp    $0x3,%al
  407b24:	0f 8e 2e 01 00 00    	jle    407c58 <really_clear_connection+0x198>
  407b2a:	83 3b 03             	cmpl   $0x3,(%rbx)
  407b2d:	0f 85 cd 00 00 00    	jne    407c00 <really_clear_connection+0x140>
    httpd_close_conn( c->hc, tvP );
  407b33:	e8 d8 d3 00 00       	callq  414f10 <httpd_close_conn>
    if ( c->linger_timer != (Timer*) 0 )
  407b38:	4c 8d 63 68          	lea    0x68(%rbx),%r12
    clear_throttles( c, tvP );
  407b3c:	48 89 df             	mov    %rbx,%rdi
  407b3f:	e8 cc fe ff ff       	callq  407a10 <clear_throttles.isra.0>
    if ( c->linger_timer != (Timer*) 0 )
  407b44:	4c 89 e5             	mov    %r12,%rbp
  407b47:	48 c1 ed 03          	shr    $0x3,%rbp
  407b4b:	80 bd 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rbp)
  407b52:	0f 85 18 01 00 00    	jne    407c70 <really_clear_connection+0x1b0>
  407b58:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
  407b5c:	48 85 ff             	test   %rdi,%rdi
  407b5f:	74 1a                	je     407b7b <really_clear_connection+0xbb>
	tmr_cancel( c->linger_timer );
  407b61:	e8 3a 4d 01 00       	callq  41c8a0 <tmr_cancel>
	c->linger_timer = 0;
  407b66:	80 bd 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rbp)
  407b6d:	0f 85 05 01 00 00    	jne    407c78 <really_clear_connection+0x1b8>
  407b73:	48 c7 43 68 00 00 00 	movq   $0x0,0x68(%rbx)
  407b7a:	00 
    c->conn_state = CNST_FREE;
  407b7b:	48 89 d8             	mov    %rbx,%rax
  407b7e:	48 c1 e8 03          	shr    $0x3,%rax
  407b82:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  407b89:	84 c0                	test   %al,%al
  407b8b:	74 08                	je     407b95 <really_clear_connection+0xd5>
  407b8d:	3c 03                	cmp    $0x3,%al
  407b8f:	0f 8e bb 00 00 00    	jle    407c50 <really_clear_connection+0x190>
    c->next_free_connect = first_free_connect;
  407b95:	48 8d 7b 04          	lea    0x4(%rbx),%rdi
    c->conn_state = CNST_FREE;
  407b99:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
    c->next_free_connect = first_free_connect;
  407b9f:	8b 0d fb 98 23 00    	mov    0x2398fb(%rip),%ecx        # 6414a0 <first_free_connect>
  407ba5:	48 89 f8             	mov    %rdi,%rax
  407ba8:	48 c1 e8 03          	shr    $0x3,%rax
  407bac:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  407bb3:	48 89 f8             	mov    %rdi,%rax
  407bb6:	83 e0 07             	and    $0x7,%eax
  407bb9:	83 c0 03             	add    $0x3,%eax
  407bbc:	38 d0                	cmp    %dl,%al
  407bbe:	7c 08                	jl     407bc8 <really_clear_connection+0x108>
  407bc0:	84 d2                	test   %dl,%dl
  407bc2:	0f 85 83 00 00 00    	jne    407c4b <really_clear_connection+0x18b>
    first_free_connect = c - connects;	/* division by sizeof is implied */
  407bc8:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
  407bcf:	e3 38 8e 
    c->next_free_connect = first_free_connect;
  407bd2:	89 4b 04             	mov    %ecx,0x4(%rbx)
    first_free_connect = c - connects;	/* division by sizeof is implied */
  407bd5:	48 2b 1d 84 99 23 00 	sub    0x239984(%rip),%rbx        # 641560 <connects>
  407bdc:	48 c1 fb 04          	sar    $0x4,%rbx
    --num_connects;
  407be0:	83 2d 39 99 23 00 01 	subl   $0x1,0x239939(%rip)        # 641520 <num_connects>
    first_free_connect = c - connects;	/* division by sizeof is implied */
  407be7:	48 0f af d8          	imul   %rax,%rbx
  407beb:	89 1d af 98 23 00    	mov    %ebx,0x2398af(%rip)        # 6414a0 <first_free_connect>
    }
  407bf1:	48 83 c4 10          	add    $0x10,%rsp
  407bf5:	5b                   	pop    %rbx
  407bf6:	5d                   	pop    %rbp
  407bf7:	41 5c                	pop    %r12
  407bf9:	c3                   	retq   
  407bfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	fdwatch_del_fd( c->hc->conn_fd );
  407c00:	48 8d 97 c0 02 00 00 	lea    0x2c0(%rdi),%rdx
  407c07:	48 89 d0             	mov    %rdx,%rax
  407c0a:	48 c1 e8 03          	shr    $0x3,%rax
  407c0e:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  407c15:	84 c0                	test   %al,%al
  407c17:	74 04                	je     407c1d <really_clear_connection+0x15d>
  407c19:	3c 03                	cmp    $0x3,%al
  407c1b:	7e 63                	jle    407c80 <really_clear_connection+0x1c0>
  407c1d:	8b bf c0 02 00 00    	mov    0x2c0(%rdi),%edi
  407c23:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  407c28:	e8 03 2b 00 00       	callq  40a730 <fdwatch_del_fd>
  407c2d:	48 89 e8             	mov    %rbp,%rax
  407c30:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  407c35:	48 c1 e8 03          	shr    $0x3,%rax
  407c39:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  407c40:	75 46                	jne    407c88 <really_clear_connection+0x1c8>
  407c42:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  407c46:	e9 e8 fe ff ff       	jmpq   407b33 <really_clear_connection+0x73>
    c->next_free_connect = first_free_connect;
  407c4b:	e8 a0 af ff ff       	callq  402bf0 <__asan_report_store4@plt>
    c->conn_state = CNST_FREE;
  407c50:	48 89 df             	mov    %rbx,%rdi
  407c53:	e8 98 af ff ff       	callq  402bf0 <__asan_report_store4@plt>
    if ( c->conn_state != CNST_PAUSING )
  407c58:	48 89 df             	mov    %rbx,%rdi
  407c5b:	e8 70 b1 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    stats_bytes += c->hc->bytes_sent;
  407c60:	48 89 c7             	mov    %rax,%rdi
  407c63:	e8 e8 b5 ff ff       	callq  403250 <__asan_report_load8@plt>
  407c68:	48 89 ef             	mov    %rbp,%rdi
  407c6b:	e8 e0 b5 ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( c->linger_timer != (Timer*) 0 )
  407c70:	4c 89 e7             	mov    %r12,%rdi
  407c73:	e8 d8 b5 ff ff       	callq  403250 <__asan_report_load8@plt>
	c->linger_timer = 0;
  407c78:	4c 89 e7             	mov    %r12,%rdi
  407c7b:	e8 20 b3 ff ff       	callq  402fa0 <__asan_report_store8@plt>
	fdwatch_del_fd( c->hc->conn_fd );
  407c80:	48 89 d7             	mov    %rdx,%rdi
  407c83:	e8 48 b1 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  407c88:	48 89 ef             	mov    %rbp,%rdi
  407c8b:	e8 c0 b5 ff ff       	callq  403250 <__asan_report_load8@plt>

0000000000407c90 <clear_connection>:
    {
  407c90:	41 55                	push   %r13
    if ( c->wakeup_timer != (Timer*) 0 )
  407c92:	4c 8d 6f 60          	lea    0x60(%rdi),%r13
    {
  407c96:	41 54                	push   %r12
    if ( c->wakeup_timer != (Timer*) 0 )
  407c98:	4d 89 ec             	mov    %r13,%r12
    {
  407c9b:	55                   	push   %rbp
    if ( c->wakeup_timer != (Timer*) 0 )
  407c9c:	49 c1 ec 03          	shr    $0x3,%r12
    {
  407ca0:	53                   	push   %rbx
  407ca1:	48 83 ec 08          	sub    $0x8,%rsp
    if ( c->wakeup_timer != (Timer*) 0 )
  407ca5:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  407cac:	7f 00 
  407cae:	0f 85 d8 02 00 00    	jne    407f8c <clear_connection+0x2fc>
  407cb4:	48 89 fb             	mov    %rdi,%rbx
  407cb7:	48 8b 7f 60          	mov    0x60(%rdi),%rdi
  407cbb:	48 89 f5             	mov    %rsi,%rbp
  407cbe:	48 85 ff             	test   %rdi,%rdi
  407cc1:	74 1c                	je     407cdf <clear_connection+0x4f>
	tmr_cancel( c->wakeup_timer );
  407cc3:	e8 d8 4b 01 00       	callq  41c8a0 <tmr_cancel>
	c->wakeup_timer = 0;
  407cc8:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  407ccf:	7f 00 
  407cd1:	0f 85 dd 02 00 00    	jne    407fb4 <clear_connection+0x324>
  407cd7:	48 c7 43 60 00 00 00 	movq   $0x0,0x60(%rbx)
  407cde:	00 
    if ( c->conn_state == CNST_LINGERING )
  407cdf:	48 89 d8             	mov    %rbx,%rax
  407ce2:	48 c1 e8 03          	shr    $0x3,%rax
  407ce6:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  407ced:	84 c0                	test   %al,%al
  407cef:	74 08                	je     407cf9 <clear_connection+0x69>
  407cf1:	3c 03                	cmp    $0x3,%al
  407cf3:	0f 8e 6a 02 00 00    	jle    407f63 <clear_connection+0x2d3>
  407cf9:	8b 0b                	mov    (%rbx),%ecx
  407cfb:	83 f9 04             	cmp    $0x4,%ecx
  407cfe:	0f 84 c4 01 00 00    	je     407ec8 <clear_connection+0x238>
    if ( c->hc->should_linger )
  407d04:	4c 8d 63 08          	lea    0x8(%rbx),%r12
  407d08:	4c 89 e0             	mov    %r12,%rax
  407d0b:	48 c1 e8 03          	shr    $0x3,%rax
  407d0f:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  407d16:	0f 85 78 02 00 00    	jne    407f94 <clear_connection+0x304>
  407d1c:	48 8b 43 08          	mov    0x8(%rbx),%rax
  407d20:	48 8d b8 2c 02 00 00 	lea    0x22c(%rax),%rdi
  407d27:	48 89 fa             	mov    %rdi,%rdx
  407d2a:	48 c1 ea 03          	shr    $0x3,%rdx
  407d2e:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  407d35:	48 89 fa             	mov    %rdi,%rdx
  407d38:	83 e2 07             	and    $0x7,%edx
  407d3b:	83 c2 03             	add    $0x3,%edx
  407d3e:	40 38 f2             	cmp    %sil,%dl
  407d41:	7c 09                	jl     407d4c <clear_connection+0xbc>
  407d43:	40 84 f6             	test   %sil,%sil
  407d46:	0f 85 1f 02 00 00    	jne    407f6b <clear_connection+0x2db>
  407d4c:	8b 90 2c 02 00 00    	mov    0x22c(%rax),%edx
  407d52:	85 d2                	test   %edx,%edx
  407d54:	0f 84 f4 01 00 00    	je     407f4e <clear_connection+0x2be>
	if ( c->conn_state != CNST_PAUSING )
  407d5a:	48 8d b8 c0 02 00 00 	lea    0x2c0(%rax),%rdi
  407d61:	48 89 fa             	mov    %rdi,%rdx
  407d64:	48 c1 ea 03          	shr    $0x3,%rdx
  407d68:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  407d6f:	84 d2                	test   %dl,%dl
  407d71:	74 09                	je     407d7c <clear_connection+0xec>
  407d73:	80 fa 03             	cmp    $0x3,%dl
  407d76:	0f 8e 01 02 00 00    	jle    407f7d <clear_connection+0x2ed>
  407d7c:	8b b8 c0 02 00 00    	mov    0x2c0(%rax),%edi
  407d82:	83 f9 03             	cmp    $0x3,%ecx
  407d85:	0f 85 ed 00 00 00    	jne    407e78 <clear_connection+0x1e8>
	c->conn_state = CNST_LINGERING;
  407d8b:	48 89 d8             	mov    %rbx,%rax
  407d8e:	48 c1 e8 03          	shr    $0x3,%rax
  407d92:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  407d99:	84 c0                	test   %al,%al
  407d9b:	74 08                	je     407da5 <clear_connection+0x115>
  407d9d:	3c 03                	cmp    $0x3,%al
  407d9f:	0f 8e d0 01 00 00    	jle    407f75 <clear_connection+0x2e5>
  407da5:	c7 03 04 00 00 00    	movl   $0x4,(%rbx)
	shutdown( c->hc->conn_fd, SHUT_WR );
  407dab:	be 01 00 00 00       	mov    $0x1,%esi
  407db0:	e8 fb b3 ff ff       	callq  4031b0 <shutdown@plt>
	fdwatch_add_fd( c->hc->conn_fd, c, FDW_READ );
  407db5:	4c 89 e0             	mov    %r12,%rax
  407db8:	48 c1 e8 03          	shr    $0x3,%rax
  407dbc:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  407dc3:	0f 85 e3 01 00 00    	jne    407fac <clear_connection+0x31c>
  407dc9:	48 8b 43 08          	mov    0x8(%rbx),%rax
  407dcd:	48 8d b8 c0 02 00 00 	lea    0x2c0(%rax),%rdi
  407dd4:	48 89 fa             	mov    %rdi,%rdx
  407dd7:	48 c1 ea 03          	shr    $0x3,%rdx
  407ddb:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  407de2:	84 d2                	test   %dl,%dl
  407de4:	74 09                	je     407def <clear_connection+0x15f>
  407de6:	80 fa 03             	cmp    $0x3,%dl
  407de9:	0f 8e 81 01 00 00    	jle    407f70 <clear_connection+0x2e0>
  407def:	8b b8 c0 02 00 00    	mov    0x2c0(%rax),%edi
  407df5:	31 d2                	xor    %edx,%edx
  407df7:	48 89 de             	mov    %rbx,%rsi
	if ( c->linger_timer != (Timer*) 0 )
  407dfa:	4c 8d 63 68          	lea    0x68(%rbx),%r12
	fdwatch_add_fd( c->hc->conn_fd, c, FDW_READ );
  407dfe:	e8 2d 28 00 00       	callq  40a630 <fdwatch_add_fd>
	if ( c->linger_timer != (Timer*) 0 )
  407e03:	4c 89 e0             	mov    %r12,%rax
  407e06:	48 c1 e8 03          	shr    $0x3,%rax
  407e0a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  407e11:	0f 85 8d 01 00 00    	jne    407fa4 <clear_connection+0x314>
  407e17:	48 83 7b 68 00       	cmpq   $0x0,0x68(%rbx)
  407e1c:	74 11                	je     407e2f <clear_connection+0x19f>
	    syslog( LOG_ERR, "replacing non-null linger_timer!" );
  407e1e:	be c0 09 42 00       	mov    $0x4209c0,%esi
  407e23:	bf 03 00 00 00       	mov    $0x3,%edi
  407e28:	31 c0                	xor    %eax,%eax
  407e2a:	e8 11 ae ff ff       	callq  402c40 <syslog@plt>
	c->linger_timer = tmr_create(
  407e2f:	45 31 c0             	xor    %r8d,%r8d
  407e32:	48 89 da             	mov    %rbx,%rdx
  407e35:	b9 f4 01 00 00       	mov    $0x1f4,%ecx
  407e3a:	be 40 95 40 00       	mov    $0x409540,%esi
  407e3f:	48 89 ef             	mov    %rbp,%rdi
  407e42:	e8 49 51 01 00       	callq  41cf90 <tmr_create>
  407e47:	4c 89 e2             	mov    %r12,%rdx
  407e4a:	48 c1 ea 03          	shr    $0x3,%rdx
  407e4e:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  407e55:	0f 85 41 01 00 00    	jne    407f9c <clear_connection+0x30c>
  407e5b:	48 89 43 68          	mov    %rax,0x68(%rbx)
	if ( c->linger_timer == (Timer*) 0 )
  407e5f:	48 85 c0             	test   %rax,%rax
  407e62:	0f 84 54 01 00 00    	je     407fbc <clear_connection+0x32c>
    }
  407e68:	48 83 c4 08          	add    $0x8,%rsp
  407e6c:	5b                   	pop    %rbx
  407e6d:	5d                   	pop    %rbp
  407e6e:	41 5c                	pop    %r12
  407e70:	41 5d                	pop    %r13
  407e72:	c3                   	retq   
  407e73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	    fdwatch_del_fd( c->hc->conn_fd );
  407e78:	e8 b3 28 00 00       	callq  40a730 <fdwatch_del_fd>
  407e7d:	4c 89 e0             	mov    %r12,%rax
  407e80:	48 c1 e8 03          	shr    $0x3,%rax
  407e84:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  407e8b:	0f 85 49 01 00 00    	jne    407fda <clear_connection+0x34a>
  407e91:	48 8b 43 08          	mov    0x8(%rbx),%rax
  407e95:	48 8d b8 c0 02 00 00 	lea    0x2c0(%rax),%rdi
  407e9c:	48 89 fa             	mov    %rdi,%rdx
  407e9f:	48 c1 ea 03          	shr    $0x3,%rdx
  407ea3:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  407eaa:	84 d2                	test   %dl,%dl
  407eac:	74 09                	je     407eb7 <clear_connection+0x227>
  407eae:	80 fa 03             	cmp    $0x3,%dl
  407eb1:	0f 8e cb 00 00 00    	jle    407f82 <clear_connection+0x2f2>
  407eb7:	8b b8 c0 02 00 00    	mov    0x2c0(%rax),%edi
  407ebd:	e9 c9 fe ff ff       	jmpq   407d8b <clear_connection+0xfb>
  407ec2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	tmr_cancel( c->linger_timer );
  407ec8:	4c 8d 6b 68          	lea    0x68(%rbx),%r13
  407ecc:	4d 89 ec             	mov    %r13,%r12
  407ecf:	49 c1 ec 03          	shr    $0x3,%r12
  407ed3:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  407eda:	7f 00 
  407edc:	0f 85 0d 01 00 00    	jne    407fef <clear_connection+0x35f>
  407ee2:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
  407ee6:	e8 b5 49 01 00       	callq  41c8a0 <tmr_cancel>
	c->linger_timer = (Timer*) 0;
  407eeb:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  407ef2:	7f 00 
  407ef4:	0f 85 e8 00 00 00    	jne    407fe2 <clear_connection+0x352>
	c->hc->should_linger = 0;
  407efa:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
	c->linger_timer = (Timer*) 0;
  407efe:	48 c7 43 68 00 00 00 	movq   $0x0,0x68(%rbx)
  407f05:	00 
	c->hc->should_linger = 0;
  407f06:	48 89 f8             	mov    %rdi,%rax
  407f09:	48 c1 e8 03          	shr    $0x3,%rax
  407f0d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  407f14:	0f 85 d0 00 00 00    	jne    407fea <clear_connection+0x35a>
  407f1a:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  407f1e:	48 8d ba 2c 02 00 00 	lea    0x22c(%rdx),%rdi
  407f25:	48 89 f8             	mov    %rdi,%rax
  407f28:	48 c1 e8 03          	shr    $0x3,%rax
  407f2c:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  407f33:	48 89 f8             	mov    %rdi,%rax
  407f36:	83 e0 07             	and    $0x7,%eax
  407f39:	83 c0 03             	add    $0x3,%eax
  407f3c:	38 c8                	cmp    %cl,%al
  407f3e:	7c 04                	jl     407f44 <clear_connection+0x2b4>
  407f40:	84 c9                	test   %cl,%cl
  407f42:	75 43                	jne    407f87 <clear_connection+0x2f7>
  407f44:	c7 82 2c 02 00 00 00 	movl   $0x0,0x22c(%rdx)
  407f4b:	00 00 00 
    }
  407f4e:	48 83 c4 08          	add    $0x8,%rsp
	really_clear_connection( c, tvP );
  407f52:	48 89 ee             	mov    %rbp,%rsi
  407f55:	48 89 df             	mov    %rbx,%rdi
    }
  407f58:	5b                   	pop    %rbx
  407f59:	5d                   	pop    %rbp
  407f5a:	41 5c                	pop    %r12
  407f5c:	41 5d                	pop    %r13
	really_clear_connection( c, tvP );
  407f5e:	e9 5d fb ff ff       	jmpq   407ac0 <really_clear_connection>
    if ( c->conn_state == CNST_LINGERING )
  407f63:	48 89 df             	mov    %rbx,%rdi
  407f66:	e8 65 ae ff ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( c->hc->should_linger )
  407f6b:	e8 60 ae ff ff       	callq  402dd0 <__asan_report_load4@plt>
	fdwatch_add_fd( c->hc->conn_fd, c, FDW_READ );
  407f70:	e8 5b ae ff ff       	callq  402dd0 <__asan_report_load4@plt>
	c->conn_state = CNST_LINGERING;
  407f75:	48 89 df             	mov    %rbx,%rdi
  407f78:	e8 73 ac ff ff       	callq  402bf0 <__asan_report_store4@plt>
  407f7d:	e8 4e ae ff ff       	callq  402dd0 <__asan_report_load4@plt>
  407f82:	e8 49 ae ff ff       	callq  402dd0 <__asan_report_load4@plt>
	c->hc->should_linger = 0;
  407f87:	e8 64 ac ff ff       	callq  402bf0 <__asan_report_store4@plt>
    if ( c->wakeup_timer != (Timer*) 0 )
  407f8c:	4c 89 ef             	mov    %r13,%rdi
  407f8f:	e8 bc b2 ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( c->hc->should_linger )
  407f94:	4c 89 e7             	mov    %r12,%rdi
  407f97:	e8 b4 b2 ff ff       	callq  403250 <__asan_report_load8@plt>
	c->linger_timer = tmr_create(
  407f9c:	4c 89 e7             	mov    %r12,%rdi
  407f9f:	e8 fc af ff ff       	callq  402fa0 <__asan_report_store8@plt>
	if ( c->linger_timer != (Timer*) 0 )
  407fa4:	4c 89 e7             	mov    %r12,%rdi
  407fa7:	e8 a4 b2 ff ff       	callq  403250 <__asan_report_load8@plt>
	fdwatch_add_fd( c->hc->conn_fd, c, FDW_READ );
  407fac:	4c 89 e7             	mov    %r12,%rdi
  407faf:	e8 9c b2 ff ff       	callq  403250 <__asan_report_load8@plt>
	c->wakeup_timer = 0;
  407fb4:	4c 89 ef             	mov    %r13,%rdi
  407fb7:	e8 e4 af ff ff       	callq  402fa0 <__asan_report_store8@plt>
	    syslog( LOG_CRIT, "tmr_create(linger_clear_connection) failed" );
  407fbc:	bf 02 00 00 00       	mov    $0x2,%edi
  407fc1:	be 20 0a 42 00       	mov    $0x420a20,%esi
  407fc6:	e8 75 ac ff ff       	callq  402c40 <syslog@plt>
	    exit( 1 );
  407fcb:	e8 70 b0 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  407fd0:	bf 01 00 00 00       	mov    $0x1,%edi
  407fd5:	e8 06 b1 ff ff       	callq  4030e0 <exit@plt>
  407fda:	4c 89 e7             	mov    %r12,%rdi
  407fdd:	e8 6e b2 ff ff       	callq  403250 <__asan_report_load8@plt>
	c->linger_timer = (Timer*) 0;
  407fe2:	4c 89 ef             	mov    %r13,%rdi
  407fe5:	e8 b6 af ff ff       	callq  402fa0 <__asan_report_store8@plt>
	c->hc->should_linger = 0;
  407fea:	e8 61 b2 ff ff       	callq  403250 <__asan_report_load8@plt>
	tmr_cancel( c->linger_timer );
  407fef:	4c 89 ef             	mov    %r13,%rdi
  407ff2:	e8 59 b2 ff ff       	callq  403250 <__asan_report_load8@plt>
  407ff7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  407ffe:	00 00 

0000000000408000 <finish_connection>:
    {
  408000:	55                   	push   %rbp
  408001:	53                   	push   %rbx
  408002:	48 89 fb             	mov    %rdi,%rbx
    httpd_write_response( c->hc );
  408005:	48 83 c7 08          	add    $0x8,%rdi
  408009:	48 89 f8             	mov    %rdi,%rax
  40800c:	48 c1 e8 03          	shr    $0x3,%rax
    {
  408010:	48 83 ec 08          	sub    $0x8,%rsp
    httpd_write_response( c->hc );
  408014:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40801b:	75 1d                	jne    40803a <finish_connection+0x3a>
  40801d:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  408021:	48 89 f5             	mov    %rsi,%rbp
  408024:	e8 47 e9 00 00       	callq  416970 <httpd_write_response>
    }
  408029:	48 83 c4 08          	add    $0x8,%rsp
    clear_connection( c, tvP );
  40802d:	48 89 ee             	mov    %rbp,%rsi
  408030:	48 89 df             	mov    %rbx,%rdi
    }
  408033:	5b                   	pop    %rbx
  408034:	5d                   	pop    %rbp
    clear_connection( c, tvP );
  408035:	e9 56 fc ff ff       	jmpq   407c90 <clear_connection>
    httpd_write_response( c->hc );
  40803a:	e8 11 b2 ff ff       	callq  403250 <__asan_report_load8@plt>
  40803f:	90                   	nop

0000000000408040 <handle_read>:
    {
  408040:	41 57                	push   %r15
  408042:	41 56                	push   %r14
  408044:	41 55                	push   %r13
  408046:	41 54                	push   %r12
  408048:	55                   	push   %rbp
  408049:	48 89 fd             	mov    %rdi,%rbp
    httpd_conn* hc = c->hc;
  40804c:	48 83 c7 08          	add    $0x8,%rdi
    {
  408050:	53                   	push   %rbx
    httpd_conn* hc = c->hc;
  408051:	48 89 f8             	mov    %rdi,%rax
  408054:	48 c1 e8 03          	shr    $0x3,%rax
    {
  408058:	48 83 ec 18          	sub    $0x18,%rsp
    httpd_conn* hc = c->hc;
  40805c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408063:	0f 85 f4 06 00 00    	jne    40875d <handle_read+0x71d>
  408069:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
    if ( hc->read_idx >= hc->read_size )
  40806d:	4c 8d a3 a0 00 00 00 	lea    0xa0(%rbx),%r12
  408074:	4d 89 e7             	mov    %r12,%r15
  408077:	49 c1 ef 03          	shr    $0x3,%r15
  40807b:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  408082:	00 
  408083:	0f 85 e1 06 00 00    	jne    40876a <handle_read+0x72a>
  408089:	4c 8d b3 98 00 00 00 	lea    0x98(%rbx),%r14
  408090:	49 89 f5             	mov    %rsi,%r13
  408093:	48 8b b3 a0 00 00 00 	mov    0xa0(%rbx),%rsi
  40809a:	4c 89 f0             	mov    %r14,%rax
  40809d:	48 c1 e8 03          	shr    $0x3,%rax
  4080a1:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4080a8:	0f 85 b4 06 00 00    	jne    408762 <handle_read+0x722>
  4080ae:	48 8b 93 98 00 00 00 	mov    0x98(%rbx),%rdx
  4080b5:	48 8d 8b 90 00 00 00 	lea    0x90(%rbx),%rcx
  4080bc:	48 39 d6             	cmp    %rdx,%rsi
  4080bf:	72 61                	jb     408122 <handle_read+0xe2>
	if ( hc->read_size > 5000 )
  4080c1:	48 81 fa 88 13 00 00 	cmp    $0x1388,%rdx
  4080c8:	0f 87 8a 03 00 00    	ja     408458 <handle_read+0x418>
	httpd_realloc_str(
  4080ce:	48 8d 8b 90 00 00 00 	lea    0x90(%rbx),%rcx
  4080d5:	48 81 c2 e8 03 00 00 	add    $0x3e8,%rdx
  4080dc:	4c 89 f6             	mov    %r14,%rsi
  4080df:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4080e4:	48 89 cf             	mov    %rcx,%rdi
  4080e7:	48 89 0c 24          	mov    %rcx,(%rsp)
  4080eb:	e8 40 52 00 00       	callq  40d330 <httpd_realloc_str>
  4080f0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4080f5:	48 8b 0c 24          	mov    (%rsp),%rcx
  4080f9:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408100:	0f 85 74 06 00 00    	jne    40877a <handle_read+0x73a>
  408106:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  40810d:	00 
  40810e:	48 8b 93 98 00 00 00 	mov    0x98(%rbx),%rdx
  408115:	0f 85 67 06 00 00    	jne    408782 <handle_read+0x742>
  40811b:	48 8b b3 a0 00 00 00 	mov    0xa0(%rbx),%rsi
	hc->conn_fd, &(hc->read_buf[hc->read_idx]),
  408122:	48 89 c8             	mov    %rcx,%rax
    sz = read(
  408125:	48 29 f2             	sub    %rsi,%rdx
	hc->conn_fd, &(hc->read_buf[hc->read_idx]),
  408128:	48 c1 e8 03          	shr    $0x3,%rax
  40812c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408133:	0f 85 39 06 00 00    	jne    408772 <handle_read+0x732>
    sz = read(
  408139:	4c 8d b3 c0 02 00 00 	lea    0x2c0(%rbx),%r14
	hc->conn_fd, &(hc->read_buf[hc->read_idx]),
  408140:	48 03 b3 90 00 00 00 	add    0x90(%rbx),%rsi
    sz = read(
  408147:	4c 89 f0             	mov    %r14,%rax
  40814a:	48 c1 e8 03          	shr    $0x3,%rax
  40814e:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  408155:	84 c0                	test   %al,%al
  408157:	74 08                	je     408161 <handle_read+0x121>
  408159:	3c 03                	cmp    $0x3,%al
  40815b:	0f 8e 9a 04 00 00    	jle    4085fb <handle_read+0x5bb>
  408161:	8b bb c0 02 00 00    	mov    0x2c0(%rbx),%edi
  408167:	e8 54 ad ff ff       	callq  402ec0 <read@plt>
    if ( sz == 0 )
  40816c:	85 c0                	test   %eax,%eax
  40816e:	0f 84 d4 03 00 00    	je     408548 <handle_read+0x508>
    if ( sz < 0 )
  408174:	79 4a                	jns    4081c0 <handle_read+0x180>
	if ( errno == EINTR || errno == EAGAIN || errno == EWOULDBLOCK )
  408176:	e8 85 aa ff ff       	callq  402c00 <__errno_location@plt>
  40817b:	48 89 c2             	mov    %rax,%rdx
  40817e:	48 c1 ea 03          	shr    $0x3,%rdx
  408182:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  408189:	48 89 c2             	mov    %rax,%rdx
  40818c:	83 e2 07             	and    $0x7,%edx
  40818f:	83 c2 03             	add    $0x3,%edx
  408192:	38 ca                	cmp    %cl,%dl
  408194:	7c 08                	jl     40819e <handle_read+0x15e>
  408196:	84 c9                	test   %cl,%cl
  408198:	0f 85 65 04 00 00    	jne    408603 <handle_read+0x5c3>
  40819e:	8b 00                	mov    (%rax),%eax
  4081a0:	83 f8 04             	cmp    $0x4,%eax
  4081a3:	74 09                	je     4081ae <handle_read+0x16e>
  4081a5:	83 f8 0b             	cmp    $0xb,%eax
  4081a8:	0f 85 5a 03 00 00    	jne    408508 <handle_read+0x4c8>
    }
  4081ae:	48 83 c4 18          	add    $0x18,%rsp
  4081b2:	5b                   	pop    %rbx
  4081b3:	5d                   	pop    %rbp
  4081b4:	41 5c                	pop    %r12
  4081b6:	41 5d                	pop    %r13
  4081b8:	41 5e                	pop    %r14
  4081ba:	41 5f                	pop    %r15
  4081bc:	c3                   	retq   
  4081bd:	0f 1f 00             	nopl   (%rax)
    hc->read_idx += sz;
  4081c0:	4c 89 e2             	mov    %r12,%rdx
  4081c3:	48 c1 ea 03          	shr    $0x3,%rdx
  4081c7:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4081ce:	0f 85 c0 05 00 00    	jne    408794 <handle_read+0x754>
  4081d4:	48 98                	cltq   
  4081d6:	48 01 83 a0 00 00 00 	add    %rax,0xa0(%rbx)
    c->active_at = tvP->tv_sec;
  4081dd:	4c 89 e8             	mov    %r13,%rax
  4081e0:	48 c1 e8 03          	shr    $0x3,%rax
  4081e4:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4081eb:	0f 85 ab 05 00 00    	jne    40879c <handle_read+0x75c>
  4081f1:	48 8d 7d 58          	lea    0x58(%rbp),%rdi
  4081f5:	49 8b 45 00          	mov    0x0(%r13),%rax
  4081f9:	48 89 fa             	mov    %rdi,%rdx
  4081fc:	48 c1 ea 03          	shr    $0x3,%rdx
  408200:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  408207:	0f 85 97 05 00 00    	jne    4087a4 <handle_read+0x764>
  40820d:	48 89 45 58          	mov    %rax,0x58(%rbp)
    switch ( httpd_got_request( hc ) )
  408211:	48 89 df             	mov    %rbx,%rdi
  408214:	e8 97 90 00 00       	callq  4112b0 <httpd_got_request>
  408219:	85 c0                	test   %eax,%eax
  40821b:	74 91                	je     4081ae <handle_read+0x16e>
  40821d:	83 f8 02             	cmp    $0x2,%eax
  408220:	0f 84 a2 02 00 00    	je     4084c8 <handle_read+0x488>
    if ( httpd_parse_request( hc ) < 0 )
  408226:	48 89 df             	mov    %rbx,%rdi
  408229:	e8 a2 a9 00 00       	callq  412bd0 <httpd_parse_request>
  40822e:	85 c0                	test   %eax,%eax
  408230:	0f 88 72 02 00 00    	js     4084a8 <handle_read+0x468>
    if ( ! check_throttles( c ) )
  408236:	48 89 ef             	mov    %rbp,%rdi
  408239:	e8 52 f0 ff ff       	callq  407290 <check_throttles>
  40823e:	85 c0                	test   %eax,%eax
  408240:	0f 84 42 03 00 00    	je     408588 <handle_read+0x548>
    if ( httpd_start_request( hc, tvP ) < 0 )
  408246:	4c 89 ee             	mov    %r13,%rsi
  408249:	48 89 df             	mov    %rbx,%rdi
  40824c:	e8 ef 25 01 00       	callq  41a840 <httpd_start_request>
  408251:	85 c0                	test   %eax,%eax
  408253:	0f 88 4f 02 00 00    	js     4084a8 <handle_read+0x468>
    if ( hc->got_range )
  408259:	48 8d bb 10 02 00 00 	lea    0x210(%rbx),%rdi
  408260:	48 89 f8             	mov    %rdi,%rax
  408263:	48 c1 e8 03          	shr    $0x3,%rax
  408267:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40826e:	84 c0                	test   %al,%al
  408270:	74 08                	je     40827a <handle_read+0x23a>
  408272:	3c 03                	cmp    $0x3,%al
  408274:	0f 8e 96 05 00 00    	jle    408810 <handle_read+0x7d0>
  40827a:	8b 83 10 02 00 00    	mov    0x210(%rbx),%eax
  408280:	85 c0                	test   %eax,%eax
  408282:	0f 84 88 03 00 00    	je     408610 <handle_read+0x5d0>
	c->next_byte_index = hc->first_byte_index;
  408288:	48 8d bb 18 02 00 00 	lea    0x218(%rbx),%rdi
  40828f:	48 89 f8             	mov    %rdi,%rax
  408292:	48 c1 e8 03          	shr    $0x3,%rax
  408296:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40829d:	0f 85 54 05 00 00    	jne    4087f7 <handle_read+0x7b7>
  4082a3:	48 8d bd 88 00 00 00 	lea    0x88(%rbp),%rdi
  4082aa:	48 8b 83 18 02 00 00 	mov    0x218(%rbx),%rax
  4082b1:	48 89 fa             	mov    %rdi,%rdx
  4082b4:	48 c1 ea 03          	shr    $0x3,%rdx
  4082b8:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4082bf:	0f 85 84 05 00 00    	jne    408849 <handle_read+0x809>
	c->end_byte_index = hc->last_byte_index + 1;
  4082c5:	48 8d bb 20 02 00 00 	lea    0x220(%rbx),%rdi
	c->next_byte_index = hc->first_byte_index;
  4082cc:	48 89 85 88 00 00 00 	mov    %rax,0x88(%rbp)
	c->end_byte_index = hc->last_byte_index + 1;
  4082d3:	48 89 f8             	mov    %rdi,%rax
  4082d6:	48 c1 e8 03          	shr    $0x3,%rax
  4082da:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4082e1:	0f 85 5d 05 00 00    	jne    408844 <handle_read+0x804>
  4082e7:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
  4082ee:	48 8b 83 20 02 00 00 	mov    0x220(%rbx),%rax
  4082f5:	48 89 fa             	mov    %rdi,%rdx
  4082f8:	48 c1 ea 03          	shr    $0x3,%rdx
  4082fc:	48 83 c0 01          	add    $0x1,%rax
  408300:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  408307:	0f 85 32 05 00 00    	jne    40883f <handle_read+0x7ff>
	c->end_byte_index = hc->bytes_to_send;
  40830d:	48 89 85 80 00 00 00 	mov    %rax,0x80(%rbp)
    if ( hc->file_address == (char*) 0 )
  408314:	48 8d 83 c8 02 00 00 	lea    0x2c8(%rbx),%rax
  40831b:	48 89 c2             	mov    %rax,%rdx
  40831e:	48 c1 ea 03          	shr    $0x3,%rdx
  408322:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  408329:	0f 85 08 05 00 00    	jne    408837 <handle_read+0x7f7>
  40832f:	48 83 bb c8 02 00 00 	cmpq   $0x0,0x2c8(%rbx)
  408336:	00 
  408337:	0f 84 47 03 00 00    	je     408684 <handle_read+0x644>
    if ( c->next_byte_index >= c->end_byte_index )
  40833d:	48 8d 85 88 00 00 00 	lea    0x88(%rbp),%rax
  408344:	48 89 c2             	mov    %rax,%rdx
  408347:	48 c1 ea 03          	shr    $0x3,%rdx
  40834b:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  408352:	0f 85 03 05 00 00    	jne    40885b <handle_read+0x81b>
  408358:	48 89 fa             	mov    %rdi,%rdx
  40835b:	48 8b 85 88 00 00 00 	mov    0x88(%rbp),%rax
  408362:	48 c1 ea 03          	shr    $0x3,%rdx
  408366:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40836d:	0f 85 db 04 00 00    	jne    40884e <handle_read+0x80e>
  408373:	48 3b 85 80 00 00 00 	cmp    0x80(%rbp),%rax
  40837a:	0f 8d 28 01 00 00    	jge    4084a8 <handle_read+0x468>
    c->conn_state = CNST_SENDING;
  408380:	48 89 e8             	mov    %rbp,%rax
  408383:	48 c1 e8 03          	shr    $0x3,%rax
  408387:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40838e:	84 c0                	test   %al,%al
  408390:	74 08                	je     40839a <handle_read+0x35a>
  408392:	3c 03                	cmp    $0x3,%al
  408394:	0f 8e 7b 04 00 00    	jle    408815 <handle_read+0x7d5>
    c->started_at = tvP->tv_sec;
  40839a:	4c 89 e8             	mov    %r13,%rax
    c->conn_state = CNST_SENDING;
  40839d:	c7 45 00 02 00 00 00 	movl   $0x2,0x0(%rbp)
    c->started_at = tvP->tv_sec;
  4083a4:	48 c1 e8 03          	shr    $0x3,%rax
  4083a8:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4083af:	0f 85 6d 04 00 00    	jne    408822 <handle_read+0x7e2>
  4083b5:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
  4083b9:	49 8b 45 00          	mov    0x0(%r13),%rax
  4083bd:	48 89 fa             	mov    %rdi,%rdx
  4083c0:	48 c1 ea 03          	shr    $0x3,%rdx
  4083c4:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4083cb:	0f 85 4c 04 00 00    	jne    40881d <handle_read+0x7dd>
    c->wouldblock_delay = 0;
  4083d1:	48 8d 7d 70          	lea    0x70(%rbp),%rdi
    c->started_at = tvP->tv_sec;
  4083d5:	48 89 45 50          	mov    %rax,0x50(%rbp)
    c->wouldblock_delay = 0;
  4083d9:	48 89 f8             	mov    %rdi,%rax
  4083dc:	48 c1 e8 03          	shr    $0x3,%rax
  4083e0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4083e7:	0f 85 3d 04 00 00    	jne    40882a <handle_read+0x7ea>
    fdwatch_del_fd( hc->conn_fd );
  4083ed:	4c 89 f0             	mov    %r14,%rax
    c->wouldblock_delay = 0;
  4083f0:	48 c7 45 70 00 00 00 	movq   $0x0,0x70(%rbp)
  4083f7:	00 
    fdwatch_del_fd( hc->conn_fd );
  4083f8:	48 c1 e8 03          	shr    $0x3,%rax
  4083fc:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  408403:	84 c0                	test   %al,%al
  408405:	74 08                	je     40840f <handle_read+0x3cf>
  408407:	3c 03                	cmp    $0x3,%al
  408409:	0f 8e 44 04 00 00    	jle    408853 <handle_read+0x813>
  40840f:	8b bb c0 02 00 00    	mov    0x2c0(%rbx),%edi
  408415:	e8 16 23 00 00       	callq  40a730 <fdwatch_del_fd>
    fdwatch_add_fd( hc->conn_fd, c, FDW_WRITE );
  40841a:	4c 89 f0             	mov    %r14,%rax
  40841d:	48 c1 e8 03          	shr    $0x3,%rax
  408421:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  408428:	84 c0                	test   %al,%al
  40842a:	74 08                	je     408434 <handle_read+0x3f4>
  40842c:	3c 03                	cmp    $0x3,%al
  40842e:	0f 8e fb 03 00 00    	jle    40882f <handle_read+0x7ef>
  408434:	8b bb c0 02 00 00    	mov    0x2c0(%rbx),%edi
    }
  40843a:	48 83 c4 18          	add    $0x18,%rsp
    fdwatch_add_fd( hc->conn_fd, c, FDW_WRITE );
  40843e:	48 89 ee             	mov    %rbp,%rsi
  408441:	ba 01 00 00 00       	mov    $0x1,%edx
    }
  408446:	5b                   	pop    %rbx
  408447:	5d                   	pop    %rbp
  408448:	41 5c                	pop    %r12
  40844a:	41 5d                	pop    %r13
  40844c:	41 5e                	pop    %r14
  40844e:	41 5f                	pop    %r15
    fdwatch_add_fd( hc->conn_fd, c, FDW_WRITE );
  408450:	e9 db 21 00 00       	jmpq   40a630 <fdwatch_add_fd>
  408455:	0f 1f 00             	nopl   (%rax)
	    httpd_send_err( hc, 400, httpd_err400title, "", httpd_err400form, "" );
  408458:	b8 60 60 63 00       	mov    $0x636060,%eax
  40845d:	48 c1 e8 03          	shr    $0x3,%rax
  408461:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408468:	0f 85 3b 03 00 00    	jne    4087a9 <handle_read+0x769>
  40846e:	b8 a0 60 63 00       	mov    $0x6360a0,%eax
  408473:	4c 8b 05 e6 db 22 00 	mov    0x22dbe6(%rip),%r8        # 636060 <httpd_err400form>
  40847a:	48 c1 e8 03          	shr    $0x3,%rax
  40847e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408485:	0f 85 ff 02 00 00    	jne    40878a <handle_read+0x74a>
	httpd_send_err( hc, 400, httpd_err400title, "", httpd_err400form, "" );
  40848b:	41 b9 20 fe 41 00    	mov    $0x41fe20,%r9d
  408491:	48 8b 15 08 dc 22 00 	mov    0x22dc08(%rip),%rdx        # 6360a0 <httpd_err400title>
  408498:	be 90 01 00 00       	mov    $0x190,%esi
  40849d:	48 89 df             	mov    %rbx,%rdi
  4084a0:	4c 89 c9             	mov    %r9,%rcx
  4084a3:	e8 18 7a 00 00       	callq  40fec0 <httpd_send_err>
    }
  4084a8:	48 83 c4 18          	add    $0x18,%rsp
	finish_connection( c, tvP );
  4084ac:	4c 89 ee             	mov    %r13,%rsi
  4084af:	48 89 ef             	mov    %rbp,%rdi
    }
  4084b2:	5b                   	pop    %rbx
  4084b3:	5d                   	pop    %rbp
  4084b4:	41 5c                	pop    %r12
  4084b6:	41 5d                	pop    %r13
  4084b8:	41 5e                	pop    %r14
  4084ba:	41 5f                	pop    %r15
	finish_connection( c, tvP );
  4084bc:	e9 3f fb ff ff       	jmpq   408000 <finish_connection>
  4084c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	httpd_send_err( hc, 400, httpd_err400title, "", httpd_err400form, "" );
  4084c8:	b8 60 60 63 00       	mov    $0x636060,%eax
  4084cd:	48 c1 e8 03          	shr    $0x3,%rax
  4084d1:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4084d8:	0f 85 28 03 00 00    	jne    408806 <handle_read+0x7c6>
  4084de:	b8 a0 60 63 00       	mov    $0x6360a0,%eax
  4084e3:	4c 8b 05 76 db 22 00 	mov    0x22db76(%rip),%r8        # 636060 <httpd_err400form>
  4084ea:	48 c1 e8 03          	shr    $0x3,%rax
  4084ee:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4084f5:	74 94                	je     40848b <handle_read+0x44b>
  4084f7:	bf a0 60 63 00       	mov    $0x6360a0,%edi
  4084fc:	e8 4f ad ff ff       	callq  403250 <__asan_report_load8@plt>
  408501:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	httpd_send_err(
  408508:	b8 60 60 63 00       	mov    $0x636060,%eax
  40850d:	48 c1 e8 03          	shr    $0x3,%rax
  408511:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408518:	0f 85 95 02 00 00    	jne    4087b3 <handle_read+0x773>
  40851e:	b8 a0 60 63 00       	mov    $0x6360a0,%eax
  408523:	4c 8b 05 36 db 22 00 	mov    0x22db36(%rip),%r8        # 636060 <httpd_err400form>
  40852a:	48 c1 e8 03          	shr    $0x3,%rax
  40852e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408535:	0f 84 50 ff ff ff    	je     40848b <handle_read+0x44b>
  40853b:	bf a0 60 63 00       	mov    $0x6360a0,%edi
  408540:	e8 0b ad ff ff       	callq  403250 <__asan_report_load8@plt>
  408545:	0f 1f 00             	nopl   (%rax)
	httpd_send_err( hc, 400, httpd_err400title, "", httpd_err400form, "" );
  408548:	b8 60 60 63 00       	mov    $0x636060,%eax
  40854d:	48 c1 e8 03          	shr    $0x3,%rax
  408551:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408558:	0f 85 5f 02 00 00    	jne    4087bd <handle_read+0x77d>
  40855e:	b8 a0 60 63 00       	mov    $0x6360a0,%eax
  408563:	4c 8b 05 f6 da 22 00 	mov    0x22daf6(%rip),%r8        # 636060 <httpd_err400form>
  40856a:	48 c1 e8 03          	shr    $0x3,%rax
  40856e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408575:	0f 84 10 ff ff ff    	je     40848b <handle_read+0x44b>
  40857b:	bf a0 60 63 00       	mov    $0x6360a0,%edi
  408580:	e8 cb ac ff ff       	callq  403250 <__asan_report_load8@plt>
  408585:	0f 1f 00             	nopl   (%rax)
	httpd_send_err(
  408588:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
  40858f:	48 89 f8             	mov    %rdi,%rax
  408592:	48 c1 e8 03          	shr    $0x3,%rax
  408596:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40859d:	0f 85 4a 02 00 00    	jne    4087ed <handle_read+0x7ad>
  4085a3:	b8 60 5f 63 00       	mov    $0x635f60,%eax
  4085a8:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  4085af:	48 c1 e8 03          	shr    $0x3,%rax
  4085b3:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4085ba:	0f 85 23 02 00 00    	jne    4087e3 <handle_read+0x7a3>
  4085c0:	b8 a0 5f 63 00       	mov    $0x635fa0,%eax
  4085c5:	4c 8b 05 94 d9 22 00 	mov    0x22d994(%rip),%r8        # 635f60 <httpd_err503form>
  4085cc:	48 c1 e8 03          	shr    $0x3,%rax
  4085d0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4085d7:	0f 85 fc 01 00 00    	jne    4087d9 <handle_read+0x799>
  4085dd:	48 8b 15 bc d9 22 00 	mov    0x22d9bc(%rip),%rdx        # 635fa0 <httpd_err503title>
  4085e4:	b9 20 fe 41 00       	mov    $0x41fe20,%ecx
  4085e9:	be f7 01 00 00       	mov    $0x1f7,%esi
  4085ee:	48 89 df             	mov    %rbx,%rdi
  4085f1:	e8 ca 78 00 00       	callq  40fec0 <httpd_send_err>
  4085f6:	e9 ad fe ff ff       	jmpq   4084a8 <handle_read+0x468>
    sz = read(
  4085fb:	4c 89 f7             	mov    %r14,%rdi
  4085fe:	e8 cd a7 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( errno == EINTR || errno == EAGAIN || errno == EWOULDBLOCK )
  408603:	48 89 c7             	mov    %rax,%rdi
  408606:	e8 c5 a7 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40860b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    else if ( hc->bytes_to_send < 0 )
  408610:	48 8d bb c0 00 00 00 	lea    0xc0(%rbx),%rdi
  408617:	48 89 f8             	mov    %rdi,%rax
  40861a:	48 c1 e8 03          	shr    $0x3,%rax
  40861e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408625:	0f 85 c7 01 00 00    	jne    4087f2 <handle_read+0x7b2>
  40862b:	48 8b 83 c0 00 00 00 	mov    0xc0(%rbx),%rax
	c->end_byte_index = 0;
  408632:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
    else if ( hc->bytes_to_send < 0 )
  408639:	48 85 c0             	test   %rax,%rax
  40863c:	78 22                	js     408660 <handle_read+0x620>
	c->end_byte_index = hc->bytes_to_send;
  40863e:	48 89 fa             	mov    %rdi,%rdx
  408641:	48 c1 ea 03          	shr    $0x3,%rdx
  408645:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40864c:	0f 84 bb fc ff ff    	je     40830d <handle_read+0x2cd>
  408652:	e8 49 a9 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  408657:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40865e:	00 00 
	c->end_byte_index = 0;
  408660:	48 89 f8             	mov    %rdi,%rax
  408663:	48 c1 e8 03          	shr    $0x3,%rax
  408667:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40866e:	0f 85 ef 01 00 00    	jne    408863 <handle_read+0x823>
  408674:	48 c7 85 80 00 00 00 	movq   $0x0,0x80(%rbp)
  40867b:	00 00 00 00 
  40867f:	e9 90 fc ff ff       	jmpq   408314 <handle_read+0x2d4>
	for ( tind = 0; tind < c->numtnums; ++tind )
  408684:	48 8d 7d 38          	lea    0x38(%rbp),%rdi
  408688:	48 89 f8             	mov    %rdi,%rax
  40868b:	48 c1 e8 03          	shr    $0x3,%rax
  40868f:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  408696:	84 c0                	test   %al,%al
  408698:	74 08                	je     4086a2 <handle_read+0x662>
  40869a:	3c 03                	cmp    $0x3,%al
  40869c:	0f 8e 5a 01 00 00    	jle    4087fc <handle_read+0x7bc>
  4086a2:	48 8d bb c8 00 00 00 	lea    0xc8(%rbx),%rdi
  4086a9:	8b 45 38             	mov    0x38(%rbp),%eax
  4086ac:	48 89 fa             	mov    %rdi,%rdx
  4086af:	48 c1 ea 03          	shr    $0x3,%rdx
  4086b3:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4086ba:	0f 85 07 01 00 00    	jne    4087c7 <handle_read+0x787>
  4086c0:	48 8b b3 c8 00 00 00 	mov    0xc8(%rbx),%rsi
  4086c7:	85 c0                	test   %eax,%eax
  4086c9:	7e 6b                	jle    408736 <handle_read+0x6f6>
  4086cb:	83 e8 01             	sub    $0x1,%eax
	    throttles[c->tnums[tind]].bytes_since_avg += hc->bytes_sent;
  4086ce:	4c 8b 0d 4b 8f 23 00 	mov    0x238f4b(%rip),%r9        # 641620 <throttles>
  4086d5:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
  4086d9:	4c 8d 44 85 14       	lea    0x14(%rbp,%rax,4),%r8
  4086de:	66 90                	xchg   %ax,%ax
  4086e0:	48 89 f8             	mov    %rdi,%rax
  4086e3:	48 c1 e8 03          	shr    $0x3,%rax
  4086e7:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4086ee:	48 89 f8             	mov    %rdi,%rax
  4086f1:	83 e0 07             	and    $0x7,%eax
  4086f4:	83 c0 03             	add    $0x3,%eax
  4086f7:	38 d0                	cmp    %dl,%al
  4086f9:	7c 08                	jl     408703 <handle_read+0x6c3>
  4086fb:	84 d2                	test   %dl,%dl
  4086fd:	0f 85 fe 00 00 00    	jne    408801 <handle_read+0x7c1>
  408703:	48 63 07             	movslq (%rdi),%rax
  408706:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  40870a:	48 c1 e0 04          	shl    $0x4,%rax
  40870e:	4c 01 c8             	add    %r9,%rax
  408711:	48 8d 50 20          	lea    0x20(%rax),%rdx
  408715:	48 89 d1             	mov    %rdx,%rcx
  408718:	48 c1 e9 03          	shr    $0x3,%rcx
  40871c:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  408723:	0f 85 a3 00 00 00    	jne    4087cc <handle_read+0x78c>
  408729:	48 83 c7 04          	add    $0x4,%rdi
  40872d:	48 01 70 20          	add    %rsi,0x20(%rax)
	for ( tind = 0; tind < c->numtnums; ++tind )
  408731:	4c 39 c7             	cmp    %r8,%rdi
  408734:	75 aa                	jne    4086e0 <handle_read+0x6a0>
	c->next_byte_index = hc->bytes_sent;
  408736:	48 8d bd 88 00 00 00 	lea    0x88(%rbp),%rdi
  40873d:	48 89 f8             	mov    %rdi,%rax
  408740:	48 c1 e8 03          	shr    $0x3,%rax
  408744:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40874b:	0f 85 83 00 00 00    	jne    4087d4 <handle_read+0x794>
  408751:	48 89 b5 88 00 00 00 	mov    %rsi,0x88(%rbp)
	finish_connection( c, tvP );
  408758:	e9 4b fd ff ff       	jmpq   4084a8 <handle_read+0x468>
    httpd_conn* hc = c->hc;
  40875d:	e8 ee aa ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->read_idx >= hc->read_size )
  408762:	4c 89 f7             	mov    %r14,%rdi
  408765:	e8 e6 aa ff ff       	callq  403250 <__asan_report_load8@plt>
  40876a:	4c 89 e7             	mov    %r12,%rdi
  40876d:	e8 de aa ff ff       	callq  403250 <__asan_report_load8@plt>
	hc->conn_fd, &(hc->read_buf[hc->read_idx]),
  408772:	48 89 cf             	mov    %rcx,%rdi
  408775:	e8 d6 aa ff ff       	callq  403250 <__asan_report_load8@plt>
  40877a:	4c 89 f7             	mov    %r14,%rdi
  40877d:	e8 ce aa ff ff       	callq  403250 <__asan_report_load8@plt>
  408782:	4c 89 e7             	mov    %r12,%rdi
  408785:	e8 c6 aa ff ff       	callq  403250 <__asan_report_load8@plt>
	    httpd_send_err( hc, 400, httpd_err400title, "", httpd_err400form, "" );
  40878a:	bf a0 60 63 00       	mov    $0x6360a0,%edi
  40878f:	e8 bc aa ff ff       	callq  403250 <__asan_report_load8@plt>
    hc->read_idx += sz;
  408794:	4c 89 e7             	mov    %r12,%rdi
  408797:	e8 b4 aa ff ff       	callq  403250 <__asan_report_load8@plt>
    c->active_at = tvP->tv_sec;
  40879c:	4c 89 ef             	mov    %r13,%rdi
  40879f:	e8 ac aa ff ff       	callq  403250 <__asan_report_load8@plt>
  4087a4:	e8 f7 a7 ff ff       	callq  402fa0 <__asan_report_store8@plt>
	    httpd_send_err( hc, 400, httpd_err400title, "", httpd_err400form, "" );
  4087a9:	bf 60 60 63 00       	mov    $0x636060,%edi
  4087ae:	e8 9d aa ff ff       	callq  403250 <__asan_report_load8@plt>
	httpd_send_err(
  4087b3:	bf 60 60 63 00       	mov    $0x636060,%edi
  4087b8:	e8 93 aa ff ff       	callq  403250 <__asan_report_load8@plt>
	httpd_send_err( hc, 400, httpd_err400title, "", httpd_err400form, "" );
  4087bd:	bf 60 60 63 00       	mov    $0x636060,%edi
  4087c2:	e8 89 aa ff ff       	callq  403250 <__asan_report_load8@plt>
  4087c7:	e8 84 aa ff ff       	callq  403250 <__asan_report_load8@plt>
	    throttles[c->tnums[tind]].bytes_since_avg += hc->bytes_sent;
  4087cc:	48 89 d7             	mov    %rdx,%rdi
  4087cf:	e8 7c aa ff ff       	callq  403250 <__asan_report_load8@plt>
	c->next_byte_index = hc->bytes_sent;
  4087d4:	e8 c7 a7 ff ff       	callq  402fa0 <__asan_report_store8@plt>
	httpd_send_err(
  4087d9:	bf a0 5f 63 00       	mov    $0x635fa0,%edi
  4087de:	e8 6d aa ff ff       	callq  403250 <__asan_report_load8@plt>
  4087e3:	bf 60 5f 63 00       	mov    $0x635f60,%edi
  4087e8:	e8 63 aa ff ff       	callq  403250 <__asan_report_load8@plt>
  4087ed:	e8 5e aa ff ff       	callq  403250 <__asan_report_load8@plt>
    else if ( hc->bytes_to_send < 0 )
  4087f2:	e8 59 aa ff ff       	callq  403250 <__asan_report_load8@plt>
	c->next_byte_index = hc->first_byte_index;
  4087f7:	e8 54 aa ff ff       	callq  403250 <__asan_report_load8@plt>
	for ( tind = 0; tind < c->numtnums; ++tind )
  4087fc:	e8 cf a5 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    throttles[c->tnums[tind]].bytes_since_avg += hc->bytes_sent;
  408801:	e8 ca a5 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	httpd_send_err( hc, 400, httpd_err400title, "", httpd_err400form, "" );
  408806:	bf 60 60 63 00       	mov    $0x636060,%edi
  40880b:	e8 40 aa ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->got_range )
  408810:	e8 bb a5 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    c->conn_state = CNST_SENDING;
  408815:	48 89 ef             	mov    %rbp,%rdi
  408818:	e8 d3 a3 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    c->started_at = tvP->tv_sec;
  40881d:	e8 7e a7 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  408822:	4c 89 ef             	mov    %r13,%rdi
  408825:	e8 26 aa ff ff       	callq  403250 <__asan_report_load8@plt>
    c->wouldblock_delay = 0;
  40882a:	e8 71 a7 ff ff       	callq  402fa0 <__asan_report_store8@plt>
    fdwatch_add_fd( hc->conn_fd, c, FDW_WRITE );
  40882f:	4c 89 f7             	mov    %r14,%rdi
  408832:	e8 99 a5 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( hc->file_address == (char*) 0 )
  408837:	48 89 c7             	mov    %rax,%rdi
  40883a:	e8 11 aa ff ff       	callq  403250 <__asan_report_load8@plt>
	c->end_byte_index = hc->last_byte_index + 1;
  40883f:	e8 5c a7 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  408844:	e8 07 aa ff ff       	callq  403250 <__asan_report_load8@plt>
	c->next_byte_index = hc->first_byte_index;
  408849:	e8 52 a7 ff ff       	callq  402fa0 <__asan_report_store8@plt>
    if ( c->next_byte_index >= c->end_byte_index )
  40884e:	e8 fd a9 ff ff       	callq  403250 <__asan_report_load8@plt>
    fdwatch_del_fd( hc->conn_fd );
  408853:	4c 89 f7             	mov    %r14,%rdi
  408856:	e8 75 a5 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( c->next_byte_index >= c->end_byte_index )
  40885b:	48 89 c7             	mov    %rax,%rdi
  40885e:	e8 ed a9 ff ff       	callq  403250 <__asan_report_load8@plt>
	c->end_byte_index = 0;
  408863:	e8 38 a7 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  408868:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40886f:	00 

0000000000408870 <idle>:
    for ( cnum = 0; cnum < max_connects; ++cnum )
  408870:	8b 05 6a 8c 23 00    	mov    0x238c6a(%rip),%eax        # 6414e0 <max_connects>
  408876:	85 c0                	test   %eax,%eax
  408878:	0f 8e fa 01 00 00    	jle    408a78 <idle+0x208>
    {
  40887e:	41 57                	push   %r15
	    if ( nowP->tv_sec - c->active_at >= IDLE_READ_TIMELIMIT )
  408880:	49 89 f7             	mov    %rsi,%r15
    {
  408883:	41 56                	push   %r14
	    if ( nowP->tv_sec - c->active_at >= IDLE_READ_TIMELIMIT )
  408885:	49 c1 ef 03          	shr    $0x3,%r15
    for ( cnum = 0; cnum < max_connects; ++cnum )
  408889:	45 31 f6             	xor    %r14d,%r14d
    {
  40888c:	41 55                	push   %r13
  40888e:	41 54                	push   %r12
		httpd_send_err(
  408890:	41 bc e0 5f 63 00    	mov    $0x635fe0,%r12d
    {
  408896:	55                   	push   %rbp
		httpd_send_err(
  408897:	49 c1 ec 03          	shr    $0x3,%r12
  40889b:	48 89 f5             	mov    %rsi,%rbp
    {
  40889e:	53                   	push   %rbx
  40889f:	48 83 ec 18          	sub    $0x18,%rsp
  4088a3:	eb 5c                	jmp    408901 <idle+0x91>
  4088a5:	0f 1f 00             	nopl   (%rax)
  4088a8:	85 c0                	test   %eax,%eax
  4088aa:	7e 44                	jle    4088f0 <idle+0x80>
  4088ac:	83 f8 03             	cmp    $0x3,%eax
  4088af:	7f 3f                	jg     4088f0 <idle+0x80>
	    if ( nowP->tv_sec - c->active_at >= IDLE_SEND_TIMELIMIT )
  4088b1:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  4088b8:	00 
  4088b9:	0f 85 d4 01 00 00    	jne    408a93 <idle+0x223>
  4088bf:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
  4088c3:	48 8b 45 00          	mov    0x0(%rbp),%rax
  4088c7:	48 89 fa             	mov    %rdi,%rdx
  4088ca:	48 c1 ea 03          	shr    $0x3,%rdx
  4088ce:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4088d5:	0f 85 b3 01 00 00    	jne    408a8e <idle+0x21e>
  4088db:	48 2b 43 58          	sub    0x58(%rbx),%rax
  4088df:	48 3d 2b 01 00 00    	cmp    $0x12b,%rax
  4088e5:	0f 8f 45 01 00 00    	jg     408a30 <idle+0x1c0>
  4088eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4088f0:	49 83 c6 01          	add    $0x1,%r14
    for ( cnum = 0; cnum < max_connects; ++cnum )
  4088f4:	44 39 35 e5 8b 23 00 	cmp    %r14d,0x238be5(%rip)        # 6414e0 <max_connects>
  4088fb:	0f 8e 1e 01 00 00    	jle    408a1f <idle+0x1af>
	c = &connects[cnum];
  408901:	4b 8d 1c f6          	lea    (%r14,%r14,8),%rbx
  408905:	48 c1 e3 04          	shl    $0x4,%rbx
  408909:	48 03 1d 50 8c 23 00 	add    0x238c50(%rip),%rbx        # 641560 <connects>
	switch ( c->conn_state )
  408910:	48 89 d8             	mov    %rbx,%rax
  408913:	48 c1 e8 03          	shr    $0x3,%rax
  408917:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40891e:	84 c0                	test   %al,%al
  408920:	74 08                	je     40892a <idle+0xba>
  408922:	3c 03                	cmp    $0x3,%al
  408924:	0f 8e 4f 01 00 00    	jle    408a79 <idle+0x209>
  40892a:	8b 03                	mov    (%rbx),%eax
  40892c:	83 f8 01             	cmp    $0x1,%eax
  40892f:	0f 85 73 ff ff ff    	jne    4088a8 <idle+0x38>
	    if ( nowP->tv_sec - c->active_at >= IDLE_READ_TIMELIMIT )
  408935:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  40893c:	00 
  40893d:	0f 85 43 01 00 00    	jne    408a86 <idle+0x216>
  408943:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
  408947:	48 8b 45 00          	mov    0x0(%rbp),%rax
  40894b:	48 89 fa             	mov    %rdi,%rdx
  40894e:	48 c1 ea 03          	shr    $0x3,%rdx
  408952:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  408959:	0f 85 22 01 00 00    	jne    408a81 <idle+0x211>
  40895f:	48 2b 43 58          	sub    0x58(%rbx),%rax
  408963:	48 83 f8 3b          	cmp    $0x3b,%rax
  408967:	7e 87                	jle    4088f0 <idle+0x80>
		    httpd_ntoa( &c->hc->client_addr ) );
  408969:	4c 8d 6b 08          	lea    0x8(%rbx),%r13
  40896d:	4c 89 e9             	mov    %r13,%rcx
  408970:	48 c1 e9 03          	shr    $0x3,%rcx
  408974:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  40897b:	0f 85 3b 01 00 00    	jne    408abc <idle+0x24c>
		syslog( LOG_INFO,
  408981:	48 8b 43 08          	mov    0x8(%rbx),%rax
  408985:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  40898a:	48 8d 78 10          	lea    0x10(%rax),%rdi
  40898e:	e8 6d 8f 00 00       	callq  411900 <httpd_ntoa>
  408993:	be 80 0a 42 00       	mov    $0x420a80,%esi
  408998:	bf 06 00 00 00       	mov    $0x6,%edi
  40899d:	48 89 c2             	mov    %rax,%rdx
  4089a0:	31 c0                	xor    %eax,%eax
  4089a2:	e8 99 a2 ff ff       	callq  402c40 <syslog@plt>
		httpd_send_err(
  4089a7:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  4089ac:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  4089b3:	7f 00 
  4089b5:	0f 85 f7 00 00 00    	jne    408ab2 <idle+0x242>
  4089bb:	b8 20 60 63 00       	mov    $0x636020,%eax
  4089c0:	4c 8b 05 19 d6 22 00 	mov    0x22d619(%rip),%r8        # 635fe0 <httpd_err408form>
  4089c7:	48 c1 e8 03          	shr    $0x3,%rax
  4089cb:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4089d2:	0f 85 d0 00 00 00    	jne    408aa8 <idle+0x238>
  4089d8:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  4089df:	48 8b 15 3a d6 22 00 	mov    0x22d63a(%rip),%rdx        # 636020 <httpd_err408title>
  4089e6:	0f 85 b4 00 00 00    	jne    408aa0 <idle+0x230>
  4089ec:	41 b9 20 fe 41 00    	mov    $0x41fe20,%r9d
  4089f2:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  4089f6:	be 98 01 00 00       	mov    $0x198,%esi
  4089fb:	49 83 c6 01          	add    $0x1,%r14
  4089ff:	4c 89 c9             	mov    %r9,%rcx
  408a02:	e8 b9 74 00 00       	callq  40fec0 <httpd_send_err>
		finish_connection( c, nowP );
  408a07:	48 89 ee             	mov    %rbp,%rsi
  408a0a:	48 89 df             	mov    %rbx,%rdi
  408a0d:	e8 ee f5 ff ff       	callq  408000 <finish_connection>
    for ( cnum = 0; cnum < max_connects; ++cnum )
  408a12:	44 39 35 c7 8a 23 00 	cmp    %r14d,0x238ac7(%rip)        # 6414e0 <max_connects>
  408a19:	0f 8f e2 fe ff ff    	jg     408901 <idle+0x91>
    }
  408a1f:	48 83 c4 18          	add    $0x18,%rsp
  408a23:	5b                   	pop    %rbx
  408a24:	5d                   	pop    %rbp
  408a25:	41 5c                	pop    %r12
  408a27:	41 5d                	pop    %r13
  408a29:	41 5e                	pop    %r14
  408a2b:	41 5f                	pop    %r15
  408a2d:	c3                   	retq   
  408a2e:	66 90                	xchg   %ax,%ax
		    httpd_ntoa( &c->hc->client_addr ) );
  408a30:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  408a34:	48 89 f8             	mov    %rdi,%rax
  408a37:	48 c1 e8 03          	shr    $0x3,%rax
  408a3b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408a42:	75 57                	jne    408a9b <idle+0x22b>
		syslog( LOG_INFO,
  408a44:	48 8b 43 08          	mov    0x8(%rbx),%rax
  408a48:	48 8d 78 10          	lea    0x10(%rax),%rdi
  408a4c:	e8 af 8e 00 00       	callq  411900 <httpd_ntoa>
  408a51:	be e0 0a 42 00       	mov    $0x420ae0,%esi
  408a56:	bf 06 00 00 00       	mov    $0x6,%edi
  408a5b:	48 89 c2             	mov    %rax,%rdx
  408a5e:	31 c0                	xor    %eax,%eax
  408a60:	e8 db a1 ff ff       	callq  402c40 <syslog@plt>
		clear_connection( c, nowP );
  408a65:	48 89 ee             	mov    %rbp,%rsi
  408a68:	48 89 df             	mov    %rbx,%rdi
  408a6b:	e8 20 f2 ff ff       	callq  407c90 <clear_connection>
  408a70:	e9 7b fe ff ff       	jmpq   4088f0 <idle+0x80>
  408a75:	0f 1f 00             	nopl   (%rax)
  408a78:	c3                   	retq   
	switch ( c->conn_state )
  408a79:	48 89 df             	mov    %rbx,%rdi
  408a7c:	e8 4f a3 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    if ( nowP->tv_sec - c->active_at >= IDLE_READ_TIMELIMIT )
  408a81:	e8 ca a7 ff ff       	callq  403250 <__asan_report_load8@plt>
  408a86:	48 89 ef             	mov    %rbp,%rdi
  408a89:	e8 c2 a7 ff ff       	callq  403250 <__asan_report_load8@plt>
	    if ( nowP->tv_sec - c->active_at >= IDLE_SEND_TIMELIMIT )
  408a8e:	e8 bd a7 ff ff       	callq  403250 <__asan_report_load8@plt>
  408a93:	48 89 ef             	mov    %rbp,%rdi
  408a96:	e8 b5 a7 ff ff       	callq  403250 <__asan_report_load8@plt>
		    httpd_ntoa( &c->hc->client_addr ) );
  408a9b:	e8 b0 a7 ff ff       	callq  403250 <__asan_report_load8@plt>
		httpd_send_err(
  408aa0:	4c 89 ef             	mov    %r13,%rdi
  408aa3:	e8 a8 a7 ff ff       	callq  403250 <__asan_report_load8@plt>
  408aa8:	bf 20 60 63 00       	mov    $0x636020,%edi
  408aad:	e8 9e a7 ff ff       	callq  403250 <__asan_report_load8@plt>
  408ab2:	bf e0 5f 63 00       	mov    $0x635fe0,%edi
  408ab7:	e8 94 a7 ff ff       	callq  403250 <__asan_report_load8@plt>
		    httpd_ntoa( &c->hc->client_addr ) );
  408abc:	4c 89 ef             	mov    %r13,%rdi
  408abf:	e8 8c a7 ff ff       	callq  403250 <__asan_report_load8@plt>
  408ac4:	66 90                	xchg   %ax,%ax
  408ac6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  408acd:	00 00 00 

0000000000408ad0 <handle_send>:
    {
  408ad0:	41 57                	push   %r15
  408ad2:	41 56                	push   %r14
  408ad4:	49 89 fe             	mov    %rdi,%r14
  408ad7:	41 55                	push   %r13
  408ad9:	41 54                	push   %r12
  408adb:	55                   	push   %rbp
  408adc:	53                   	push   %rbx
  408add:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  408ae4:	8b 05 16 88 23 00    	mov    0x238816(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  408aea:	48 89 34 24          	mov    %rsi,(%rsp)
  408aee:	4c 8d 7c 24 30       	lea    0x30(%rsp),%r15
  408af3:	85 c0                	test   %eax,%eax
  408af5:	0f 85 2a 09 00 00    	jne    409425 <handle_send+0x955>
    httpd_conn* hc = c->hc;
  408afb:	4d 8d 66 08          	lea    0x8(%r14),%r12
    {
  408aff:	4c 89 fb             	mov    %r15,%rbx
  408b02:	49 c7 07 b3 8a b5 41 	movq   $0x41b58ab3,(%r15)
  408b09:	49 8d 47 60          	lea    0x60(%r15),%rax
    httpd_conn* hc = c->hc;
  408b0d:	4c 89 e2             	mov    %r12,%rdx
    {
  408b10:	48 c1 eb 03          	shr    $0x3,%rbx
  408b14:	49 c7 47 08 a7 17 42 	movq   $0x4217a7,0x8(%r15)
  408b1b:	00 
    httpd_conn* hc = c->hc;
  408b1c:	48 c1 ea 03          	shr    $0x3,%rdx
    {
  408b20:	49 c7 47 10 d0 8a 40 	movq   $0x408ad0,0x10(%r15)
  408b27:	00 
  408b28:	c7 83 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbx)
  408b2f:	f1 f1 f1 
  408b32:	c7 83 08 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8008(%rbx)
  408b39:	f3 f3 f3 
    httpd_conn* hc = c->hc;
  408b3c:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  408b43:	0f 85 96 09 00 00    	jne    4094df <handle_send+0xa0f>
    if ( c->max_limit == THROTTLE_NOLIMIT )
  408b49:	49 8d 4e 40          	lea    0x40(%r14),%rcx
    httpd_conn* hc = c->hc;
  408b4d:	49 8b 6e 08          	mov    0x8(%r14),%rbp
    if ( c->max_limit == THROTTLE_NOLIMIT )
  408b51:	48 89 ca             	mov    %rcx,%rdx
  408b54:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
  408b59:	48 c1 ea 03          	shr    $0x3,%rdx
  408b5d:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  408b64:	0f 85 06 09 00 00    	jne    409470 <handle_send+0x9a0>
  408b6a:	49 8b 76 40          	mov    0x40(%r14),%rsi
	max_bytes = 1000000000L;
  408b6e:	ba 00 ca 9a 3b       	mov    $0x3b9aca00,%edx
    if ( c->max_limit == THROTTLE_NOLIMIT )
  408b73:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
  408b77:	74 0f                	je     408b88 <handle_send+0xb8>
	max_bytes = c->max_limit / 4;	/* send at most 1/4 seconds worth */
  408b79:	48 85 f6             	test   %rsi,%rsi
  408b7c:	48 8d 56 03          	lea    0x3(%rsi),%rdx
  408b80:	48 0f 49 d6          	cmovns %rsi,%rdx
  408b84:	48 c1 fa 02          	sar    $0x2,%rdx
    if ( hc->responselen == 0 )
  408b88:	4c 8d 9d d8 01 00 00 	lea    0x1d8(%rbp),%r11
  408b8f:	4c 89 de             	mov    %r11,%rsi
  408b92:	48 c1 ee 03          	shr    $0x3,%rsi
  408b96:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  408b9d:	0f 85 98 08 00 00    	jne    40943b <handle_send+0x96b>
  408ba3:	48 83 bd d8 01 00 00 	cmpq   $0x0,0x1d8(%rbp)
  408baa:	00 
  408bab:	0f 85 df 01 00 00    	jne    408d90 <handle_send+0x2c0>
	    MIN( c->end_byte_index - c->next_byte_index, max_bytes ) );
  408bb1:	49 8d 86 80 00 00 00 	lea    0x80(%r14),%rax
  408bb8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  408bbd:	48 c1 e8 03          	shr    $0x3,%rax
  408bc1:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408bc8:	0f 85 f2 07 00 00    	jne    4093c0 <handle_send+0x8f0>
  408bce:	4d 8d 96 88 00 00 00 	lea    0x88(%r14),%r10
  408bd5:	49 8b 86 80 00 00 00 	mov    0x80(%r14),%rax
  408bdc:	4c 89 d6             	mov    %r10,%rsi
  408bdf:	48 c1 ee 03          	shr    $0x3,%rsi
  408be3:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  408bea:	0f 85 c8 07 00 00    	jne    4093b8 <handle_send+0x8e8>
  408bf0:	49 8b b6 88 00 00 00 	mov    0x88(%r14),%rsi
	    hc->conn_fd, &(hc->file_address[c->next_byte_index]),
  408bf7:	48 8d bd c8 02 00 00 	lea    0x2c8(%rbp),%rdi
	    MIN( c->end_byte_index - c->next_byte_index, max_bytes ) );
  408bfe:	48 29 f0             	sub    %rsi,%rax
	sz = write(
  408c01:	48 39 d0             	cmp    %rdx,%rax
  408c04:	48 0f 46 d0          	cmovbe %rax,%rdx
	    hc->conn_fd, &(hc->file_address[c->next_byte_index]),
  408c08:	48 89 f8             	mov    %rdi,%rax
  408c0b:	48 c1 e8 03          	shr    $0x3,%rax
  408c0f:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408c16:	0f 85 66 07 00 00    	jne    409382 <handle_send+0x8b2>
	sz = write(
  408c1c:	4c 8d ad c0 02 00 00 	lea    0x2c0(%rbp),%r13
	    hc->conn_fd, &(hc->file_address[c->next_byte_index]),
  408c23:	48 03 b5 c8 02 00 00 	add    0x2c8(%rbp),%rsi
	sz = write(
  408c2a:	4c 89 e8             	mov    %r13,%rax
  408c2d:	48 c1 e8 03          	shr    $0x3,%rax
  408c31:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  408c38:	84 c0                	test   %al,%al
  408c3a:	74 08                	je     408c44 <handle_send+0x174>
  408c3c:	3c 03                	cmp    $0x3,%al
  408c3e:	0f 8e 86 07 00 00    	jle    4093ca <handle_send+0x8fa>
  408c44:	8b bd c0 02 00 00    	mov    0x2c0(%rbp),%edi
  408c4a:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
  408c4f:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
  408c54:	e8 07 a3 ff ff       	callq  402f60 <write@plt>
  408c59:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
  408c5e:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    if ( sz < 0 && errno == EINTR )
  408c63:	85 c0                	test   %eax,%eax
  408c65:	0f 88 a1 02 00 00    	js     408f0c <handle_send+0x43c>
    if ( sz == 0 ||
  408c6b:	0f 85 0f 03 00 00    	jne    408f80 <handle_send+0x4b0>
	c->wouldblock_delay += MIN_WOULDBLOCK_DELAY;
  408c71:	4d 8d 66 70          	lea    0x70(%r14),%r12
  408c75:	4c 89 e0             	mov    %r12,%rax
  408c78:	48 c1 e8 03          	shr    $0x3,%rax
  408c7c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408c83:	0f 85 ef 07 00 00    	jne    409478 <handle_send+0x9a8>
	c->conn_state = CNST_PAUSING;
  408c89:	4c 89 f0             	mov    %r14,%rax
	c->wouldblock_delay += MIN_WOULDBLOCK_DELAY;
  408c8c:	49 83 46 70 64       	addq   $0x64,0x70(%r14)
	c->conn_state = CNST_PAUSING;
  408c91:	48 c1 e8 03          	shr    $0x3,%rax
  408c95:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  408c9c:	84 c0                	test   %al,%al
  408c9e:	74 08                	je     408ca8 <handle_send+0x1d8>
  408ca0:	3c 03                	cmp    $0x3,%al
  408ca2:	0f 8e cd 06 00 00    	jle    409375 <handle_send+0x8a5>
	fdwatch_del_fd( hc->conn_fd );
  408ca8:	4c 89 e8             	mov    %r13,%rax
	c->conn_state = CNST_PAUSING;
  408cab:	41 c7 06 03 00 00 00 	movl   $0x3,(%r14)
	fdwatch_del_fd( hc->conn_fd );
  408cb2:	48 c1 e8 03          	shr    $0x3,%rax
  408cb6:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  408cbd:	84 c0                	test   %al,%al
  408cbf:	74 08                	je     408cc9 <handle_send+0x1f9>
  408cc1:	3c 03                	cmp    $0x3,%al
  408cc3:	0f 8e a4 06 00 00    	jle    40936d <handle_send+0x89d>
  408cc9:	8b bd c0 02 00 00    	mov    0x2c0(%rbp),%edi
	if ( c->wakeup_timer != (Timer*) 0 )
  408ccf:	4d 8d 6e 60          	lea    0x60(%r14),%r13
	fdwatch_del_fd( hc->conn_fd );
  408cd3:	e8 58 1a 00 00       	callq  40a730 <fdwatch_del_fd>
	if ( c->wakeup_timer != (Timer*) 0 )
  408cd8:	4c 89 e8             	mov    %r13,%rax
  408cdb:	48 c1 e8 03          	shr    $0x3,%rax
  408cdf:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408ce6:	0f 85 fb 07 00 00    	jne    4094e7 <handle_send+0xa17>
  408cec:	49 83 7e 60 00       	cmpq   $0x0,0x60(%r14)
  408cf1:	74 11                	je     408d04 <handle_send+0x234>
	    syslog( LOG_ERR, "replacing non-null wakeup_timer!" );
  408cf3:	be 40 0b 42 00       	mov    $0x420b40,%esi
  408cf8:	bf 03 00 00 00       	mov    $0x3,%edi
  408cfd:	31 c0                	xor    %eax,%eax
  408cff:	e8 3c 9f ff ff       	callq  402c40 <syslog@plt>
	c->wakeup_timer = tmr_create(
  408d04:	4c 89 e0             	mov    %r12,%rax
  408d07:	48 c1 e8 03          	shr    $0x3,%rax
  408d0b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408d12:	0f 85 70 07 00 00    	jne    409488 <handle_send+0x9b8>
  408d18:	49 8b 4e 70          	mov    0x70(%r14),%rcx
  408d1c:	48 8b 3c 24          	mov    (%rsp),%rdi
  408d20:	45 31 c0             	xor    %r8d,%r8d
  408d23:	4c 89 f2             	mov    %r14,%rdx
  408d26:	be f0 4f 40 00       	mov    $0x404ff0,%esi
  408d2b:	e8 60 42 01 00       	callq  41cf90 <tmr_create>
  408d30:	4c 89 ea             	mov    %r13,%rdx
  408d33:	48 c1 ea 03          	shr    $0x3,%rdx
  408d37:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  408d3e:	0f 85 4c 07 00 00    	jne    409490 <handle_send+0x9c0>
  408d44:	49 89 46 60          	mov    %rax,0x60(%r14)
	if ( c->wakeup_timer == (Timer*) 0 )
  408d48:	48 85 c0             	test   %rax,%rax
  408d4b:	0f 84 47 07 00 00    	je     409498 <handle_send+0x9c8>
    {
  408d51:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  408d56:	4c 39 f8             	cmp    %r15,%rax
  408d59:	0f 85 59 07 00 00    	jne    4094b8 <handle_send+0x9e8>
  408d5f:	48 c7 83 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbx)
  408d66:	00 00 00 00 
  408d6a:	c7 83 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbx)
  408d71:	00 00 00 
    }
  408d74:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
  408d7b:	5b                   	pop    %rbx
  408d7c:	5d                   	pop    %rbp
  408d7d:	41 5c                	pop    %r12
  408d7f:	41 5d                	pop    %r13
  408d81:	41 5e                	pop    %r14
  408d83:	41 5f                	pop    %r15
  408d85:	c3                   	retq   
  408d86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  408d8d:	00 00 00 
	iv[0].iov_base = hc->response;
  408d90:	48 8d bd 70 01 00 00 	lea    0x170(%rbp),%rdi
  408d97:	48 89 fe             	mov    %rdi,%rsi
  408d9a:	48 c1 ee 03          	shr    $0x3,%rsi
  408d9e:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  408da5:	0f 85 dc 05 00 00    	jne    409387 <handle_send+0x8b7>
  408dab:	4c 8d 48 c0          	lea    -0x40(%rax),%r9
  408daf:	48 8b b5 70 01 00 00 	mov    0x170(%rbp),%rsi
  408db6:	4c 89 cf             	mov    %r9,%rdi
  408db9:	48 c1 ef 03          	shr    $0x3,%rdi
  408dbd:	80 bf 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdi)
  408dc4:	0f 85 c7 05 00 00    	jne    409391 <handle_send+0x8c1>
	iv[0].iov_len = hc->responselen;
  408dca:	49 8d 79 08          	lea    0x8(%r9),%rdi
	iv[0].iov_base = hc->response;
  408dce:	48 89 70 c0          	mov    %rsi,-0x40(%rax)
	iv[0].iov_len = hc->responselen;
  408dd2:	48 8b b5 d8 01 00 00 	mov    0x1d8(%rbp),%rsi
  408dd9:	49 89 f8             	mov    %rdi,%r8
  408ddc:	49 c1 e8 03          	shr    $0x3,%r8
  408de0:	41 80 b8 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r8)
  408de7:	00 
  408de8:	0f 85 9e 05 00 00    	jne    40938c <handle_send+0x8bc>
	iv[1].iov_base = &(hc->file_address[c->next_byte_index]);
  408dee:	48 8d bd c8 02 00 00 	lea    0x2c8(%rbp),%rdi
	iv[0].iov_len = hc->responselen;
  408df5:	48 89 70 c8          	mov    %rsi,-0x38(%rax)
	iv[1].iov_base = &(hc->file_address[c->next_byte_index]);
  408df9:	48 89 fe             	mov    %rdi,%rsi
  408dfc:	48 c1 ee 03          	shr    $0x3,%rsi
  408e00:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  408e07:	0f 85 a1 05 00 00    	jne    4093ae <handle_send+0x8de>
  408e0d:	4d 8d 96 88 00 00 00 	lea    0x88(%r14),%r10
  408e14:	48 8b b5 c8 02 00 00 	mov    0x2c8(%rbp),%rsi
  408e1b:	4c 89 d7             	mov    %r10,%rdi
  408e1e:	48 c1 ef 03          	shr    $0x3,%rdi
  408e22:	80 bf 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdi)
  408e29:	0f 85 77 05 00 00    	jne    4093a6 <handle_send+0x8d6>
  408e2f:	49 8d 79 10          	lea    0x10(%r9),%rdi
  408e33:	4d 8b ae 88 00 00 00 	mov    0x88(%r14),%r13
  408e3a:	49 89 f8             	mov    %rdi,%r8
  408e3d:	49 c1 e8 03          	shr    $0x3,%r8
  408e41:	4c 01 ee             	add    %r13,%rsi
  408e44:	41 80 b8 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r8)
  408e4b:	00 
  408e4c:	0f 85 4f 05 00 00    	jne    4093a1 <handle_send+0x8d1>
	iv[1].iov_len = MIN( c->end_byte_index - c->next_byte_index, max_bytes );
  408e52:	49 8d 8e 80 00 00 00 	lea    0x80(%r14),%rcx
	iv[1].iov_base = &(hc->file_address[c->next_byte_index]);
  408e59:	48 89 70 d0          	mov    %rsi,-0x30(%rax)
	iv[1].iov_len = MIN( c->end_byte_index - c->next_byte_index, max_bytes );
  408e5d:	48 89 ce             	mov    %rcx,%rsi
  408e60:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  408e65:	48 c1 ee 03          	shr    $0x3,%rsi
  408e69:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  408e70:	0f 85 23 05 00 00    	jne    409399 <handle_send+0x8c9>
  408e76:	49 8b b6 80 00 00 00 	mov    0x80(%r14),%rsi
  408e7d:	49 8d 79 18          	lea    0x18(%r9),%rdi
  408e81:	4c 29 ee             	sub    %r13,%rsi
  408e84:	48 39 d6             	cmp    %rdx,%rsi
  408e87:	48 0f 46 d6          	cmovbe %rsi,%rdx
  408e8b:	48 89 fe             	mov    %rdi,%rsi
  408e8e:	48 c1 ee 03          	shr    $0x3,%rsi
  408e92:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  408e99:	0f 85 14 05 00 00    	jne    4093b3 <handle_send+0x8e3>
	sz = writev( hc->conn_fd, iv, 2 );
  408e9f:	4c 8d ad c0 02 00 00 	lea    0x2c0(%rbp),%r13
	iv[1].iov_len = MIN( c->end_byte_index - c->next_byte_index, max_bytes );
  408ea6:	48 89 50 d8          	mov    %rdx,-0x28(%rax)
	sz = writev( hc->conn_fd, iv, 2 );
  408eaa:	4c 89 e8             	mov    %r13,%rax
  408ead:	48 c1 e8 03          	shr    $0x3,%rax
  408eb1:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  408eb8:	84 c0                	test   %al,%al
  408eba:	74 08                	je     408ec4 <handle_send+0x3f4>
  408ebc:	3c 03                	cmp    $0x3,%al
  408ebe:	0f 8e 0e 05 00 00    	jle    4093d2 <handle_send+0x902>
  408ec4:	8b bd c0 02 00 00    	mov    0x2c0(%rbp),%edi
  408eca:	4c 89 ce             	mov    %r9,%rsi
  408ecd:	ba 02 00 00 00       	mov    $0x2,%edx
  408ed2:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
  408ed7:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
  408edc:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
  408ee1:	e8 ba a2 ff ff       	callq  4031a0 <writev@plt>
  408ee6:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
  408eeb:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
  408ef0:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    if ( sz < 0 && errno == EINTR )
  408ef5:	49 c1 e9 03          	shr    $0x3,%r9
  408ef9:	41 c7 81 00 80 ff 7f 	movl   $0xf8f8f8f8,0x7fff8000(%r9)
  408f00:	f8 f8 f8 f8 
  408f04:	85 c0                	test   %eax,%eax
  408f06:	0f 89 5f fd ff ff    	jns    408c6b <handle_send+0x19b>
  408f0c:	e8 ef 9c ff ff       	callq  402c00 <__errno_location@plt>
  408f11:	48 89 c2             	mov    %rax,%rdx
  408f14:	48 c1 ea 03          	shr    $0x3,%rdx
  408f18:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  408f1f:	48 89 c2             	mov    %rax,%rdx
  408f22:	83 e2 07             	and    $0x7,%edx
  408f25:	83 c2 03             	add    $0x3,%edx
  408f28:	40 38 f2             	cmp    %sil,%dl
  408f2b:	7c 09                	jl     408f36 <handle_send+0x466>
  408f2d:	40 84 f6             	test   %sil,%sil
  408f30:	0f 85 32 05 00 00    	jne    409468 <handle_send+0x998>
  408f36:	8b 00                	mov    (%rax),%eax
  408f38:	83 f8 04             	cmp    $0x4,%eax
  408f3b:	0f 84 10 fe ff ff    	je     408d51 <handle_send+0x281>
	 ( sz < 0 && ( errno == EWOULDBLOCK || errno == EAGAIN ) ) )
  408f41:	83 f8 0b             	cmp    $0xb,%eax
  408f44:	0f 84 27 fd ff ff    	je     408c71 <handle_send+0x1a1>
	if ( errno != EPIPE && errno != EINVAL && errno != ECONNRESET )
  408f4a:	83 f8 20             	cmp    $0x20,%eax
  408f4d:	40 0f 95 c6          	setne  %sil
  408f51:	83 f8 16             	cmp    $0x16,%eax
  408f54:	0f 95 c2             	setne  %dl
  408f57:	40 84 d6             	test   %dl,%sil
  408f5a:	74 09                	je     408f65 <handle_send+0x495>
  408f5c:	83 f8 68             	cmp    $0x68,%eax
  408f5f:	0f 85 7b 04 00 00    	jne    4093e0 <handle_send+0x910>
	clear_connection( c, tvP );
  408f65:	48 8b 34 24          	mov    (%rsp),%rsi
  408f69:	4c 89 f7             	mov    %r14,%rdi
  408f6c:	e8 1f ed ff ff       	callq  407c90 <clear_connection>
	return;
  408f71:	e9 db fd ff ff       	jmpq   408d51 <handle_send+0x281>
  408f76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  408f7d:	00 00 00 
    c->active_at = tvP->tv_sec;
  408f80:	48 8b 14 24          	mov    (%rsp),%rdx
  408f84:	48 c1 ea 03          	shr    $0x3,%rdx
  408f88:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  408f8f:	0f 85 b3 04 00 00    	jne    409448 <handle_send+0x978>
  408f95:	49 8d 7e 58          	lea    0x58(%r14),%rdi
  408f99:	48 8b 0c 24          	mov    (%rsp),%rcx
  408f9d:	48 89 fe             	mov    %rdi,%rsi
  408fa0:	48 c1 ee 03          	shr    $0x3,%rsi
  408fa4:	48 8b 11             	mov    (%rcx),%rdx
  408fa7:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  408fae:	0f 85 8f 04 00 00    	jne    409443 <handle_send+0x973>
  408fb4:	49 89 56 58          	mov    %rdx,0x58(%r14)
    if ( hc->responselen > 0 )
  408fb8:	4c 89 da             	mov    %r11,%rdx
  408fbb:	48 c1 ea 03          	shr    $0x3,%rdx
  408fbf:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  408fc6:	0f 85 b4 04 00 00    	jne    409480 <handle_send+0x9b0>
  408fcc:	4c 8b 8d d8 01 00 00 	mov    0x1d8(%rbp),%r9
  408fd3:	4d 85 c9             	test   %r9,%r9
  408fd6:	0f 85 d4 01 00 00    	jne    4091b0 <handle_send+0x6e0>
  408fdc:	48 63 d0             	movslq %eax,%rdx
    c->next_byte_index += sz;
  408fdf:	4c 89 d0             	mov    %r10,%rax
  408fe2:	48 c1 e8 03          	shr    $0x3,%rax
  408fe6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  408fed:	0f 85 fc 04 00 00    	jne    4094ef <handle_send+0xa1f>
  408ff3:	4d 8b 86 88 00 00 00 	mov    0x88(%r14),%r8
    c->hc->bytes_sent += sz;
  408ffa:	4c 89 e0             	mov    %r12,%rax
  408ffd:	48 c1 e8 03          	shr    $0x3,%rax
    c->next_byte_index += sz;
  409001:	49 01 d0             	add    %rdx,%r8
    c->hc->bytes_sent += sz;
  409004:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
    c->next_byte_index += sz;
  40900b:	4d 89 86 88 00 00 00 	mov    %r8,0x88(%r14)
    c->hc->bytes_sent += sz;
  409012:	0f 85 39 04 00 00    	jne    409451 <handle_send+0x981>
  409018:	49 8b 46 08          	mov    0x8(%r14),%rax
  40901c:	48 8d b8 c8 00 00 00 	lea    0xc8(%rax),%rdi
  409023:	48 89 fe             	mov    %rdi,%rsi
  409026:	48 c1 ee 03          	shr    $0x3,%rsi
  40902a:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  409031:	0f 85 22 04 00 00    	jne    409459 <handle_send+0x989>
  409037:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
    for ( tind = 0; tind < c->numtnums; ++tind )
  40903e:	49 8d 7e 38          	lea    0x38(%r14),%rdi
    c->hc->bytes_sent += sz;
  409042:	48 01 d1             	add    %rdx,%rcx
  409045:	48 89 88 c8 00 00 00 	mov    %rcx,0xc8(%rax)
    for ( tind = 0; tind < c->numtnums; ++tind )
  40904c:	48 89 f8             	mov    %rdi,%rax
  40904f:	48 c1 e8 03          	shr    $0x3,%rax
  409053:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40905a:	84 c0                	test   %al,%al
  40905c:	74 08                	je     409066 <handle_send+0x596>
  40905e:	3c 03                	cmp    $0x3,%al
  409060:	0f 8e 17 03 00 00    	jle    40937d <handle_send+0x8ad>
  409066:	41 8b 46 38          	mov    0x38(%r14),%eax
  40906a:	85 c0                	test   %eax,%eax
  40906c:	7e 73                	jle    4090e1 <handle_send+0x611>
  40906e:	83 e8 01             	sub    $0x1,%eax
	throttles[c->tnums[tind]].bytes_since_avg += sz;
  409071:	4c 8b 1d a8 85 23 00 	mov    0x2385a8(%rip),%r11        # 641620 <throttles>
  409078:	49 8d 7e 10          	lea    0x10(%r14),%rdi
  40907c:	4d 8d 54 86 14       	lea    0x14(%r14,%rax,4),%r10
  409081:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  409088:	48 89 f8             	mov    %rdi,%rax
  40908b:	48 c1 e8 03          	shr    $0x3,%rax
  40908f:	0f b6 b0 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%esi
  409096:	48 89 f8             	mov    %rdi,%rax
  409099:	83 e0 07             	and    $0x7,%eax
  40909c:	83 c0 03             	add    $0x3,%eax
  40909f:	40 38 f0             	cmp    %sil,%al
  4090a2:	7c 09                	jl     4090ad <handle_send+0x5dd>
  4090a4:	40 84 f6             	test   %sil,%sil
  4090a7:	0f 85 73 03 00 00    	jne    409420 <handle_send+0x950>
  4090ad:	48 63 07             	movslq (%rdi),%rax
  4090b0:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4090b4:	48 c1 e0 04          	shl    $0x4,%rax
  4090b8:	4c 01 d8             	add    %r11,%rax
  4090bb:	48 8d 70 20          	lea    0x20(%rax),%rsi
  4090bf:	49 89 f1             	mov    %rsi,%r9
  4090c2:	49 c1 e9 03          	shr    $0x3,%r9
  4090c6:	41 80 b9 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r9)
  4090cd:	00 
  4090ce:	0f 85 44 03 00 00    	jne    409418 <handle_send+0x948>
  4090d4:	48 83 c7 04          	add    $0x4,%rdi
  4090d8:	48 01 50 20          	add    %rdx,0x20(%rax)
    for ( tind = 0; tind < c->numtnums; ++tind )
  4090dc:	4c 39 d7             	cmp    %r10,%rdi
  4090df:	75 a7                	jne    409088 <handle_send+0x5b8>
    if ( c->next_byte_index >= c->end_byte_index )
  4090e1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4090e6:	48 c1 e8 03          	shr    $0x3,%rax
  4090ea:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4090f1:	0f 85 67 03 00 00    	jne    40945e <handle_send+0x98e>
  4090f7:	4d 3b 86 80 00 00 00 	cmp    0x80(%r14),%r8
  4090fe:	0f 8d fc 01 00 00    	jge    409300 <handle_send+0x830>
    if ( c->wouldblock_delay > MIN_WOULDBLOCK_DELAY )
  409104:	49 8d 7e 70          	lea    0x70(%r14),%rdi
  409108:	48 89 f8             	mov    %rdi,%rax
  40910b:	48 c1 e8 03          	shr    $0x3,%rax
  40910f:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  409116:	0f 85 db 03 00 00    	jne    4094f7 <handle_send+0xa27>
  40911c:	49 8b 46 70          	mov    0x70(%r14),%rax
  409120:	48 83 f8 64          	cmp    $0x64,%rax
  409124:	0f 8f a6 00 00 00    	jg     4091d0 <handle_send+0x700>
    if ( c->max_limit != THROTTLE_NOLIMIT )
  40912a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  40912f:	48 c1 e8 03          	shr    $0x3,%rax
  409133:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40913a:	0f 85 bc 03 00 00    	jne    4094fc <handle_send+0xa2c>
  409140:	49 8b 76 40          	mov    0x40(%r14),%rsi
  409144:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
  409148:	0f 84 03 fc ff ff    	je     408d51 <handle_send+0x281>
	elapsed = tvP->tv_sec - c->started_at;
  40914e:	49 8d 7e 50          	lea    0x50(%r14),%rdi
  409152:	48 8b 04 24          	mov    (%rsp),%rax
  409156:	48 89 fa             	mov    %rdi,%rdx
  409159:	48 c1 ea 03          	shr    $0x3,%rdx
  40915d:	48 8b 00             	mov    (%rax),%rax
  409160:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  409167:	0f 85 99 03 00 00    	jne    409506 <handle_send+0xa36>
	if ( elapsed == 0 )
  40916d:	49 2b 46 50          	sub    0x50(%r14),%rax
  409171:	49 89 c0             	mov    %rax,%r8
  409174:	74 6a                	je     4091e0 <handle_send+0x710>
  409176:	48 89 c8             	mov    %rcx,%rax
  409179:	48 99                	cqto   
  40917b:	49 f7 f8             	idiv   %r8
  40917e:	48 89 c1             	mov    %rax,%rcx
	if ( c->hc->bytes_sent / elapsed > c->max_limit )
  409181:	48 39 ce             	cmp    %rcx,%rsi
  409184:	0f 8d c7 fb ff ff    	jge    408d51 <handle_send+0x281>
	    c->conn_state = CNST_PAUSING;
  40918a:	4c 89 f0             	mov    %r14,%rax
  40918d:	48 c1 e8 03          	shr    $0x3,%rax
  409191:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  409198:	84 c0                	test   %al,%al
  40919a:	74 54                	je     4091f0 <handle_send+0x720>
  40919c:	3c 03                	cmp    $0x3,%al
  40919e:	7f 50                	jg     4091f0 <handle_send+0x720>
  4091a0:	4c 89 f7             	mov    %r14,%rdi
  4091a3:	e8 48 9a ff ff       	callq  402bf0 <__asan_report_store4@plt>
  4091a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4091af:	00 
	if ( sz < hc->responselen )
  4091b0:	48 63 f0             	movslq %eax,%rsi
  4091b3:	49 39 f1             	cmp    %rsi,%r9
  4091b6:	0f 87 5c 01 00 00    	ja     409318 <handle_send+0x848>
	    hc->responselen = 0;
  4091bc:	48 c7 85 d8 01 00 00 	movq   $0x0,0x1d8(%rbp)
  4091c3:	00 00 00 00 
	    sz -= hc->responselen;
  4091c7:	44 29 c8             	sub    %r9d,%eax
  4091ca:	e9 0d fe ff ff       	jmpq   408fdc <handle_send+0x50c>
  4091cf:	90                   	nop
	c->wouldblock_delay -= MIN_WOULDBLOCK_DELAY;
  4091d0:	48 83 e8 64          	sub    $0x64,%rax
  4091d4:	49 89 46 70          	mov    %rax,0x70(%r14)
  4091d8:	e9 4d ff ff ff       	jmpq   40912a <handle_send+0x65a>
  4091dd:	0f 1f 00             	nopl   (%rax)
	    elapsed = 1;	/* count at least one second */
  4091e0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4091e6:	eb 99                	jmp    409181 <handle_send+0x6b1>
  4091e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4091ef:	00 
	    fdwatch_del_fd( hc->conn_fd );
  4091f0:	4c 89 e8             	mov    %r13,%rax
	    c->conn_state = CNST_PAUSING;
  4091f3:	41 c7 06 03 00 00 00 	movl   $0x3,(%r14)
	    fdwatch_del_fd( hc->conn_fd );
  4091fa:	48 c1 e8 03          	shr    $0x3,%rax
  4091fe:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  409205:	84 c0                	test   %al,%al
  409207:	74 0f                	je     409218 <handle_send+0x748>
  409209:	3c 03                	cmp    $0x3,%al
  40920b:	7f 0b                	jg     409218 <handle_send+0x748>
  40920d:	4c 89 ef             	mov    %r13,%rdi
  409210:	e8 bb 9b ff ff       	callq  402dd0 <__asan_report_load4@plt>
  409215:	0f 1f 00             	nopl   (%rax)
  409218:	8b bd c0 02 00 00    	mov    0x2c0(%rbp),%edi
  40921e:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
  409223:	e8 08 15 00 00       	callq  40a730 <fdwatch_del_fd>
	    coast = c->hc->bytes_sent / c->max_limit - elapsed;
  409228:	4c 89 e0             	mov    %r12,%rax
  40922b:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
  409230:	48 c1 e8 03          	shr    $0x3,%rax
  409234:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40923b:	0f 85 eb 02 00 00    	jne    40952c <handle_send+0xa5c>
  409241:	49 8b 46 08          	mov    0x8(%r14),%rax
  409245:	48 8d b8 c8 00 00 00 	lea    0xc8(%rax),%rdi
  40924c:	48 89 fa             	mov    %rdi,%rdx
  40924f:	48 c1 ea 03          	shr    $0x3,%rdx
  409253:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40925a:	0f 85 c7 02 00 00    	jne    409527 <handle_send+0xa57>
  409260:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  409265:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
  40926c:	48 c1 ea 03          	shr    $0x3,%rdx
  409270:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  409277:	0f 85 a0 02 00 00    	jne    40951d <handle_send+0xa4d>
  40927d:	48 99                	cqto   
	    if ( c->wakeup_timer != (Timer*) 0 )
  40927f:	4d 8d 66 60          	lea    0x60(%r14),%r12
	    coast = c->hc->bytes_sent / c->max_limit - elapsed;
  409283:	49 f7 7e 40          	idivq  0x40(%r14)
  409287:	41 89 c5             	mov    %eax,%r13d
	    if ( c->wakeup_timer != (Timer*) 0 )
  40928a:	4c 89 e0             	mov    %r12,%rax
  40928d:	48 c1 e8 03          	shr    $0x3,%rax
	    coast = c->hc->bytes_sent / c->max_limit - elapsed;
  409291:	45 29 c5             	sub    %r8d,%r13d
	    if ( c->wakeup_timer != (Timer*) 0 )
  409294:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40929b:	0f 85 74 02 00 00    	jne    409515 <handle_send+0xa45>
  4092a1:	49 83 7e 60 00       	cmpq   $0x0,0x60(%r14)
  4092a6:	74 11                	je     4092b9 <handle_send+0x7e9>
		syslog( LOG_ERR, "replacing non-null wakeup_timer!" );
  4092a8:	be 40 0b 42 00       	mov    $0x420b40,%esi
  4092ad:	bf 03 00 00 00       	mov    $0x3,%edi
  4092b2:	31 c0                	xor    %eax,%eax
  4092b4:	e8 87 99 ff ff       	callq  402c40 <syslog@plt>
	    c->wakeup_timer = tmr_create(
  4092b9:	b9 f4 01 00 00       	mov    $0x1f4,%ecx
  4092be:	45 85 ed             	test   %r13d,%r13d
  4092c1:	7e 0a                	jle    4092cd <handle_send+0x7fd>
		coast > 0 ? ( coast * 1000L ) : 500L, 0 );
  4092c3:	4d 63 ed             	movslq %r13d,%r13
	    c->wakeup_timer = tmr_create(
  4092c6:	49 69 cd e8 03 00 00 	imul   $0x3e8,%r13,%rcx
  4092cd:	48 8b 3c 24          	mov    (%rsp),%rdi
  4092d1:	45 31 c0             	xor    %r8d,%r8d
  4092d4:	4c 89 f2             	mov    %r14,%rdx
  4092d7:	be f0 4f 40 00       	mov    $0x404ff0,%esi
  4092dc:	e8 af 3c 01 00       	callq  41cf90 <tmr_create>
  4092e1:	4c 89 e2             	mov    %r12,%rdx
  4092e4:	48 c1 ea 03          	shr    $0x3,%rdx
  4092e8:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4092ef:	0f 84 4f fa ff ff    	je     408d44 <handle_send+0x274>
  4092f5:	4c 89 e7             	mov    %r12,%rdi
  4092f8:	e8 a3 9c ff ff       	callq  402fa0 <__asan_report_store8@plt>
  4092fd:	0f 1f 00             	nopl   (%rax)
	finish_connection( c, tvP );
  409300:	48 8b 34 24          	mov    (%rsp),%rsi
  409304:	4c 89 f7             	mov    %r14,%rdi
  409307:	e8 f4 ec ff ff       	callq  408000 <finish_connection>
	return;
  40930c:	e9 40 fa ff ff       	jmpq   408d51 <handle_send+0x281>
  409311:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    (void) memmove( hc->response, &(hc->response[sz]), newlen );
  409318:	48 8d bd 70 01 00 00 	lea    0x170(%rbp),%rdi
	    int newlen = hc->responselen - sz;
  40931f:	41 29 c1             	sub    %eax,%r9d
	    (void) memmove( hc->response, &(hc->response[sz]), newlen );
  409322:	48 89 f8             	mov    %rdi,%rax
  409325:	4d 63 c9             	movslq %r9d,%r9
  409328:	48 c1 e8 03          	shr    $0x3,%rax
  40932c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  409333:	0f 85 d2 01 00 00    	jne    40950b <handle_send+0xa3b>
  409339:	48 8b bd 70 01 00 00 	mov    0x170(%rbp),%rdi
  409340:	4c 89 ca             	mov    %r9,%rdx
  409343:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
  409348:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
  40934d:	48 01 fe             	add    %rdi,%rsi
  409350:	e8 8b 99 ff ff       	callq  402ce0 <memmove@plt>
	    hc->responselen = newlen;
  409355:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
  40935a:	31 d2                	xor    %edx,%edx
  40935c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
  409361:	4c 89 8d d8 01 00 00 	mov    %r9,0x1d8(%rbp)
	    sz = 0;
  409368:	e9 72 fc ff ff       	jmpq   408fdf <handle_send+0x50f>
	fdwatch_del_fd( hc->conn_fd );
  40936d:	4c 89 ef             	mov    %r13,%rdi
  409370:	e8 5b 9a ff ff       	callq  402dd0 <__asan_report_load4@plt>
	c->conn_state = CNST_PAUSING;
  409375:	4c 89 f7             	mov    %r14,%rdi
  409378:	e8 73 98 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    for ( tind = 0; tind < c->numtnums; ++tind )
  40937d:	e8 4e 9a ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    hc->conn_fd, &(hc->file_address[c->next_byte_index]),
  409382:	e8 c9 9e ff ff       	callq  403250 <__asan_report_load8@plt>
	iv[0].iov_base = hc->response;
  409387:	e8 c4 9e ff ff       	callq  403250 <__asan_report_load8@plt>
	iv[0].iov_len = hc->responselen;
  40938c:	e8 0f 9c ff ff       	callq  402fa0 <__asan_report_store8@plt>
	iv[0].iov_base = hc->response;
  409391:	4c 89 cf             	mov    %r9,%rdi
  409394:	e8 07 9c ff ff       	callq  402fa0 <__asan_report_store8@plt>
	iv[1].iov_len = MIN( c->end_byte_index - c->next_byte_index, max_bytes );
  409399:	48 89 cf             	mov    %rcx,%rdi
  40939c:	e8 af 9e ff ff       	callq  403250 <__asan_report_load8@plt>
	iv[1].iov_base = &(hc->file_address[c->next_byte_index]);
  4093a1:	e8 fa 9b ff ff       	callq  402fa0 <__asan_report_store8@plt>
  4093a6:	4c 89 d7             	mov    %r10,%rdi
  4093a9:	e8 a2 9e ff ff       	callq  403250 <__asan_report_load8@plt>
  4093ae:	e8 9d 9e ff ff       	callq  403250 <__asan_report_load8@plt>
	iv[1].iov_len = MIN( c->end_byte_index - c->next_byte_index, max_bytes );
  4093b3:	e8 e8 9b ff ff       	callq  402fa0 <__asan_report_store8@plt>
	    MIN( c->end_byte_index - c->next_byte_index, max_bytes ) );
  4093b8:	4c 89 d7             	mov    %r10,%rdi
  4093bb:	e8 90 9e ff ff       	callq  403250 <__asan_report_load8@plt>
  4093c0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  4093c5:	e8 86 9e ff ff       	callq  403250 <__asan_report_load8@plt>
	sz = write(
  4093ca:	4c 89 ef             	mov    %r13,%rdi
  4093cd:	e8 fe 99 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	sz = writev( hc->conn_fd, iv, 2 );
  4093d2:	4c 89 ef             	mov    %r13,%rdi
  4093d5:	e8 f6 99 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  4093da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	    syslog( LOG_ERR, "write - %m sending %.80s", hc->encodedurl );
  4093e0:	48 8d bd d0 00 00 00 	lea    0xd0(%rbp),%rdi
  4093e7:	48 89 f8             	mov    %rdi,%rax
  4093ea:	48 c1 e8 03          	shr    $0x3,%rax
  4093ee:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4093f5:	0f 85 15 01 00 00    	jne    409510 <handle_send+0xa40>
  4093fb:	48 8b 95 d0 00 00 00 	mov    0xd0(%rbp),%rdx
  409402:	be 00 0c 42 00       	mov    $0x420c00,%esi
  409407:	bf 03 00 00 00       	mov    $0x3,%edi
  40940c:	31 c0                	xor    %eax,%eax
  40940e:	e8 2d 98 ff ff       	callq  402c40 <syslog@plt>
  409413:	e9 4d fb ff ff       	jmpq   408f65 <handle_send+0x495>
	throttles[c->tnums[tind]].bytes_since_avg += sz;
  409418:	48 89 f7             	mov    %rsi,%rdi
  40941b:	e8 30 9e ff ff       	callq  403250 <__asan_report_load8@plt>
  409420:	e8 ab 99 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    {
  409425:	bf 60 00 00 00       	mov    $0x60,%edi
  40942a:	e8 81 99 ff ff       	callq  402db0 <__asan_stack_malloc_1@plt>
  40942f:	48 85 c0             	test   %rax,%rax
  409432:	4c 0f 45 f8          	cmovne %rax,%r15
  409436:	e9 c0 f6 ff ff       	jmpq   408afb <handle_send+0x2b>
    if ( hc->responselen == 0 )
  40943b:	4c 89 df             	mov    %r11,%rdi
  40943e:	e8 0d 9e ff ff       	callq  403250 <__asan_report_load8@plt>
    c->active_at = tvP->tv_sec;
  409443:	e8 58 9b ff ff       	callq  402fa0 <__asan_report_store8@plt>
  409448:	48 8b 3c 24          	mov    (%rsp),%rdi
  40944c:	e8 ff 9d ff ff       	callq  403250 <__asan_report_load8@plt>
    c->hc->bytes_sent += sz;
  409451:	4c 89 e7             	mov    %r12,%rdi
  409454:	e8 f7 9d ff ff       	callq  403250 <__asan_report_load8@plt>
  409459:	e8 f2 9d ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( c->next_byte_index >= c->end_byte_index )
  40945e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  409463:	e8 e8 9d ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( sz < 0 && errno == EINTR )
  409468:	48 89 c7             	mov    %rax,%rdi
  40946b:	e8 60 99 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( c->max_limit == THROTTLE_NOLIMIT )
  409470:	48 89 cf             	mov    %rcx,%rdi
  409473:	e8 d8 9d ff ff       	callq  403250 <__asan_report_load8@plt>
	c->wouldblock_delay += MIN_WOULDBLOCK_DELAY;
  409478:	4c 89 e7             	mov    %r12,%rdi
  40947b:	e8 d0 9d ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->responselen > 0 )
  409480:	4c 89 df             	mov    %r11,%rdi
  409483:	e8 c8 9d ff ff       	callq  403250 <__asan_report_load8@plt>
	c->wakeup_timer = tmr_create(
  409488:	4c 89 e7             	mov    %r12,%rdi
  40948b:	e8 c0 9d ff ff       	callq  403250 <__asan_report_load8@plt>
  409490:	4c 89 ef             	mov    %r13,%rdi
  409493:	e8 08 9b ff ff       	callq  402fa0 <__asan_report_store8@plt>
	    syslog( LOG_CRIT, "tmr_create(wakeup_connection) failed" );
  409498:	bf 02 00 00 00       	mov    $0x2,%edi
  40949d:	be a0 0b 42 00       	mov    $0x420ba0,%esi
  4094a2:	31 c0                	xor    %eax,%eax
  4094a4:	e8 97 97 ff ff       	callq  402c40 <syslog@plt>
	    exit( 1 );
  4094a9:	e8 92 9b ff ff       	callq  403040 <__asan_handle_no_return@plt>
  4094ae:	bf 01 00 00 00       	mov    $0x1,%edi
  4094b3:	e8 28 9c ff ff       	callq  4030e0 <exit@plt>
    {
  4094b8:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
  4094bf:	f5 f5 f5 
  4094c2:	49 c7 07 0e 36 e0 45 	movq   $0x45e0360e,(%r15)
  4094c9:	48 89 83 00 80 ff 7f 	mov    %rax,0x7fff8000(%rbx)
  4094d0:	c7 83 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rbx)
  4094d7:	f5 f5 f5 
  4094da:	e9 95 f8 ff ff       	jmpq   408d74 <handle_send+0x2a4>
    httpd_conn* hc = c->hc;
  4094df:	4c 89 e7             	mov    %r12,%rdi
  4094e2:	e8 69 9d ff ff       	callq  403250 <__asan_report_load8@plt>
	if ( c->wakeup_timer != (Timer*) 0 )
  4094e7:	4c 89 ef             	mov    %r13,%rdi
  4094ea:	e8 61 9d ff ff       	callq  403250 <__asan_report_load8@plt>
    c->next_byte_index += sz;
  4094ef:	4c 89 d7             	mov    %r10,%rdi
  4094f2:	e8 59 9d ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( c->wouldblock_delay > MIN_WOULDBLOCK_DELAY )
  4094f7:	e8 54 9d ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( c->max_limit != THROTTLE_NOLIMIT )
  4094fc:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  409501:	e8 4a 9d ff ff       	callq  403250 <__asan_report_load8@plt>
	elapsed = tvP->tv_sec - c->started_at;
  409506:	e8 45 9d ff ff       	callq  403250 <__asan_report_load8@plt>
	    (void) memmove( hc->response, &(hc->response[sz]), newlen );
  40950b:	e8 40 9d ff ff       	callq  403250 <__asan_report_load8@plt>
	    syslog( LOG_ERR, "write - %m sending %.80s", hc->encodedurl );
  409510:	e8 3b 9d ff ff       	callq  403250 <__asan_report_load8@plt>
	    if ( c->wakeup_timer != (Timer*) 0 )
  409515:	4c 89 e7             	mov    %r12,%rdi
  409518:	e8 33 9d ff ff       	callq  403250 <__asan_report_load8@plt>
	    coast = c->hc->bytes_sent / c->max_limit - elapsed;
  40951d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  409522:	e8 29 9d ff ff       	callq  403250 <__asan_report_load8@plt>
  409527:	e8 24 9d ff ff       	callq  403250 <__asan_report_load8@plt>
  40952c:	4c 89 e7             	mov    %r12,%rdi
  40952f:	e8 1c 9d ff ff       	callq  403250 <__asan_report_load8@plt>
  409534:	66 90                	xchg   %ax,%ax
  409536:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40953d:	00 00 00 

0000000000409540 <linger_clear_connection>:
    {
  409540:	41 55                	push   %r13
  409542:	41 54                	push   %r12
  409544:	49 89 fc             	mov    %rdi,%r12
  409547:	55                   	push   %rbp
  409548:	53                   	push   %rbx
  409549:	48 83 ec 78          	sub    $0x78,%rsp
  40954d:	8b 05 ad 7d 23 00    	mov    0x237dad(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  409553:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
  409558:	49 89 dd             	mov    %rbx,%r13
  40955b:	85 c0                	test   %eax,%eax
  40955d:	0f 85 a3 00 00 00    	jne    409606 <linger_clear_connection+0xc6>
    c = (connecttab*) client_data.p;
  409563:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
    {
  409567:	48 89 dd             	mov    %rbx,%rbp
  40956a:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    c = (connecttab*) client_data.p;
  409571:	48 89 f8             	mov    %rdi,%rax
    {
  409574:	48 c1 ed 03          	shr    $0x3,%rbp
  409578:	48 c7 43 08 60 17 42 	movq   $0x421760,0x8(%rbx)
  40957f:	00 
    c = (connecttab*) client_data.p;
  409580:	48 c1 e8 03          	shr    $0x3,%rax
    {
  409584:	48 c7 43 10 40 95 40 	movq   $0x409540,0x10(%rbx)
  40958b:	00 
  40958c:	c7 85 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbp)
  409593:	f1 f1 f1 
  409596:	c7 85 04 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff8004(%rbp)
  40959d:	f2 f2 f2 
  4095a0:	c7 85 08 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8008(%rbp)
  4095a7:	f3 f3 f3 
    c = (connecttab*) client_data.p;
  4095aa:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
linger_clear_connection( ClientData client_data, struct timeval* nowP )
  4095b1:	4c 89 63 20          	mov    %r12,0x20(%rbx)
    c = (connecttab*) client_data.p;
  4095b5:	0f 85 94 00 00 00    	jne    40964f <linger_clear_connection+0x10f>
    c->linger_timer = (Timer*) 0;
  4095bb:	49 8d 7c 24 68       	lea    0x68(%r12),%rdi
  4095c0:	48 89 f8             	mov    %rdi,%rax
  4095c3:	48 c1 e8 03          	shr    $0x3,%rax
  4095c7:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4095ce:	75 7a                	jne    40964a <linger_clear_connection+0x10a>
  4095d0:	49 c7 44 24 68 00 00 	movq   $0x0,0x68(%r12)
  4095d7:	00 00 
    really_clear_connection( c, nowP );
  4095d9:	4c 89 e7             	mov    %r12,%rdi
  4095dc:	e8 df e4 ff ff       	callq  407ac0 <really_clear_connection>
    {
  4095e1:	49 39 dd             	cmp    %rbx,%r13
  4095e4:	75 40                	jne    409626 <linger_clear_connection+0xe6>
  4095e6:	48 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbp)
  4095ed:	00 00 00 00 
  4095f1:	c7 85 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbp)
  4095f8:	00 00 00 
    }
  4095fb:	48 83 c4 78          	add    $0x78,%rsp
  4095ff:	5b                   	pop    %rbx
  409600:	5d                   	pop    %rbp
  409601:	41 5c                	pop    %r12
  409603:	41 5d                	pop    %r13
  409605:	c3                   	retq   
    {
  409606:	bf 60 00 00 00       	mov    $0x60,%edi
  40960b:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  409610:	e8 9b 97 ff ff       	callq  402db0 <__asan_stack_malloc_1@plt>
  409615:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  40961a:	48 85 c0             	test   %rax,%rax
  40961d:	48 0f 45 d8          	cmovne %rax,%rbx
  409621:	e9 3d ff ff ff       	jmpq   409563 <linger_clear_connection+0x23>
  409626:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
  40962d:	f5 f5 f5 
  409630:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  409637:	48 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%rbp)
  40963e:	c7 85 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rbp)
  409645:	f5 f5 f5 
  409648:	eb b1                	jmp    4095fb <linger_clear_connection+0xbb>
    c->linger_timer = (Timer*) 0;
  40964a:	e8 51 99 ff ff       	callq  402fa0 <__asan_report_store8@plt>
    c = (connecttab*) client_data.p;
  40964f:	e8 fc 9b ff ff       	callq  403250 <__asan_report_load8@plt>
  409654:	66 90                	xchg   %ax,%ax
  409656:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40965d:	00 00 00 

0000000000409660 <handle_linger>:
    {
  409660:	41 56                	push   %r14
  409662:	49 89 fe             	mov    %rdi,%r14
  409665:	41 55                	push   %r13
  409667:	49 89 f5             	mov    %rsi,%r13
  40966a:	41 54                	push   %r12
  40966c:	55                   	push   %rbp
  40966d:	53                   	push   %rbx
  40966e:	48 81 ec 40 10 00 00 	sub    $0x1040,%rsp
  409675:	8b 05 85 7c 23 00    	mov    0x237c85(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  40967b:	48 89 e3             	mov    %rsp,%rbx
  40967e:	49 89 dc             	mov    %rbx,%r12
  409681:	85 c0                	test   %eax,%eax
  409683:	0f 85 0e 01 00 00    	jne    409797 <handle_linger+0x137>
    r = read( c->hc->conn_fd, buf, sizeof(buf) );
  409689:	49 8d 7e 08          	lea    0x8(%r14),%rdi
    {
  40968d:	48 89 dd             	mov    %rbx,%rbp
  409690:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
  409697:	48 8d b3 40 10 00 00 	lea    0x1040(%rbx),%rsi
    r = read( c->hc->conn_fd, buf, sizeof(buf) );
  40969e:	48 89 f8             	mov    %rdi,%rax
    {
  4096a1:	48 c1 ed 03          	shr    $0x3,%rbp
  4096a5:	48 c7 43 08 b5 17 42 	movq   $0x4217b5,0x8(%rbx)
  4096ac:	00 
    r = read( c->hc->conn_fd, buf, sizeof(buf) );
  4096ad:	48 c1 e8 03          	shr    $0x3,%rax
    {
  4096b1:	48 c7 43 10 60 96 40 	movq   $0x409660,0x10(%rbx)
  4096b8:	00 
  4096b9:	c7 85 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbp)
  4096c0:	f1 f1 f1 
  4096c3:	c7 85 04 82 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8204(%rbp)
  4096ca:	f3 f3 f3 
    r = read( c->hc->conn_fd, buf, sizeof(buf) );
  4096cd:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4096d4:	0f 85 b8 00 00 00    	jne    409792 <handle_linger+0x132>
  4096da:	49 8b 46 08          	mov    0x8(%r14),%rax
  4096de:	48 8d b8 c0 02 00 00 	lea    0x2c0(%rax),%rdi
  4096e5:	48 89 fa             	mov    %rdi,%rdx
  4096e8:	48 c1 ea 03          	shr    $0x3,%rdx
  4096ec:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  4096f3:	84 d2                	test   %dl,%dl
  4096f5:	74 09                	je     409700 <handle_linger+0xa0>
  4096f7:	80 fa 03             	cmp    $0x3,%dl
  4096fa:	0f 8e 8d 00 00 00    	jle    40978d <handle_linger+0x12d>
  409700:	8b b8 c0 02 00 00    	mov    0x2c0(%rax),%edi
  409706:	48 81 ee 20 10 00 00 	sub    $0x1020,%rsi
  40970d:	ba 00 10 00 00       	mov    $0x1000,%edx
  409712:	e8 a9 97 ff ff       	callq  402ec0 <read@plt>
    if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
  409717:	85 c0                	test   %eax,%eax
  409719:	78 35                	js     409750 <handle_linger+0xf0>
    if ( r <= 0 )
  40971b:	74 63                	je     409780 <handle_linger+0x120>
    {
  40971d:	49 39 dc             	cmp    %rbx,%r12
  409720:	0f 85 87 00 00 00    	jne    4097ad <handle_linger+0x14d>
  409726:	c7 85 00 80 ff 7f 00 	movl   $0x0,0x7fff8000(%rbp)
  40972d:	00 00 00 
  409730:	c7 85 04 82 ff 7f 00 	movl   $0x0,0x7fff8204(%rbp)
  409737:	00 00 00 
    }
  40973a:	48 81 c4 40 10 00 00 	add    $0x1040,%rsp
  409741:	5b                   	pop    %rbx
  409742:	5d                   	pop    %rbp
  409743:	41 5c                	pop    %r12
  409745:	41 5d                	pop    %r13
  409747:	41 5e                	pop    %r14
  409749:	c3                   	retq   
  40974a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
  409750:	e8 ab 94 ff ff       	callq  402c00 <__errno_location@plt>
  409755:	48 89 c2             	mov    %rax,%rdx
  409758:	48 c1 ea 03          	shr    $0x3,%rdx
  40975c:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  409763:	48 89 c2             	mov    %rax,%rdx
  409766:	83 e2 07             	and    $0x7,%edx
  409769:	83 c2 03             	add    $0x3,%edx
  40976c:	38 ca                	cmp    %cl,%dl
  40976e:	7c 04                	jl     409774 <handle_linger+0x114>
  409770:	84 c9                	test   %cl,%cl
  409772:	75 55                	jne    4097c9 <handle_linger+0x169>
  409774:	8b 00                	mov    (%rax),%eax
  409776:	83 f8 04             	cmp    $0x4,%eax
  409779:	74 a2                	je     40971d <handle_linger+0xbd>
  40977b:	83 f8 0b             	cmp    $0xb,%eax
  40977e:	74 9d                	je     40971d <handle_linger+0xbd>
	really_clear_connection( c, tvP );
  409780:	4c 89 ee             	mov    %r13,%rsi
  409783:	4c 89 f7             	mov    %r14,%rdi
  409786:	e8 35 e3 ff ff       	callq  407ac0 <really_clear_connection>
	return;
  40978b:	eb 90                	jmp    40971d <handle_linger+0xbd>
    r = read( c->hc->conn_fd, buf, sizeof(buf) );
  40978d:	e8 3e 96 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  409792:	e8 b9 9a ff ff       	callq  403250 <__asan_report_load8@plt>
    {
  409797:	bf 40 10 00 00       	mov    $0x1040,%edi
  40979c:	e8 8f 97 ff ff       	callq  402f30 <__asan_stack_malloc_7@plt>
  4097a1:	48 85 c0             	test   %rax,%rax
  4097a4:	48 0f 45 d8          	cmovne %rax,%rbx
  4097a8:	e9 dc fe ff ff       	jmpq   409689 <handle_linger+0x29>
  4097ad:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  4097b4:	4c 89 e2             	mov    %r12,%rdx
  4097b7:	be 40 10 00 00       	mov    $0x1040,%esi
  4097bc:	48 89 df             	mov    %rbx,%rdi
  4097bf:	e8 8c 94 ff ff       	callq  402c50 <__asan_stack_free_7@plt>
  4097c4:	e9 71 ff ff ff       	jmpq   40973a <handle_linger+0xda>
    if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
  4097c9:	48 89 c7             	mov    %rax,%rdi
  4097cc:	e8 ff 95 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  4097d1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4097d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4097dd:	00 00 00 

00000000004097e0 <lookup_hostname.constprop.1>:
lookup_hostname( httpd_sockaddr* sa4P, size_t sa4_len, int* gotv4P, httpd_sockaddr* sa6P, size_t sa6_len, int* gotv6P )
  4097e0:	41 57                	push   %r15
  4097e2:	41 56                	push   %r14
  4097e4:	49 89 f6             	mov    %rsi,%r14
  4097e7:	41 55                	push   %r13
  4097e9:	49 89 cd             	mov    %rcx,%r13
  4097ec:	41 54                	push   %r12
  4097ee:	55                   	push   %rbp
  4097ef:	53                   	push   %rbx
  4097f0:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
  4097f7:	8b 05 03 7b 23 00    	mov    0x237b03(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  4097fd:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  409802:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
  409807:	48 89 14 24          	mov    %rdx,(%rsp)
  40980b:	85 c0                	test   %eax,%eax
  40980d:	0f 85 d3 03 00 00    	jne    409be6 <lookup_hostname.constprop.1+0x406>
  409813:	48 89 eb             	mov    %rbp,%rbx
  409816:	48 c7 45 00 b3 8a b5 	movq   $0x41b58ab3,0x0(%rbp)
  40981d:	41 
    (void) memset( &hints, 0, sizeof(hints) );
  40981e:	4c 8d a5 a0 00 00 00 	lea    0xa0(%rbp),%r12
  409825:	48 8d bd a4 00 00 00 	lea    0xa4(%rbp),%rdi
lookup_hostname( httpd_sockaddr* sa4P, size_t sa4_len, int* gotv4P, httpd_sockaddr* sa6P, size_t sa6_len, int* gotv6P )
  40982c:	48 c1 eb 03          	shr    $0x3,%rbx
  409830:	48 c7 45 08 00 1d 42 	movq   $0x421d00,0x8(%rbp)
  409837:	00 
    (void) memset( &hints, 0, sizeof(hints) );
  409838:	ba 2c 00 00 00       	mov    $0x2c,%edx
  40983d:	31 f6                	xor    %esi,%esi
lookup_hostname( httpd_sockaddr* sa4P, size_t sa4_len, int* gotv4P, httpd_sockaddr* sa6P, size_t sa6_len, int* gotv6P )
  40983f:	48 c7 45 10 e0 97 40 	movq   $0x4097e0,0x10(%rbp)
  409846:	00 
  409847:	4c 8d bd 00 01 00 00 	lea    0x100(%rbp),%r15
  40984e:	c7 83 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbx)
  409855:	f1 f1 f1 
  409858:	c7 83 04 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff8004(%rbx)
  40985f:	f2 f2 f2 
  409862:	c7 83 08 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8008(%rbx)
  409869:	f2 f2 f2 
  40986c:	c7 83 0c 80 ff 7f 00 	movl   $0xf2f20200,0x7fff800c(%rbx)
  409873:	02 f2 f2 
  409876:	c7 83 10 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8010(%rbx)
  40987d:	f2 f2 f2 
  409880:	c7 83 18 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8018(%rbx)
  409887:	00 f2 f2 
  40988a:	c7 83 1c 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff801c(%rbx)
  409891:	f3 f3 f3 
    (void) memset( &hints, 0, sizeof(hints) );
  409894:	e8 17 96 ff ff       	callq  402eb0 <memset@plt>
    hints.ai_flags = AI_PASSIVE;
  409899:	4c 89 e0             	mov    %r12,%rax
  40989c:	48 c1 e8 03          	shr    $0x3,%rax
  4098a0:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4098a7:	84 c0                	test   %al,%al
  4098a9:	74 08                	je     4098b3 <lookup_hostname.constprop.1+0xd3>
  4098ab:	3c 03                	cmp    $0x3,%al
  4098ad:	0f 8e 14 03 00 00    	jle    409bc7 <lookup_hostname.constprop.1+0x3e7>
    hints.ai_socktype = SOCK_STREAM;
  4098b3:	4d 8d 57 a0          	lea    -0x60(%r15),%r10
    hints.ai_flags = AI_PASSIVE;
  4098b7:	41 c7 47 a0 01 00 00 	movl   $0x1,-0x60(%r15)
  4098be:	00 
    hints.ai_socktype = SOCK_STREAM;
  4098bf:	49 8d 7a 08          	lea    0x8(%r10),%rdi
  4098c3:	48 89 f8             	mov    %rdi,%rax
  4098c6:	48 c1 e8 03          	shr    $0x3,%rax
  4098ca:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4098d1:	84 c0                	test   %al,%al
  4098d3:	74 08                	je     4098dd <lookup_hostname.constprop.1+0xfd>
  4098d5:	3c 03                	cmp    $0x3,%al
  4098d7:	0f 8e f2 02 00 00    	jle    409bcf <lookup_hostname.constprop.1+0x3ef>
    (void) snprintf( portstr, sizeof(portstr), "%d", (int) port );
  4098dd:	4d 8d 8f 60 ff ff ff 	lea    -0xa0(%r15),%r9
  4098e4:	0f b7 0d 75 82 23 00 	movzwl 0x238275(%rip),%ecx        # 641b60 <port>
  4098eb:	ba 40 0c 42 00       	mov    $0x420c40,%edx
  4098f0:	31 c0                	xor    %eax,%eax
  4098f2:	4c 89 cf             	mov    %r9,%rdi
  4098f5:	be 0a 00 00 00       	mov    $0xa,%esi
  4098fa:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    if ( (gaierr = getaddrinfo( hostname, portstr, &hints, &ai )) != 0 )
  4098ff:	4d 8d a7 20 ff ff ff 	lea    -0xe0(%r15),%r12
    (void) snprintf( portstr, sizeof(portstr), "%d", (int) port );
  409906:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    hints.ai_socktype = SOCK_STREAM;
  40990b:	41 c7 47 a8 01 00 00 	movl   $0x1,-0x58(%r15)
  409912:	00 
    (void) snprintf( portstr, sizeof(portstr), "%d", (int) port );
  409913:	e8 f8 94 ff ff       	callq  402e10 <snprintf@plt>
    if ( (gaierr = getaddrinfo( hostname, portstr, &hints, &ai )) != 0 )
  409918:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
  40991d:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
  409922:	4c 89 e1             	mov    %r12,%rcx
  409925:	48 8b 3d 74 7e 23 00 	mov    0x237e74(%rip),%rdi        # 6417a0 <hostname>
  40992c:	4c 89 d2             	mov    %r10,%rdx
  40992f:	4c 89 ce             	mov    %r9,%rsi
  409932:	e8 69 9a ff ff       	callq  4033a0 <getaddrinfo@plt>
  409937:	85 c0                	test   %eax,%eax
  409939:	0f 85 36 03 00 00    	jne    409c75 <lookup_hostname.constprop.1+0x495>
    for ( ai2 = ai; ai2 != (struct addrinfo*) 0; ai2 = ai2->ai_next )
  40993f:	4c 89 e0             	mov    %r12,%rax
  409942:	48 c1 e8 03          	shr    $0x3,%rax
  409946:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40994d:	0f 85 8b 02 00 00    	jne    409bde <lookup_hostname.constprop.1+0x3fe>
  409953:	4d 8b a7 20 ff ff ff 	mov    -0xe0(%r15),%r12
    aiv6 = (struct addrinfo*) 0;
  40995a:	31 c9                	xor    %ecx,%ecx
    aiv4 = (struct addrinfo*) 0;
  40995c:	45 31 ff             	xor    %r15d,%r15d
    for ( ai2 = ai; ai2 != (struct addrinfo*) 0; ai2 = ai2->ai_next )
  40995f:	4c 89 e0             	mov    %r12,%rax
  409962:	4d 85 e4             	test   %r12,%r12
  409965:	75 36                	jne    40999d <lookup_hostname.constprop.1+0x1bd>
  409967:	e9 ec 01 00 00       	jmpq   409b58 <lookup_hostname.constprop.1+0x378>
  40996c:	0f 1f 40 00          	nopl   0x0(%rax)
  409970:	83 fa 0a             	cmp    $0xa,%edx
  409973:	75 07                	jne    40997c <lookup_hostname.constprop.1+0x19c>
	    if ( aiv6 == (struct addrinfo*) 0 )
  409975:	48 85 c9             	test   %rcx,%rcx
  409978:	48 0f 44 c8          	cmove  %rax,%rcx
    for ( ai2 = ai; ai2 != (struct addrinfo*) 0; ai2 = ai2->ai_next )
  40997c:	48 8d 78 28          	lea    0x28(%rax),%rdi
  409980:	48 89 fa             	mov    %rdi,%rdx
  409983:	48 c1 ea 03          	shr    $0x3,%rdx
  409987:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40998e:	0f 85 40 02 00 00    	jne    409bd4 <lookup_hostname.constprop.1+0x3f4>
  409994:	48 8b 40 28          	mov    0x28(%rax),%rax
  409998:	48 85 c0             	test   %rax,%rax
  40999b:	74 43                	je     4099e0 <lookup_hostname.constprop.1+0x200>
	switch ( ai2->ai_family )
  40999d:	48 8d 78 04          	lea    0x4(%rax),%rdi
  4099a1:	48 89 fa             	mov    %rdi,%rdx
  4099a4:	48 c1 ea 03          	shr    $0x3,%rdx
  4099a8:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  4099af:	48 89 fa             	mov    %rdi,%rdx
  4099b2:	83 e2 07             	and    $0x7,%edx
  4099b5:	83 c2 03             	add    $0x3,%edx
  4099b8:	40 38 f2             	cmp    %sil,%dl
  4099bb:	7c 09                	jl     4099c6 <lookup_hostname.constprop.1+0x1e6>
  4099bd:	40 84 f6             	test   %sil,%sil
  4099c0:	0f 85 13 02 00 00    	jne    409bd9 <lookup_hostname.constprop.1+0x3f9>
  4099c6:	8b 50 04             	mov    0x4(%rax),%edx
  4099c9:	83 fa 02             	cmp    $0x2,%edx
  4099cc:	75 a2                	jne    409970 <lookup_hostname.constprop.1+0x190>
	    if ( aiv4 == (struct addrinfo*) 0 )
  4099ce:	4d 85 ff             	test   %r15,%r15
  4099d1:	4c 0f 44 f8          	cmove  %rax,%r15
  4099d5:	eb a5                	jmp    40997c <lookup_hostname.constprop.1+0x19c>
  4099d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4099de:	00 00 
    if ( aiv6 == (struct addrinfo*) 0 )
  4099e0:	48 85 c9             	test   %rcx,%rcx
  4099e3:	0f 84 b7 01 00 00    	je     409ba0 <lookup_hostname.constprop.1+0x3c0>
	if ( sa6_len < aiv6->ai_addrlen )
  4099e9:	48 8d 79 10          	lea    0x10(%rcx),%rdi
  4099ed:	48 89 f8             	mov    %rdi,%rax
  4099f0:	48 c1 e8 03          	shr    $0x3,%rax
  4099f4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4099fb:	84 c0                	test   %al,%al
  4099fd:	74 08                	je     409a07 <lookup_hostname.constprop.1+0x227>
  4099ff:	3c 03                	cmp    $0x3,%al
  409a01:	0f 8e 5c 02 00 00    	jle    409c63 <lookup_hostname.constprop.1+0x483>
  409a07:	44 8b 41 10          	mov    0x10(%rcx),%r8d
  409a0b:	49 81 f8 80 00 00 00 	cmp    $0x80,%r8
  409a12:	0f 87 07 02 00 00    	ja     409c1f <lookup_hostname.constprop.1+0x43f>
	(void) memset( sa6P, 0, sa6_len );
  409a18:	48 8b 3c 24          	mov    (%rsp),%rdi
  409a1c:	ba 80 00 00 00       	mov    $0x80,%edx
  409a21:	31 f6                	xor    %esi,%esi
  409a23:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
  409a28:	e8 83 94 ff ff       	callq  402eb0 <memset@plt>
	(void) memmove( sa6P, aiv6->ai_addr, aiv6->ai_addrlen );
  409a2d:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
  409a32:	48 8d 79 18          	lea    0x18(%rcx),%rdi
  409a36:	8b 51 10             	mov    0x10(%rcx),%edx
  409a39:	48 89 f8             	mov    %rdi,%rax
  409a3c:	48 c1 e8 03          	shr    $0x3,%rax
  409a40:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  409a47:	0f 85 ad 02 00 00    	jne    409cfa <lookup_hostname.constprop.1+0x51a>
  409a4d:	48 8b 71 18          	mov    0x18(%rcx),%rsi
  409a51:	48 8b 3c 24          	mov    (%rsp),%rdi
  409a55:	e8 86 92 ff ff       	callq  402ce0 <memmove@plt>
	*gotv6P = 1;
  409a5a:	4c 89 e8             	mov    %r13,%rax
  409a5d:	48 c1 e8 03          	shr    $0x3,%rax
  409a61:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  409a68:	84 c0                	test   %al,%al
  409a6a:	74 08                	je     409a74 <lookup_hostname.constprop.1+0x294>
  409a6c:	3c 03                	cmp    $0x3,%al
  409a6e:	0f 8e f9 01 00 00    	jle    409c6d <lookup_hostname.constprop.1+0x48d>
  409a74:	41 c7 45 00 01 00 00 	movl   $0x1,0x0(%r13)
  409a7b:	00 
    if ( aiv4 == (struct addrinfo*) 0 )
  409a7c:	4d 85 ff             	test   %r15,%r15
  409a7f:	0f 84 f5 00 00 00    	je     409b7a <lookup_hostname.constprop.1+0x39a>
	if ( sa4_len < aiv4->ai_addrlen )
  409a85:	49 8d 7f 10          	lea    0x10(%r15),%rdi
  409a89:	48 89 f8             	mov    %rdi,%rax
  409a8c:	48 c1 e8 03          	shr    $0x3,%rax
  409a90:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  409a97:	84 c0                	test   %al,%al
  409a99:	74 08                	je     409aa3 <lookup_hostname.constprop.1+0x2c3>
  409a9b:	3c 03                	cmp    $0x3,%al
  409a9d:	0f 8e c5 01 00 00    	jle    409c68 <lookup_hostname.constprop.1+0x488>
  409aa3:	45 8b 47 10          	mov    0x10(%r15),%r8d
  409aa7:	49 81 f8 80 00 00 00 	cmp    $0x80,%r8
  409aae:	0f 87 6b 01 00 00    	ja     409c1f <lookup_hostname.constprop.1+0x43f>
	(void) memset( sa4P, 0, sa4_len );
  409ab4:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  409ab9:	ba 80 00 00 00       	mov    $0x80,%edx
  409abe:	31 f6                	xor    %esi,%esi
  409ac0:	e8 eb 93 ff ff       	callq  402eb0 <memset@plt>
	(void) memmove( sa4P, aiv4->ai_addr, aiv4->ai_addrlen );
  409ac5:	49 8d 7f 18          	lea    0x18(%r15),%rdi
  409ac9:	41 8b 57 10          	mov    0x10(%r15),%edx
  409acd:	48 89 f8             	mov    %rdi,%rax
  409ad0:	48 c1 e8 03          	shr    $0x3,%rax
  409ad4:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  409adb:	0f 85 0a 02 00 00    	jne    409ceb <lookup_hostname.constprop.1+0x50b>
  409ae1:	49 8b 77 18          	mov    0x18(%r15),%rsi
  409ae5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  409aea:	e8 f1 91 ff ff       	callq  402ce0 <memmove@plt>
	*gotv4P = 1;
  409aef:	4c 89 f0             	mov    %r14,%rax
  409af2:	48 c1 e8 03          	shr    $0x3,%rax
  409af6:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  409afd:	84 c0                	test   %al,%al
  409aff:	74 08                	je     409b09 <lookup_hostname.constprop.1+0x329>
  409b01:	3c 03                	cmp    $0x3,%al
  409b03:	0f 8e f6 01 00 00    	jle    409cff <lookup_hostname.constprop.1+0x51f>
  409b09:	41 c7 06 01 00 00 00 	movl   $0x1,(%r14)
    freeaddrinfo( ai );
  409b10:	4c 89 e7             	mov    %r12,%rdi
  409b13:	e8 38 96 ff ff       	callq  403150 <freeaddrinfo@plt>
lookup_hostname( httpd_sockaddr* sa4P, size_t sa4_len, int* gotv4P, httpd_sockaddr* sa6P, size_t sa6_len, int* gotv6P )
  409b18:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  409b1d:	48 39 e8             	cmp    %rbp,%rax
  409b20:	0f 85 d6 00 00 00    	jne    409bfc <lookup_hostname.constprop.1+0x41c>
  409b26:	c7 83 10 80 ff 7f 00 	movl   $0x0,0x7fff8010(%rbx)
  409b2d:	00 00 00 
  409b30:	66 0f ef c0          	pxor   %xmm0,%xmm0
  409b34:	48 c7 83 18 80 ff 7f 	movq   $0x0,0x7fff8018(%rbx)
  409b3b:	00 00 00 00 
  409b3f:	0f 11 83 00 80 ff 7f 	movups %xmm0,0x7fff8000(%rbx)
    }
  409b46:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
  409b4d:	5b                   	pop    %rbx
  409b4e:	5d                   	pop    %rbp
  409b4f:	41 5c                	pop    %r12
  409b51:	41 5d                	pop    %r13
  409b53:	41 5e                	pop    %r14
  409b55:	41 5f                	pop    %r15
  409b57:	c3                   	retq   
	*gotv6P = 0;
  409b58:	4c 89 e8             	mov    %r13,%rax
  409b5b:	48 c1 e8 03          	shr    $0x3,%rax
  409b5f:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  409b66:	84 c0                	test   %al,%al
  409b68:	74 08                	je     409b72 <lookup_hostname.constprop.1+0x392>
  409b6a:	3c 03                	cmp    $0x3,%al
  409b6c:	0f 8e e9 00 00 00    	jle    409c5b <lookup_hostname.constprop.1+0x47b>
  409b72:	41 c7 45 00 00 00 00 	movl   $0x0,0x0(%r13)
  409b79:	00 
	*gotv4P = 0;
  409b7a:	4c 89 f0             	mov    %r14,%rax
  409b7d:	48 c1 e8 03          	shr    $0x3,%rax
  409b81:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  409b88:	84 c0                	test   %al,%al
  409b8a:	74 08                	je     409b94 <lookup_hostname.constprop.1+0x3b4>
  409b8c:	3c 03                	cmp    $0x3,%al
  409b8e:	0f 8e b7 00 00 00    	jle    409c4b <lookup_hostname.constprop.1+0x46b>
  409b94:	41 c7 06 00 00 00 00 	movl   $0x0,(%r14)
  409b9b:	e9 70 ff ff ff       	jmpq   409b10 <lookup_hostname.constprop.1+0x330>
	*gotv6P = 0;
  409ba0:	4c 89 e8             	mov    %r13,%rax
  409ba3:	48 c1 e8 03          	shr    $0x3,%rax
  409ba7:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  409bae:	84 c0                	test   %al,%al
  409bb0:	74 08                	je     409bba <lookup_hostname.constprop.1+0x3da>
  409bb2:	3c 03                	cmp    $0x3,%al
  409bb4:	0f 8e 99 00 00 00    	jle    409c53 <lookup_hostname.constprop.1+0x473>
  409bba:	41 c7 45 00 00 00 00 	movl   $0x0,0x0(%r13)
  409bc1:	00 
  409bc2:	e9 b5 fe ff ff       	jmpq   409a7c <lookup_hostname.constprop.1+0x29c>
    hints.ai_flags = AI_PASSIVE;
  409bc7:	4c 89 e7             	mov    %r12,%rdi
  409bca:	e8 21 90 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hints.ai_socktype = SOCK_STREAM;
  409bcf:	e8 1c 90 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    for ( ai2 = ai; ai2 != (struct addrinfo*) 0; ai2 = ai2->ai_next )
  409bd4:	e8 77 96 ff ff       	callq  403250 <__asan_report_load8@plt>
	switch ( ai2->ai_family )
  409bd9:	e8 f2 91 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( ai2 = ai; ai2 != (struct addrinfo*) 0; ai2 = ai2->ai_next )
  409bde:	4c 89 e7             	mov    %r12,%rdi
  409be1:	e8 6a 96 ff ff       	callq  403250 <__asan_report_load8@plt>
lookup_hostname( httpd_sockaddr* sa4P, size_t sa4_len, int* gotv4P, httpd_sockaddr* sa6P, size_t sa6_len, int* gotv6P )
  409be6:	bf 00 01 00 00       	mov    $0x100,%edi
  409beb:	e8 30 97 ff ff       	callq  403320 <__asan_stack_malloc_2@plt>
  409bf0:	48 85 c0             	test   %rax,%rax
  409bf3:	48 0f 45 e8          	cmovne %rax,%rbp
  409bf7:	e9 17 fc ff ff       	jmpq   409813 <lookup_hostname.constprop.1+0x33>
  409bfc:	66 0f 6f 05 8c 81 01 	movdqa 0x1818c(%rip),%xmm0        # 421d90 <_IO_stdin_used+0x2cd0>
  409c03:	00 
  409c04:	48 c7 45 00 0e 36 e0 	movq   $0x45e0360e,0x0(%rbp)
  409c0b:	45 
  409c0c:	0f 11 83 00 80 ff 7f 	movups %xmm0,0x7fff8000(%rbx)
  409c13:	0f 11 83 10 80 ff 7f 	movups %xmm0,0x7fff8010(%rbx)
  409c1a:	e9 27 ff ff ff       	jmpq   409b46 <lookup_hostname.constprop.1+0x366>
	    syslog(
  409c1f:	48 8b 15 7a 7b 23 00 	mov    0x237b7a(%rip),%rdx        # 6417a0 <hostname>
  409c26:	bf 02 00 00 00       	mov    $0x2,%edi
  409c2b:	b9 80 00 00 00       	mov    $0x80,%ecx
  409c30:	31 c0                	xor    %eax,%eax
  409c32:	be 00 0d 42 00       	mov    $0x420d00,%esi
  409c37:	e8 04 90 ff ff       	callq  402c40 <syslog@plt>
	    exit( 1 );
  409c3c:	e8 ff 93 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  409c41:	bf 01 00 00 00       	mov    $0x1,%edi
  409c46:	e8 95 94 ff ff       	callq  4030e0 <exit@plt>
	*gotv4P = 0;
  409c4b:	4c 89 f7             	mov    %r14,%rdi
  409c4e:	e8 9d 8f ff ff       	callq  402bf0 <__asan_report_store4@plt>
	*gotv6P = 0;
  409c53:	4c 89 ef             	mov    %r13,%rdi
  409c56:	e8 95 8f ff ff       	callq  402bf0 <__asan_report_store4@plt>
  409c5b:	4c 89 ef             	mov    %r13,%rdi
  409c5e:	e8 8d 8f ff ff       	callq  402bf0 <__asan_report_store4@plt>
	if ( sa6_len < aiv6->ai_addrlen )
  409c63:	e8 68 91 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( sa4_len < aiv4->ai_addrlen )
  409c68:	e8 63 91 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	*gotv6P = 1;
  409c6d:	4c 89 ef             	mov    %r13,%rdi
  409c70:	e8 7b 8f ff ff       	callq  402bf0 <__asan_report_store4@plt>
	syslog(
  409c75:	89 c7                	mov    %eax,%edi
  409c77:	89 04 24             	mov    %eax,(%rsp)
  409c7a:	e8 41 95 ff ff       	callq  4031c0 <gai_strerror@plt>
  409c7f:	be 80 0c 42 00       	mov    $0x420c80,%esi
  409c84:	bf 02 00 00 00       	mov    $0x2,%edi
  409c89:	48 8b 15 10 7b 23 00 	mov    0x237b10(%rip),%rdx        # 6417a0 <hostname>
  409c90:	48 89 c1             	mov    %rax,%rcx
  409c93:	31 c0                	xor    %eax,%eax
  409c95:	e8 a6 8f ff ff       	callq  402c40 <syslog@plt>
	(void) fprintf(
  409c9a:	44 8b 0c 24          	mov    (%rsp),%r9d
  409c9e:	44 89 cf             	mov    %r9d,%edi
  409ca1:	e8 1a 95 ff ff       	callq  4031c0 <gai_strerror@plt>
  409ca6:	be f0 12 64 00       	mov    $0x6412f0,%esi
  409cab:	48 8b 0d ee 7a 23 00 	mov    0x237aee(%rip),%rcx        # 6417a0 <hostname>
  409cb2:	48 8b 15 27 7f 23 00 	mov    0x237f27(%rip),%rdx        # 641be0 <argv0>
  409cb9:	48 c1 ee 03          	shr    $0x3,%rsi
  409cbd:	49 89 c0             	mov    %rax,%r8
  409cc0:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  409cc7:	75 27                	jne    409cf0 <lookup_hostname.constprop.1+0x510>
  409cc9:	48 8b 3d 20 76 23 00 	mov    0x237620(%rip),%rdi        # 6412f0 <stderr@@GLIBC_2.2.5>
  409cd0:	be c0 0c 42 00       	mov    $0x420cc0,%esi
  409cd5:	31 c0                	xor    %eax,%eax
  409cd7:	e8 54 90 ff ff       	callq  402d30 <fprintf@plt>
	exit( 1 );
  409cdc:	e8 5f 93 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  409ce1:	bf 01 00 00 00       	mov    $0x1,%edi
  409ce6:	e8 f5 93 ff ff       	callq  4030e0 <exit@plt>
	(void) memmove( sa4P, aiv4->ai_addr, aiv4->ai_addrlen );
  409ceb:	e8 60 95 ff ff       	callq  403250 <__asan_report_load8@plt>
	(void) fprintf(
  409cf0:	bf f0 12 64 00       	mov    $0x6412f0,%edi
  409cf5:	e8 56 95 ff ff       	callq  403250 <__asan_report_load8@plt>
	(void) memmove( sa6P, aiv6->ai_addr, aiv6->ai_addrlen );
  409cfa:	e8 51 95 ff ff       	callq  403250 <__asan_report_load8@plt>
	*gotv4P = 1;
  409cff:	4c 89 f7             	mov    %r14,%rdi
  409d02:	e8 e9 8e ff ff       	callq  402bf0 <__asan_report_store4@plt>
  409d07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  409d0e:	00 00 

0000000000409d10 <poll_init>:
static int* poll_rfdidx;


static int
poll_init( int nfiles )
    {
  409d10:	41 55                	push   %r13
  409d12:	41 54                	push   %r12
  409d14:	4c 63 e7             	movslq %edi,%r12
  409d17:	55                   	push   %rbp
    int i;

    pollfds = (struct pollfd*) malloc( sizeof(struct pollfd) * nfiles );
  409d18:	4a 8d 3c e5 00 00 00 	lea    0x0(,%r12,8),%rdi
  409d1f:	00 
    {
  409d20:	4d 89 e5             	mov    %r12,%r13
    poll_fdidx = (int*) malloc( sizeof(int) * nfiles );
  409d23:	49 c1 e4 02          	shl    $0x2,%r12
    {
  409d27:	53                   	push   %rbx
  409d28:	48 83 ec 08          	sub    $0x8,%rsp
    pollfds = (struct pollfd*) malloc( sizeof(struct pollfd) * nfiles );
  409d2c:	e8 7f 93 ff ff       	callq  4030b0 <malloc@plt>
    poll_fdidx = (int*) malloc( sizeof(int) * nfiles );
  409d31:	4c 89 e7             	mov    %r12,%rdi
    pollfds = (struct pollfd*) malloc( sizeof(struct pollfd) * nfiles );
  409d34:	48 89 c5             	mov    %rax,%rbp
  409d37:	48 89 05 c2 7f 23 00 	mov    %rax,0x237fc2(%rip)        # 641d00 <pollfds>
    poll_fdidx = (int*) malloc( sizeof(int) * nfiles );
  409d3e:	e8 6d 93 ff ff       	callq  4030b0 <malloc@plt>
    poll_rfdidx = (int*) malloc( sizeof(int) * nfiles );
  409d43:	4c 89 e7             	mov    %r12,%rdi
    poll_fdidx = (int*) malloc( sizeof(int) * nfiles );
  409d46:	48 89 c3             	mov    %rax,%rbx
  409d49:	48 89 05 30 7f 23 00 	mov    %rax,0x237f30(%rip)        # 641c80 <poll_fdidx>
    poll_rfdidx = (int*) malloc( sizeof(int) * nfiles );
  409d50:	e8 5b 93 ff ff       	callq  4030b0 <malloc@plt>
    if ( pollfds == (struct pollfd*) 0 || poll_fdidx == (int*) 0 ||
  409d55:	48 85 ed             	test   %rbp,%rbp
  409d58:	0f 94 c1             	sete   %cl
  409d5b:	48 85 db             	test   %rbx,%rbx
    poll_rfdidx = (int*) malloc( sizeof(int) * nfiles );
  409d5e:	48 89 05 db 7e 23 00 	mov    %rax,0x237edb(%rip)        # 641c40 <poll_rfdidx>
    if ( pollfds == (struct pollfd*) 0 || poll_fdidx == (int*) 0 ||
  409d65:	0f 94 c2             	sete   %dl
  409d68:	08 d1                	or     %dl,%cl
  409d6a:	75 71                	jne    409ddd <poll_init+0xcd>
  409d6c:	48 85 c0             	test   %rax,%rax
  409d6f:	74 6c                	je     409ddd <poll_init+0xcd>
	 poll_rfdidx == (int*) 0 )
	return -1;
    for ( i = 0; i < nfiles; ++i )
  409d71:	45 85 ed             	test   %r13d,%r13d
  409d74:	7e 5a                	jle    409dd0 <poll_init+0xc0>
  409d76:	41 8d 55 ff          	lea    -0x1(%r13),%edx
  409d7a:	48 8d 74 93 04       	lea    0x4(%rbx,%rdx,4),%rsi
  409d7f:	90                   	nop
	pollfds[i].fd = poll_fdidx[i] = -1;
  409d80:	48 89 da             	mov    %rbx,%rdx
  409d83:	48 c1 ea 03          	shr    $0x3,%rdx
  409d87:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  409d8e:	48 89 da             	mov    %rbx,%rdx
  409d91:	83 e2 07             	and    $0x7,%edx
  409d94:	83 c2 03             	add    $0x3,%edx
  409d97:	38 ca                	cmp    %cl,%dl
  409d99:	7c 04                	jl     409d9f <poll_init+0x8f>
  409d9b:	84 c9                	test   %cl,%cl
  409d9d:	75 4d                	jne    409dec <poll_init+0xdc>
  409d9f:	48 89 ea             	mov    %rbp,%rdx
  409da2:	c7 03 ff ff ff ff    	movl   $0xffffffff,(%rbx)
  409da8:	48 c1 ea 03          	shr    $0x3,%rdx
  409dac:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  409db3:	84 d2                	test   %dl,%dl
  409db5:	74 05                	je     409dbc <poll_init+0xac>
  409db7:	80 fa 03             	cmp    $0x3,%dl
  409dba:	7e 28                	jle    409de4 <poll_init+0xd4>
  409dbc:	48 83 c3 04          	add    $0x4,%rbx
  409dc0:	c7 45 00 ff ff ff ff 	movl   $0xffffffff,0x0(%rbp)
  409dc7:	48 83 c5 08          	add    $0x8,%rbp
    for ( i = 0; i < nfiles; ++i )
  409dcb:	48 39 f3             	cmp    %rsi,%rbx
  409dce:	75 b0                	jne    409d80 <poll_init+0x70>
    return 0;
  409dd0:	31 c0                	xor    %eax,%eax
    }
  409dd2:	48 83 c4 08          	add    $0x8,%rsp
  409dd6:	5b                   	pop    %rbx
  409dd7:	5d                   	pop    %rbp
  409dd8:	41 5c                	pop    %r12
  409dda:	41 5d                	pop    %r13
  409ddc:	c3                   	retq   
	return -1;
  409ddd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  409de2:	eb ee                	jmp    409dd2 <poll_init+0xc2>
	pollfds[i].fd = poll_fdidx[i] = -1;
  409de4:	48 89 ef             	mov    %rbp,%rdi
  409de7:	e8 04 8e ff ff       	callq  402bf0 <__asan_report_store4@plt>
  409dec:	48 89 df             	mov    %rbx,%rdi
  409def:	e8 fc 8d ff ff       	callq  402bf0 <__asan_report_store4@plt>
  409df4:	66 90                	xchg   %ax,%ax
  409df6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  409dfd:	00 00 00 

0000000000409e00 <poll_add_fd>:


static void
poll_add_fd( int fd, int rw )
    {
    if ( npoll_fds >= nfiles )
  409e00:	8b 05 ba 7e 23 00    	mov    0x237eba(%rip),%eax        # 641cc0 <npoll_fds>
  409e06:	3b 05 74 80 23 00    	cmp    0x238074(%rip),%eax        # 641e80 <nfiles>
  409e0c:	0f 8d fe 00 00 00    	jge    409f10 <poll_add_fd+0x110>
    {
  409e12:	48 83 ec 08          	sub    $0x8,%rsp
	{
	syslog( LOG_ERR, "too many fds in poll_add_fd!" );
	return;
	}
    pollfds[npoll_fds].fd = fd;
  409e16:	48 8b 0d e3 7e 23 00 	mov    0x237ee3(%rip),%rcx        # 641d00 <pollfds>
  409e1d:	48 63 d0             	movslq %eax,%rdx
  409e20:	48 8d 14 d1          	lea    (%rcx,%rdx,8),%rdx
  409e24:	48 89 d1             	mov    %rdx,%rcx
  409e27:	48 c1 e9 03          	shr    $0x3,%rcx
  409e2b:	44 0f b6 81 00 80 ff 	movzbl 0x7fff8000(%rcx),%r8d
  409e32:	7f 
  409e33:	48 89 d1             	mov    %rdx,%rcx
  409e36:	83 e1 07             	and    $0x7,%ecx
  409e39:	83 c1 03             	add    $0x3,%ecx
  409e3c:	44 38 c1             	cmp    %r8b,%cl
  409e3f:	7c 09                	jl     409e4a <poll_add_fd+0x4a>
  409e41:	45 84 c0             	test   %r8b,%r8b
  409e44:	0f 85 d7 00 00 00    	jne    409f21 <poll_add_fd+0x121>
  409e4a:	89 3a                	mov    %edi,(%rdx)
    switch ( rw )
  409e4c:	85 f6                	test   %esi,%esi
  409e4e:	0f 84 84 00 00 00    	je     409ed8 <poll_add_fd+0xd8>
  409e54:	83 fe 01             	cmp    $0x1,%esi
  409e57:	74 47                	je     409ea0 <poll_add_fd+0xa0>
	{
	case FDW_READ: pollfds[npoll_fds].events = POLLIN; break;
	case FDW_WRITE: pollfds[npoll_fds].events = POLLOUT; break;
	default: break;
	}
    poll_fdidx[fd] = npoll_fds;
  409e59:	48 8b 15 20 7e 23 00 	mov    0x237e20(%rip),%rdx        # 641c80 <poll_fdidx>
  409e60:	48 63 ff             	movslq %edi,%rdi
  409e63:	48 8d 3c ba          	lea    (%rdx,%rdi,4),%rdi
  409e67:	48 89 fa             	mov    %rdi,%rdx
  409e6a:	48 c1 ea 03          	shr    $0x3,%rdx
  409e6e:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  409e75:	48 89 fa             	mov    %rdi,%rdx
  409e78:	83 e2 07             	and    $0x7,%edx
  409e7b:	83 c2 03             	add    $0x3,%edx
  409e7e:	38 ca                	cmp    %cl,%dl
  409e80:	7c 08                	jl     409e8a <poll_add_fd+0x8a>
  409e82:	84 c9                	test   %cl,%cl
  409e84:	0f 85 9f 00 00 00    	jne    409f29 <poll_add_fd+0x129>
  409e8a:	89 07                	mov    %eax,(%rdi)
    ++npoll_fds;
  409e8c:	83 c0 01             	add    $0x1,%eax
  409e8f:	89 05 2b 7e 23 00    	mov    %eax,0x237e2b(%rip)        # 641cc0 <npoll_fds>
    }
  409e95:	48 83 c4 08          	add    $0x8,%rsp
  409e99:	c3                   	retq   
  409e9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	case FDW_WRITE: pollfds[npoll_fds].events = POLLOUT; break;
  409ea0:	48 8d 72 04          	lea    0x4(%rdx),%rsi
  409ea4:	48 89 f1             	mov    %rsi,%rcx
  409ea7:	48 c1 e9 03          	shr    $0x3,%rcx
  409eab:	44 0f b6 81 00 80 ff 	movzbl 0x7fff8000(%rcx),%r8d
  409eb2:	7f 
  409eb3:	48 89 f1             	mov    %rsi,%rcx
  409eb6:	83 e1 07             	and    $0x7,%ecx
  409eb9:	83 c1 01             	add    $0x1,%ecx
  409ebc:	44 38 c1             	cmp    %r8b,%cl
  409ebf:	7c 05                	jl     409ec6 <poll_add_fd+0xc6>
  409ec1:	45 84 c0             	test   %r8b,%r8b
  409ec4:	75 68                	jne    409f2e <poll_add_fd+0x12e>
  409ec6:	b9 04 00 00 00       	mov    $0x4,%ecx
  409ecb:	66 89 4a 04          	mov    %cx,0x4(%rdx)
  409ecf:	eb 88                	jmp    409e59 <poll_add_fd+0x59>
  409ed1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	case FDW_READ: pollfds[npoll_fds].events = POLLIN; break;
  409ed8:	48 8d 72 04          	lea    0x4(%rdx),%rsi
  409edc:	48 89 f1             	mov    %rsi,%rcx
  409edf:	48 c1 e9 03          	shr    $0x3,%rcx
  409ee3:	44 0f b6 81 00 80 ff 	movzbl 0x7fff8000(%rcx),%r8d
  409eea:	7f 
  409eeb:	48 89 f1             	mov    %rsi,%rcx
  409eee:	83 e1 07             	and    $0x7,%ecx
  409ef1:	83 c1 01             	add    $0x1,%ecx
  409ef4:	44 38 c1             	cmp    %r8b,%cl
  409ef7:	7c 05                	jl     409efe <poll_add_fd+0xfe>
  409ef9:	45 84 c0             	test   %r8b,%r8b
  409efc:	75 38                	jne    409f36 <poll_add_fd+0x136>
  409efe:	be 01 00 00 00       	mov    $0x1,%esi
  409f03:	66 89 72 04          	mov    %si,0x4(%rdx)
  409f07:	e9 4d ff ff ff       	jmpq   409e59 <poll_add_fd+0x59>
  409f0c:	0f 1f 40 00          	nopl   0x0(%rax)
	syslog( LOG_ERR, "too many fds in poll_add_fd!" );
  409f10:	be a0 1d 42 00       	mov    $0x421da0,%esi
  409f15:	bf 03 00 00 00       	mov    $0x3,%edi
  409f1a:	31 c0                	xor    %eax,%eax
  409f1c:	e9 1f 8d ff ff       	jmpq   402c40 <syslog@plt>
    pollfds[npoll_fds].fd = fd;
  409f21:	48 89 d7             	mov    %rdx,%rdi
  409f24:	e8 c7 8c ff ff       	callq  402bf0 <__asan_report_store4@plt>
    poll_fdidx[fd] = npoll_fds;
  409f29:	e8 c2 8c ff ff       	callq  402bf0 <__asan_report_store4@plt>
	case FDW_WRITE: pollfds[npoll_fds].events = POLLOUT; break;
  409f2e:	48 89 f7             	mov    %rsi,%rdi
  409f31:	e8 2a 93 ff ff       	callq  403260 <__asan_report_store2@plt>
	case FDW_READ: pollfds[npoll_fds].events = POLLIN; break;
  409f36:	48 89 f7             	mov    %rsi,%rdi
  409f39:	e8 22 93 ff ff       	callq  403260 <__asan_report_store2@plt>
  409f3e:	66 90                	xchg   %ax,%ax

0000000000409f40 <poll_del_fd>:


static void
poll_del_fd( int fd )
    {
  409f40:	55                   	push   %rbp
    int idx = poll_fdidx[fd];
  409f41:	48 63 ff             	movslq %edi,%rdi
    {
  409f44:	53                   	push   %rbx
  409f45:	48 83 ec 08          	sub    $0x8,%rsp
    int idx = poll_fdidx[fd];
  409f49:	4c 8b 0d 30 7d 23 00 	mov    0x237d30(%rip),%r9        # 641c80 <poll_fdidx>
  409f50:	49 8d 04 b9          	lea    (%r9,%rdi,4),%rax
  409f54:	48 89 c2             	mov    %rax,%rdx
  409f57:	48 c1 ea 03          	shr    $0x3,%rdx
  409f5b:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  409f62:	48 89 c2             	mov    %rax,%rdx
  409f65:	83 e2 07             	and    $0x7,%edx
  409f68:	83 c2 03             	add    $0x3,%edx
  409f6b:	38 ca                	cmp    %cl,%dl
  409f6d:	7c 08                	jl     409f77 <poll_del_fd+0x37>
  409f6f:	84 c9                	test   %cl,%cl
  409f71:	0f 85 80 01 00 00    	jne    40a0f7 <poll_del_fd+0x1b7>
  409f77:	8b 10                	mov    (%rax),%edx

    if ( idx < 0 || idx >= nfiles )
  409f79:	85 d2                	test   %edx,%edx
  409f7b:	0f 88 5f 01 00 00    	js     40a0e0 <poll_del_fd+0x1a0>
  409f81:	39 15 f9 7e 23 00    	cmp    %edx,0x237ef9(%rip)        # 641e80 <nfiles>
  409f87:	0f 8e 53 01 00 00    	jle    40a0e0 <poll_del_fd+0x1a0>
	{
	syslog( LOG_ERR, "bad idx (%d) in poll_del_fd!", idx );
	return;
	}
    --npoll_fds;
  409f8d:	8b 1d 2d 7d 23 00    	mov    0x237d2d(%rip),%ebx        # 641cc0 <npoll_fds>
    pollfds[idx] = pollfds[npoll_fds];
  409f93:	48 8b 35 66 7d 23 00 	mov    0x237d66(%rip),%rsi        # 641d00 <pollfds>
  409f9a:	48 63 fa             	movslq %edx,%rdi
  409f9d:	48 8d 3c fe          	lea    (%rsi,%rdi,8),%rdi
    --npoll_fds;
  409fa1:	8d 4b ff             	lea    -0x1(%rbx),%ecx
  409fa4:	89 0d 16 7d 23 00    	mov    %ecx,0x237d16(%rip)        # 641cc0 <npoll_fds>
    pollfds[idx] = pollfds[npoll_fds];
  409faa:	4c 8d 47 07          	lea    0x7(%rdi),%r8
  409fae:	48 63 c9             	movslq %ecx,%rcx
  409fb1:	49 89 fa             	mov    %rdi,%r10
  409fb4:	48 8d 0c ce          	lea    (%rsi,%rcx,8),%rcx
  409fb8:	4c 89 c6             	mov    %r8,%rsi
  409fbb:	49 c1 ea 03          	shr    $0x3,%r10
  409fbf:	48 c1 ee 03          	shr    $0x3,%rsi
  409fc3:	45 0f b6 9a 00 80 ff 	movzbl 0x7fff8000(%r10),%r11d
  409fca:	7f 
  409fcb:	0f b6 9e 00 80 ff 7f 	movzbl 0x7fff8000(%rsi),%ebx
  409fd2:	48 89 fe             	mov    %rdi,%rsi
  409fd5:	83 e6 07             	and    $0x7,%esi
  409fd8:	41 38 f3             	cmp    %sil,%r11b
  409fdb:	40 0f 9e c5          	setle  %bpl
  409fdf:	45 84 db             	test   %r11b,%r11b
  409fe2:	41 0f 95 c3          	setne  %r11b
  409fe6:	44 84 dd             	test   %r11b,%bpl
  409fe9:	0f 85 2f 01 00 00    	jne    40a11e <poll_del_fd+0x1de>
  409fef:	41 83 e0 07          	and    $0x7,%r8d
  409ff3:	44 38 c3             	cmp    %r8b,%bl
  409ff6:	41 0f 9e c3          	setle  %r11b
  409ffa:	84 db                	test   %bl,%bl
  409ffc:	41 0f 95 c0          	setne  %r8b
  40a000:	45 84 c3             	test   %r8b,%r11b
  40a003:	0f 85 15 01 00 00    	jne    40a11e <poll_del_fd+0x1de>
  40a009:	49 89 c8             	mov    %rcx,%r8
  40a00c:	48 89 cd             	mov    %rcx,%rbp
  40a00f:	49 c1 e8 03          	shr    $0x3,%r8
  40a013:	83 e5 07             	and    $0x7,%ebp
  40a016:	45 0f b6 98 00 80 ff 	movzbl 0x7fff8000(%r8),%r11d
  40a01d:	7f 
  40a01e:	4c 8d 41 07          	lea    0x7(%rcx),%r8
  40a022:	4c 89 c3             	mov    %r8,%rbx
  40a025:	48 c1 eb 03          	shr    $0x3,%rbx
  40a029:	41 38 eb             	cmp    %bpl,%r11b
  40a02c:	40 0f 9e c5          	setle  %bpl
  40a030:	45 84 db             	test   %r11b,%r11b
  40a033:	0f b6 9b 00 80 ff 7f 	movzbl 0x7fff8000(%rbx),%ebx
  40a03a:	41 0f 95 c3          	setne  %r11b
  40a03e:	44 84 dd             	test   %r11b,%bpl
  40a041:	0f 85 ca 00 00 00    	jne    40a111 <poll_del_fd+0x1d1>
  40a047:	41 83 e0 07          	and    $0x7,%r8d
  40a04b:	44 38 c3             	cmp    %r8b,%bl
  40a04e:	41 0f 9e c3          	setle  %r11b
  40a052:	84 db                	test   %bl,%bl
  40a054:	41 0f 95 c0          	setne  %r8b
  40a058:	45 84 c3             	test   %r8b,%r11b
  40a05b:	0f 85 b0 00 00 00    	jne    40a111 <poll_del_fd+0x1d1>
  40a061:	4c 8b 01             	mov    (%rcx),%r8
    poll_fdidx[pollfds[idx].fd] = idx;
  40a064:	83 c6 03             	add    $0x3,%esi
    pollfds[idx] = pollfds[npoll_fds];
  40a067:	4c 89 07             	mov    %r8,(%rdi)
    poll_fdidx[pollfds[idx].fd] = idx;
  40a06a:	45 0f b6 82 00 80 ff 	movzbl 0x7fff8000(%r10),%r8d
  40a071:	7f 
  40a072:	44 38 c6             	cmp    %r8b,%sil
  40a075:	7c 09                	jl     40a080 <poll_del_fd+0x140>
  40a077:	45 84 c0             	test   %r8b,%r8b
  40a07a:	0f 85 8c 00 00 00    	jne    40a10c <poll_del_fd+0x1cc>
  40a080:	48 63 37             	movslq (%rdi),%rsi
  40a083:	49 8d 3c b1          	lea    (%r9,%rsi,4),%rdi
  40a087:	48 89 fe             	mov    %rdi,%rsi
  40a08a:	48 c1 ee 03          	shr    $0x3,%rsi
  40a08e:	44 0f b6 86 00 80 ff 	movzbl 0x7fff8000(%rsi),%r8d
  40a095:	7f 
  40a096:	48 89 fe             	mov    %rdi,%rsi
  40a099:	83 e6 07             	and    $0x7,%esi
  40a09c:	83 c6 03             	add    $0x3,%esi
  40a09f:	44 38 c6             	cmp    %r8b,%sil
  40a0a2:	7c 05                	jl     40a0a9 <poll_del_fd+0x169>
  40a0a4:	45 84 c0             	test   %r8b,%r8b
  40a0a7:	75 5e                	jne    40a107 <poll_del_fd+0x1c7>
  40a0a9:	89 17                	mov    %edx,(%rdi)
    pollfds[npoll_fds].fd = -1;
  40a0ab:	48 89 ca             	mov    %rcx,%rdx
  40a0ae:	48 c1 ea 03          	shr    $0x3,%rdx
  40a0b2:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  40a0b9:	48 89 ca             	mov    %rcx,%rdx
  40a0bc:	83 e2 07             	and    $0x7,%edx
  40a0bf:	83 c2 03             	add    $0x3,%edx
  40a0c2:	40 38 f2             	cmp    %sil,%dl
  40a0c5:	7c 05                	jl     40a0cc <poll_del_fd+0x18c>
  40a0c7:	40 84 f6             	test   %sil,%sil
  40a0ca:	75 33                	jne    40a0ff <poll_del_fd+0x1bf>
  40a0cc:	c7 01 ff ff ff ff    	movl   $0xffffffff,(%rcx)
    poll_fdidx[fd] = -1;
  40a0d2:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
    }
  40a0d8:	48 83 c4 08          	add    $0x8,%rsp
  40a0dc:	5b                   	pop    %rbx
  40a0dd:	5d                   	pop    %rbp
  40a0de:	c3                   	retq   
  40a0df:	90                   	nop
  40a0e0:	48 83 c4 08          	add    $0x8,%rsp
	syslog( LOG_ERR, "bad idx (%d) in poll_del_fd!", idx );
  40a0e4:	be e0 1d 42 00       	mov    $0x421de0,%esi
  40a0e9:	bf 03 00 00 00       	mov    $0x3,%edi
  40a0ee:	31 c0                	xor    %eax,%eax
    }
  40a0f0:	5b                   	pop    %rbx
  40a0f1:	5d                   	pop    %rbp
	syslog( LOG_ERR, "bad idx (%d) in poll_del_fd!", idx );
  40a0f2:	e9 49 8b ff ff       	jmpq   402c40 <syslog@plt>
    int idx = poll_fdidx[fd];
  40a0f7:	48 89 c7             	mov    %rax,%rdi
  40a0fa:	e8 d1 8c ff ff       	callq  402dd0 <__asan_report_load4@plt>
    pollfds[npoll_fds].fd = -1;
  40a0ff:	48 89 cf             	mov    %rcx,%rdi
  40a102:	e8 e9 8a ff ff       	callq  402bf0 <__asan_report_store4@plt>
    poll_fdidx[pollfds[idx].fd] = idx;
  40a107:	e8 e4 8a ff ff       	callq  402bf0 <__asan_report_store4@plt>
  40a10c:	e8 bf 8c ff ff       	callq  402dd0 <__asan_report_load4@plt>
    pollfds[idx] = pollfds[npoll_fds];
  40a111:	be 08 00 00 00       	mov    $0x8,%esi
  40a116:	48 89 cf             	mov    %rcx,%rdi
  40a119:	e8 e2 8b ff ff       	callq  402d00 <__asan_report_load_n@plt>
  40a11e:	be 08 00 00 00       	mov    $0x8,%esi
  40a123:	e8 28 93 ff ff       	callq  403450 <__asan_report_store_n@plt>
  40a128:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40a12f:	00 

000000000040a130 <poll_check_fd>:
    }


static int
poll_check_fd( int fd )
    {
  40a130:	48 83 ec 08          	sub    $0x8,%rsp
    int fdidx = poll_fdidx[fd];
  40a134:	48 63 ff             	movslq %edi,%rdi
  40a137:	48 8b 05 42 7b 23 00 	mov    0x237b42(%rip),%rax        # 641c80 <poll_fdidx>
  40a13e:	48 c1 e7 02          	shl    $0x2,%rdi
  40a142:	48 01 f8             	add    %rdi,%rax
  40a145:	48 89 c2             	mov    %rax,%rdx
  40a148:	48 c1 ea 03          	shr    $0x3,%rdx
  40a14c:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  40a153:	48 89 c2             	mov    %rax,%rdx
  40a156:	83 e2 07             	and    $0x7,%edx
  40a159:	83 c2 03             	add    $0x3,%edx
  40a15c:	38 ca                	cmp    %cl,%dl
  40a15e:	7c 08                	jl     40a168 <poll_check_fd+0x38>
  40a160:	84 c9                	test   %cl,%cl
  40a162:	0f 85 bf 00 00 00    	jne    40a227 <poll_check_fd+0xf7>
  40a168:	48 63 10             	movslq (%rax),%rdx

    if ( fdidx < 0 || fdidx >= nfiles )
  40a16b:	85 d2                	test   %edx,%edx
  40a16d:	0f 88 8d 00 00 00    	js     40a200 <poll_check_fd+0xd0>
  40a173:	39 15 07 7d 23 00    	cmp    %edx,0x237d07(%rip)        # 641e80 <nfiles>
  40a179:	0f 8e 81 00 00 00    	jle    40a200 <poll_check_fd+0xd0>
	{
	syslog( LOG_ERR, "bad fdidx (%d) in poll_check_fd!", fdidx );
	return 0;
	}
    if ( pollfds[fdidx].revents & POLLERR )
  40a17f:	48 8b 05 7a 7b 23 00 	mov    0x237b7a(%rip),%rax        # 641d00 <pollfds>
  40a186:	48 8d 0c d0          	lea    (%rax,%rdx,8),%rcx
  40a18a:	48 8d 51 06          	lea    0x6(%rcx),%rdx
  40a18e:	48 89 d0             	mov    %rdx,%rax
  40a191:	48 c1 e8 03          	shr    $0x3,%rax
  40a195:	0f b6 b0 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%esi
  40a19c:	48 89 d0             	mov    %rdx,%rax
  40a19f:	83 e0 07             	and    $0x7,%eax
  40a1a2:	83 c0 01             	add    $0x1,%eax
  40a1a5:	40 38 f0             	cmp    %sil,%al
  40a1a8:	7c 09                	jl     40a1b3 <poll_check_fd+0x83>
  40a1aa:	40 84 f6             	test   %sil,%sil
  40a1ad:	0f 85 7c 00 00 00    	jne    40a22f <poll_check_fd+0xff>
  40a1b3:	0f b7 51 06          	movzwl 0x6(%rcx),%edx
  40a1b7:	f6 c2 08             	test   $0x8,%dl
  40a1ba:	75 64                	jne    40a220 <poll_check_fd+0xf0>
	return 0;
    switch ( fd_rw[fd] )
  40a1bc:	48 03 3d 3d 7c 23 00 	add    0x237c3d(%rip),%rdi        # 641e00 <fd_rw>
  40a1c3:	48 89 f8             	mov    %rdi,%rax
  40a1c6:	48 c1 e8 03          	shr    $0x3,%rax
  40a1ca:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  40a1d1:	48 89 f8             	mov    %rdi,%rax
  40a1d4:	83 e0 07             	and    $0x7,%eax
  40a1d7:	83 c0 03             	add    $0x3,%eax
  40a1da:	38 c8                	cmp    %cl,%al
  40a1dc:	7c 04                	jl     40a1e2 <poll_check_fd+0xb2>
  40a1de:	84 c9                	test   %cl,%cl
  40a1e0:	75 55                	jne    40a237 <poll_check_fd+0x107>
  40a1e2:	8b 0f                	mov    (%rdi),%ecx
	{
	case FDW_READ: return pollfds[fdidx].revents & ( POLLIN | POLLHUP | POLLNVAL );
  40a1e4:	89 d0                	mov    %edx,%eax
  40a1e6:	83 e0 31             	and    $0x31,%eax
  40a1e9:	85 c9                	test   %ecx,%ecx
  40a1eb:	74 0e                	je     40a1fb <poll_check_fd+0xcb>
	case FDW_WRITE: return pollfds[fdidx].revents & ( POLLOUT | POLLHUP | POLLNVAL );
	default: return 0;
  40a1ed:	83 e2 34             	and    $0x34,%edx
  40a1f0:	b8 00 00 00 00       	mov    $0x0,%eax
  40a1f5:	83 f9 01             	cmp    $0x1,%ecx
  40a1f8:	0f 44 c2             	cmove  %edx,%eax
	}
    }
  40a1fb:	48 83 c4 08          	add    $0x8,%rsp
  40a1ff:	c3                   	retq   
	syslog( LOG_ERR, "bad fdidx (%d) in poll_check_fd!", fdidx );
  40a200:	31 c0                	xor    %eax,%eax
  40a202:	be 20 1e 42 00       	mov    $0x421e20,%esi
  40a207:	bf 03 00 00 00       	mov    $0x3,%edi
  40a20c:	e8 2f 8a ff ff       	callq  402c40 <syslog@plt>
	return 0;
  40a211:	31 c0                	xor    %eax,%eax
    }
  40a213:	48 83 c4 08          	add    $0x8,%rsp
  40a217:	c3                   	retq   
  40a218:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40a21f:	00 
	return 0;
  40a220:	31 c0                	xor    %eax,%eax
    }
  40a222:	48 83 c4 08          	add    $0x8,%rsp
  40a226:	c3                   	retq   
    int fdidx = poll_fdidx[fd];
  40a227:	48 89 c7             	mov    %rax,%rdi
  40a22a:	e8 a1 8b ff ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( pollfds[fdidx].revents & POLLERR )
  40a22f:	48 89 d7             	mov    %rdx,%rdi
  40a232:	e8 79 8d ff ff       	callq  402fb0 <__asan_report_load2@plt>
    switch ( fd_rw[fd] )
  40a237:	e8 94 8b ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40a23c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000040a240 <poll_get_fd>:


static int
poll_get_fd( int ridx )
    {
  40a240:	48 83 ec 08          	sub    $0x8,%rsp
    if ( ridx < 0 || ridx >= nfiles )
  40a244:	85 ff                	test   %edi,%edi
  40a246:	78 48                	js     40a290 <poll_get_fd+0x50>
  40a248:	39 3d 32 7c 23 00    	cmp    %edi,0x237c32(%rip)        # 641e80 <nfiles>
  40a24e:	7e 40                	jle    40a290 <poll_get_fd+0x50>
	{
	syslog( LOG_ERR, "bad ridx (%d) in poll_get_fd!", ridx );
	return -1;
	}
    return poll_rfdidx[ridx];
  40a250:	48 8b 05 e9 79 23 00 	mov    0x2379e9(%rip),%rax        # 641c40 <poll_rfdidx>
  40a257:	48 63 ff             	movslq %edi,%rdi
  40a25a:	48 8d 3c b8          	lea    (%rax,%rdi,4),%rdi
  40a25e:	48 89 f8             	mov    %rdi,%rax
  40a261:	48 c1 e8 03          	shr    $0x3,%rax
  40a265:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  40a26c:	48 89 f8             	mov    %rdi,%rax
  40a26f:	83 e0 07             	and    $0x7,%eax
  40a272:	83 c0 03             	add    $0x3,%eax
  40a275:	38 d0                	cmp    %dl,%al
  40a277:	7c 04                	jl     40a27d <poll_get_fd+0x3d>
  40a279:	84 d2                	test   %dl,%dl
  40a27b:	75 07                	jne    40a284 <poll_get_fd+0x44>
  40a27d:	8b 07                	mov    (%rdi),%eax
    }
  40a27f:	48 83 c4 08          	add    $0x8,%rsp
  40a283:	c3                   	retq   
    return poll_rfdidx[ridx];
  40a284:	e8 47 8b ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40a289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	syslog( LOG_ERR, "bad ridx (%d) in poll_get_fd!", ridx );
  40a290:	89 fa                	mov    %edi,%edx
  40a292:	31 c0                	xor    %eax,%eax
  40a294:	be 80 1e 42 00       	mov    $0x421e80,%esi
  40a299:	bf 03 00 00 00       	mov    $0x3,%edi
  40a29e:	e8 9d 89 ff ff       	callq  402c40 <syslog@plt>
	return -1;
  40a2a3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40a2a8:	eb d5                	jmp    40a27f <poll_get_fd+0x3f>
  40a2aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040a2b0 <poll_watch>:
    {
  40a2b0:	48 83 ec 08          	sub    $0x8,%rsp
    r = poll( pollfds, npoll_fds, (int) timeout_msecs );
  40a2b4:	89 fa                	mov    %edi,%edx
  40a2b6:	48 63 35 03 7a 23 00 	movslq 0x237a03(%rip),%rsi        # 641cc0 <npoll_fds>
  40a2bd:	48 8b 3d 3c 7a 23 00 	mov    0x237a3c(%rip),%rdi        # 641d00 <pollfds>
  40a2c4:	e8 17 8b ff ff       	callq  402de0 <poll@plt>
    if ( r <= 0 )
  40a2c9:	85 c0                	test   %eax,%eax
  40a2cb:	0f 8e cf 00 00 00    	jle    40a3a0 <poll_watch+0xf0>
    for ( i = 0; i < npoll_fds; ++i )
  40a2d1:	8b 0d e9 79 23 00    	mov    0x2379e9(%rip),%ecx        # 641cc0 <npoll_fds>
  40a2d7:	85 c9                	test   %ecx,%ecx
  40a2d9:	0f 8e ca 00 00 00    	jle    40a3a9 <poll_watch+0xf9>
	if ( pollfds[i].revents &
  40a2df:	48 8b 35 1a 7a 23 00 	mov    0x237a1a(%rip),%rsi        # 641d00 <pollfds>
  40a2e6:	83 e9 01             	sub    $0x1,%ecx
	    poll_rfdidx[ridx++] = pollfds[i].fd;
  40a2e9:	4c 8b 0d 50 79 23 00 	mov    0x237950(%rip),%r9        # 641c40 <poll_rfdidx>
  40a2f0:	48 8d 56 06          	lea    0x6(%rsi),%rdx
  40a2f4:	4c 8d 44 ce 0e       	lea    0xe(%rsi,%rcx,8),%r8
    ridx = 0;
  40a2f9:	31 f6                	xor    %esi,%esi
  40a2fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	if ( pollfds[i].revents &
  40a300:	48 89 d1             	mov    %rdx,%rcx
  40a303:	48 c1 e9 03          	shr    $0x3,%rcx
  40a307:	0f b6 b9 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%edi
  40a30e:	48 89 d1             	mov    %rdx,%rcx
  40a311:	83 e1 07             	and    $0x7,%ecx
  40a314:	83 c1 01             	add    $0x1,%ecx
  40a317:	40 38 f9             	cmp    %dil,%cl
  40a31a:	7c 09                	jl     40a325 <poll_watch+0x75>
  40a31c:	40 84 ff             	test   %dil,%dil
  40a31f:	0f 85 88 00 00 00    	jne    40a3ad <poll_watch+0xfd>
  40a325:	f6 02 3d             	testb  $0x3d,(%rdx)
  40a328:	74 5e                	je     40a388 <poll_watch+0xd8>
	    poll_rfdidx[ridx++] = pollfds[i].fd;
  40a32a:	44 8d 56 01          	lea    0x1(%rsi),%r10d
  40a32e:	49 8d 3c b1          	lea    (%r9,%rsi,4),%rdi
  40a332:	48 8d 72 fa          	lea    -0x6(%rdx),%rsi
  40a336:	48 89 f1             	mov    %rsi,%rcx
  40a339:	48 c1 e9 03          	shr    $0x3,%rcx
  40a33d:	44 0f b6 99 00 80 ff 	movzbl 0x7fff8000(%rcx),%r11d
  40a344:	7f 
  40a345:	48 89 f1             	mov    %rsi,%rcx
  40a348:	83 e1 07             	and    $0x7,%ecx
  40a34b:	83 c1 03             	add    $0x3,%ecx
  40a34e:	44 38 d9             	cmp    %r11b,%cl
  40a351:	7c 05                	jl     40a358 <poll_watch+0xa8>
  40a353:	45 84 db             	test   %r11b,%r11b
  40a356:	75 62                	jne    40a3ba <poll_watch+0x10a>
  40a358:	48 89 f9             	mov    %rdi,%rcx
  40a35b:	44 8b 5a fa          	mov    -0x6(%rdx),%r11d
  40a35f:	48 c1 e9 03          	shr    $0x3,%rcx
  40a363:	0f b6 b1 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%esi
  40a36a:	48 89 f9             	mov    %rdi,%rcx
  40a36d:	83 e1 07             	and    $0x7,%ecx
  40a370:	83 c1 03             	add    $0x3,%ecx
  40a373:	40 38 f1             	cmp    %sil,%cl
  40a376:	7c 05                	jl     40a37d <poll_watch+0xcd>
  40a378:	40 84 f6             	test   %sil,%sil
  40a37b:	75 38                	jne    40a3b5 <poll_watch+0x105>
  40a37d:	44 89 1f             	mov    %r11d,(%rdi)
	    if ( ridx == r )
  40a380:	44 39 d0             	cmp    %r10d,%eax
  40a383:	74 1b                	je     40a3a0 <poll_watch+0xf0>
  40a385:	49 63 f2             	movslq %r10d,%rsi
  40a388:	48 83 c2 08          	add    $0x8,%rdx
    for ( i = 0; i < npoll_fds; ++i )
  40a38c:	4c 39 c2             	cmp    %r8,%rdx
  40a38f:	0f 85 6b ff ff ff    	jne    40a300 <poll_watch+0x50>
    }
  40a395:	89 f0                	mov    %esi,%eax
  40a397:	48 83 c4 08          	add    $0x8,%rsp
  40a39b:	c3                   	retq   
  40a39c:	0f 1f 40 00          	nopl   0x0(%rax)
	    poll_rfdidx[ridx++] = pollfds[i].fd;
  40a3a0:	89 c6                	mov    %eax,%esi
    }
  40a3a2:	48 83 c4 08          	add    $0x8,%rsp
  40a3a6:	89 f0                	mov    %esi,%eax
  40a3a8:	c3                   	retq   
    ridx = 0;
  40a3a9:	31 f6                	xor    %esi,%esi
  40a3ab:	eb e8                	jmp    40a395 <poll_watch+0xe5>
	if ( pollfds[i].revents &
  40a3ad:	48 89 d7             	mov    %rdx,%rdi
  40a3b0:	e8 fb 8b ff ff       	callq  402fb0 <__asan_report_load2@plt>
	    poll_rfdidx[ridx++] = pollfds[i].fd;
  40a3b5:	e8 36 88 ff ff       	callq  402bf0 <__asan_report_store4@plt>
  40a3ba:	48 89 f7             	mov    %rsi,%rdi
  40a3bd:	e8 0e 8a ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40a3c2:	0f 1f 40 00          	nopl   0x0(%rax)
  40a3c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a3cd:	00 00 00 

000000000040a3d0 <fdwatch_get_nfiles>:
    {
  40a3d0:	41 57                	push   %r15
  40a3d2:	41 56                	push   %r14
  40a3d4:	41 55                	push   %r13
  40a3d6:	41 54                	push   %r12
  40a3d8:	55                   	push   %rbp
  40a3d9:	53                   	push   %rbx
  40a3da:	48 83 ec 68          	sub    $0x68,%rsp
  40a3de:	8b 05 1c 6f 23 00    	mov    0x236f1c(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  40a3e4:	49 89 e5             	mov    %rsp,%r13
  40a3e7:	4d 89 ec             	mov    %r13,%r12
  40a3ea:	85 c0                	test   %eax,%eax
  40a3ec:	0f 85 e7 01 00 00    	jne    40a5d9 <fdwatch_get_nfiles+0x209>
  40a3f2:	4c 89 ed             	mov    %r13,%rbp
    if ( getrlimit( RLIMIT_NOFILE, &rl ) == 0 )
  40a3f5:	4d 8d 7d 20          	lea    0x20(%r13),%r15
    {
  40a3f9:	49 8d 5d 60          	lea    0x60(%r13),%rbx
  40a3fd:	49 c7 45 00 b3 8a b5 	movq   $0x41b58ab3,0x0(%r13)
  40a404:	41 
  40a405:	48 c1 ed 03          	shr    $0x3,%rbp
  40a409:	49 c7 45 08 60 20 42 	movq   $0x422060,0x8(%r13)
  40a410:	00 
  40a411:	49 c7 45 10 d0 a3 40 	movq   $0x40a3d0,0x10(%r13)
  40a418:	00 
  40a419:	c7 85 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbp)
  40a420:	f1 f1 f1 
  40a423:	c7 85 04 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8004(%rbp)
  40a42a:	00 f2 f2 
  40a42d:	c7 85 08 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8008(%rbp)
  40a434:	f3 f3 f3 
    nfiles = getdtablesize();
  40a437:	e8 f4 8e ff ff       	callq  403330 <getdtablesize@plt>
    if ( getrlimit( RLIMIT_NOFILE, &rl ) == 0 )
  40a43c:	4c 89 fe             	mov    %r15,%rsi
  40a43f:	bf 07 00 00 00       	mov    $0x7,%edi
    nfiles = getdtablesize();
  40a444:	41 89 c6             	mov    %eax,%r14d
  40a447:	89 05 33 7a 23 00    	mov    %eax,0x237a33(%rip)        # 641e80 <nfiles>
    if ( getrlimit( RLIMIT_NOFILE, &rl ) == 0 )
  40a44d:	e8 9e 8d ff ff       	callq  4031f0 <getrlimit@plt>
  40a452:	85 c0                	test   %eax,%eax
  40a454:	0f 85 86 00 00 00    	jne    40a4e0 <fdwatch_get_nfiles+0x110>
	nfiles = rl.rlim_cur;
  40a45a:	4c 89 f8             	mov    %r15,%rax
  40a45d:	48 c1 e8 03          	shr    $0x3,%rax
  40a461:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40a468:	0f 85 b3 01 00 00    	jne    40a621 <fdwatch_get_nfiles+0x251>
	if ( rl.rlim_max == RLIM_INFINITY )
  40a46e:	49 8d 7d 28          	lea    0x28(%r13),%rdi
	nfiles = rl.rlim_cur;
  40a472:	48 8b 43 c0          	mov    -0x40(%rbx),%rax
	if ( rl.rlim_max == RLIM_INFINITY )
  40a476:	48 89 fa             	mov    %rdi,%rdx
  40a479:	48 c1 ea 03          	shr    $0x3,%rdx
	nfiles = rl.rlim_cur;
  40a47d:	41 89 c6             	mov    %eax,%r14d
  40a480:	89 05 fa 79 23 00    	mov    %eax,0x2379fa(%rip)        # 641e80 <nfiles>
	if ( rl.rlim_max == RLIM_INFINITY )
  40a486:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40a48d:	0f 85 81 01 00 00    	jne    40a614 <fdwatch_get_nfiles+0x244>
  40a493:	48 8b 53 c8          	mov    -0x38(%rbx),%rdx
  40a497:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
  40a49b:	0f 84 0f 01 00 00    	je     40a5b0 <fdwatch_get_nfiles+0x1e0>
	else if ( rl.rlim_max > rl.rlim_cur )
  40a4a1:	48 39 d0             	cmp    %rdx,%rax
  40a4a4:	0f 82 16 01 00 00    	jb     40a5c0 <fdwatch_get_nfiles+0x1f0>
	if ( setrlimit( RLIMIT_NOFILE, &rl ) == 0 )
  40a4aa:	4c 8d 7b c0          	lea    -0x40(%rbx),%r15
  40a4ae:	bf 07 00 00 00       	mov    $0x7,%edi
  40a4b3:	4c 89 fe             	mov    %r15,%rsi
  40a4b6:	e8 35 8a ff ff       	callq  402ef0 <setrlimit@plt>
  40a4bb:	85 c0                	test   %eax,%eax
  40a4bd:	75 21                	jne    40a4e0 <fdwatch_get_nfiles+0x110>
	    nfiles = rl.rlim_cur;
  40a4bf:	4c 89 f8             	mov    %r15,%rax
  40a4c2:	48 c1 e8 03          	shr    $0x3,%rax
  40a4c6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40a4cd:	0f 85 46 01 00 00    	jne    40a619 <fdwatch_get_nfiles+0x249>
  40a4d3:	48 8b 43 c0          	mov    -0x40(%rbx),%rax
  40a4d7:	89 05 a3 79 23 00    	mov    %eax,0x2379a3(%rip)        # 641e80 <nfiles>
  40a4dd:	41 89 c6             	mov    %eax,%r14d
    nwatches = 0;
  40a4e0:	48 c7 05 55 79 23 00 	movq   $0x0,0x237955(%rip)        # 641e40 <nwatches>
  40a4e7:	00 00 00 00 
    fd_rw = (int*) malloc( sizeof(int) * nfiles );
  40a4eb:	4d 63 fe             	movslq %r14d,%r15
  40a4ee:	4a 8d 3c bd 00 00 00 	lea    0x0(,%r15,4),%rdi
  40a4f5:	00 
  40a4f6:	e8 b5 8b ff ff       	callq  4030b0 <malloc@plt>
    fd_data = (void**) malloc( sizeof(void*) * nfiles );
  40a4fb:	4a 8d 3c fd 00 00 00 	lea    0x0(,%r15,8),%rdi
  40a502:	00 
    fd_rw = (int*) malloc( sizeof(int) * nfiles );
  40a503:	48 89 c3             	mov    %rax,%rbx
  40a506:	48 89 05 f3 78 23 00 	mov    %rax,0x2378f3(%rip)        # 641e00 <fd_rw>
    fd_data = (void**) malloc( sizeof(void*) * nfiles );
  40a50d:	e8 9e 8b ff ff       	callq  4030b0 <malloc@plt>
  40a512:	48 89 05 a7 78 23 00 	mov    %rax,0x2378a7(%rip)        # 641dc0 <fd_data>
    if ( fd_rw == (int*) 0 || fd_data == (void**) 0 )
  40a519:	48 85 c0             	test   %rax,%rax
  40a51c:	0f 84 a7 00 00 00    	je     40a5c9 <fdwatch_get_nfiles+0x1f9>
  40a522:	48 85 db             	test   %rbx,%rbx
  40a525:	0f 84 9e 00 00 00    	je     40a5c9 <fdwatch_get_nfiles+0x1f9>
    for ( i = 0; i < nfiles; ++i )
  40a52b:	45 85 f6             	test   %r14d,%r14d
  40a52e:	7e 3e                	jle    40a56e <fdwatch_get_nfiles+0x19e>
  40a530:	41 8d 56 ff          	lea    -0x1(%r14),%edx
  40a534:	48 8d 74 93 04       	lea    0x4(%rbx,%rdx,4),%rsi
  40a539:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	fd_rw[i] = -1;
  40a540:	48 89 da             	mov    %rbx,%rdx
  40a543:	48 c1 ea 03          	shr    $0x3,%rdx
  40a547:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  40a54e:	48 89 da             	mov    %rbx,%rdx
  40a551:	83 e2 07             	and    $0x7,%edx
  40a554:	83 c2 03             	add    $0x3,%edx
  40a557:	38 ca                	cmp    %cl,%dl
  40a559:	7c 04                	jl     40a55f <fdwatch_get_nfiles+0x18f>
  40a55b:	84 c9                	test   %cl,%cl
  40a55d:	75 72                	jne    40a5d1 <fdwatch_get_nfiles+0x201>
  40a55f:	c7 03 ff ff ff ff    	movl   $0xffffffff,(%rbx)
  40a565:	48 83 c3 04          	add    $0x4,%rbx
    for ( i = 0; i < nfiles; ++i )
  40a569:	48 39 f3             	cmp    %rsi,%rbx
  40a56c:	75 d2                	jne    40a540 <fdwatch_get_nfiles+0x170>
    if ( INIT( nfiles ) == -1 )
  40a56e:	44 89 f7             	mov    %r14d,%edi
  40a571:	e8 9a f7 ff ff       	callq  409d10 <poll_init>
  40a576:	83 f8 ff             	cmp    $0xffffffff,%eax
  40a579:	74 4e                	je     40a5c9 <fdwatch_get_nfiles+0x1f9>
    {
  40a57b:	4d 39 ec             	cmp    %r13,%r12
  40a57e:	75 6f                	jne    40a5ef <fdwatch_get_nfiles+0x21f>
  40a580:	48 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbp)
  40a587:	00 00 00 00 
  40a58b:	c7 85 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbp)
  40a592:	00 00 00 
    }
  40a595:	48 83 c4 68          	add    $0x68,%rsp
  40a599:	44 89 f0             	mov    %r14d,%eax
  40a59c:	5b                   	pop    %rbx
  40a59d:	5d                   	pop    %rbp
  40a59e:	41 5c                	pop    %r12
  40a5a0:	41 5d                	pop    %r13
  40a5a2:	41 5e                	pop    %r14
  40a5a4:	41 5f                	pop    %r15
  40a5a6:	c3                   	retq   
  40a5a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40a5ae:	00 00 
	    rl.rlim_cur = 8192;         /* arbitrary */
  40a5b0:	48 c7 43 c0 00 20 00 	movq   $0x2000,-0x40(%rbx)
  40a5b7:	00 
  40a5b8:	e9 ed fe ff ff       	jmpq   40a4aa <fdwatch_get_nfiles+0xda>
  40a5bd:	0f 1f 00             	nopl   (%rax)
	    rl.rlim_cur = rl.rlim_max;
  40a5c0:	48 89 53 c0          	mov    %rdx,-0x40(%rbx)
  40a5c4:	e9 e1 fe ff ff       	jmpq   40a4aa <fdwatch_get_nfiles+0xda>
	return -1;
  40a5c9:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
  40a5cf:	eb aa                	jmp    40a57b <fdwatch_get_nfiles+0x1ab>
	fd_rw[i] = -1;
  40a5d1:	48 89 df             	mov    %rbx,%rdi
  40a5d4:	e8 17 86 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    {
  40a5d9:	bf 60 00 00 00       	mov    $0x60,%edi
  40a5de:	e8 cd 87 ff ff       	callq  402db0 <__asan_stack_malloc_1@plt>
  40a5e3:	48 85 c0             	test   %rax,%rax
  40a5e6:	4c 0f 45 e8          	cmovne %rax,%r13
  40a5ea:	e9 03 fe ff ff       	jmpq   40a3f2 <fdwatch_get_nfiles+0x22>
  40a5ef:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
  40a5f6:	f5 f5 f5 
  40a5f9:	49 c7 45 00 0e 36 e0 	movq   $0x45e0360e,0x0(%r13)
  40a600:	45 
  40a601:	48 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%rbp)
  40a608:	c7 85 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rbp)
  40a60f:	f5 f5 f5 
  40a612:	eb 81                	jmp    40a595 <fdwatch_get_nfiles+0x1c5>
	if ( rl.rlim_max == RLIM_INFINITY )
  40a614:	e8 37 8c ff ff       	callq  403250 <__asan_report_load8@plt>
	    nfiles = rl.rlim_cur;
  40a619:	4c 89 ff             	mov    %r15,%rdi
  40a61c:	e8 2f 8c ff ff       	callq  403250 <__asan_report_load8@plt>
	nfiles = rl.rlim_cur;
  40a621:	4c 89 ff             	mov    %r15,%rdi
  40a624:	e8 27 8c ff ff       	callq  403250 <__asan_report_load8@plt>
  40a629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040a630 <fdwatch_add_fd>:
    {
  40a630:	41 55                	push   %r13
  40a632:	41 54                	push   %r12
  40a634:	55                   	push   %rbp
  40a635:	53                   	push   %rbx
  40a636:	48 83 ec 08          	sub    $0x8,%rsp
    if ( fd < 0 || fd >= nfiles || fd_rw[fd] != -1 )
  40a63a:	85 ff                	test   %edi,%edi
  40a63c:	78 4e                	js     40a68c <fdwatch_add_fd+0x5c>
  40a63e:	39 3d 3c 78 23 00    	cmp    %edi,0x23783c(%rip)        # 641e80 <nfiles>
  40a644:	7e 46                	jle    40a68c <fdwatch_add_fd+0x5c>
  40a646:	4c 63 ef             	movslq %edi,%r13
  40a649:	48 8b 05 b0 77 23 00 	mov    0x2377b0(%rip),%rax        # 641e00 <fd_rw>
  40a650:	41 89 d4             	mov    %edx,%r12d
  40a653:	48 89 f5             	mov    %rsi,%rbp
  40a656:	4a 8d 1c ad 00 00 00 	lea    0x0(,%r13,4),%rbx
  40a65d:	00 
  40a65e:	4d 89 e8             	mov    %r13,%r8
  40a661:	48 01 d8             	add    %rbx,%rax
  40a664:	48 89 c2             	mov    %rax,%rdx
  40a667:	48 89 c1             	mov    %rax,%rcx
  40a66a:	48 c1 ea 03          	shr    $0x3,%rdx
  40a66e:	83 e1 07             	and    $0x7,%ecx
  40a671:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40a678:	83 c1 03             	add    $0x3,%ecx
  40a67b:	38 d1                	cmp    %dl,%cl
  40a67d:	7c 08                	jl     40a687 <fdwatch_add_fd+0x57>
  40a67f:	84 d2                	test   %dl,%dl
  40a681:	0f 85 86 00 00 00    	jne    40a70d <fdwatch_add_fd+0xdd>
  40a687:	83 38 ff             	cmpl   $0xffffffff,(%rax)
  40a68a:	74 24                	je     40a6b0 <fdwatch_add_fd+0x80>
    }
  40a68c:	48 83 c4 08          	add    $0x8,%rsp
	syslog( LOG_ERR, "bad fd (%d) passed to fdwatch_add_fd!", fd );
  40a690:	89 fa                	mov    %edi,%edx
  40a692:	be c0 1e 42 00       	mov    $0x421ec0,%esi
  40a697:	bf 03 00 00 00       	mov    $0x3,%edi
    }
  40a69c:	5b                   	pop    %rbx
	syslog( LOG_ERR, "bad fd (%d) passed to fdwatch_add_fd!", fd );
  40a69d:	31 c0                	xor    %eax,%eax
    }
  40a69f:	5d                   	pop    %rbp
  40a6a0:	41 5c                	pop    %r12
  40a6a2:	41 5d                	pop    %r13
	syslog( LOG_ERR, "bad fd (%d) passed to fdwatch_add_fd!", fd );
  40a6a4:	e9 97 85 ff ff       	jmpq   402c40 <syslog@plt>
  40a6a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ADD_FD( fd, rw );
  40a6b0:	44 89 e6             	mov    %r12d,%esi
  40a6b3:	44 89 c7             	mov    %r8d,%edi
  40a6b6:	e8 45 f7 ff ff       	callq  409e00 <poll_add_fd>
    fd_rw[fd] = rw;
  40a6bb:	48 03 1d 3e 77 23 00 	add    0x23773e(%rip),%rbx        # 641e00 <fd_rw>
  40a6c2:	48 89 d8             	mov    %rbx,%rax
  40a6c5:	48 c1 e8 03          	shr    $0x3,%rax
  40a6c9:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  40a6d0:	48 89 d8             	mov    %rbx,%rax
  40a6d3:	83 e0 07             	and    $0x7,%eax
  40a6d6:	83 c0 03             	add    $0x3,%eax
  40a6d9:	38 d0                	cmp    %dl,%al
  40a6db:	7c 04                	jl     40a6e1 <fdwatch_add_fd+0xb1>
  40a6dd:	84 d2                	test   %dl,%dl
  40a6df:	75 39                	jne    40a71a <fdwatch_add_fd+0xea>
    fd_data[fd] = client_data;
  40a6e1:	48 8b 05 d8 76 23 00 	mov    0x2376d8(%rip),%rax        # 641dc0 <fd_data>
    fd_rw[fd] = rw;
  40a6e8:	44 89 23             	mov    %r12d,(%rbx)
    fd_data[fd] = client_data;
  40a6eb:	4a 8d 3c e8          	lea    (%rax,%r13,8),%rdi
  40a6ef:	48 89 f8             	mov    %rdi,%rax
  40a6f2:	48 c1 e8 03          	shr    $0x3,%rax
  40a6f6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40a6fd:	75 16                	jne    40a715 <fdwatch_add_fd+0xe5>
  40a6ff:	48 89 2f             	mov    %rbp,(%rdi)
    }
  40a702:	48 83 c4 08          	add    $0x8,%rsp
  40a706:	5b                   	pop    %rbx
  40a707:	5d                   	pop    %rbp
  40a708:	41 5c                	pop    %r12
  40a70a:	41 5d                	pop    %r13
  40a70c:	c3                   	retq   
    if ( fd < 0 || fd >= nfiles || fd_rw[fd] != -1 )
  40a70d:	48 89 c7             	mov    %rax,%rdi
  40a710:	e8 bb 86 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    fd_data[fd] = client_data;
  40a715:	e8 86 88 ff ff       	callq  402fa0 <__asan_report_store8@plt>
    fd_rw[fd] = rw;
  40a71a:	48 89 df             	mov    %rbx,%rdi
  40a71d:	e8 ce 84 ff ff       	callq  402bf0 <__asan_report_store4@plt>
  40a722:	0f 1f 40 00          	nopl   0x0(%rax)
  40a726:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a72d:	00 00 00 

000000000040a730 <fdwatch_del_fd>:
    {
  40a730:	55                   	push   %rbp
  40a731:	89 fa                	mov    %edi,%edx
  40a733:	53                   	push   %rbx
  40a734:	48 83 ec 08          	sub    $0x8,%rsp
    if ( fd < 0 || fd >= nfiles || fd_rw[fd] == -1 )
  40a738:	85 ff                	test   %edi,%edi
  40a73a:	0f 88 a8 00 00 00    	js     40a7e8 <fdwatch_del_fd+0xb8>
  40a740:	39 3d 3a 77 23 00    	cmp    %edi,0x23773a(%rip)        # 641e80 <nfiles>
  40a746:	0f 8e 9c 00 00 00    	jle    40a7e8 <fdwatch_del_fd+0xb8>
  40a74c:	48 63 ef             	movslq %edi,%rbp
  40a74f:	48 8b 05 aa 76 23 00 	mov    0x2376aa(%rip),%rax        # 641e00 <fd_rw>
  40a756:	48 8d 1c ad 00 00 00 	lea    0x0(,%rbp,4),%rbx
  40a75d:	00 
  40a75e:	48 89 ef             	mov    %rbp,%rdi
  40a761:	48 01 d8             	add    %rbx,%rax
  40a764:	48 89 c1             	mov    %rax,%rcx
  40a767:	48 c1 e9 03          	shr    $0x3,%rcx
  40a76b:	0f b6 b1 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%esi
  40a772:	48 89 c1             	mov    %rax,%rcx
  40a775:	83 e1 07             	and    $0x7,%ecx
  40a778:	83 c1 03             	add    $0x3,%ecx
  40a77b:	40 38 f1             	cmp    %sil,%cl
  40a77e:	7c 05                	jl     40a785 <fdwatch_del_fd+0x55>
  40a780:	40 84 f6             	test   %sil,%sil
  40a783:	75 7a                	jne    40a7ff <fdwatch_del_fd+0xcf>
  40a785:	83 38 ff             	cmpl   $0xffffffff,(%rax)
  40a788:	74 5e                	je     40a7e8 <fdwatch_del_fd+0xb8>
    DEL_FD( fd );
  40a78a:	e8 b1 f7 ff ff       	callq  409f40 <poll_del_fd>
    fd_rw[fd] = -1;
  40a78f:	48 03 1d 6a 76 23 00 	add    0x23766a(%rip),%rbx        # 641e00 <fd_rw>
  40a796:	48 89 d8             	mov    %rbx,%rax
  40a799:	48 c1 e8 03          	shr    $0x3,%rax
  40a79d:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  40a7a4:	48 89 d8             	mov    %rbx,%rax
  40a7a7:	83 e0 07             	and    $0x7,%eax
  40a7aa:	83 c0 03             	add    $0x3,%eax
  40a7ad:	38 d0                	cmp    %dl,%al
  40a7af:	7c 04                	jl     40a7b5 <fdwatch_del_fd+0x85>
  40a7b1:	84 d2                	test   %dl,%dl
  40a7b3:	75 52                	jne    40a807 <fdwatch_del_fd+0xd7>
    fd_data[fd] = (void*) 0;
  40a7b5:	48 8b 05 04 76 23 00 	mov    0x237604(%rip),%rax        # 641dc0 <fd_data>
    fd_rw[fd] = -1;
  40a7bc:	c7 03 ff ff ff ff    	movl   $0xffffffff,(%rbx)
    fd_data[fd] = (void*) 0;
  40a7c2:	48 8d 3c e8          	lea    (%rax,%rbp,8),%rdi
  40a7c6:	48 89 f8             	mov    %rdi,%rax
  40a7c9:	48 c1 e8 03          	shr    $0x3,%rax
  40a7cd:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40a7d4:	75 39                	jne    40a80f <fdwatch_del_fd+0xdf>
  40a7d6:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    }
  40a7dd:	48 83 c4 08          	add    $0x8,%rsp
  40a7e1:	5b                   	pop    %rbx
  40a7e2:	5d                   	pop    %rbp
  40a7e3:	c3                   	retq   
  40a7e4:	0f 1f 40 00          	nopl   0x0(%rax)
  40a7e8:	48 83 c4 08          	add    $0x8,%rsp
	syslog( LOG_ERR, "bad fd (%d) passed to fdwatch_del_fd!", fd );
  40a7ec:	be 20 1f 42 00       	mov    $0x421f20,%esi
  40a7f1:	bf 03 00 00 00       	mov    $0x3,%edi
  40a7f6:	31 c0                	xor    %eax,%eax
    }
  40a7f8:	5b                   	pop    %rbx
  40a7f9:	5d                   	pop    %rbp
	syslog( LOG_ERR, "bad fd (%d) passed to fdwatch_del_fd!", fd );
  40a7fa:	e9 41 84 ff ff       	jmpq   402c40 <syslog@plt>
    if ( fd < 0 || fd >= nfiles || fd_rw[fd] == -1 )
  40a7ff:	48 89 c7             	mov    %rax,%rdi
  40a802:	e8 c9 85 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    fd_rw[fd] = -1;
  40a807:	48 89 df             	mov    %rbx,%rdi
  40a80a:	e8 e1 83 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    fd_data[fd] = (void*) 0;
  40a80f:	e8 8c 87 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  40a814:	66 90                	xchg   %ax,%ax
  40a816:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a81d:	00 00 00 

000000000040a820 <fdwatch>:
    {
  40a820:	48 83 ec 08          	sub    $0x8,%rsp
    ++nwatches;
  40a824:	48 83 05 14 76 23 00 	addq   $0x1,0x237614(%rip)        # 641e40 <nwatches>
  40a82b:	01 
    nreturned = WATCH( timeout_msecs );
  40a82c:	e8 7f fa ff ff       	callq  40a2b0 <poll_watch>
    next_ridx = 0;
  40a831:	c7 05 05 75 23 00 00 	movl   $0x0,0x237505(%rip)        # 641d40 <next_ridx>
  40a838:	00 00 00 
    nreturned = WATCH( timeout_msecs );
  40a83b:	89 05 3f 75 23 00    	mov    %eax,0x23753f(%rip)        # 641d80 <nreturned>
    }
  40a841:	48 83 c4 08          	add    $0x8,%rsp
  40a845:	c3                   	retq   
  40a846:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a84d:	00 00 00 

000000000040a850 <fdwatch_check_fd>:
    {
  40a850:	48 83 ec 08          	sub    $0x8,%rsp
    if ( fd < 0 || fd >= nfiles || fd_rw[fd] == -1 )
  40a854:	85 ff                	test   %edi,%edi
  40a856:	78 48                	js     40a8a0 <fdwatch_check_fd+0x50>
  40a858:	39 3d 22 76 23 00    	cmp    %edi,0x237622(%rip)        # 641e80 <nfiles>
  40a85e:	7e 40                	jle    40a8a0 <fdwatch_check_fd+0x50>
  40a860:	48 8b 15 99 75 23 00 	mov    0x237599(%rip),%rdx        # 641e00 <fd_rw>
  40a867:	48 63 c7             	movslq %edi,%rax
  40a86a:	48 8d 04 82          	lea    (%rdx,%rax,4),%rax
  40a86e:	48 89 c2             	mov    %rax,%rdx
  40a871:	48 c1 ea 03          	shr    $0x3,%rdx
  40a875:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  40a87c:	48 89 c2             	mov    %rax,%rdx
  40a87f:	83 e2 07             	and    $0x7,%edx
  40a882:	83 c2 03             	add    $0x3,%edx
  40a885:	38 ca                	cmp    %cl,%dl
  40a887:	7c 04                	jl     40a88d <fdwatch_check_fd+0x3d>
  40a889:	84 c9                	test   %cl,%cl
  40a88b:	75 2d                	jne    40a8ba <fdwatch_check_fd+0x6a>
  40a88d:	83 38 ff             	cmpl   $0xffffffff,(%rax)
  40a890:	74 0e                	je     40a8a0 <fdwatch_check_fd+0x50>
    }
  40a892:	48 83 c4 08          	add    $0x8,%rsp
    return CHECK_FD( fd );
  40a896:	e9 95 f8 ff ff       	jmpq   40a130 <poll_check_fd>
  40a89b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	syslog( LOG_ERR, "bad fd (%d) passed to fdwatch_check_fd!", fd );
  40a8a0:	89 fa                	mov    %edi,%edx
  40a8a2:	31 c0                	xor    %eax,%eax
  40a8a4:	be 80 1f 42 00       	mov    $0x421f80,%esi
  40a8a9:	bf 03 00 00 00       	mov    $0x3,%edi
  40a8ae:	e8 8d 83 ff ff       	callq  402c40 <syslog@plt>
    }
  40a8b3:	31 c0                	xor    %eax,%eax
  40a8b5:	48 83 c4 08          	add    $0x8,%rsp
  40a8b9:	c3                   	retq   
    if ( fd < 0 || fd >= nfiles || fd_rw[fd] == -1 )
  40a8ba:	48 89 c7             	mov    %rax,%rdi
  40a8bd:	e8 0e 85 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40a8c2:	0f 1f 40 00          	nopl   0x0(%rax)
  40a8c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a8cd:	00 00 00 

000000000040a8d0 <fdwatch_get_next_client_data>:
    if ( next_ridx >= nreturned )
  40a8d0:	8b 3d 6a 74 23 00    	mov    0x23746a(%rip),%edi        # 641d40 <next_ridx>
  40a8d6:	3b 3d a4 74 23 00    	cmp    0x2374a4(%rip),%edi        # 641d80 <nreturned>
	return (void*) -1;
  40a8dc:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    if ( next_ridx >= nreturned )
  40a8e3:	7c 0b                	jl     40a8f0 <fdwatch_get_next_client_data+0x20>
    }
  40a8e5:	c3                   	retq   
  40a8e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a8ed:	00 00 00 
    {
  40a8f0:	48 83 ec 08          	sub    $0x8,%rsp
    fd = GET_FD( next_ridx++ );
  40a8f4:	8d 47 01             	lea    0x1(%rdi),%eax
  40a8f7:	89 05 43 74 23 00    	mov    %eax,0x237443(%rip)        # 641d40 <next_ridx>
  40a8fd:	e8 3e f9 ff ff       	callq  40a240 <poll_get_fd>
    if ( fd < 0 || fd >= nfiles )
  40a902:	85 c0                	test   %eax,%eax
  40a904:	78 32                	js     40a938 <fdwatch_get_next_client_data+0x68>
  40a906:	39 05 74 75 23 00    	cmp    %eax,0x237574(%rip)        # 641e80 <nfiles>
  40a90c:	7e 2a                	jle    40a938 <fdwatch_get_next_client_data+0x68>
    return fd_data[fd];
  40a90e:	48 8b 15 ab 74 23 00 	mov    0x2374ab(%rip),%rdx        # 641dc0 <fd_data>
  40a915:	48 98                	cltq   
  40a917:	48 8d 3c c2          	lea    (%rdx,%rax,8),%rdi
  40a91b:	48 89 f8             	mov    %rdi,%rax
  40a91e:	48 c1 e8 03          	shr    $0x3,%rax
  40a922:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40a929:	75 14                	jne    40a93f <fdwatch_get_next_client_data+0x6f>
  40a92b:	48 8b 07             	mov    (%rdi),%rax
    }
  40a92e:	48 83 c4 08          	add    $0x8,%rsp
  40a932:	c3                   	retq   
  40a933:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	return (void*) 0;
  40a938:	31 c0                	xor    %eax,%eax
    }
  40a93a:	48 83 c4 08          	add    $0x8,%rsp
  40a93e:	c3                   	retq   
    return fd_data[fd];
  40a93f:	e8 0c 89 ff ff       	callq  403250 <__asan_report_load8@plt>
  40a944:	66 90                	xchg   %ax,%ax
  40a946:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a94d:	00 00 00 

000000000040a950 <fdwatch_logstats>:
    if ( secs > 0 )
  40a950:	48 85 ff             	test   %rdi,%rdi
  40a953:	7f 13                	jg     40a968 <fdwatch_logstats+0x18>
    nwatches = 0;
  40a955:	48 c7 05 e0 74 23 00 	movq   $0x0,0x2374e0(%rip)        # 641e40 <nwatches>
  40a95c:	00 00 00 00 
  40a960:	c3                   	retq   
  40a961:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    {
  40a968:	48 83 ec 08          	sub    $0x8,%rsp
	    nwatches, WHICH, (float) nwatches / secs );
  40a96c:	48 8b 15 cd 74 23 00 	mov    0x2374cd(%rip),%rdx        # 641e40 <nwatches>
  40a973:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40a977:	66 0f ef c9          	pxor   %xmm1,%xmm1
  40a97b:	f3 48 0f 2a cf       	cvtsi2ss %rdi,%xmm1
	syslog(
  40a980:	b9 e0 1f 42 00       	mov    $0x421fe0,%ecx
  40a985:	be 20 20 42 00       	mov    $0x422020,%esi
  40a98a:	bf 06 00 00 00       	mov    $0x6,%edi
	    nwatches, WHICH, (float) nwatches / secs );
  40a98f:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
	syslog(
  40a994:	b8 01 00 00 00       	mov    $0x1,%eax
	    nwatches, WHICH, (float) nwatches / secs );
  40a999:	f3 0f 5e c1          	divss  %xmm1,%xmm0
	syslog(
  40a99d:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
  40a9a1:	e8 9a 82 ff ff       	callq  402c40 <syslog@plt>
    nwatches = 0;
  40a9a6:	48 c7 05 8f 74 23 00 	movq   $0x0,0x23748f(%rip)        # 641e40 <nwatches>
  40a9ad:	00 00 00 00 
    }
  40a9b1:	48 83 c4 08          	add    $0x8,%rsp
  40a9b5:	c3                   	retq   
  40a9b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a9bd:	00 00 00 

000000000040a9c0 <hexit>:


static int
hexit( char c )
    {
    if ( c >= '0' && c <= '9' )
  40a9c0:	8d 47 d0             	lea    -0x30(%rdi),%eax
  40a9c3:	3c 09                	cmp    $0x9,%al
  40a9c5:	76 29                	jbe    40a9f0 <hexit+0x30>
	return c - '0';
    if ( c >= 'a' && c <= 'f' )
  40a9c7:	8d 47 9f             	lea    -0x61(%rdi),%eax
  40a9ca:	3c 05                	cmp    $0x5,%al
  40a9cc:	76 12                	jbe    40a9e0 <hexit+0x20>
	return c - 'a' + 10;
    if ( c >= 'A' && c <= 'F' )
  40a9ce:	8d 57 bf             	lea    -0x41(%rdi),%edx
	return c - 'A' + 10;
    return 0;           /* shouldn't happen, we're guarded by isxdigit() */
  40a9d1:	31 c0                	xor    %eax,%eax
    if ( c >= 'A' && c <= 'F' )
  40a9d3:	80 fa 05             	cmp    $0x5,%dl
  40a9d6:	76 28                	jbe    40aa00 <hexit+0x40>
    }
  40a9d8:	c3                   	retq   
  40a9d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	return c - 'a' + 10;
  40a9e0:	40 0f be ff          	movsbl %dil,%edi
  40a9e4:	8d 47 a9             	lea    -0x57(%rdi),%eax
  40a9e7:	c3                   	retq   
  40a9e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40a9ef:	00 
	return c - '0';
  40a9f0:	40 0f be ff          	movsbl %dil,%edi
  40a9f4:	8d 47 d0             	lea    -0x30(%rdi),%eax
  40a9f7:	c3                   	retq   
  40a9f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40a9ff:	00 
	return c - 'A' + 10;
  40aa00:	40 0f be ff          	movsbl %dil,%edi
  40aa04:	8d 47 c9             	lea    -0x37(%rdi),%eax
    }
  40aa07:	c3                   	retq   
  40aa08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40aa0f:	00 

000000000040aa10 <bufgets>:
bufgets( httpd_conn* hc )
    {
    int i;
    char c;

    for ( i = hc->checked_idx; hc->checked_idx < hc->read_idx; ++hc->checked_idx )
  40aa10:	48 8d 87 a8 00 00 00 	lea    0xa8(%rdi),%rax
    {
  40aa17:	48 83 ec 08          	sub    $0x8,%rsp
    for ( i = hc->checked_idx; hc->checked_idx < hc->read_idx; ++hc->checked_idx )
  40aa1b:	48 89 c2             	mov    %rax,%rdx
  40aa1e:	48 c1 ea 03          	shr    $0x3,%rdx
  40aa22:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40aa29:	0f 85 9a 01 00 00    	jne    40abc9 <bufgets+0x1b9>
  40aa2f:	48 8d 87 a0 00 00 00 	lea    0xa0(%rdi),%rax
  40aa36:	4c 8b 97 a8 00 00 00 	mov    0xa8(%rdi),%r10
  40aa3d:	48 89 c2             	mov    %rax,%rdx
  40aa40:	48 c1 ea 03          	shr    $0x3,%rdx
  40aa44:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40aa4b:	0f 85 70 01 00 00    	jne    40abc1 <bufgets+0x1b1>
  40aa51:	4c 8b 8f a0 00 00 00 	mov    0xa0(%rdi),%r9
  40aa58:	4d 39 ca             	cmp    %r9,%r10
  40aa5b:	0f 83 a3 00 00 00    	jae    40ab04 <bufgets+0xf4>
	{
	c = hc->read_buf[hc->checked_idx];
  40aa61:	48 8d 87 90 00 00 00 	lea    0x90(%rdi),%rax
  40aa68:	48 89 c2             	mov    %rax,%rdx
  40aa6b:	48 c1 ea 03          	shr    $0x3,%rdx
  40aa6f:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40aa76:	0f 85 55 01 00 00    	jne    40abd1 <bufgets+0x1c1>
  40aa7c:	48 8b b7 90 00 00 00 	mov    0x90(%rdi),%rsi
  40aa83:	4a 8d 14 16          	lea    (%rsi,%r10,1),%rdx
  40aa87:	48 89 d0             	mov    %rdx,%rax
  40aa8a:	48 89 d1             	mov    %rdx,%rcx
  40aa8d:	48 c1 e8 03          	shr    $0x3,%rax
  40aa91:	83 e1 07             	and    $0x7,%ecx
  40aa94:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40aa9b:	38 c8                	cmp    %cl,%al
  40aa9d:	7f 08                	jg     40aaa7 <bufgets+0x97>
  40aa9f:	84 c0                	test   %al,%al
  40aaa1:	0f 85 0a 01 00 00    	jne    40abb1 <bufgets+0x1a1>
  40aaa7:	0f b6 0a             	movzbl (%rdx),%ecx
	if ( c == '\012' || c == '\015' )
  40aaaa:	80 f9 0a             	cmp    $0xa,%cl
  40aaad:	74 61                	je     40ab10 <bufgets+0x100>
  40aaaf:	49 8d 42 01          	lea    0x1(%r10),%rax
  40aab3:	80 f9 0d             	cmp    $0xd,%cl
  40aab6:	75 40                	jne    40aaf8 <bufgets+0xe8>
  40aab8:	eb 56                	jmp    40ab10 <bufgets+0x100>
  40aaba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	c = hc->read_buf[hc->checked_idx];
  40aac0:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
  40aac4:	48 89 d1             	mov    %rdx,%rcx
  40aac7:	49 89 d0             	mov    %rdx,%r8
  40aaca:	48 c1 e9 03          	shr    $0x3,%rcx
  40aace:	41 83 e0 07          	and    $0x7,%r8d
  40aad2:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40aad9:	44 38 c1             	cmp    %r8b,%cl
  40aadc:	7f 08                	jg     40aae6 <bufgets+0xd6>
  40aade:	84 c9                	test   %cl,%cl
  40aae0:	0f 85 d3 00 00 00    	jne    40abb9 <bufgets+0x1a9>
  40aae6:	0f b6 0c 06          	movzbl (%rsi,%rax,1),%ecx
	if ( c == '\012' || c == '\015' )
  40aaea:	48 83 c0 01          	add    $0x1,%rax
  40aaee:	80 f9 0a             	cmp    $0xa,%cl
  40aaf1:	74 1d                	je     40ab10 <bufgets+0x100>
  40aaf3:	80 f9 0d             	cmp    $0xd,%cl
  40aaf6:	74 18                	je     40ab10 <bufgets+0x100>
    for ( i = hc->checked_idx; hc->checked_idx < hc->read_idx; ++hc->checked_idx )
  40aaf8:	48 89 87 a8 00 00 00 	mov    %rax,0xa8(%rdi)
  40aaff:	49 39 c1             	cmp    %rax,%r9
  40ab02:	75 bc                	jne    40aac0 <bufgets+0xb0>
		++hc->checked_idx;
		}
	    return &(hc->read_buf[i]);
	    }
	}
    return (char*) 0;
  40ab04:	31 c0                	xor    %eax,%eax
    }
  40ab06:	48 83 c4 08          	add    $0x8,%rsp
  40ab0a:	c3                   	retq   
  40ab0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	    hc->read_buf[hc->checked_idx] = '\0';
  40ab10:	48 89 d0             	mov    %rdx,%rax
  40ab13:	48 89 d6             	mov    %rdx,%rsi
  40ab16:	48 c1 e8 03          	shr    $0x3,%rax
  40ab1a:	83 e6 07             	and    $0x7,%esi
  40ab1d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40ab24:	40 38 f0             	cmp    %sil,%al
  40ab27:	7f 08                	jg     40ab31 <bufgets+0x121>
  40ab29:	84 c0                	test   %al,%al
  40ab2b:	0f 85 a8 00 00 00    	jne    40abd9 <bufgets+0x1c9>
  40ab31:	c6 02 00             	movb   $0x0,(%rdx)
	    ++hc->checked_idx;
  40ab34:	48 8b 87 a8 00 00 00 	mov    0xa8(%rdi),%rax
  40ab3b:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40ab3f:	48 8b 87 90 00 00 00 	mov    0x90(%rdi),%rax
  40ab46:	48 89 97 a8 00 00 00 	mov    %rdx,0xa8(%rdi)
	    if ( c == '\015' && hc->checked_idx < hc->read_idx &&
  40ab4d:	80 f9 0d             	cmp    $0xd,%cl
  40ab50:	74 0e                	je     40ab60 <bufgets+0x150>
	    return &(hc->read_buf[i]);
  40ab52:	4d 63 d2             	movslq %r10d,%r10
    }
  40ab55:	48 83 c4 08          	add    $0x8,%rsp
	    return &(hc->read_buf[i]);
  40ab59:	4c 01 d0             	add    %r10,%rax
    }
  40ab5c:	c3                   	retq   
  40ab5d:	0f 1f 00             	nopl   (%rax)
	    if ( c == '\015' && hc->checked_idx < hc->read_idx &&
  40ab60:	48 3b 97 a0 00 00 00 	cmp    0xa0(%rdi),%rdx
  40ab67:	73 e9                	jae    40ab52 <bufgets+0x142>
		 hc->read_buf[hc->checked_idx] == '\012' )
  40ab69:	48 01 c2             	add    %rax,%rdx
  40ab6c:	48 89 d1             	mov    %rdx,%rcx
  40ab6f:	48 89 d6             	mov    %rdx,%rsi
  40ab72:	48 c1 e9 03          	shr    $0x3,%rcx
  40ab76:	83 e6 07             	and    $0x7,%esi
  40ab79:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40ab80:	40 38 f1             	cmp    %sil,%cl
  40ab83:	7f 13                	jg     40ab98 <bufgets+0x188>
  40ab85:	84 c9                	test   %cl,%cl
  40ab87:	74 0f                	je     40ab98 <bufgets+0x188>
  40ab89:	48 89 d7             	mov    %rdx,%rdi
  40ab8c:	e8 7f 85 ff ff       	callq  403110 <__asan_report_load1@plt>
  40ab91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    if ( c == '\015' && hc->checked_idx < hc->read_idx &&
  40ab98:	80 3a 0a             	cmpb   $0xa,(%rdx)
  40ab9b:	75 b5                	jne    40ab52 <bufgets+0x142>
		hc->read_buf[hc->checked_idx] = '\0';
  40ab9d:	c6 02 00             	movb   $0x0,(%rdx)
		++hc->checked_idx;
  40aba0:	48 8b 87 90 00 00 00 	mov    0x90(%rdi),%rax
  40aba7:	48 83 87 a8 00 00 00 	addq   $0x1,0xa8(%rdi)
  40abae:	01 
  40abaf:	eb a1                	jmp    40ab52 <bufgets+0x142>
	c = hc->read_buf[hc->checked_idx];
  40abb1:	48 89 d7             	mov    %rdx,%rdi
  40abb4:	e8 57 85 ff ff       	callq  403110 <__asan_report_load1@plt>
  40abb9:	48 89 d7             	mov    %rdx,%rdi
  40abbc:	e8 4f 85 ff ff       	callq  403110 <__asan_report_load1@plt>
    for ( i = hc->checked_idx; hc->checked_idx < hc->read_idx; ++hc->checked_idx )
  40abc1:	48 89 c7             	mov    %rax,%rdi
  40abc4:	e8 87 86 ff ff       	callq  403250 <__asan_report_load8@plt>
  40abc9:	48 89 c7             	mov    %rax,%rdi
  40abcc:	e8 7f 86 ff ff       	callq  403250 <__asan_report_load8@plt>
	c = hc->read_buf[hc->checked_idx];
  40abd1:	48 89 c7             	mov    %rax,%rdi
  40abd4:	e8 77 86 ff ff       	callq  403250 <__asan_report_load8@plt>
	    hc->read_buf[hc->checked_idx] = '\0';
  40abd9:	48 89 d7             	mov    %rdx,%rdi
  40abdc:	e8 4f 85 ff ff       	callq  403130 <__asan_report_store1@plt>
  40abe1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40abe6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40abed:	00 00 00 

000000000040abf0 <free_httpd_server>:
    if ( hs->binding_hostname != (char*) 0 )
  40abf0:	48 89 f8             	mov    %rdi,%rax
    {
  40abf3:	53                   	push   %rbx
  40abf4:	48 89 fb             	mov    %rdi,%rbx
    if ( hs->binding_hostname != (char*) 0 )
  40abf7:	48 c1 e8 03          	shr    $0x3,%rax
  40abfb:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40ac02:	0f 85 ee 00 00 00    	jne    40acf6 <free_httpd_server+0x106>
  40ac08:	48 8b 3f             	mov    (%rdi),%rdi
  40ac0b:	48 85 ff             	test   %rdi,%rdi
  40ac0e:	74 05                	je     40ac15 <free_httpd_server+0x25>
	free( (void*) hs->binding_hostname );
  40ac10:	e8 bb 80 ff ff       	callq  402cd0 <free@plt>
    if ( hs->cwd != (char*) 0 )
  40ac15:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
  40ac19:	48 89 f8             	mov    %rdi,%rax
  40ac1c:	48 c1 e8 03          	shr    $0x3,%rax
  40ac20:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40ac27:	0f 85 e7 00 00 00    	jne    40ad14 <free_httpd_server+0x124>
  40ac2d:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
  40ac31:	48 85 ff             	test   %rdi,%rdi
  40ac34:	74 05                	je     40ac3b <free_httpd_server+0x4b>
	free( (void*) hs->cwd );
  40ac36:	e8 95 80 ff ff       	callq  402cd0 <free@plt>
    if ( hs->cgi_pattern != (char*) 0 )
  40ac3b:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
  40ac3f:	48 89 f8             	mov    %rdi,%rax
  40ac42:	48 c1 e8 03          	shr    $0x3,%rax
  40ac46:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40ac4d:	0f 85 bc 00 00 00    	jne    40ad0f <free_httpd_server+0x11f>
  40ac53:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
  40ac57:	48 85 ff             	test   %rdi,%rdi
  40ac5a:	74 05                	je     40ac61 <free_httpd_server+0x71>
	free( (void*) hs->cgi_pattern );
  40ac5c:	e8 6f 80 ff ff       	callq  402cd0 <free@plt>
    if ( hs->charset != (char*) 0 )
  40ac61:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
  40ac65:	48 89 f8             	mov    %rdi,%rax
  40ac68:	48 c1 e8 03          	shr    $0x3,%rax
  40ac6c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40ac73:	0f 85 91 00 00 00    	jne    40ad0a <free_httpd_server+0x11a>
  40ac79:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
  40ac7d:	48 85 ff             	test   %rdi,%rdi
  40ac80:	74 05                	je     40ac87 <free_httpd_server+0x97>
	free( (void*) hs->charset );
  40ac82:	e8 49 80 ff ff       	callq  402cd0 <free@plt>
    if ( hs->p3p != (char*) 0 )
  40ac87:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
  40ac8b:	48 89 f8             	mov    %rdi,%rax
  40ac8e:	48 c1 e8 03          	shr    $0x3,%rax
  40ac92:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40ac99:	75 6a                	jne    40ad05 <free_httpd_server+0x115>
  40ac9b:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
  40ac9f:	48 85 ff             	test   %rdi,%rdi
  40aca2:	74 05                	je     40aca9 <free_httpd_server+0xb9>
	free( (void*) hs->p3p );
  40aca4:	e8 27 80 ff ff       	callq  402cd0 <free@plt>
    if ( hs->url_pattern != (char*) 0 )
  40aca9:	48 8d 7b 70          	lea    0x70(%rbx),%rdi
  40acad:	48 89 f8             	mov    %rdi,%rax
  40acb0:	48 c1 e8 03          	shr    $0x3,%rax
  40acb4:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40acbb:	75 43                	jne    40ad00 <free_httpd_server+0x110>
  40acbd:	48 8b 7b 70          	mov    0x70(%rbx),%rdi
  40acc1:	48 85 ff             	test   %rdi,%rdi
  40acc4:	74 05                	je     40accb <free_httpd_server+0xdb>
	free( (void*) hs->url_pattern );
  40acc6:	e8 05 80 ff ff       	callq  402cd0 <free@plt>
    if ( hs->local_pattern != (char*) 0 )
  40accb:	48 8d 7b 78          	lea    0x78(%rbx),%rdi
  40accf:	48 89 f8             	mov    %rdi,%rax
  40acd2:	48 c1 e8 03          	shr    $0x3,%rax
  40acd6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40acdd:	75 1c                	jne    40acfb <free_httpd_server+0x10b>
  40acdf:	48 8b 7b 78          	mov    0x78(%rbx),%rdi
  40ace3:	48 85 ff             	test   %rdi,%rdi
  40ace6:	74 05                	je     40aced <free_httpd_server+0xfd>
	free( (void*) hs->local_pattern );
  40ace8:	e8 e3 7f ff ff       	callq  402cd0 <free@plt>
    free( (void*) hs );
  40aced:	48 89 df             	mov    %rbx,%rdi
    }
  40acf0:	5b                   	pop    %rbx
    free( (void*) hs );
  40acf1:	e9 da 7f ff ff       	jmpq   402cd0 <free@plt>
    if ( hs->binding_hostname != (char*) 0 )
  40acf6:	e8 55 85 ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( hs->local_pattern != (char*) 0 )
  40acfb:	e8 50 85 ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( hs->url_pattern != (char*) 0 )
  40ad00:	e8 4b 85 ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( hs->p3p != (char*) 0 )
  40ad05:	e8 46 85 ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( hs->charset != (char*) 0 )
  40ad0a:	e8 41 85 ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( hs->cgi_pattern != (char*) 0 )
  40ad0f:	e8 3c 85 ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( hs->cwd != (char*) 0 )
  40ad14:	e8 37 85 ff ff       	callq  403250 <__asan_report_load8@plt>
  40ad19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040ad20 <init_mime>:
    }


static void
init_mime( void )
    {
  40ad20:	53                   	push   %rbx
    int i;

    /* Sort the tables so we can do binary search. */
    qsort( enc_tab, n_enc_tab, sizeof(*enc_tab), ext_compare );
  40ad21:	b9 90 ae 40 00       	mov    $0x40ae90,%ecx
  40ad26:	ba 20 00 00 00       	mov    $0x20,%edx
  40ad2b:	be 04 00 00 00       	mov    $0x4,%esi
  40ad30:	bf c0 5e 63 00       	mov    $0x635ec0,%edi
  40ad35:	bb c0 5e 63 00       	mov    $0x635ec0,%ebx
  40ad3a:	e8 71 87 ff ff       	callq  4034b0 <qsort@plt>
    qsort( typ_tab, n_typ_tab, sizeof(*typ_tab), ext_compare );
  40ad3f:	b9 90 ae 40 00       	mov    $0x40ae90,%ecx
  40ad44:	ba 20 00 00 00       	mov    $0x20,%edx
  40ad49:	be be 00 00 00       	mov    $0xbe,%esi
  40ad4e:	bf e0 46 63 00       	mov    $0x6346e0,%edi
  40ad53:	e8 58 87 ff ff       	callq  4034b0 <qsort@plt>

    /* Fill in the lengths. */
    for ( i = 0; i < n_enc_tab; ++i )
	{
	enc_tab[i].ext_len = strlen( enc_tab[i].ext );
  40ad58:	48 89 d8             	mov    %rbx,%rax
  40ad5b:	48 c1 e8 03          	shr    $0x3,%rax
  40ad5f:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40ad66:	0f 85 07 01 00 00    	jne    40ae73 <init_mime+0x153>
  40ad6c:	48 8b 3b             	mov    (%rbx),%rdi
  40ad6f:	e8 0c 7f ff ff       	callq  402c80 <strlen@plt>
  40ad74:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  40ad78:	48 89 fa             	mov    %rdi,%rdx
  40ad7b:	48 c1 ea 03          	shr    $0x3,%rdx
  40ad7f:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40ad86:	0f 85 ef 00 00 00    	jne    40ae7b <init_mime+0x15b>
	enc_tab[i].val_len = strlen( enc_tab[i].val );
  40ad8c:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
	enc_tab[i].ext_len = strlen( enc_tab[i].ext );
  40ad90:	48 89 43 08          	mov    %rax,0x8(%rbx)
	enc_tab[i].val_len = strlen( enc_tab[i].val );
  40ad94:	48 89 f8             	mov    %rdi,%rax
  40ad97:	48 c1 e8 03          	shr    $0x3,%rax
  40ad9b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40ada2:	0f 85 d8 00 00 00    	jne    40ae80 <init_mime+0x160>
  40ada8:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
  40adac:	e8 cf 7e ff ff       	callq  402c80 <strlen@plt>
  40adb1:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
  40adb5:	48 89 fa             	mov    %rdi,%rdx
  40adb8:	48 c1 ea 03          	shr    $0x3,%rdx
  40adbc:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40adc3:	0f 85 bc 00 00 00    	jne    40ae85 <init_mime+0x165>
  40adc9:	48 89 43 18          	mov    %rax,0x18(%rbx)
  40adcd:	48 83 c3 20          	add    $0x20,%rbx
    for ( i = 0; i < n_enc_tab; ++i )
  40add1:	48 81 fb 40 5f 63 00 	cmp    $0x635f40,%rbx
  40add8:	0f 85 7a ff ff ff    	jne    40ad58 <init_mime+0x38>
  40adde:	bb e0 46 63 00       	mov    $0x6346e0,%ebx
  40ade3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	}
    for ( i = 0; i < n_typ_tab; ++i )
	{
	typ_tab[i].ext_len = strlen( typ_tab[i].ext );
  40ade8:	48 89 d8             	mov    %rbx,%rax
  40adeb:	48 c1 e8 03          	shr    $0x3,%rax
  40adef:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40adf6:	75 64                	jne    40ae5c <init_mime+0x13c>
  40adf8:	48 8b 3b             	mov    (%rbx),%rdi
  40adfb:	e8 80 7e ff ff       	callq  402c80 <strlen@plt>
  40ae00:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  40ae04:	48 89 fa             	mov    %rdi,%rdx
  40ae07:	48 c1 ea 03          	shr    $0x3,%rdx
  40ae0b:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40ae12:	75 5a                	jne    40ae6e <init_mime+0x14e>
	typ_tab[i].val_len = strlen( typ_tab[i].val );
  40ae14:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
	typ_tab[i].ext_len = strlen( typ_tab[i].ext );
  40ae18:	48 89 43 08          	mov    %rax,0x8(%rbx)
	typ_tab[i].val_len = strlen( typ_tab[i].val );
  40ae1c:	48 89 f8             	mov    %rdi,%rax
  40ae1f:	48 c1 e8 03          	shr    $0x3,%rax
  40ae23:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40ae2a:	75 3d                	jne    40ae69 <init_mime+0x149>
  40ae2c:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
  40ae30:	e8 4b 7e ff ff       	callq  402c80 <strlen@plt>
  40ae35:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
  40ae39:	48 89 fa             	mov    %rdi,%rdx
  40ae3c:	48 c1 ea 03          	shr    $0x3,%rdx
  40ae40:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40ae47:	75 1b                	jne    40ae64 <init_mime+0x144>
  40ae49:	48 89 43 18          	mov    %rax,0x18(%rbx)
  40ae4d:	48 83 c3 20          	add    $0x20,%rbx
    for ( i = 0; i < n_typ_tab; ++i )
  40ae51:	48 81 fb a0 5e 63 00 	cmp    $0x635ea0,%rbx
  40ae58:	75 8e                	jne    40ade8 <init_mime+0xc8>
	}

    }
  40ae5a:	5b                   	pop    %rbx
  40ae5b:	c3                   	retq   
	typ_tab[i].ext_len = strlen( typ_tab[i].ext );
  40ae5c:	48 89 df             	mov    %rbx,%rdi
  40ae5f:	e8 ec 83 ff ff       	callq  403250 <__asan_report_load8@plt>
	typ_tab[i].val_len = strlen( typ_tab[i].val );
  40ae64:	e8 37 81 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  40ae69:	e8 e2 83 ff ff       	callq  403250 <__asan_report_load8@plt>
	typ_tab[i].ext_len = strlen( typ_tab[i].ext );
  40ae6e:	e8 2d 81 ff ff       	callq  402fa0 <__asan_report_store8@plt>
	enc_tab[i].ext_len = strlen( enc_tab[i].ext );
  40ae73:	48 89 df             	mov    %rbx,%rdi
  40ae76:	e8 d5 83 ff ff       	callq  403250 <__asan_report_load8@plt>
  40ae7b:	e8 20 81 ff ff       	callq  402fa0 <__asan_report_store8@plt>
	enc_tab[i].val_len = strlen( enc_tab[i].val );
  40ae80:	e8 cb 83 ff ff       	callq  403250 <__asan_report_load8@plt>
  40ae85:	e8 16 81 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  40ae8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040ae90 <ext_compare>:
    return strcmp( a->ext, b->ext );
  40ae90:	48 89 f0             	mov    %rsi,%rax
    {
  40ae93:	48 83 ec 08          	sub    $0x8,%rsp
    return strcmp( a->ext, b->ext );
  40ae97:	48 c1 e8 03          	shr    $0x3,%rax
  40ae9b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40aea2:	75 1f                	jne    40aec3 <ext_compare+0x33>
  40aea4:	48 89 f8             	mov    %rdi,%rax
  40aea7:	48 8b 36             	mov    (%rsi),%rsi
  40aeaa:	48 c1 e8 03          	shr    $0x3,%rax
  40aeae:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40aeb5:	75 14                	jne    40aecb <ext_compare+0x3b>
  40aeb7:	48 8b 3f             	mov    (%rdi),%rdi
    }
  40aeba:	48 83 c4 08          	add    $0x8,%rsp
    return strcmp( a->ext, b->ext );
  40aebe:	e9 7d 7f ff ff       	jmpq   402e40 <strcmp@plt>
  40aec3:	48 89 f7             	mov    %rsi,%rdi
  40aec6:	e8 85 83 ff ff       	callq  403250 <__asan_report_load8@plt>
  40aecb:	e8 80 83 ff ff       	callq  403250 <__asan_report_load8@plt>

000000000040aed0 <name_compare>:
static int
name_compare( a, b )
    char** a;
    char** b;
    {
    return strcmp( *a, *b );
  40aed0:	48 89 f0             	mov    %rsi,%rax
    {
  40aed3:	48 83 ec 08          	sub    $0x8,%rsp
    return strcmp( *a, *b );
  40aed7:	48 c1 e8 03          	shr    $0x3,%rax
  40aedb:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40aee2:	75 1f                	jne    40af03 <name_compare+0x33>
  40aee4:	48 89 f8             	mov    %rdi,%rax
  40aee7:	48 8b 36             	mov    (%rsi),%rsi
  40aeea:	48 c1 e8 03          	shr    $0x3,%rax
  40aeee:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40aef5:	75 14                	jne    40af0b <name_compare+0x3b>
  40aef7:	48 8b 3f             	mov    (%rdi),%rdi
    }
  40aefa:	48 83 c4 08          	add    $0x8,%rsp
    return strcmp( *a, *b );
  40aefe:	e9 3d 7f ff ff       	jmpq   402e40 <strcmp@plt>
  40af03:	48 89 f7             	mov    %rsi,%rdi
  40af06:	e8 45 83 ff ff       	callq  403250 <__asan_report_load8@plt>
  40af0b:	e8 40 83 ff ff       	callq  403250 <__asan_report_load8@plt>

000000000040af10 <my_snprintf>:
** vsnprintf(), it is probably vulnerable to buffer overruns.
** Upgrade!
*/
static int
my_snprintf( char* str, size_t size, const char* format, ... )
    {
  40af10:	41 55                	push   %r13
  40af12:	49 89 fd             	mov    %rdi,%r13
  40af15:	41 54                	push   %r12
  40af17:	55                   	push   %rbp
  40af18:	53                   	push   %rbx
  40af19:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
  40af20:	48 89 8c 24 88 00 00 	mov    %rcx,0x88(%rsp)
  40af27:	00 
  40af28:	4c 89 84 24 90 00 00 	mov    %r8,0x90(%rsp)
  40af2f:	00 
  40af30:	4c 89 8c 24 98 00 00 	mov    %r9,0x98(%rsp)
  40af37:	00 
  40af38:	84 c0                	test   %al,%al
  40af3a:	74 40                	je     40af7c <my_snprintf+0x6c>
  40af3c:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
  40af43:	00 
  40af44:	0f 29 8c 24 b0 00 00 	movaps %xmm1,0xb0(%rsp)
  40af4b:	00 
  40af4c:	0f 29 94 24 c0 00 00 	movaps %xmm2,0xc0(%rsp)
  40af53:	00 
  40af54:	0f 29 9c 24 d0 00 00 	movaps %xmm3,0xd0(%rsp)
  40af5b:	00 
  40af5c:	0f 29 a4 24 e0 00 00 	movaps %xmm4,0xe0(%rsp)
  40af63:	00 
  40af64:	0f 29 ac 24 f0 00 00 	movaps %xmm5,0xf0(%rsp)
  40af6b:	00 
  40af6c:	0f 29 b4 24 00 01 00 	movaps %xmm6,0x100(%rsp)
  40af73:	00 
  40af74:	0f 29 bc 24 10 01 00 	movaps %xmm7,0x110(%rsp)
  40af7b:	00 
  40af7c:	8b 05 7e 63 23 00    	mov    0x23637e(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  40af82:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
  40af87:	49 89 dc             	mov    %rbx,%r12
  40af8a:	85 c0                	test   %eax,%eax
  40af8c:	0f 85 93 00 00 00    	jne    40b025 <my_snprintf+0x115>
  40af92:	48 89 dd             	mov    %rbx,%rbp
    va_list ap;
    int r;

    va_start( ap, format );
  40af95:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  40af9c:	00 
  40af9d:	48 8d 4c 24 70       	lea    0x70(%rsp),%rcx
    {
  40afa2:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
  40afa9:	48 c1 ed 03          	shr    $0x3,%rbp
  40afad:	48 c7 43 08 df 20 42 	movq   $0x4220df,0x8(%rbx)
  40afb4:	00 
  40afb5:	48 c7 43 10 10 af 40 	movq   $0x40af10,0x10(%rbx)
  40afbc:	00 
  40afbd:	c7 85 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbp)
  40afc4:	f1 f1 f1 
  40afc7:	c7 85 04 80 ff 7f 00 	movl   $0xf2000000,0x7fff8004(%rbp)
  40afce:	00 00 f2 
  40afd1:	c7 85 08 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8008(%rbp)
  40afd8:	f3 f3 f3 
    va_start( ap, format );
  40afdb:	48 89 7b 28          	mov    %rdi,0x28(%rbx)
#ifdef HAVE_VSNPRINTF
    r = vsnprintf( str, size, format, ap );
  40afdf:	4c 89 ef             	mov    %r13,%rdi
    va_start( ap, format );
  40afe2:	48 89 4b 30          	mov    %rcx,0x30(%rbx)
    r = vsnprintf( str, size, format, ap );
  40afe6:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
    va_start( ap, format );
  40afea:	c7 43 20 18 00 00 00 	movl   $0x18,0x20(%rbx)
  40aff1:	c7 43 24 30 00 00 00 	movl   $0x30,0x24(%rbx)
    r = vsnprintf( str, size, format, ap );
  40aff8:	e8 d3 82 ff ff       	callq  4032d0 <vsnprintf@plt>
    {
  40affd:	49 39 dc             	cmp    %rbx,%r12
  40b000:	75 4b                	jne    40b04d <my_snprintf+0x13d>
  40b002:	48 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbp)
  40b009:	00 00 00 00 
  40b00d:	c7 85 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbp)
  40b014:	00 00 00 
#else /* HAVE_VSNPRINTF */
    r = vsprintf( str, format, ap );
#endif /* HAVE_VSNPRINTF */
    va_end( ap );
    return r;
    }
  40b017:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
  40b01e:	5b                   	pop    %rbx
  40b01f:	5d                   	pop    %rbp
  40b020:	41 5c                	pop    %r12
  40b022:	41 5d                	pop    %r13
  40b024:	c3                   	retq   
    {
  40b025:	bf 60 00 00 00       	mov    $0x60,%edi
  40b02a:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  40b02f:	48 89 34 24          	mov    %rsi,(%rsp)
  40b033:	e8 78 7d ff ff       	callq  402db0 <__asan_stack_malloc_1@plt>
  40b038:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  40b03d:	48 8b 34 24          	mov    (%rsp),%rsi
  40b041:	48 85 c0             	test   %rax,%rax
  40b044:	48 0f 45 d8          	cmovne %rax,%rbx
  40b048:	e9 45 ff ff ff       	jmpq   40af92 <my_snprintf+0x82>
  40b04d:	48 bf f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rdi
  40b054:	f5 f5 f5 
  40b057:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  40b05e:	48 89 bd 00 80 ff 7f 	mov    %rdi,0x7fff8000(%rbp)
  40b065:	c7 85 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rbp)
  40b06c:	f5 f5 f5 
  40b06f:	eb a6                	jmp    40b017 <my_snprintf+0x107>
  40b071:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40b076:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b07d:	00 00 00 

000000000040b080 <strdecode>:
    for ( ; *from != '\0'; ++to, ++from )
  40b080:	48 89 f0             	mov    %rsi,%rax
    {
  40b083:	41 54                	push   %r12
    for ( ; *from != '\0'; ++to, ++from )
  40b085:	48 89 f2             	mov    %rsi,%rdx
    {
  40b088:	49 89 f4             	mov    %rsi,%r12
    for ( ; *from != '\0'; ++to, ++from )
  40b08b:	48 c1 e8 03          	shr    $0x3,%rax
    {
  40b08f:	55                   	push   %rbp
    for ( ; *from != '\0'; ++to, ++from )
  40b090:	83 e2 07             	and    $0x7,%edx
    {
  40b093:	53                   	push   %rbx
    for ( ; *from != '\0'; ++to, ++from )
  40b094:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
    {
  40b09b:	48 89 fb             	mov    %rdi,%rbx
    for ( ; *from != '\0'; ++to, ++from )
  40b09e:	38 d0                	cmp    %dl,%al
  40b0a0:	7f 08                	jg     40b0aa <strdecode+0x2a>
  40b0a2:	84 c0                	test   %al,%al
  40b0a4:	0f 85 aa 01 00 00    	jne    40b254 <strdecode+0x1d4>
  40b0aa:	41 0f b6 2c 24       	movzbl (%r12),%ebp
  40b0af:	40 84 ed             	test   %bpl,%bpl
  40b0b2:	75 6a                	jne    40b11e <strdecode+0x9e>
  40b0b4:	e9 6f 01 00 00       	jmpq   40b228 <strdecode+0x1a8>
  40b0b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    *to = hexit( from[1] ) * 16 + hexit( from[2] );
  40b0c0:	48 89 d8             	mov    %rbx,%rax
  40b0c3:	48 89 da             	mov    %rbx,%rdx
  40b0c6:	48 c1 e8 03          	shr    $0x3,%rax
  40b0ca:	83 e2 07             	and    $0x7,%edx
  40b0cd:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40b0d4:	38 d0                	cmp    %dl,%al
  40b0d6:	7f 08                	jg     40b0e0 <strdecode+0x60>
  40b0d8:	84 c0                	test   %al,%al
  40b0da:	0f 85 7c 01 00 00    	jne    40b25c <strdecode+0x1dc>
    for ( ; *from != '\0'; ++to, ++from )
  40b0e0:	49 8d 7c 24 01       	lea    0x1(%r12),%rdi
  40b0e5:	40 88 2b             	mov    %bpl,(%rbx)
  40b0e8:	48 83 c3 01          	add    $0x1,%rbx
  40b0ec:	48 89 f8             	mov    %rdi,%rax
  40b0ef:	48 89 fa             	mov    %rdi,%rdx
  40b0f2:	48 c1 e8 03          	shr    $0x3,%rax
  40b0f6:	83 e2 07             	and    $0x7,%edx
  40b0f9:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40b100:	38 d0                	cmp    %dl,%al
  40b102:	7f 08                	jg     40b10c <strdecode+0x8c>
  40b104:	84 c0                	test   %al,%al
  40b106:	0f 85 58 01 00 00    	jne    40b264 <strdecode+0x1e4>
  40b10c:	41 0f b6 6c 24 01    	movzbl 0x1(%r12),%ebp
  40b112:	40 84 ed             	test   %bpl,%bpl
  40b115:	0f 84 0d 01 00 00    	je     40b228 <strdecode+0x1a8>
  40b11b:	49 89 fc             	mov    %rdi,%r12
	if ( from[0] == '%' && isxdigit( from[1] ) && isxdigit( from[2] ) )
  40b11e:	40 80 fd 25          	cmp    $0x25,%bpl
  40b122:	75 9c                	jne    40b0c0 <strdecode+0x40>
  40b124:	e8 d7 7e ff ff       	callq  403000 <__ctype_b_loc@plt>
  40b129:	48 89 c2             	mov    %rax,%rdx
  40b12c:	48 c1 ea 03          	shr    $0x3,%rdx
  40b130:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40b137:	0f 85 2c 01 00 00    	jne    40b269 <strdecode+0x1e9>
  40b13d:	49 8d 7c 24 01       	lea    0x1(%r12),%rdi
  40b142:	48 8b 08             	mov    (%rax),%rcx
  40b145:	48 89 f8             	mov    %rdi,%rax
  40b148:	48 89 fa             	mov    %rdi,%rdx
  40b14b:	48 c1 e8 03          	shr    $0x3,%rax
  40b14f:	83 e2 07             	and    $0x7,%edx
  40b152:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40b159:	38 d0                	cmp    %dl,%al
  40b15b:	7f 08                	jg     40b165 <strdecode+0xe5>
  40b15d:	84 c0                	test   %al,%al
  40b15f:	0f 85 14 01 00 00    	jne    40b279 <strdecode+0x1f9>
  40b165:	49 0f be 44 24 01    	movsbq 0x1(%r12),%rax
  40b16b:	48 89 c7             	mov    %rax,%rdi
  40b16e:	48 8d 04 41          	lea    (%rcx,%rax,2),%rax
  40b172:	48 89 c2             	mov    %rax,%rdx
  40b175:	48 c1 ea 03          	shr    $0x3,%rdx
  40b179:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  40b180:	48 89 c2             	mov    %rax,%rdx
  40b183:	83 e2 07             	and    $0x7,%edx
  40b186:	83 c2 01             	add    $0x1,%edx
  40b189:	40 38 f2             	cmp    %sil,%dl
  40b18c:	7c 09                	jl     40b197 <strdecode+0x117>
  40b18e:	40 84 f6             	test   %sil,%sil
  40b191:	0f 85 da 00 00 00    	jne    40b271 <strdecode+0x1f1>
  40b197:	0f b7 00             	movzwl (%rax),%eax
  40b19a:	f6 c4 10             	test   $0x10,%ah
  40b19d:	0f 84 1d ff ff ff    	je     40b0c0 <strdecode+0x40>
  40b1a3:	49 8d 74 24 02       	lea    0x2(%r12),%rsi
  40b1a8:	48 89 f0             	mov    %rsi,%rax
  40b1ab:	48 89 f2             	mov    %rsi,%rdx
  40b1ae:	48 c1 e8 03          	shr    $0x3,%rax
  40b1b2:	83 e2 07             	and    $0x7,%edx
  40b1b5:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40b1bc:	38 d0                	cmp    %dl,%al
  40b1be:	7f 08                	jg     40b1c8 <strdecode+0x148>
  40b1c0:	84 c0                	test   %al,%al
  40b1c2:	0f 85 be 00 00 00    	jne    40b286 <strdecode+0x206>
  40b1c8:	49 0f be 44 24 02    	movsbq 0x2(%r12),%rax
  40b1ce:	49 89 c0             	mov    %rax,%r8
  40b1d1:	48 8d 04 41          	lea    (%rcx,%rax,2),%rax
  40b1d5:	48 89 c2             	mov    %rax,%rdx
  40b1d8:	48 c1 ea 03          	shr    $0x3,%rdx
  40b1dc:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  40b1e3:	48 89 c2             	mov    %rax,%rdx
  40b1e6:	83 e2 07             	and    $0x7,%edx
  40b1e9:	83 c2 01             	add    $0x1,%edx
  40b1ec:	38 ca                	cmp    %cl,%dl
  40b1ee:	7c 08                	jl     40b1f8 <strdecode+0x178>
  40b1f0:	84 c9                	test   %cl,%cl
  40b1f2:	0f 85 86 00 00 00    	jne    40b27e <strdecode+0x1fe>
  40b1f8:	0f b7 00             	movzwl (%rax),%eax
  40b1fb:	f6 c4 10             	test   $0x10,%ah
  40b1fe:	0f 84 bc fe ff ff    	je     40b0c0 <strdecode+0x40>
	    *to = hexit( from[1] ) * 16 + hexit( from[2] );
  40b204:	e8 b7 f7 ff ff       	callq  40a9c0 <hexit>
  40b209:	89 c5                	mov    %eax,%ebp
  40b20b:	41 0f be f8          	movsbl %r8b,%edi
  40b20f:	e8 ac f7 ff ff       	callq  40a9c0 <hexit>
  40b214:	c1 e5 04             	shl    $0x4,%ebp
  40b217:	01 c5                	add    %eax,%ebp
	    from += 2;
  40b219:	49 89 f4             	mov    %rsi,%r12
  40b21c:	e9 9f fe ff ff       	jmpq   40b0c0 <strdecode+0x40>
  40b221:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    *to = '\0';
  40b228:	48 89 d8             	mov    %rbx,%rax
  40b22b:	48 89 da             	mov    %rbx,%rdx
  40b22e:	48 c1 e8 03          	shr    $0x3,%rax
  40b232:	83 e2 07             	and    $0x7,%edx
  40b235:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40b23c:	38 d0                	cmp    %dl,%al
  40b23e:	7f 04                	jg     40b244 <strdecode+0x1c4>
  40b240:	84 c0                	test   %al,%al
  40b242:	75 08                	jne    40b24c <strdecode+0x1cc>
  40b244:	c6 03 00             	movb   $0x0,(%rbx)
    }
  40b247:	5b                   	pop    %rbx
  40b248:	5d                   	pop    %rbp
  40b249:	41 5c                	pop    %r12
  40b24b:	c3                   	retq   
    *to = '\0';
  40b24c:	48 89 df             	mov    %rbx,%rdi
  40b24f:	e8 dc 7e ff ff       	callq  403130 <__asan_report_store1@plt>
    for ( ; *from != '\0'; ++to, ++from )
  40b254:	48 89 f7             	mov    %rsi,%rdi
  40b257:	e8 b4 7e ff ff       	callq  403110 <__asan_report_load1@plt>
	    *to = hexit( from[1] ) * 16 + hexit( from[2] );
  40b25c:	48 89 df             	mov    %rbx,%rdi
  40b25f:	e8 cc 7e ff ff       	callq  403130 <__asan_report_store1@plt>
    for ( ; *from != '\0'; ++to, ++from )
  40b264:	e8 a7 7e ff ff       	callq  403110 <__asan_report_load1@plt>
	if ( from[0] == '%' && isxdigit( from[1] ) && isxdigit( from[2] ) )
  40b269:	48 89 c7             	mov    %rax,%rdi
  40b26c:	e8 df 7f ff ff       	callq  403250 <__asan_report_load8@plt>
  40b271:	48 89 c7             	mov    %rax,%rdi
  40b274:	e8 37 7d ff ff       	callq  402fb0 <__asan_report_load2@plt>
  40b279:	e8 92 7e ff ff       	callq  403110 <__asan_report_load1@plt>
  40b27e:	48 89 c7             	mov    %rax,%rdi
  40b281:	e8 2a 7d ff ff       	callq  402fb0 <__asan_report_load2@plt>
  40b286:	48 89 f7             	mov    %rsi,%rdi
  40b289:	e8 82 7e ff ff       	callq  403110 <__asan_report_load1@plt>
  40b28e:	66 90                	xchg   %ax,%ax

000000000040b290 <de_dotdot>:
    {
  40b290:	41 54                	push   %r12
  40b292:	55                   	push   %rbp
  40b293:	53                   	push   %rbx
  40b294:	48 89 fb             	mov    %rdi,%rbx
    while ( ( cp = strstr( file, "//") ) != (char*) 0 )
  40b297:	eb 10                	jmp    40b2a9 <de_dotdot+0x19>
  40b299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	(void) strcpy( cp + 1, cp2 );
  40b2a0:	48 8d 78 01          	lea    0x1(%rax),%rdi
  40b2a4:	e8 67 7c ff ff       	callq  402f10 <strcpy@plt>
    while ( ( cp = strstr( file, "//") ) != (char*) 0 )
  40b2a9:	be a0 30 42 00       	mov    $0x4230a0,%esi
  40b2ae:	48 89 df             	mov    %rbx,%rdi
  40b2b1:	e8 ca 80 ff ff       	callq  403380 <strstr@plt>
  40b2b6:	48 85 c0             	test   %rax,%rax
  40b2b9:	74 55                	je     40b310 <de_dotdot+0x80>
	for ( cp2 = cp + 2; *cp2 == '/'; ++cp2 )
  40b2bb:	48 8d 70 02          	lea    0x2(%rax),%rsi
  40b2bf:	48 89 f2             	mov    %rsi,%rdx
  40b2c2:	48 89 f1             	mov    %rsi,%rcx
  40b2c5:	48 c1 ea 03          	shr    $0x3,%rdx
  40b2c9:	83 e1 07             	and    $0x7,%ecx
  40b2cc:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40b2d3:	38 ca                	cmp    %cl,%dl
  40b2d5:	7f 08                	jg     40b2df <de_dotdot+0x4f>
  40b2d7:	84 d2                	test   %dl,%dl
  40b2d9:	0f 85 33 02 00 00    	jne    40b512 <de_dotdot+0x282>
  40b2df:	80 78 02 2f          	cmpb   $0x2f,0x2(%rax)
  40b2e3:	75 bb                	jne    40b2a0 <de_dotdot+0x10>
  40b2e5:	48 83 c6 01          	add    $0x1,%rsi
  40b2e9:	48 89 f2             	mov    %rsi,%rdx
  40b2ec:	48 89 f1             	mov    %rsi,%rcx
  40b2ef:	48 c1 ea 03          	shr    $0x3,%rdx
  40b2f3:	83 e1 07             	and    $0x7,%ecx
  40b2f6:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40b2fd:	38 ca                	cmp    %cl,%dl
  40b2ff:	7f 08                	jg     40b309 <de_dotdot+0x79>
  40b301:	84 d2                	test   %dl,%dl
  40b303:	0f 85 11 02 00 00    	jne    40b51a <de_dotdot+0x28a>
  40b309:	80 3e 2f             	cmpb   $0x2f,(%rsi)
  40b30c:	75 92                	jne    40b2a0 <de_dotdot+0x10>
  40b30e:	eb d5                	jmp    40b2e5 <de_dotdot+0x55>
	(void) strcpy( file, file + 2 );
  40b310:	48 8d 6b 02          	lea    0x2(%rbx),%rbp
  40b314:	eb 15                	jmp    40b32b <de_dotdot+0x9b>
  40b316:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b31d:	00 00 00 
  40b320:	48 89 ee             	mov    %rbp,%rsi
  40b323:	48 89 df             	mov    %rbx,%rdi
  40b326:	e8 e5 7b ff ff       	callq  402f10 <strcpy@plt>
    while ( strncmp( file, "./", 2 ) == 0 )
  40b32b:	ba 02 00 00 00       	mov    $0x2,%edx
  40b330:	be e0 30 42 00       	mov    $0x4230e0,%esi
  40b335:	48 89 df             	mov    %rbx,%rdi
  40b338:	e8 b3 80 ff ff       	callq  4033f0 <strncmp@plt>
  40b33d:	85 c0                	test   %eax,%eax
  40b33f:	74 df                	je     40b320 <de_dotdot+0x90>
  40b341:	eb 11                	jmp    40b354 <de_dotdot+0xc4>
  40b343:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	(void) strcpy( cp, cp + 2 );
  40b348:	48 8d 70 02          	lea    0x2(%rax),%rsi
  40b34c:	48 89 c7             	mov    %rax,%rdi
  40b34f:	e8 bc 7b ff ff       	callq  402f10 <strcpy@plt>
    while ( ( cp = strstr( file, "/./") ) != (char*) 0 )
  40b354:	be 20 31 42 00       	mov    $0x423120,%esi
  40b359:	48 89 df             	mov    %rbx,%rdi
  40b35c:	e8 1f 80 ff ff       	callq  403380 <strstr@plt>
  40b361:	48 85 c0             	test   %rax,%rax
  40b364:	75 e2                	jne    40b348 <de_dotdot+0xb8>
  40b366:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
  40b36a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	while ( strncmp( file, "../", 3 ) == 0 )
  40b370:	ba 03 00 00 00       	mov    $0x3,%edx
  40b375:	be 60 31 42 00       	mov    $0x423160,%esi
  40b37a:	48 89 df             	mov    %rbx,%rdi
  40b37d:	e8 6e 80 ff ff       	callq  4033f0 <strncmp@plt>
  40b382:	85 c0                	test   %eax,%eax
  40b384:	0f 84 96 00 00 00    	je     40b420 <de_dotdot+0x190>
	cp = strstr( file, "/../" );
  40b38a:	be a0 31 42 00       	mov    $0x4231a0,%esi
  40b38f:	48 89 df             	mov    %rbx,%rdi
  40b392:	e8 e9 7f ff ff       	callq  403380 <strstr@plt>
	if ( cp == (char*) 0 )
  40b397:	48 85 c0             	test   %rax,%rax
  40b39a:	0f 84 98 00 00 00    	je     40b438 <de_dotdot+0x1a8>
	for ( cp2 = cp - 1; cp2 >= file && *cp2 != '/'; --cp2 )
  40b3a0:	48 8d 78 ff          	lea    -0x1(%rax),%rdi
  40b3a4:	48 39 fb             	cmp    %rdi,%rbx
  40b3a7:	77 26                	ja     40b3cf <de_dotdot+0x13f>
  40b3a9:	48 89 fa             	mov    %rdi,%rdx
  40b3ac:	48 89 f9             	mov    %rdi,%rcx
  40b3af:	48 c1 ea 03          	shr    $0x3,%rdx
  40b3b3:	83 e1 07             	and    $0x7,%ecx
  40b3b6:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40b3bd:	38 ca                	cmp    %cl,%dl
  40b3bf:	7f 08                	jg     40b3c9 <de_dotdot+0x139>
  40b3c1:	84 d2                	test   %dl,%dl
  40b3c3:	0f 85 44 01 00 00    	jne    40b50d <de_dotdot+0x27d>
  40b3c9:	80 78 ff 2f          	cmpb   $0x2f,-0x1(%rax)
  40b3cd:	75 11                	jne    40b3e0 <de_dotdot+0x150>
  40b3cf:	48 89 c7             	mov    %rax,%rdi
	(void) strcpy( cp2 + 1, cp + 4 );
  40b3d2:	48 8d 70 04          	lea    0x4(%rax),%rsi
  40b3d6:	e8 35 7b ff ff       	callq  402f10 <strcpy@plt>
	while ( strncmp( file, "../", 3 ) == 0 )
  40b3db:	eb 93                	jmp    40b370 <de_dotdot+0xe0>
  40b3dd:	0f 1f 00             	nopl   (%rax)
	for ( cp2 = cp - 1; cp2 >= file && *cp2 != '/'; --cp2 )
  40b3e0:	48 8d 57 ff          	lea    -0x1(%rdi),%rdx
  40b3e4:	48 39 ea             	cmp    %rbp,%rdx
  40b3e7:	74 e9                	je     40b3d2 <de_dotdot+0x142>
  40b3e9:	48 89 d1             	mov    %rdx,%rcx
  40b3ec:	48 89 d6             	mov    %rdx,%rsi
  40b3ef:	48 c1 e9 03          	shr    $0x3,%rcx
  40b3f3:	83 e6 07             	and    $0x7,%esi
  40b3f6:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40b3fd:	40 38 f1             	cmp    %sil,%cl
  40b400:	7f 08                	jg     40b40a <de_dotdot+0x17a>
  40b402:	84 c9                	test   %cl,%cl
  40b404:	0f 85 fb 00 00 00    	jne    40b505 <de_dotdot+0x275>
  40b40a:	80 3a 2f             	cmpb   $0x2f,(%rdx)
  40b40d:	74 c3                	je     40b3d2 <de_dotdot+0x142>
  40b40f:	48 89 d7             	mov    %rdx,%rdi
  40b412:	48 8d 57 ff          	lea    -0x1(%rdi),%rdx
  40b416:	48 39 ea             	cmp    %rbp,%rdx
  40b419:	75 ce                	jne    40b3e9 <de_dotdot+0x159>
  40b41b:	eb b5                	jmp    40b3d2 <de_dotdot+0x142>
  40b41d:	0f 1f 00             	nopl   (%rax)
	    (void) strcpy( file, file + 3 );
  40b420:	48 8d 73 03          	lea    0x3(%rbx),%rsi
  40b424:	48 89 df             	mov    %rbx,%rdi
  40b427:	e8 e4 7a ff ff       	callq  402f10 <strcpy@plt>
  40b42c:	e9 3f ff ff ff       	jmpq   40b370 <de_dotdot+0xe0>
  40b431:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    while ( ( l = strlen( file ) ) > 3 &&
  40b438:	48 89 df             	mov    %rbx,%rdi
  40b43b:	4c 8d 63 ff          	lea    -0x1(%rbx),%r12
  40b43f:	e8 3c 78 ff ff       	callq  402c80 <strlen@plt>
  40b444:	83 f8 03             	cmp    $0x3,%eax
  40b447:	0f 8e a4 00 00 00    	jle    40b4f1 <de_dotdot+0x261>
  40b44d:	0f 1f 00             	nopl   (%rax)
	    strcmp( ( cp = file + l - 3 ), "/.." ) == 0 )
  40b450:	48 98                	cltq   
  40b452:	be e0 31 42 00       	mov    $0x4231e0,%esi
  40b457:	48 8d 6c 03 fd       	lea    -0x3(%rbx,%rax,1),%rbp
  40b45c:	48 89 ef             	mov    %rbp,%rdi
  40b45f:	e8 dc 79 ff ff       	callq  402e40 <strcmp@plt>
    while ( ( l = strlen( file ) ) > 3 &&
  40b464:	85 c0                	test   %eax,%eax
  40b466:	0f 85 85 00 00 00    	jne    40b4f1 <de_dotdot+0x261>
	for ( cp2 = cp - 1; cp2 >= file && *cp2 != '/'; --cp2 )
  40b46c:	48 8d 7d ff          	lea    -0x1(%rbp),%rdi
  40b470:	48 39 fb             	cmp    %rdi,%rbx
  40b473:	77 7c                	ja     40b4f1 <de_dotdot+0x261>
  40b475:	48 89 f8             	mov    %rdi,%rax
  40b478:	48 89 fa             	mov    %rdi,%rdx
  40b47b:	48 c1 e8 03          	shr    $0x3,%rax
  40b47f:	83 e2 07             	and    $0x7,%edx
  40b482:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40b489:	38 d0                	cmp    %dl,%al
  40b48b:	7f 04                	jg     40b491 <de_dotdot+0x201>
  40b48d:	84 c0                	test   %al,%al
  40b48f:	75 65                	jne    40b4f6 <de_dotdot+0x266>
  40b491:	80 7d ff 2f          	cmpb   $0x2f,-0x1(%rbp)
  40b495:	74 2a                	je     40b4c1 <de_dotdot+0x231>
  40b497:	48 83 ef 01          	sub    $0x1,%rdi
  40b49b:	4c 39 e7             	cmp    %r12,%rdi
  40b49e:	74 51                	je     40b4f1 <de_dotdot+0x261>
  40b4a0:	48 89 f8             	mov    %rdi,%rax
  40b4a3:	48 89 fa             	mov    %rdi,%rdx
  40b4a6:	48 c1 e8 03          	shr    $0x3,%rax
  40b4aa:	83 e2 07             	and    $0x7,%edx
  40b4ad:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40b4b4:	38 d0                	cmp    %dl,%al
  40b4b6:	7f 04                	jg     40b4bc <de_dotdot+0x22c>
  40b4b8:	84 c0                	test   %al,%al
  40b4ba:	75 44                	jne    40b500 <de_dotdot+0x270>
  40b4bc:	80 3f 2f             	cmpb   $0x2f,(%rdi)
  40b4bf:	75 d6                	jne    40b497 <de_dotdot+0x207>
	*cp2 = '\0';
  40b4c1:	48 89 f8             	mov    %rdi,%rax
  40b4c4:	48 89 fa             	mov    %rdi,%rdx
  40b4c7:	48 c1 e8 03          	shr    $0x3,%rax
  40b4cb:	83 e2 07             	and    $0x7,%edx
  40b4ce:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40b4d5:	38 d0                	cmp    %dl,%al
  40b4d7:	7f 04                	jg     40b4dd <de_dotdot+0x24d>
  40b4d9:	84 c0                	test   %al,%al
  40b4db:	75 1e                	jne    40b4fb <de_dotdot+0x26b>
  40b4dd:	c6 07 00             	movb   $0x0,(%rdi)
    while ( ( l = strlen( file ) ) > 3 &&
  40b4e0:	48 89 df             	mov    %rbx,%rdi
  40b4e3:	e8 98 77 ff ff       	callq  402c80 <strlen@plt>
  40b4e8:	83 f8 03             	cmp    $0x3,%eax
  40b4eb:	0f 8f 5f ff ff ff    	jg     40b450 <de_dotdot+0x1c0>
    }
  40b4f1:	5b                   	pop    %rbx
  40b4f2:	5d                   	pop    %rbp
  40b4f3:	41 5c                	pop    %r12
  40b4f5:	c3                   	retq   
	for ( cp2 = cp - 1; cp2 >= file && *cp2 != '/'; --cp2 )
  40b4f6:	e8 15 7c ff ff       	callq  403110 <__asan_report_load1@plt>
	*cp2 = '\0';
  40b4fb:	e8 30 7c ff ff       	callq  403130 <__asan_report_store1@plt>
	for ( cp2 = cp - 1; cp2 >= file && *cp2 != '/'; --cp2 )
  40b500:	e8 0b 7c ff ff       	callq  403110 <__asan_report_load1@plt>
	for ( cp2 = cp - 1; cp2 >= file && *cp2 != '/'; --cp2 )
  40b505:	48 89 d7             	mov    %rdx,%rdi
  40b508:	e8 03 7c ff ff       	callq  403110 <__asan_report_load1@plt>
  40b50d:	e8 fe 7b ff ff       	callq  403110 <__asan_report_load1@plt>
	for ( cp2 = cp + 2; *cp2 == '/'; ++cp2 )
  40b512:	48 89 f7             	mov    %rsi,%rdi
  40b515:	e8 f6 7b ff ff       	callq  403110 <__asan_report_load1@plt>
  40b51a:	48 89 f7             	mov    %rsi,%rdi
  40b51d:	e8 ee 7b ff ff       	callq  403110 <__asan_report_load1@plt>
  40b522:	0f 1f 40 00          	nopl   0x0(%rax)
  40b526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b52d:	00 00 00 

000000000040b530 <cgi_kill>:
    {
  40b530:	41 57                	push   %r15
  40b532:	49 89 ff             	mov    %rdi,%r15
  40b535:	41 56                	push   %r14
  40b537:	49 89 f6             	mov    %rsi,%r14
  40b53a:	41 55                	push   %r13
  40b53c:	41 54                	push   %r12
  40b53e:	55                   	push   %rbp
  40b53f:	53                   	push   %rbx
  40b540:	48 83 ec 68          	sub    $0x68,%rsp
  40b544:	8b 05 b6 5d 23 00    	mov    0x235db6(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  40b54a:	48 89 e3             	mov    %rsp,%rbx
  40b54d:	49 89 dd             	mov    %rbx,%r13
  40b550:	85 c0                	test   %eax,%eax
  40b552:	0f 85 fc 00 00 00    	jne    40b654 <cgi_kill+0x124>
    pid = (pid_t) client_data.i;
  40b558:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
    {
  40b55c:	48 89 dd             	mov    %rbx,%rbp
  40b55f:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
  40b566:	4c 8d 63 60          	lea    0x60(%rbx),%r12
    pid = (pid_t) client_data.i;
  40b56a:	48 89 f8             	mov    %rdi,%rax
    {
  40b56d:	48 c1 ed 03          	shr    $0x3,%rbp
  40b571:	48 c7 43 08 60 17 42 	movq   $0x421760,0x8(%rbx)
  40b578:	00 
    pid = (pid_t) client_data.i;
  40b579:	48 c1 e8 03          	shr    $0x3,%rax
    {
  40b57d:	48 c7 43 10 30 b5 40 	movq   $0x40b530,0x10(%rbx)
  40b584:	00 
  40b585:	c7 85 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbp)
  40b58c:	f1 f1 f1 
  40b58f:	c7 85 04 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff8004(%rbp)
  40b596:	f2 f2 f2 
  40b599:	c7 85 08 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8008(%rbp)
  40b5a0:	f3 f3 f3 
    pid = (pid_t) client_data.i;
  40b5a3:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
cgi_kill( ClientData client_data, struct timeval* nowP )
  40b5aa:	4d 89 7c 24 c0       	mov    %r15,-0x40(%r12)
    pid = (pid_t) client_data.i;
  40b5af:	84 c0                	test   %al,%al
  40b5b1:	74 08                	je     40b5bb <cgi_kill+0x8b>
  40b5b3:	3c 03                	cmp    $0x3,%al
  40b5b5:	0f 8e 94 00 00 00    	jle    40b64f <cgi_kill+0x11f>
  40b5bb:	45 8b 7c 24 c0       	mov    -0x40(%r12),%r15d
    if ( kill( pid, SIGINT ) == 0 )
  40b5c0:	be 02 00 00 00       	mov    $0x2,%esi
  40b5c5:	44 89 ff             	mov    %r15d,%edi
  40b5c8:	e8 33 7c ff ff       	callq  403200 <kill@plt>
  40b5cd:	85 c0                	test   %eax,%eax
  40b5cf:	74 2f                	je     40b600 <cgi_kill+0xd0>
    {
  40b5d1:	49 39 dd             	cmp    %rbx,%r13
  40b5d4:	0f 85 90 00 00 00    	jne    40b66a <cgi_kill+0x13a>
  40b5da:	48 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbp)
  40b5e1:	00 00 00 00 
  40b5e5:	c7 85 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbp)
  40b5ec:	00 00 00 
    }
  40b5ef:	48 83 c4 68          	add    $0x68,%rsp
  40b5f3:	5b                   	pop    %rbx
  40b5f4:	5d                   	pop    %rbp
  40b5f5:	41 5c                	pop    %r12
  40b5f7:	41 5d                	pop    %r13
  40b5f9:	41 5e                	pop    %r14
  40b5fb:	41 5f                	pop    %r15
  40b5fd:	c3                   	retq   
  40b5fe:	66 90                	xchg   %ax,%ax
	syslog( LOG_ERR, "killed CGI process %d", pid );
  40b600:	44 89 fa             	mov    %r15d,%edx
  40b603:	be 20 32 42 00       	mov    $0x423220,%esi
  40b608:	bf 03 00 00 00       	mov    $0x3,%edi
  40b60d:	e8 2e 76 ff ff       	callq  402c40 <syslog@plt>
	if ( tmr_create( nowP, cgi_kill2, client_data, 5 * 1000L, 0 ) == (Timer*) 0 )
  40b612:	49 8b 54 24 c0       	mov    -0x40(%r12),%rdx
  40b617:	45 31 c0             	xor    %r8d,%r8d
  40b61a:	4c 89 f7             	mov    %r14,%rdi
  40b61d:	b9 88 13 00 00       	mov    $0x1388,%ecx
  40b622:	be a0 b6 40 00       	mov    $0x40b6a0,%esi
  40b627:	e8 64 19 01 00       	callq  41cf90 <tmr_create>
  40b62c:	48 85 c0             	test   %rax,%rax
  40b62f:	75 a0                	jne    40b5d1 <cgi_kill+0xa1>
	    syslog( LOG_CRIT, "tmr_create(cgi_kill2) failed" );
  40b631:	bf 02 00 00 00       	mov    $0x2,%edi
  40b636:	be 60 32 42 00       	mov    $0x423260,%esi
  40b63b:	e8 00 76 ff ff       	callq  402c40 <syslog@plt>
	    exit( 1 );
  40b640:	e8 fb 79 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  40b645:	bf 01 00 00 00       	mov    $0x1,%edi
  40b64a:	e8 91 7a ff ff       	callq  4030e0 <exit@plt>
    pid = (pid_t) client_data.i;
  40b64f:	e8 7c 77 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    {
  40b654:	bf 60 00 00 00       	mov    $0x60,%edi
  40b659:	e8 52 77 ff ff       	callq  402db0 <__asan_stack_malloc_1@plt>
  40b65e:	48 85 c0             	test   %rax,%rax
  40b661:	48 0f 45 d8          	cmovne %rax,%rbx
  40b665:	e9 ee fe ff ff       	jmpq   40b558 <cgi_kill+0x28>
  40b66a:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
  40b671:	f5 f5 f5 
  40b674:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  40b67b:	48 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%rbp)
  40b682:	c7 85 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rbp)
  40b689:	f5 f5 f5 
  40b68c:	e9 5e ff ff ff       	jmpq   40b5ef <cgi_kill+0xbf>
  40b691:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40b696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b69d:	00 00 00 

000000000040b6a0 <cgi_kill2>:
    {
  40b6a0:	41 55                	push   %r13
  40b6a2:	41 54                	push   %r12
  40b6a4:	49 89 fc             	mov    %rdi,%r12
  40b6a7:	55                   	push   %rbp
  40b6a8:	53                   	push   %rbx
  40b6a9:	48 83 ec 68          	sub    $0x68,%rsp
  40b6ad:	8b 05 4d 5c 23 00    	mov    0x235c4d(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  40b6b3:	48 89 e3             	mov    %rsp,%rbx
  40b6b6:	49 89 dd             	mov    %rbx,%r13
  40b6b9:	85 c0                	test   %eax,%eax
  40b6bb:	0f 85 b8 00 00 00    	jne    40b779 <cgi_kill2+0xd9>
    pid = (pid_t) client_data.i;
  40b6c1:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
    {
  40b6c5:	48 89 dd             	mov    %rbx,%rbp
  40b6c8:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
  40b6cf:	48 8d 43 60          	lea    0x60(%rbx),%rax
    pid = (pid_t) client_data.i;
  40b6d3:	48 89 fa             	mov    %rdi,%rdx
    {
  40b6d6:	48 c1 ed 03          	shr    $0x3,%rbp
  40b6da:	48 c7 43 08 60 17 42 	movq   $0x421760,0x8(%rbx)
  40b6e1:	00 
    pid = (pid_t) client_data.i;
  40b6e2:	48 c1 ea 03          	shr    $0x3,%rdx
    {
  40b6e6:	48 c7 43 10 a0 b6 40 	movq   $0x40b6a0,0x10(%rbx)
  40b6ed:	00 
  40b6ee:	c7 85 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbp)
  40b6f5:	f1 f1 f1 
  40b6f8:	c7 85 04 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff8004(%rbp)
  40b6ff:	f2 f2 f2 
  40b702:	c7 85 08 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8008(%rbp)
  40b709:	f3 f3 f3 
    pid = (pid_t) client_data.i;
  40b70c:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
cgi_kill2( ClientData client_data, struct timeval* nowP )
  40b713:	4c 89 60 c0          	mov    %r12,-0x40(%rax)
    pid = (pid_t) client_data.i;
  40b717:	84 d2                	test   %dl,%dl
  40b719:	74 05                	je     40b720 <cgi_kill2+0x80>
  40b71b:	80 fa 03             	cmp    $0x3,%dl
  40b71e:	7e 54                	jle    40b774 <cgi_kill2+0xd4>
  40b720:	44 8b 60 c0          	mov    -0x40(%rax),%r12d
    if ( kill( pid, SIGKILL ) == 0 )
  40b724:	be 09 00 00 00       	mov    $0x9,%esi
  40b729:	44 89 e7             	mov    %r12d,%edi
  40b72c:	e8 cf 7a ff ff       	callq  403200 <kill@plt>
  40b731:	85 c0                	test   %eax,%eax
  40b733:	74 2b                	je     40b760 <cgi_kill2+0xc0>
    {
  40b735:	49 39 dd             	cmp    %rbx,%r13
  40b738:	75 55                	jne    40b78f <cgi_kill2+0xef>
  40b73a:	48 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbp)
  40b741:	00 00 00 00 
  40b745:	c7 85 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbp)
  40b74c:	00 00 00 
    }
  40b74f:	48 83 c4 68          	add    $0x68,%rsp
  40b753:	5b                   	pop    %rbx
  40b754:	5d                   	pop    %rbp
  40b755:	41 5c                	pop    %r12
  40b757:	41 5d                	pop    %r13
  40b759:	c3                   	retq   
  40b75a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	syslog( LOG_ERR, "hard-killed CGI process %d", pid );
  40b760:	44 89 e2             	mov    %r12d,%edx
  40b763:	be a0 32 42 00       	mov    $0x4232a0,%esi
  40b768:	bf 03 00 00 00       	mov    $0x3,%edi
  40b76d:	e8 ce 74 ff ff       	callq  402c40 <syslog@plt>
    }
  40b772:	eb c1                	jmp    40b735 <cgi_kill2+0x95>
    pid = (pid_t) client_data.i;
  40b774:	e8 57 76 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    {
  40b779:	bf 60 00 00 00       	mov    $0x60,%edi
  40b77e:	e8 2d 76 ff ff       	callq  402db0 <__asan_stack_malloc_1@plt>
  40b783:	48 85 c0             	test   %rax,%rax
  40b786:	48 0f 45 d8          	cmovne %rax,%rbx
  40b78a:	e9 32 ff ff ff       	jmpq   40b6c1 <cgi_kill2+0x21>
  40b78f:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
  40b796:	f5 f5 f5 
  40b799:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  40b7a0:	48 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%rbp)
  40b7a7:	c7 85 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rbp)
  40b7ae:	f5 f5 f5 
  40b7b1:	eb 9c                	jmp    40b74f <cgi_kill2+0xaf>
  40b7b3:	0f 1f 00             	nopl   (%rax)
  40b7b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b7bd:	00 00 00 

000000000040b7c0 <strencode>:
    {
  40b7c0:	41 57                	push   %r15
    for ( tolen = 0; *from != '\0' && tolen + 4 < tosize; ++from )
  40b7c2:	48 89 d0             	mov    %rdx,%rax
    {
  40b7c5:	41 56                	push   %r14
    for ( tolen = 0; *from != '\0' && tolen + 4 < tosize; ++from )
  40b7c7:	48 c1 e8 03          	shr    $0x3,%rax
    {
  40b7cb:	41 55                	push   %r13
  40b7cd:	41 54                	push   %r12
  40b7cf:	55                   	push   %rbp
  40b7d0:	48 89 fd             	mov    %rdi,%rbp
  40b7d3:	53                   	push   %rbx
  40b7d4:	48 89 d3             	mov    %rdx,%rbx
    for ( tolen = 0; *from != '\0' && tolen + 4 < tosize; ++from )
  40b7d7:	83 e2 07             	and    $0x7,%edx
    {
  40b7da:	48 83 ec 18          	sub    $0x18,%rsp
    for ( tolen = 0; *from != '\0' && tolen + 4 < tosize; ++from )
  40b7de:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
    {
  40b7e5:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    for ( tolen = 0; *from != '\0' && tolen + 4 < tosize; ++from )
  40b7e9:	38 d0                	cmp    %dl,%al
  40b7eb:	7f 08                	jg     40b7f5 <strencode+0x35>
  40b7ed:	84 c0                	test   %al,%al
  40b7ef:	0f 85 52 01 00 00    	jne    40b947 <strencode+0x187>
  40b7f5:	44 0f b6 23          	movzbl (%rbx),%r12d
  40b7f9:	45 84 e4             	test   %r12b,%r12b
  40b7fc:	0f 84 0e 01 00 00    	je     40b910 <strencode+0x150>
  40b802:	83 7c 24 0c 04       	cmpl   $0x4,0xc(%rsp)
  40b807:	0f 8e 03 01 00 00    	jle    40b910 <strencode+0x150>
	if ( isalnum(*from) || strchr( "/_.-~", *from ) != (char*) 0 )
  40b80d:	e8 ee 77 ff ff       	callq  403000 <__ctype_b_loc@plt>
    for ( tolen = 0; *from != '\0' && tolen + 4 < tosize; ++from )
  40b812:	45 31 ff             	xor    %r15d,%r15d
	if ( isalnum(*from) || strchr( "/_.-~", *from ) != (char*) 0 )
  40b815:	49 89 c6             	mov    %rax,%r14
  40b818:	49 89 c5             	mov    %rax,%r13
  40b81b:	49 c1 ee 03          	shr    $0x3,%r14
  40b81f:	eb 72                	jmp    40b893 <strencode+0xd3>
  40b821:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    *to = *from;
  40b828:	48 89 e8             	mov    %rbp,%rax
  40b82b:	48 89 ea             	mov    %rbp,%rdx
  40b82e:	48 c1 e8 03          	shr    $0x3,%rax
  40b832:	83 e2 07             	and    $0x7,%edx
  40b835:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40b83c:	38 d0                	cmp    %dl,%al
  40b83e:	7f 08                	jg     40b848 <strencode+0x88>
  40b840:	84 c0                	test   %al,%al
  40b842:	0f 85 14 01 00 00    	jne    40b95c <strencode+0x19c>
  40b848:	44 88 65 00          	mov    %r12b,0x0(%rbp)
	    ++tolen;
  40b84c:	41 83 c7 01          	add    $0x1,%r15d
	    ++to;
  40b850:	48 83 c5 01          	add    $0x1,%rbp
    for ( tolen = 0; *from != '\0' && tolen + 4 < tosize; ++from )
  40b854:	48 83 c3 01          	add    $0x1,%rbx
  40b858:	48 89 d8             	mov    %rbx,%rax
  40b85b:	48 89 da             	mov    %rbx,%rdx
  40b85e:	48 c1 e8 03          	shr    $0x3,%rax
  40b862:	83 e2 07             	and    $0x7,%edx
  40b865:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40b86c:	38 d0                	cmp    %dl,%al
  40b86e:	7f 08                	jg     40b878 <strencode+0xb8>
  40b870:	84 c0                	test   %al,%al
  40b872:	0f 85 ec 00 00 00    	jne    40b964 <strencode+0x1a4>
  40b878:	44 0f b6 23          	movzbl (%rbx),%r12d
  40b87c:	45 84 e4             	test   %r12b,%r12b
  40b87f:	0f 84 8b 00 00 00    	je     40b910 <strencode+0x150>
  40b885:	41 8d 47 04          	lea    0x4(%r15),%eax
  40b889:	3b 44 24 0c          	cmp    0xc(%rsp),%eax
  40b88d:	0f 8d 7d 00 00 00    	jge    40b910 <strencode+0x150>
	if ( isalnum(*from) || strchr( "/_.-~", *from ) != (char*) 0 )
  40b893:	41 80 be 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r14)
  40b89a:	00 
  40b89b:	0f 85 ae 00 00 00    	jne    40b94f <strencode+0x18f>
  40b8a1:	49 8b 55 00          	mov    0x0(%r13),%rdx
  40b8a5:	49 0f be c4          	movsbq %r12b,%rax
  40b8a9:	48 8d 3c 42          	lea    (%rdx,%rax,2),%rdi
  40b8ad:	48 89 f8             	mov    %rdi,%rax
  40b8b0:	48 c1 e8 03          	shr    $0x3,%rax
  40b8b4:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  40b8bb:	48 89 f8             	mov    %rdi,%rax
  40b8be:	83 e0 07             	and    $0x7,%eax
  40b8c1:	83 c0 01             	add    $0x1,%eax
  40b8c4:	38 d0                	cmp    %dl,%al
  40b8c6:	7c 08                	jl     40b8d0 <strencode+0x110>
  40b8c8:	84 d2                	test   %dl,%dl
  40b8ca:	0f 85 87 00 00 00    	jne    40b957 <strencode+0x197>
  40b8d0:	f6 07 08             	testb  $0x8,(%rdi)
  40b8d3:	0f 85 4f ff ff ff    	jne    40b828 <strencode+0x68>
  40b8d9:	41 0f be f4          	movsbl %r12b,%esi
  40b8dd:	bf e0 32 42 00       	mov    $0x4232e0,%edi
  40b8e2:	e8 d9 7a ff ff       	callq  4033c0 <strchr@plt>
  40b8e7:	48 85 c0             	test   %rax,%rax
  40b8ea:	0f 85 38 ff ff ff    	jne    40b828 <strencode+0x68>
	    (void) sprintf( to, "%%%02x", (int) *from & 0xff );
  40b8f0:	48 89 ef             	mov    %rbp,%rdi
  40b8f3:	41 0f b6 d4          	movzbl %r12b,%edx
  40b8f7:	be 20 33 42 00       	mov    $0x423320,%esi
  40b8fc:	31 c0                	xor    %eax,%eax
  40b8fe:	e8 bd 79 ff ff       	callq  4032c0 <sprintf@plt>
	    to += 3;
  40b903:	48 83 c5 03          	add    $0x3,%rbp
	    tolen += 3;
  40b907:	41 83 c7 03          	add    $0x3,%r15d
  40b90b:	e9 44 ff ff ff       	jmpq   40b854 <strencode+0x94>
    *to = '\0';
  40b910:	48 89 e8             	mov    %rbp,%rax
  40b913:	48 89 ea             	mov    %rbp,%rdx
  40b916:	48 c1 e8 03          	shr    $0x3,%rax
  40b91a:	83 e2 07             	and    $0x7,%edx
  40b91d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40b924:	38 d0                	cmp    %dl,%al
  40b926:	7f 04                	jg     40b92c <strencode+0x16c>
  40b928:	84 c0                	test   %al,%al
  40b92a:	75 13                	jne    40b93f <strencode+0x17f>
  40b92c:	c6 45 00 00          	movb   $0x0,0x0(%rbp)
    }
  40b930:	48 83 c4 18          	add    $0x18,%rsp
  40b934:	5b                   	pop    %rbx
  40b935:	5d                   	pop    %rbp
  40b936:	41 5c                	pop    %r12
  40b938:	41 5d                	pop    %r13
  40b93a:	41 5e                	pop    %r14
  40b93c:	41 5f                	pop    %r15
  40b93e:	c3                   	retq   
    *to = '\0';
  40b93f:	48 89 ef             	mov    %rbp,%rdi
  40b942:	e8 e9 77 ff ff       	callq  403130 <__asan_report_store1@plt>
    for ( tolen = 0; *from != '\0' && tolen + 4 < tosize; ++from )
  40b947:	48 89 df             	mov    %rbx,%rdi
  40b94a:	e8 c1 77 ff ff       	callq  403110 <__asan_report_load1@plt>
	if ( isalnum(*from) || strchr( "/_.-~", *from ) != (char*) 0 )
  40b94f:	4c 89 ef             	mov    %r13,%rdi
  40b952:	e8 f9 78 ff ff       	callq  403250 <__asan_report_load8@plt>
  40b957:	e8 54 76 ff ff       	callq  402fb0 <__asan_report_load2@plt>
	    *to = *from;
  40b95c:	48 89 ef             	mov    %rbp,%rdi
  40b95f:	e8 cc 77 ff ff       	callq  403130 <__asan_report_store1@plt>
    for ( tolen = 0; *from != '\0' && tolen + 4 < tosize; ++from )
  40b964:	48 89 df             	mov    %rbx,%rdi
  40b967:	e8 a4 77 ff ff       	callq  403110 <__asan_report_load1@plt>
  40b96c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000040b970 <sockaddr_check.isra.0>:
	case AF_INET: return 1;
  40b970:	b8 01 00 00 00       	mov    $0x1,%eax
  40b975:	66 83 ff 02          	cmp    $0x2,%di
  40b979:	74 09                	je     40b984 <sockaddr_check.isra.0+0x14>
	return 0;
  40b97b:	31 c0                	xor    %eax,%eax
  40b97d:	66 83 ff 0a          	cmp    $0xa,%di
  40b981:	0f 94 c0             	sete   %al
    }
  40b984:	c3                   	retq   
  40b985:	90                   	nop
  40b986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b98d:	00 00 00 

000000000040b990 <sockaddr_len.isra.1>:
	case AF_INET: return sizeof(struct sockaddr_in);
  40b990:	b8 10 00 00 00       	mov    $0x10,%eax
  40b995:	66 83 ff 02          	cmp    $0x2,%di
  40b999:	74 12                	je     40b9ad <sockaddr_len.isra.1+0x1d>
	return 0;	/* shouldn't happen */
  40b99b:	66 83 ff 0a          	cmp    $0xa,%di
  40b99f:	b8 1c 00 00 00       	mov    $0x1c,%eax
  40b9a4:	ba 00 00 00 00       	mov    $0x0,%edx
  40b9a9:	48 0f 45 c2          	cmovne %rdx,%rax
    }
  40b9ad:	c3                   	retq   
  40b9ae:	66 90                	xchg   %ax,%ax

000000000040b9b0 <make_argp.isra.2>:
make_argp( httpd_conn* hc )
  40b9b0:	41 57                	push   %r15
  40b9b2:	41 56                	push   %r14
  40b9b4:	41 55                	push   %r13
  40b9b6:	41 54                	push   %r12
  40b9b8:	49 89 f4             	mov    %rsi,%r12
  40b9bb:	55                   	push   %rbp
  40b9bc:	53                   	push   %rbx
  40b9bd:	48 89 fb             	mov    %rdi,%rbx
    argp = NEW( char*, strlen( hc->query ) + 2 );
  40b9c0:	48 89 f7             	mov    %rsi,%rdi
make_argp( httpd_conn* hc )
  40b9c3:	48 83 ec 18          	sub    $0x18,%rsp
    argp = NEW( char*, strlen( hc->query ) + 2 );
  40b9c7:	e8 b4 72 ff ff       	callq  402c80 <strlen@plt>
  40b9cc:	48 8d 3c c5 10 00 00 	lea    0x10(,%rax,8),%rdi
  40b9d3:	00 
  40b9d4:	e8 d7 76 ff ff       	callq  4030b0 <malloc@plt>
  40b9d9:	49 89 c5             	mov    %rax,%r13
    if ( argp == (char**) 0 )
  40b9dc:	48 85 c0             	test   %rax,%rax
  40b9df:	74 6b                	je     40ba4c <make_argp.isra.2+0x9c>
    argp[0] = strrchr( hc->expnfilename, '/' );
  40b9e1:	48 89 df             	mov    %rbx,%rdi
  40b9e4:	be 2f 00 00 00       	mov    $0x2f,%esi
  40b9e9:	e8 92 74 ff ff       	callq  402e80 <strrchr@plt>
	++argp[0];
  40b9ee:	48 85 c0             	test   %rax,%rax
  40b9f1:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40b9f5:	4c 89 e8             	mov    %r13,%rax
  40b9f8:	48 0f 45 da          	cmovne %rdx,%rbx
  40b9fc:	48 c1 e8 03          	shr    $0x3,%rax
  40ba00:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40ba07:	0f 85 84 01 00 00    	jne    40bb91 <make_argp.isra.2+0x1e1>
    if ( strchr( hc->query, '=' ) == (char*) 0 )
  40ba0d:	be 3d 00 00 00       	mov    $0x3d,%esi
  40ba12:	4c 89 e7             	mov    %r12,%rdi
  40ba15:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    argn = 1;
  40ba19:	41 be 01 00 00 00    	mov    $0x1,%r14d
    if ( strchr( hc->query, '=' ) == (char*) 0 )
  40ba1f:	e8 9c 79 ff ff       	callq  4033c0 <strchr@plt>
  40ba24:	48 85 c0             	test   %rax,%rax
  40ba27:	74 35                	je     40ba5e <make_argp.isra.2+0xae>
    argp[argn] = (char*) 0;
  40ba29:	4d 63 f6             	movslq %r14d,%r14
  40ba2c:	4b 8d 7c f5 00       	lea    0x0(%r13,%r14,8),%rdi
  40ba31:	48 89 f8             	mov    %rdi,%rax
  40ba34:	48 c1 e8 03          	shr    $0x3,%rax
  40ba38:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40ba3f:	0f 85 54 01 00 00    	jne    40bb99 <make_argp.isra.2+0x1e9>
  40ba45:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    }
  40ba4c:	48 83 c4 18          	add    $0x18,%rsp
  40ba50:	4c 89 e8             	mov    %r13,%rax
  40ba53:	5b                   	pop    %rbx
  40ba54:	5d                   	pop    %rbp
  40ba55:	41 5c                	pop    %r12
  40ba57:	41 5d                	pop    %r13
  40ba59:	41 5e                	pop    %r14
  40ba5b:	41 5f                	pop    %r15
  40ba5d:	c3                   	retq   
	for ( cp1 = cp2 = hc->query; *cp2 != '\0'; ++cp2 )
  40ba5e:	4c 89 e0             	mov    %r12,%rax
  40ba61:	4c 89 e2             	mov    %r12,%rdx
  40ba64:	48 c1 e8 03          	shr    $0x3,%rax
  40ba68:	83 e2 07             	and    $0x7,%edx
  40ba6b:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40ba72:	38 d0                	cmp    %dl,%al
  40ba74:	7f 08                	jg     40ba7e <make_argp.isra.2+0xce>
  40ba76:	84 c0                	test   %al,%al
  40ba78:	0f 85 f8 00 00 00    	jne    40bb76 <make_argp.isra.2+0x1c6>
  40ba7e:	41 0f b6 04 24       	movzbl (%r12),%eax
  40ba83:	84 c0                	test   %al,%al
  40ba85:	0f 84 f3 00 00 00    	je     40bb7e <make_argp.isra.2+0x1ce>
  40ba8b:	4c 89 e1             	mov    %r12,%rcx
    argn = 1;
  40ba8e:	41 be 01 00 00 00    	mov    $0x1,%r14d
  40ba94:	eb 34                	jmp    40baca <make_argp.isra.2+0x11a>
  40ba96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ba9d:	00 00 00 
	for ( cp1 = cp2 = hc->query; *cp2 != '\0'; ++cp2 )
  40baa0:	48 89 d8             	mov    %rbx,%rax
  40baa3:	48 89 da             	mov    %rbx,%rdx
  40baa6:	48 c1 e8 03          	shr    $0x3,%rax
  40baaa:	83 e2 07             	and    $0x7,%edx
  40baad:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40bab4:	38 d0                	cmp    %dl,%al
  40bab6:	7f 08                	jg     40bac0 <make_argp.isra.2+0x110>
  40bab8:	84 c0                	test   %al,%al
  40baba:	0f 85 c9 00 00 00    	jne    40bb89 <make_argp.isra.2+0x1d9>
  40bac0:	0f b6 03             	movzbl (%rbx),%eax
  40bac3:	49 89 dc             	mov    %rbx,%r12
  40bac6:	84 c0                	test   %al,%al
  40bac8:	74 72                	je     40bb3c <make_argp.isra.2+0x18c>
	    if ( *cp2 == '+' )
  40baca:	49 63 ee             	movslq %r14d,%rbp
  40bacd:	49 8d 5c 24 01       	lea    0x1(%r12),%rbx
  40bad2:	48 c1 e5 03          	shl    $0x3,%rbp
  40bad6:	4d 8d 7c 2d 00       	lea    0x0(%r13,%rbp,1),%r15
  40badb:	3c 2b                	cmp    $0x2b,%al
  40badd:	75 c1                	jne    40baa0 <make_argp.isra.2+0xf0>
		*cp2 = '\0';
  40badf:	4c 89 e0             	mov    %r12,%rax
  40bae2:	4c 89 e2             	mov    %r12,%rdx
  40bae5:	48 c1 e8 03          	shr    $0x3,%rax
  40bae9:	83 e2 07             	and    $0x7,%edx
  40baec:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40baf3:	38 d0                	cmp    %dl,%al
  40baf5:	7f 08                	jg     40baff <make_argp.isra.2+0x14f>
  40baf7:	84 c0                	test   %al,%al
  40baf9:	0f 85 9f 00 00 00    	jne    40bb9e <make_argp.isra.2+0x1ee>
  40baff:	c6 43 ff 00          	movb   $0x0,-0x1(%rbx)
		strdecode( cp1, cp1 );
  40bb03:	48 89 ce             	mov    %rcx,%rsi
  40bb06:	48 89 cf             	mov    %rcx,%rdi
		argp[argn++] = cp1;
  40bb09:	41 83 c6 01          	add    $0x1,%r14d
		strdecode( cp1, cp1 );
  40bb0d:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  40bb12:	e8 69 f5 ff ff       	callq  40b080 <strdecode>
		argp[argn++] = cp1;
  40bb17:	4c 89 f8             	mov    %r15,%rax
  40bb1a:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  40bb1f:	48 c1 e8 03          	shr    $0x3,%rax
  40bb23:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40bb2a:	75 7a                	jne    40bba6 <make_argp.isra.2+0x1f6>
  40bb2c:	49 89 0f             	mov    %rcx,(%r15)
		cp1 = cp2 + 1;
  40bb2f:	4d 8d 7c 2d 08       	lea    0x8(%r13,%rbp,1),%r15
		argp[argn++] = cp1;
  40bb34:	48 89 d9             	mov    %rbx,%rcx
  40bb37:	e9 64 ff ff ff       	jmpq   40baa0 <make_argp.isra.2+0xf0>
	if ( cp2 != cp1 )
  40bb3c:	48 39 cb             	cmp    %rcx,%rbx
  40bb3f:	0f 84 e4 fe ff ff    	je     40ba29 <make_argp.isra.2+0x79>
	    strdecode( cp1, cp1 );
  40bb45:	48 89 ce             	mov    %rcx,%rsi
  40bb48:	48 89 cf             	mov    %rcx,%rdi
  40bb4b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
	    argp[argn++] = cp1;
  40bb50:	41 83 c6 01          	add    $0x1,%r14d
	    strdecode( cp1, cp1 );
  40bb54:	e8 27 f5 ff ff       	callq  40b080 <strdecode>
	    argp[argn++] = cp1;
  40bb59:	4c 89 f8             	mov    %r15,%rax
  40bb5c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  40bb61:	48 c1 e8 03          	shr    $0x3,%rax
  40bb65:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40bb6c:	75 40                	jne    40bbae <make_argp.isra.2+0x1fe>
  40bb6e:	49 89 0f             	mov    %rcx,(%r15)
  40bb71:	e9 b3 fe ff ff       	jmpq   40ba29 <make_argp.isra.2+0x79>
	for ( cp1 = cp2 = hc->query; *cp2 != '\0'; ++cp2 )
  40bb76:	4c 89 e7             	mov    %r12,%rdi
  40bb79:	e8 92 75 ff ff       	callq  403110 <__asan_report_load1@plt>
    argn = 1;
  40bb7e:	41 be 01 00 00 00    	mov    $0x1,%r14d
  40bb84:	e9 a0 fe ff ff       	jmpq   40ba29 <make_argp.isra.2+0x79>
	for ( cp1 = cp2 = hc->query; *cp2 != '\0'; ++cp2 )
  40bb89:	48 89 df             	mov    %rbx,%rdi
  40bb8c:	e8 7f 75 ff ff       	callq  403110 <__asan_report_load1@plt>
  40bb91:	4c 89 ef             	mov    %r13,%rdi
  40bb94:	e8 07 74 ff ff       	callq  402fa0 <__asan_report_store8@plt>
    argp[argn] = (char*) 0;
  40bb99:	e8 02 74 ff ff       	callq  402fa0 <__asan_report_store8@plt>
		*cp2 = '\0';
  40bb9e:	4c 89 e7             	mov    %r12,%rdi
  40bba1:	e8 8a 75 ff ff       	callq  403130 <__asan_report_store1@plt>
		argp[argn++] = cp1;
  40bba6:	4c 89 ff             	mov    %r15,%rdi
  40bba9:	e8 f2 73 ff ff       	callq  402fa0 <__asan_report_store8@plt>
	    argp[argn++] = cp1;
  40bbae:	4c 89 ff             	mov    %r15,%rdi
  40bbb1:	e8 ea 73 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  40bbb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40bbbd:	00 00 00 

000000000040bbc0 <b64_decode.constprop.5>:
    for ( cp = str; *cp != '\0'; ++cp )
  40bbc0:	48 89 f8             	mov    %rdi,%rax
b64_decode( const char* str, unsigned char* space, int size )
  40bbc3:	48 83 ec 08          	sub    $0x8,%rsp
    for ( cp = str; *cp != '\0'; ++cp )
  40bbc7:	48 89 fa             	mov    %rdi,%rdx
  40bbca:	48 c1 e8 03          	shr    $0x3,%rax
  40bbce:	83 e2 07             	and    $0x7,%edx
  40bbd1:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40bbd8:	38 d0                	cmp    %dl,%al
  40bbda:	7f 08                	jg     40bbe4 <b64_decode.constprop.5+0x24>
  40bbdc:	84 c0                	test   %al,%al
  40bbde:	0f 85 ed 0a 00 00    	jne    40c6d1 <b64_decode.constprop.5+0xb11>
  40bbe4:	48 0f be 17          	movsbq (%rdi),%rdx
    space_idx = 0;
  40bbe8:	31 c0                	xor    %eax,%eax
    for ( cp = str; *cp != '\0'; ++cp )
  40bbea:	84 d2                	test   %dl,%dl
  40bbec:	0f 84 89 05 00 00    	je     40c17b <b64_decode.constprop.5+0x5bb>
    int d, prev_d = 0;
  40bbf2:	31 c9                	xor    %ecx,%ecx
    phase = 0;
  40bbf4:	45 31 db             	xor    %r11d,%r11d
	d = b64_decode_table[(int) *cp];
  40bbf7:	4c 8d 0c 95 20 c1 42 	lea    0x42c120(,%rdx,4),%r9
  40bbfe:	00 
  40bbff:	4d 89 c8             	mov    %r9,%r8
  40bc02:	49 c1 e8 03          	shr    $0x3,%r8
  40bc06:	45 0f b6 90 00 80 ff 	movzbl 0x7fff8000(%r8),%r10d
  40bc0d:	7f 
  40bc0e:	4d 89 c8             	mov    %r9,%r8
  40bc11:	41 83 e0 07          	and    $0x7,%r8d
  40bc15:	41 83 c0 03          	add    $0x3,%r8d
  40bc19:	45 38 d0             	cmp    %r10b,%r8b
  40bc1c:	7c 09                	jl     40bc27 <b64_decode.constprop.5+0x67>
  40bc1e:	45 84 d2             	test   %r10b,%r10b
  40bc21:	0f 85 7d 0f 00 00    	jne    40cba4 <b64_decode.constprop.5+0xfe4>
  40bc27:	8b 14 95 20 c1 42 00 	mov    0x42c120(,%rdx,4),%edx
	if ( d != -1 )
  40bc2e:	83 fa ff             	cmp    $0xffffffff,%edx
  40bc31:	0f 84 49 05 00 00    	je     40c180 <b64_decode.constprop.5+0x5c0>
	    switch ( phase )
  40bc37:	41 83 fb 02          	cmp    $0x2,%r11d
  40bc3b:	0f 84 6d 06 00 00    	je     40c2ae <b64_decode.constprop.5+0x6ee>
  40bc41:	41 83 fb 03          	cmp    $0x3,%r11d
  40bc45:	0f 84 13 02 00 00    	je     40be5e <b64_decode.constprop.5+0x29e>
  40bc4b:	41 83 fb 01          	cmp    $0x1,%r11d
  40bc4f:	0f 84 d3 05 00 00    	je     40c228 <b64_decode.constprop.5+0x668>
	d = b64_decode_table[(int) *cp];
  40bc55:	49 89 f8             	mov    %rdi,%r8
  40bc58:	89 d1                	mov    %edx,%ecx
  40bc5a:	48 83 c7 01          	add    $0x1,%rdi
    for ( cp = str; *cp != '\0'; ++cp )
  40bc5e:	49 8d 50 01          	lea    0x1(%r8),%rdx
  40bc62:	49 89 d1             	mov    %rdx,%r9
  40bc65:	49 89 d2             	mov    %rdx,%r10
  40bc68:	49 c1 e9 03          	shr    $0x3,%r9
  40bc6c:	41 83 e2 07          	and    $0x7,%r10d
  40bc70:	45 0f b6 89 00 80 ff 	movzbl 0x7fff8000(%r9),%r9d
  40bc77:	7f 
  40bc78:	45 38 d1             	cmp    %r10b,%r9b
  40bc7b:	7f 09                	jg     40bc86 <b64_decode.constprop.5+0xc6>
  40bc7d:	45 84 c9             	test   %r9b,%r9b
  40bc80:	0f 85 73 0f 00 00    	jne    40cbf9 <b64_decode.constprop.5+0x1039>
  40bc86:	49 0f be 50 01       	movsbq 0x1(%r8),%rdx
  40bc8b:	84 d2                	test   %dl,%dl
  40bc8d:	0f 84 e8 04 00 00    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40bc93:	4c 8d 0c 95 20 c1 42 	lea    0x42c120(,%rdx,4),%r9
  40bc9a:	00 
  40bc9b:	4d 89 c8             	mov    %r9,%r8
  40bc9e:	49 c1 e8 03          	shr    $0x3,%r8
  40bca2:	45 0f b6 90 00 80 ff 	movzbl 0x7fff8000(%r8),%r10d
  40bca9:	7f 
  40bcaa:	4d 89 c8             	mov    %r9,%r8
  40bcad:	41 83 e0 07          	and    $0x7,%r8d
  40bcb1:	41 83 c0 03          	add    $0x3,%r8d
  40bcb5:	45 38 d0             	cmp    %r10b,%r8b
  40bcb8:	7c 09                	jl     40bcc3 <b64_decode.constprop.5+0x103>
  40bcba:	45 84 d2             	test   %r10b,%r10b
  40bcbd:	0f 85 26 0f 00 00    	jne    40cbe9 <b64_decode.constprop.5+0x1029>
  40bcc3:	8b 14 95 20 c1 42 00 	mov    0x42c120(,%rdx,4),%edx
	if ( d != -1 )
  40bcca:	4c 8d 57 01          	lea    0x1(%rdi),%r10
  40bcce:	83 fa ff             	cmp    $0xffffffff,%edx
  40bcd1:	0f 84 d9 08 00 00    	je     40c5b0 <b64_decode.constprop.5+0x9f0>
		if ( space_idx < size )
  40bcd7:	3d f2 01 00 00       	cmp    $0x1f2,%eax
  40bcdc:	0f 8f b6 02 00 00    	jg     40bf98 <b64_decode.constprop.5+0x3d8>
		c = ( ( prev_d << 2 ) | ( ( d & 0x30 ) >> 4 ) );
  40bce2:	41 89 d1             	mov    %edx,%r9d
		    space[space_idx++] = c;
  40bce5:	44 8d 40 01          	lea    0x1(%rax),%r8d
  40bce9:	48 98                	cltq   
		c = ( ( prev_d << 2 ) | ( ( d & 0x30 ) >> 4 ) );
  40bceb:	c1 e1 02             	shl    $0x2,%ecx
  40bcee:	41 c1 f9 04          	sar    $0x4,%r9d
		    space[space_idx++] = c;
  40bcf2:	48 01 f0             	add    %rsi,%rax
		c = ( ( prev_d << 2 ) | ( ( d & 0x30 ) >> 4 ) );
  40bcf5:	41 83 e1 03          	and    $0x3,%r9d
		    space[space_idx++] = c;
  40bcf9:	49 89 c3             	mov    %rax,%r11
		c = ( ( prev_d << 2 ) | ( ( d & 0x30 ) >> 4 ) );
  40bcfc:	44 09 c9             	or     %r9d,%ecx
		    space[space_idx++] = c;
  40bcff:	49 89 c1             	mov    %rax,%r9
  40bd02:	41 83 e3 07          	and    $0x7,%r11d
  40bd06:	49 c1 e9 03          	shr    $0x3,%r9
  40bd0a:	45 0f b6 89 00 80 ff 	movzbl 0x7fff8000(%r9),%r9d
  40bd11:	7f 
  40bd12:	45 38 d9             	cmp    %r11b,%r9b
  40bd15:	7f 09                	jg     40bd20 <b64_decode.constprop.5+0x160>
  40bd17:	45 84 c9             	test   %r9b,%r9b
  40bd1a:	0f 85 a9 0e 00 00    	jne    40cbc9 <b64_decode.constprop.5+0x1009>
  40bd20:	88 08                	mov    %cl,(%rax)
    for ( cp = str; *cp != '\0'; ++cp )
  40bd22:	48 8d 47 01          	lea    0x1(%rdi),%rax
  40bd26:	48 89 c1             	mov    %rax,%rcx
  40bd29:	49 89 c1             	mov    %rax,%r9
  40bd2c:	48 c1 e9 03          	shr    $0x3,%rcx
  40bd30:	41 83 e1 07          	and    $0x7,%r9d
  40bd34:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40bd3b:	44 38 c9             	cmp    %r9b,%cl
  40bd3e:	7f 08                	jg     40bd48 <b64_decode.constprop.5+0x188>
  40bd40:	84 c9                	test   %cl,%cl
  40bd42:	0f 85 79 0e 00 00    	jne    40cbc1 <b64_decode.constprop.5+0x1001>
  40bd48:	48 0f be 47 01       	movsbq 0x1(%rdi),%rax
  40bd4d:	84 c0                	test   %al,%al
  40bd4f:	0f 84 4b 09 00 00    	je     40c6a0 <b64_decode.constprop.5+0xae0>
	d = b64_decode_table[(int) *cp];
  40bd55:	48 8d 3c 85 20 c1 42 	lea    0x42c120(,%rax,4),%rdi
  40bd5c:	00 
  40bd5d:	48 89 f9             	mov    %rdi,%rcx
  40bd60:	48 c1 e9 03          	shr    $0x3,%rcx
  40bd64:	44 0f b6 89 00 80 ff 	movzbl 0x7fff8000(%rcx),%r9d
  40bd6b:	7f 
  40bd6c:	48 89 f9             	mov    %rdi,%rcx
  40bd6f:	83 e1 07             	and    $0x7,%ecx
  40bd72:	83 c1 03             	add    $0x3,%ecx
  40bd75:	44 38 c9             	cmp    %r9b,%cl
  40bd78:	7c 09                	jl     40bd83 <b64_decode.constprop.5+0x1c3>
  40bd7a:	45 84 c9             	test   %r9b,%r9b
  40bd7d:	0f 85 32 0f 00 00    	jne    40ccb5 <b64_decode.constprop.5+0x10f5>
  40bd83:	8b 0c 85 20 c1 42 00 	mov    0x42c120(,%rax,4),%ecx
	if ( d != -1 )
  40bd8a:	4d 8d 4a 01          	lea    0x1(%r10),%r9
  40bd8e:	4c 89 cf             	mov    %r9,%rdi
  40bd91:	83 f9 ff             	cmp    $0xffffffff,%ecx
  40bd94:	0f 84 86 07 00 00    	je     40c520 <b64_decode.constprop.5+0x960>
		if ( space_idx < size )
  40bd9a:	41 81 f8 f2 01 00 00 	cmp    $0x1f2,%r8d
  40bda1:	0f 8f 24 05 00 00    	jg     40c2cb <b64_decode.constprop.5+0x70b>
		c = ( ( ( prev_d & 0xf ) << 4 ) | ( ( d & 0x3c ) >> 2 ) );
  40bda7:	41 89 c9             	mov    %ecx,%r9d
		    space[space_idx++] = c;
  40bdaa:	41 8d 40 01          	lea    0x1(%r8),%eax
  40bdae:	4d 63 c0             	movslq %r8d,%r8
		c = ( ( ( prev_d & 0xf ) << 4 ) | ( ( d & 0x3c ) >> 2 ) );
  40bdb1:	c1 e2 04             	shl    $0x4,%edx
  40bdb4:	41 c1 f9 02          	sar    $0x2,%r9d
		    space[space_idx++] = c;
  40bdb8:	49 01 f0             	add    %rsi,%r8
		c = ( ( ( prev_d & 0xf ) << 4 ) | ( ( d & 0x3c ) >> 2 ) );
  40bdbb:	41 83 e1 0f          	and    $0xf,%r9d
		    space[space_idx++] = c;
  40bdbf:	4d 89 c3             	mov    %r8,%r11
		c = ( ( ( prev_d & 0xf ) << 4 ) | ( ( d & 0x3c ) >> 2 ) );
  40bdc2:	44 09 ca             	or     %r9d,%edx
		    space[space_idx++] = c;
  40bdc5:	4d 89 c1             	mov    %r8,%r9
  40bdc8:	41 83 e3 07          	and    $0x7,%r11d
  40bdcc:	49 c1 e9 03          	shr    $0x3,%r9
  40bdd0:	45 0f b6 89 00 80 ff 	movzbl 0x7fff8000(%r9),%r9d
  40bdd7:	7f 
  40bdd8:	45 38 d9             	cmp    %r11b,%r9b
  40bddb:	7f 09                	jg     40bde6 <b64_decode.constprop.5+0x226>
  40bddd:	45 84 c9             	test   %r9b,%r9b
  40bde0:	0f 85 bf 0e 00 00    	jne    40cca5 <b64_decode.constprop.5+0x10e5>
  40bde6:	41 88 10             	mov    %dl,(%r8)
    for ( cp = str; *cp != '\0'; ++cp )
  40bde9:	49 8d 52 01          	lea    0x1(%r10),%rdx
  40bded:	49 89 d0             	mov    %rdx,%r8
  40bdf0:	49 89 d1             	mov    %rdx,%r9
  40bdf3:	49 c1 e8 03          	shr    $0x3,%r8
  40bdf7:	41 83 e1 07          	and    $0x7,%r9d
  40bdfb:	45 0f b6 80 00 80 ff 	movzbl 0x7fff8000(%r8),%r8d
  40be02:	7f 
  40be03:	45 38 c8             	cmp    %r9b,%r8b
  40be06:	7f 09                	jg     40be11 <b64_decode.constprop.5+0x251>
  40be08:	45 84 c0             	test   %r8b,%r8b
  40be0b:	0f 85 9c 0e 00 00    	jne    40ccad <b64_decode.constprop.5+0x10ed>
  40be11:	49 0f be 52 01       	movsbq 0x1(%r10),%rdx
  40be16:	84 d2                	test   %dl,%dl
  40be18:	0f 84 5d 03 00 00    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40be1e:	4c 8d 0c 95 20 c1 42 	lea    0x42c120(,%rdx,4),%r9
  40be25:	00 
  40be26:	4d 89 c8             	mov    %r9,%r8
  40be29:	49 c1 e8 03          	shr    $0x3,%r8
  40be2d:	45 0f b6 90 00 80 ff 	movzbl 0x7fff8000(%r8),%r10d
  40be34:	7f 
  40be35:	4d 89 c8             	mov    %r9,%r8
  40be38:	41 83 e0 07          	and    $0x7,%r8d
  40be3c:	41 83 c0 03          	add    $0x3,%r8d
  40be40:	45 38 d0             	cmp    %r10b,%r8b
  40be43:	7c 09                	jl     40be4e <b64_decode.constprop.5+0x28e>
  40be45:	45 84 d2             	test   %r10b,%r10b
  40be48:	0f 85 8b 0d 00 00    	jne    40cbd9 <b64_decode.constprop.5+0x1019>
  40be4e:	8b 14 95 20 c1 42 00 	mov    0x42c120(,%rdx,4),%edx
	if ( d != -1 )
  40be55:	83 fa ff             	cmp    $0xffffffff,%edx
  40be58:	0f 84 82 04 00 00    	je     40c2e0 <b64_decode.constprop.5+0x720>
		if ( space_idx < size )
  40be5e:	3d f2 01 00 00       	cmp    $0x1f2,%eax
  40be63:	0f 8f 1a 02 00 00    	jg     40c083 <b64_decode.constprop.5+0x4c3>
		    space[space_idx++] = c;
  40be69:	44 8d 48 01          	lea    0x1(%rax),%r9d
  40be6d:	48 98                	cltq   
		c = ( ( ( prev_d & 0x03 ) << 6 ) | d );
  40be6f:	c1 e1 06             	shl    $0x6,%ecx
		    space[space_idx++] = c;
  40be72:	48 01 f0             	add    %rsi,%rax
		c = ( ( ( prev_d & 0x03 ) << 6 ) | d );
  40be75:	09 d1                	or     %edx,%ecx
		    space[space_idx++] = c;
  40be77:	49 89 c0             	mov    %rax,%r8
  40be7a:	49 89 c2             	mov    %rax,%r10
  40be7d:	49 c1 e8 03          	shr    $0x3,%r8
  40be81:	41 83 e2 07          	and    $0x7,%r10d
  40be85:	45 0f b6 80 00 80 ff 	movzbl 0x7fff8000(%r8),%r8d
  40be8c:	7f 
  40be8d:	45 38 d0             	cmp    %r10b,%r8b
  40be90:	7f 09                	jg     40be9b <b64_decode.constprop.5+0x2db>
  40be92:	45 84 c0             	test   %r8b,%r8b
  40be95:	0f 85 6e 0d 00 00    	jne    40cc09 <b64_decode.constprop.5+0x1049>
  40be9b:	88 08                	mov    %cl,(%rax)
    for ( cp = str; *cp != '\0'; ++cp )
  40be9d:	48 8d 47 01          	lea    0x1(%rdi),%rax
  40bea1:	48 89 c1             	mov    %rax,%rcx
  40bea4:	49 89 c0             	mov    %rax,%r8
  40bea7:	48 c1 e9 03          	shr    $0x3,%rcx
  40beab:	41 83 e0 07          	and    $0x7,%r8d
  40beaf:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40beb6:	44 38 c1             	cmp    %r8b,%cl
  40beb9:	7f 08                	jg     40bec3 <b64_decode.constprop.5+0x303>
  40bebb:	84 c9                	test   %cl,%cl
  40bebd:	0f 85 3e 0d 00 00    	jne    40cc01 <b64_decode.constprop.5+0x1041>
  40bec3:	48 0f be 47 01       	movsbq 0x1(%rdi),%rax
  40bec8:	84 c0                	test   %al,%al
  40beca:	0f 84 a8 02 00 00    	je     40c178 <b64_decode.constprop.5+0x5b8>
	d = b64_decode_table[(int) *cp];
  40bed0:	4c 8d 04 85 20 c1 42 	lea    0x42c120(,%rax,4),%r8
  40bed7:	00 
  40bed8:	4c 89 c1             	mov    %r8,%rcx
  40bedb:	48 c1 e9 03          	shr    $0x3,%rcx
  40bedf:	44 0f b6 91 00 80 ff 	movzbl 0x7fff8000(%rcx),%r10d
  40bee6:	7f 
  40bee7:	4c 89 c1             	mov    %r8,%rcx
  40beea:	83 e1 07             	and    $0x7,%ecx
  40beed:	83 c1 03             	add    $0x3,%ecx
  40bef0:	44 38 d1             	cmp    %r10b,%cl
  40bef3:	7c 09                	jl     40befe <b64_decode.constprop.5+0x33e>
  40bef5:	45 84 d2             	test   %r10b,%r10b
  40bef8:	0f 85 cc 0d 00 00    	jne    40ccca <b64_decode.constprop.5+0x110a>
  40befe:	4c 8d 47 02          	lea    0x2(%rdi),%r8
  40bf02:	8b 0c 85 20 c1 42 00 	mov    0x42c120(,%rax,4),%ecx
	if ( d != -1 )
  40bf09:	4c 89 c0             	mov    %r8,%rax
  40bf0c:	4d 89 c2             	mov    %r8,%r10
  40bf0f:	48 c1 e8 03          	shr    $0x3,%rax
  40bf13:	41 83 e2 07          	and    $0x7,%r10d
  40bf17:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40bf1e:	44 38 d0             	cmp    %r10b,%al
  40bf21:	7f 08                	jg     40bf2b <b64_decode.constprop.5+0x36b>
  40bf23:	84 c0                	test   %al,%al
  40bf25:	0f 85 8f 0d 00 00    	jne    40ccba <b64_decode.constprop.5+0x10fa>
  40bf2b:	48 0f be 47 02       	movsbq 0x2(%rdi),%rax
  40bf30:	83 f9 ff             	cmp    $0xffffffff,%ecx
  40bf33:	0f 84 8f 05 00 00    	je     40c4c8 <b64_decode.constprop.5+0x908>
    for ( cp = str; *cp != '\0'; ++cp )
  40bf39:	84 c0                	test   %al,%al
  40bf3b:	0f 84 37 02 00 00    	je     40c178 <b64_decode.constprop.5+0x5b8>
	d = b64_decode_table[(int) *cp];
  40bf41:	4c 8d 14 85 20 c1 42 	lea    0x42c120(,%rax,4),%r10
  40bf48:	00 
  40bf49:	4c 89 d2             	mov    %r10,%rdx
  40bf4c:	48 c1 ea 03          	shr    $0x3,%rdx
  40bf50:	44 0f b6 9a 00 80 ff 	movzbl 0x7fff8000(%rdx),%r11d
  40bf57:	7f 
  40bf58:	4c 89 d2             	mov    %r10,%rdx
  40bf5b:	83 e2 07             	and    $0x7,%edx
  40bf5e:	83 c2 03             	add    $0x3,%edx
  40bf61:	44 38 da             	cmp    %r11b,%dl
  40bf64:	7c 09                	jl     40bf6f <b64_decode.constprop.5+0x3af>
  40bf66:	45 84 db             	test   %r11b,%r11b
  40bf69:	0f 85 42 0c 00 00    	jne    40cbb1 <b64_decode.constprop.5+0xff1>
  40bf6f:	8b 14 85 20 c1 42 00 	mov    0x42c120(,%rax,4),%edx
	if ( d != -1 )
  40bf76:	4c 8d 57 03          	lea    0x3(%rdi),%r10
  40bf7a:	83 fa ff             	cmp    $0xffffffff,%edx
  40bf7d:	0f 84 5d 04 00 00    	je     40c3e0 <b64_decode.constprop.5+0x820>
		    space[space_idx++] = c;
  40bf83:	44 89 c8             	mov    %r9d,%eax
    for ( cp = str; *cp != '\0'; ++cp )
  40bf86:	4c 89 c7             	mov    %r8,%rdi
		if ( space_idx < size )
  40bf89:	3d f2 01 00 00       	cmp    $0x1f2,%eax
  40bf8e:	0f 8e 4e fd ff ff    	jle    40bce2 <b64_decode.constprop.5+0x122>
  40bf94:	0f 1f 40 00          	nopl   0x0(%rax)
    for ( cp = str; *cp != '\0'; ++cp )
  40bf98:	48 8d 4f 01          	lea    0x1(%rdi),%rcx
  40bf9c:	49 89 c8             	mov    %rcx,%r8
  40bf9f:	49 89 c9             	mov    %rcx,%r9
  40bfa2:	49 c1 e8 03          	shr    $0x3,%r8
  40bfa6:	41 83 e1 07          	and    $0x7,%r9d
  40bfaa:	45 0f b6 80 00 80 ff 	movzbl 0x7fff8000(%r8),%r8d
  40bfb1:	7f 
  40bfb2:	45 38 c8             	cmp    %r9b,%r8b
  40bfb5:	7f 09                	jg     40bfc0 <b64_decode.constprop.5+0x400>
  40bfb7:	45 84 c0             	test   %r8b,%r8b
  40bfba:	0f 85 31 0c 00 00    	jne    40cbf1 <b64_decode.constprop.5+0x1031>
  40bfc0:	48 0f be 4f 01       	movsbq 0x1(%rdi),%rcx
  40bfc5:	84 c9                	test   %cl,%cl
  40bfc7:	0f 84 ae 01 00 00    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40bfcd:	48 8d 3c 8d 20 c1 42 	lea    0x42c120(,%rcx,4),%rdi
  40bfd4:	00 
  40bfd5:	49 89 f8             	mov    %rdi,%r8
  40bfd8:	49 c1 e8 03          	shr    $0x3,%r8
  40bfdc:	45 0f b6 88 00 80 ff 	movzbl 0x7fff8000(%r8),%r9d
  40bfe3:	7f 
  40bfe4:	49 89 f8             	mov    %rdi,%r8
  40bfe7:	41 83 e0 07          	and    $0x7,%r8d
  40bfeb:	41 83 c0 03          	add    $0x3,%r8d
  40bfef:	45 38 c8             	cmp    %r9b,%r8b
  40bff2:	7c 09                	jl     40bffd <b64_decode.constprop.5+0x43d>
  40bff4:	45 84 c9             	test   %r9b,%r9b
  40bff7:	0f 85 9b 0c 00 00    	jne    40cc98 <b64_decode.constprop.5+0x10d8>
  40bffd:	8b 0c 8d 20 c1 42 00 	mov    0x42c120(,%rcx,4),%ecx
	if ( d != -1 )
  40c004:	4d 8d 4a 01          	lea    0x1(%r10),%r9
  40c008:	4c 89 cf             	mov    %r9,%rdi
  40c00b:	83 f9 ff             	cmp    $0xffffffff,%ecx
  40c00e:	0f 84 24 02 00 00    	je     40c238 <b64_decode.constprop.5+0x678>
    for ( cp = str; *cp != '\0'; ++cp )
  40c014:	4c 89 ca             	mov    %r9,%rdx
  40c017:	4d 89 c8             	mov    %r9,%r8
  40c01a:	48 c1 ea 03          	shr    $0x3,%rdx
  40c01e:	41 83 e0 07          	and    $0x7,%r8d
  40c022:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40c029:	44 38 c2             	cmp    %r8b,%dl
  40c02c:	7f 08                	jg     40c036 <b64_decode.constprop.5+0x476>
  40c02e:	84 d2                	test   %dl,%dl
  40c030:	0f 85 db 0b 00 00    	jne    40cc11 <b64_decode.constprop.5+0x1051>
  40c036:	49 0f be 52 01       	movsbq 0x1(%r10),%rdx
  40c03b:	84 d2                	test   %dl,%dl
  40c03d:	0f 84 38 01 00 00    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40c043:	4c 8d 0c 95 20 c1 42 	lea    0x42c120(,%rdx,4),%r9
  40c04a:	00 
  40c04b:	4d 89 c8             	mov    %r9,%r8
  40c04e:	49 c1 e8 03          	shr    $0x3,%r8
  40c052:	45 0f b6 90 00 80 ff 	movzbl 0x7fff8000(%r8),%r10d
  40c059:	7f 
  40c05a:	4d 89 c8             	mov    %r9,%r8
  40c05d:	41 83 e0 07          	and    $0x7,%r8d
  40c061:	41 83 c0 03          	add    $0x3,%r8d
  40c065:	45 38 d0             	cmp    %r10b,%r8b
  40c068:	7c 09                	jl     40c073 <b64_decode.constprop.5+0x4b3>
  40c06a:	45 84 d2             	test   %r10b,%r10b
  40c06d:	0f 85 a6 0b 00 00    	jne    40cc19 <b64_decode.constprop.5+0x1059>
  40c073:	8b 14 95 20 c1 42 00 	mov    0x42c120(,%rdx,4),%edx
	if ( d != -1 )
  40c07a:	83 fa ff             	cmp    $0xffffffff,%edx
  40c07d:	0f 84 dd 02 00 00    	je     40c360 <b64_decode.constprop.5+0x7a0>
    for ( cp = str; *cp != '\0'; ++cp )
  40c083:	48 8d 4f 01          	lea    0x1(%rdi),%rcx
  40c087:	49 89 c8             	mov    %rcx,%r8
  40c08a:	49 89 c9             	mov    %rcx,%r9
  40c08d:	49 c1 e8 03          	shr    $0x3,%r8
  40c091:	41 83 e1 07          	and    $0x7,%r9d
  40c095:	45 0f b6 80 00 80 ff 	movzbl 0x7fff8000(%r8),%r8d
  40c09c:	7f 
  40c09d:	45 38 c8             	cmp    %r9b,%r8b
  40c0a0:	7f 09                	jg     40c0ab <b64_decode.constprop.5+0x4eb>
  40c0a2:	45 84 c0             	test   %r8b,%r8b
  40c0a5:	0f 85 17 0c 00 00    	jne    40ccc2 <b64_decode.constprop.5+0x1102>
  40c0ab:	48 0f be 4f 01       	movsbq 0x1(%rdi),%rcx
  40c0b0:	84 c9                	test   %cl,%cl
  40c0b2:	0f 84 c3 00 00 00    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40c0b8:	4c 8d 0c 8d 20 c1 42 	lea    0x42c120(,%rcx,4),%r9
  40c0bf:	00 
  40c0c0:	4d 89 c8             	mov    %r9,%r8
  40c0c3:	49 c1 e8 03          	shr    $0x3,%r8
  40c0c7:	45 0f b6 90 00 80 ff 	movzbl 0x7fff8000(%r8),%r10d
  40c0ce:	7f 
  40c0cf:	4d 89 c8             	mov    %r9,%r8
  40c0d2:	41 83 e0 07          	and    $0x7,%r8d
  40c0d6:	41 83 c0 03          	add    $0x3,%r8d
  40c0da:	45 38 d0             	cmp    %r10b,%r8b
  40c0dd:	7c 09                	jl     40c0e8 <b64_decode.constprop.5+0x528>
  40c0df:	45 84 d2             	test   %r10b,%r10b
  40c0e2:	0f 85 e9 0a 00 00    	jne    40cbd1 <b64_decode.constprop.5+0x1011>
  40c0e8:	4c 8d 47 02          	lea    0x2(%rdi),%r8
  40c0ec:	8b 0c 8d 20 c1 42 00 	mov    0x42c120(,%rcx,4),%ecx
	if ( d != -1 )
  40c0f3:	4d 89 c1             	mov    %r8,%r9
  40c0f6:	4d 89 c2             	mov    %r8,%r10
  40c0f9:	49 c1 e9 03          	shr    $0x3,%r9
  40c0fd:	41 83 e2 07          	and    $0x7,%r10d
  40c101:	45 0f b6 89 00 80 ff 	movzbl 0x7fff8000(%r9),%r9d
  40c108:	7f 
  40c109:	45 38 d1             	cmp    %r10b,%r9b
  40c10c:	7f 09                	jg     40c117 <b64_decode.constprop.5+0x557>
  40c10e:	45 84 c9             	test   %r9b,%r9b
  40c111:	0f 85 86 0b 00 00    	jne    40cc9d <b64_decode.constprop.5+0x10dd>
  40c117:	4c 0f be 4f 02       	movsbq 0x2(%rdi),%r9
  40c11c:	83 f9 ff             	cmp    $0xffffffff,%ecx
  40c11f:	0f 84 4b 03 00 00    	je     40c470 <b64_decode.constprop.5+0x8b0>
    for ( cp = str; *cp != '\0'; ++cp )
  40c125:	45 84 c9             	test   %r9b,%r9b
  40c128:	74 51                	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40c12a:	4e 8d 14 8d 20 c1 42 	lea    0x42c120(,%r9,4),%r10
  40c131:	00 
  40c132:	4c 89 d2             	mov    %r10,%rdx
  40c135:	48 c1 ea 03          	shr    $0x3,%rdx
  40c139:	44 0f b6 9a 00 80 ff 	movzbl 0x7fff8000(%rdx),%r11d
  40c140:	7f 
  40c141:	4c 89 d2             	mov    %r10,%rdx
  40c144:	83 e2 07             	and    $0x7,%edx
  40c147:	83 c2 03             	add    $0x3,%edx
  40c14a:	44 38 da             	cmp    %r11b,%dl
  40c14d:	7c 09                	jl     40c158 <b64_decode.constprop.5+0x598>
  40c14f:	45 84 db             	test   %r11b,%r11b
  40c152:	0f 85 23 0b 00 00    	jne    40cc7b <b64_decode.constprop.5+0x10bb>
  40c158:	42 8b 14 8d 20 c1 42 	mov    0x42c120(,%r9,4),%edx
  40c15f:	00 
	if ( d != -1 )
  40c160:	4c 8d 57 03          	lea    0x3(%rdi),%r10
  40c164:	83 fa ff             	cmp    $0xffffffff,%edx
  40c167:	74 57                	je     40c1c0 <b64_decode.constprop.5+0x600>
    for ( cp = str; *cp != '\0'; ++cp )
  40c169:	4c 89 c7             	mov    %r8,%rdi
  40c16c:	e9 66 fb ff ff       	jmpq   40bcd7 <b64_decode.constprop.5+0x117>
  40c171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
		    space[space_idx++] = c;
  40c178:	44 89 c8             	mov    %r9d,%eax
    }
  40c17b:	48 83 c4 08          	add    $0x8,%rsp
  40c17f:	c3                   	retq   
	if ( d != -1 )
  40c180:	49 89 f8             	mov    %rdi,%r8
  40c183:	49 8d 78 01          	lea    0x1(%r8),%rdi
    for ( cp = str; *cp != '\0'; ++cp )
  40c187:	48 89 fa             	mov    %rdi,%rdx
  40c18a:	49 89 f9             	mov    %rdi,%r9
  40c18d:	48 c1 ea 03          	shr    $0x3,%rdx
  40c191:	41 83 e1 07          	and    $0x7,%r9d
  40c195:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40c19c:	44 38 ca             	cmp    %r9b,%dl
  40c19f:	7f 08                	jg     40c1a9 <b64_decode.constprop.5+0x5e9>
  40c1a1:	84 d2                	test   %dl,%dl
  40c1a3:	0f 85 03 0a 00 00    	jne    40cbac <b64_decode.constprop.5+0xfec>
  40c1a9:	49 0f be 50 01       	movsbq 0x1(%r8),%rdx
  40c1ae:	84 d2                	test   %dl,%dl
  40c1b0:	0f 85 41 fa ff ff    	jne    40bbf7 <b64_decode.constprop.5+0x37>
    }
  40c1b6:	48 83 c4 08          	add    $0x8,%rsp
  40c1ba:	c3                   	retq   
  40c1bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    for ( cp = str; *cp != '\0'; ++cp )
  40c1c0:	4c 89 d2             	mov    %r10,%rdx
  40c1c3:	4d 89 d0             	mov    %r10,%r8
  40c1c6:	48 c1 ea 03          	shr    $0x3,%rdx
  40c1ca:	41 83 e0 07          	and    $0x7,%r8d
  40c1ce:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40c1d5:	44 38 c2             	cmp    %r8b,%dl
  40c1d8:	0f 8e ca 04 00 00    	jle    40c6a8 <b64_decode.constprop.5+0xae8>
  40c1de:	48 0f be 57 03       	movsbq 0x3(%rdi),%rdx
  40c1e3:	84 d2                	test   %dl,%dl
  40c1e5:	74 94                	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40c1e7:	4c 8d 0c 95 20 c1 42 	lea    0x42c120(,%rdx,4),%r9
  40c1ee:	00 
  40c1ef:	4d 89 c8             	mov    %r9,%r8
  40c1f2:	49 c1 e8 03          	shr    $0x3,%r8
  40c1f6:	45 0f b6 98 00 80 ff 	movzbl 0x7fff8000(%r8),%r11d
  40c1fd:	7f 
  40c1fe:	4d 89 c8             	mov    %r9,%r8
  40c201:	41 83 e0 07          	and    $0x7,%r8d
  40c205:	41 83 c0 03          	add    $0x3,%r8d
  40c209:	45 38 d8             	cmp    %r11b,%r8b
  40c20c:	0f 8d ae 04 00 00    	jge    40c6c0 <b64_decode.constprop.5+0xb00>
  40c212:	8b 14 95 20 c1 42 00 	mov    0x42c120(,%rdx,4),%edx
	if ( d != -1 )
  40c219:	83 fa ff             	cmp    $0xffffffff,%edx
  40c21c:	0f 84 20 08 00 00    	je     40ca42 <b64_decode.constprop.5+0xe82>
  40c222:	4c 89 d7             	mov    %r10,%rdi
  40c225:	0f 1f 00             	nopl   (%rax)
  40c228:	4c 8d 57 01          	lea    0x1(%rdi),%r10
  40c22c:	e9 a6 fa ff ff       	jmpq   40bcd7 <b64_decode.constprop.5+0x117>
  40c231:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for ( cp = str; *cp != '\0'; ++cp )
  40c238:	4c 89 c9             	mov    %r9,%rcx
  40c23b:	4d 89 c8             	mov    %r9,%r8
  40c23e:	48 c1 e9 03          	shr    $0x3,%rcx
  40c242:	41 83 e0 07          	and    $0x7,%r8d
  40c246:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40c24d:	44 38 c1             	cmp    %r8b,%cl
  40c250:	7f 08                	jg     40c25a <b64_decode.constprop.5+0x69a>
  40c252:	84 c9                	test   %cl,%cl
  40c254:	0f 85 e7 09 00 00    	jne    40cc41 <b64_decode.constprop.5+0x1081>
  40c25a:	49 0f be 4a 01       	movsbq 0x1(%r10),%rcx
  40c25f:	84 c9                	test   %cl,%cl
  40c261:	0f 84 14 ff ff ff    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40c267:	4c 8d 0c 8d 20 c1 42 	lea    0x42c120(,%rcx,4),%r9
  40c26e:	00 
  40c26f:	4d 89 c8             	mov    %r9,%r8
  40c272:	49 c1 e8 03          	shr    $0x3,%r8
  40c276:	45 0f b6 98 00 80 ff 	movzbl 0x7fff8000(%r8),%r11d
  40c27d:	7f 
  40c27e:	4d 89 c8             	mov    %r9,%r8
  40c281:	41 83 e0 07          	and    $0x7,%r8d
  40c285:	41 83 c0 03          	add    $0x3,%r8d
  40c289:	45 38 d8             	cmp    %r11b,%r8b
  40c28c:	7c 09                	jl     40c297 <b64_decode.constprop.5+0x6d7>
  40c28e:	45 84 db             	test   %r11b,%r11b
  40c291:	0f 85 40 0a 00 00    	jne    40ccd7 <b64_decode.constprop.5+0x1117>
  40c297:	44 8b 04 8d 20 c1 42 	mov    0x42c120(,%rcx,4),%r8d
  40c29e:	00 
	if ( d != -1 )
  40c29f:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
  40c2a3:	0f 84 a5 06 00 00    	je     40c94e <b64_decode.constprop.5+0xd8e>
  40c2a9:	89 d1                	mov    %edx,%ecx
  40c2ab:	44 89 c2             	mov    %r8d,%edx
  40c2ae:	41 89 c0             	mov    %eax,%r8d
  40c2b1:	89 c8                	mov    %ecx,%eax
  40c2b3:	49 89 fa             	mov    %rdi,%r10
  40c2b6:	89 d1                	mov    %edx,%ecx
  40c2b8:	48 83 c7 01          	add    $0x1,%rdi
  40c2bc:	89 c2                	mov    %eax,%edx
		if ( space_idx < size )
  40c2be:	41 81 f8 f2 01 00 00 	cmp    $0x1f2,%r8d
  40c2c5:	0f 8e dc fa ff ff    	jle    40bda7 <b64_decode.constprop.5+0x1e7>
  40c2cb:	44 89 c0             	mov    %r8d,%eax
  40c2ce:	4d 8d 4a 01          	lea    0x1(%r10),%r9
  40c2d2:	e9 3d fd ff ff       	jmpq   40c014 <b64_decode.constprop.5+0x454>
  40c2d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40c2de:	00 00 
  40c2e0:	4c 8d 47 01          	lea    0x1(%rdi),%r8
    for ( cp = str; *cp != '\0'; ++cp )
  40c2e4:	4c 89 c2             	mov    %r8,%rdx
  40c2e7:	4d 89 c1             	mov    %r8,%r9
  40c2ea:	48 c1 ea 03          	shr    $0x3,%rdx
  40c2ee:	41 83 e1 07          	and    $0x7,%r9d
  40c2f2:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40c2f9:	44 38 ca             	cmp    %r9b,%dl
  40c2fc:	7f 08                	jg     40c306 <b64_decode.constprop.5+0x746>
  40c2fe:	84 d2                	test   %dl,%dl
  40c300:	0f 85 db 08 00 00    	jne    40cbe1 <b64_decode.constprop.5+0x1021>
  40c306:	48 0f be 57 01       	movsbq 0x1(%rdi),%rdx
  40c30b:	84 d2                	test   %dl,%dl
  40c30d:	0f 84 68 fe ff ff    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40c313:	4c 8d 14 95 20 c1 42 	lea    0x42c120(,%rdx,4),%r10
  40c31a:	00 
  40c31b:	4d 89 d1             	mov    %r10,%r9
  40c31e:	49 c1 e9 03          	shr    $0x3,%r9
  40c322:	45 0f b6 99 00 80 ff 	movzbl 0x7fff8000(%r9),%r11d
  40c329:	7f 
  40c32a:	4d 89 d1             	mov    %r10,%r9
  40c32d:	41 83 e1 07          	and    $0x7,%r9d
  40c331:	41 83 c1 03          	add    $0x3,%r9d
  40c335:	45 38 d9             	cmp    %r11b,%r9b
  40c338:	7c 09                	jl     40c343 <b64_decode.constprop.5+0x783>
  40c33a:	45 84 db             	test   %r11b,%r11b
  40c33d:	0f 85 e6 08 00 00    	jne    40cc29 <b64_decode.constprop.5+0x1069>
  40c343:	8b 14 95 20 c1 42 00 	mov    0x42c120(,%rdx,4),%edx
	if ( d != -1 )
  40c34a:	83 fa ff             	cmp    $0xffffffff,%edx
  40c34d:	0f 84 8d 03 00 00    	je     40c6e0 <b64_decode.constprop.5+0xb20>
  40c353:	4c 89 c7             	mov    %r8,%rdi
  40c356:	e9 03 fb ff ff       	jmpq   40be5e <b64_decode.constprop.5+0x29e>
  40c35b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40c360:	4c 8d 47 01          	lea    0x1(%rdi),%r8
    for ( cp = str; *cp != '\0'; ++cp )
  40c364:	4c 89 c2             	mov    %r8,%rdx
  40c367:	4d 89 c1             	mov    %r8,%r9
  40c36a:	48 c1 ea 03          	shr    $0x3,%rdx
  40c36e:	41 83 e1 07          	and    $0x7,%r9d
  40c372:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40c379:	44 38 ca             	cmp    %r9b,%dl
  40c37c:	7f 08                	jg     40c386 <b64_decode.constprop.5+0x7c6>
  40c37e:	84 d2                	test   %dl,%dl
  40c380:	0f 85 b3 08 00 00    	jne    40cc39 <b64_decode.constprop.5+0x1079>
  40c386:	48 0f be 57 01       	movsbq 0x1(%rdi),%rdx
  40c38b:	84 d2                	test   %dl,%dl
  40c38d:	0f 84 e8 fd ff ff    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40c393:	4c 8d 14 95 20 c1 42 	lea    0x42c120(,%rdx,4),%r10
  40c39a:	00 
  40c39b:	4d 89 d1             	mov    %r10,%r9
  40c39e:	49 c1 e9 03          	shr    $0x3,%r9
  40c3a2:	45 0f b6 99 00 80 ff 	movzbl 0x7fff8000(%r9),%r11d
  40c3a9:	7f 
  40c3aa:	4d 89 d1             	mov    %r10,%r9
  40c3ad:	41 83 e1 07          	and    $0x7,%r9d
  40c3b1:	41 83 c1 03          	add    $0x3,%r9d
  40c3b5:	45 38 d9             	cmp    %r11b,%r9b
  40c3b8:	7c 09                	jl     40c3c3 <b64_decode.constprop.5+0x803>
  40c3ba:	45 84 db             	test   %r11b,%r11b
  40c3bd:	0f 85 6e 08 00 00    	jne    40cc31 <b64_decode.constprop.5+0x1071>
  40c3c3:	8b 14 95 20 c1 42 00 	mov    0x42c120(,%rdx,4),%edx
	if ( d != -1 )
  40c3ca:	83 fa ff             	cmp    $0xffffffff,%edx
  40c3cd:	0f 84 07 04 00 00    	je     40c7da <b64_decode.constprop.5+0xc1a>
  40c3d3:	4c 89 c7             	mov    %r8,%rdi
  40c3d6:	e9 a8 fc ff ff       	jmpq   40c083 <b64_decode.constprop.5+0x4c3>
  40c3db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    for ( cp = str; *cp != '\0'; ++cp )
  40c3e0:	4c 89 d0             	mov    %r10,%rax
  40c3e3:	4c 89 d2             	mov    %r10,%rdx
  40c3e6:	48 c1 e8 03          	shr    $0x3,%rax
  40c3ea:	83 e2 07             	and    $0x7,%edx
  40c3ed:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40c3f4:	38 d0                	cmp    %dl,%al
  40c3f6:	7f 10                	jg     40c408 <b64_decode.constprop.5+0x848>
  40c3f8:	84 c0                	test   %al,%al
  40c3fa:	74 0c                	je     40c408 <b64_decode.constprop.5+0x848>
  40c3fc:	4c 89 d7             	mov    %r10,%rdi
  40c3ff:	e8 0c 6d ff ff       	callq  403110 <__asan_report_load1@plt>
  40c404:	0f 1f 40 00          	nopl   0x0(%rax)
  40c408:	48 0f be 47 03       	movsbq 0x3(%rdi),%rax
  40c40d:	84 c0                	test   %al,%al
  40c40f:	0f 84 63 fd ff ff    	je     40c178 <b64_decode.constprop.5+0x5b8>
	d = b64_decode_table[(int) *cp];
  40c415:	4c 8d 04 85 20 c1 42 	lea    0x42c120(,%rax,4),%r8
  40c41c:	00 
  40c41d:	4c 89 c2             	mov    %r8,%rdx
  40c420:	48 c1 ea 03          	shr    $0x3,%rdx
  40c424:	44 0f b6 9a 00 80 ff 	movzbl 0x7fff8000(%rdx),%r11d
  40c42b:	7f 
  40c42c:	4c 89 c2             	mov    %r8,%rdx
  40c42f:	83 e2 07             	and    $0x7,%edx
  40c432:	83 c2 03             	add    $0x3,%edx
  40c435:	44 38 da             	cmp    %r11b,%dl
  40c438:	7c 16                	jl     40c450 <b64_decode.constprop.5+0x890>
  40c43a:	45 84 db             	test   %r11b,%r11b
  40c43d:	74 11                	je     40c450 <b64_decode.constprop.5+0x890>
  40c43f:	4c 89 c7             	mov    %r8,%rdi
  40c442:	e8 89 69 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40c447:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40c44e:	00 00 
  40c450:	8b 14 85 20 c1 42 00 	mov    0x42c120(,%rax,4),%edx
	if ( d != -1 )
  40c457:	83 fa ff             	cmp    $0xffffffff,%edx
  40c45a:	0f 84 68 05 00 00    	je     40c9c8 <b64_decode.constprop.5+0xe08>
		    space[space_idx++] = c;
  40c460:	44 89 c8             	mov    %r9d,%eax
	if ( d != -1 )
  40c463:	4c 89 d7             	mov    %r10,%rdi
  40c466:	e9 bd fd ff ff       	jmpq   40c228 <b64_decode.constprop.5+0x668>
  40c46b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    for ( cp = str; *cp != '\0'; ++cp )
  40c470:	45 84 c9             	test   %r9b,%r9b
  40c473:	0f 84 02 fd ff ff    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40c479:	4e 8d 14 8d 20 c1 42 	lea    0x42c120(,%r9,4),%r10
  40c480:	00 
  40c481:	4c 89 d1             	mov    %r10,%rcx
  40c484:	48 c1 e9 03          	shr    $0x3,%rcx
  40c488:	44 0f b6 99 00 80 ff 	movzbl 0x7fff8000(%rcx),%r11d
  40c48f:	7f 
  40c490:	4c 89 d1             	mov    %r10,%rcx
  40c493:	83 e1 07             	and    $0x7,%ecx
  40c496:	83 c1 03             	add    $0x3,%ecx
  40c499:	44 38 d9             	cmp    %r11b,%cl
  40c49c:	7c 09                	jl     40c4a7 <b64_decode.constprop.5+0x8e7>
  40c49e:	45 84 db             	test   %r11b,%r11b
  40c4a1:	0f 85 7a 07 00 00    	jne    40cc21 <b64_decode.constprop.5+0x1061>
  40c4a7:	42 8b 0c 8d 20 c1 42 	mov    0x42c120(,%r9,4),%ecx
  40c4ae:	00 
	if ( d != -1 )
  40c4af:	4c 8d 4f 03          	lea    0x3(%rdi),%r9
  40c4b3:	83 f9 ff             	cmp    $0xffffffff,%ecx
  40c4b6:	0f 84 a5 02 00 00    	je     40c761 <b64_decode.constprop.5+0xba1>
  40c4bc:	4c 89 cf             	mov    %r9,%rdi
  40c4bf:	e9 9a f7 ff ff       	jmpq   40bc5e <b64_decode.constprop.5+0x9e>
  40c4c4:	0f 1f 40 00          	nopl   0x0(%rax)
    for ( cp = str; *cp != '\0'; ++cp )
  40c4c8:	84 c0                	test   %al,%al
  40c4ca:	0f 84 a8 fc ff ff    	je     40c178 <b64_decode.constprop.5+0x5b8>
	d = b64_decode_table[(int) *cp];
  40c4d0:	4c 8d 14 85 20 c1 42 	lea    0x42c120(,%rax,4),%r10
  40c4d7:	00 
  40c4d8:	4c 89 d1             	mov    %r10,%rcx
  40c4db:	48 c1 e9 03          	shr    $0x3,%rcx
  40c4df:	44 0f b6 99 00 80 ff 	movzbl 0x7fff8000(%rcx),%r11d
  40c4e6:	7f 
  40c4e7:	4c 89 d1             	mov    %r10,%rcx
  40c4ea:	83 e1 07             	and    $0x7,%ecx
  40c4ed:	83 c1 03             	add    $0x3,%ecx
  40c4f0:	44 38 d9             	cmp    %r11b,%cl
  40c4f3:	7c 09                	jl     40c4fe <b64_decode.constprop.5+0x93e>
  40c4f5:	45 84 db             	test   %r11b,%r11b
  40c4f8:	0f 85 60 07 00 00    	jne    40cc5e <b64_decode.constprop.5+0x109e>
  40c4fe:	8b 0c 85 20 c1 42 00 	mov    0x42c120(,%rax,4),%ecx
	if ( d != -1 )
  40c505:	4c 8d 57 03          	lea    0x3(%rdi),%r10
  40c509:	83 f9 ff             	cmp    $0xffffffff,%ecx
  40c50c:	0f 84 c4 03 00 00    	je     40c8d6 <b64_decode.constprop.5+0xd16>
  40c512:	4c 89 d7             	mov    %r10,%rdi
		    space[space_idx++] = c;
  40c515:	44 89 c8             	mov    %r9d,%eax
  40c518:	e9 41 f7 ff ff       	jmpq   40bc5e <b64_decode.constprop.5+0x9e>
  40c51d:	0f 1f 00             	nopl   (%rax)
    for ( cp = str; *cp != '\0'; ++cp )
  40c520:	4c 89 c8             	mov    %r9,%rax
  40c523:	4c 89 c9             	mov    %r9,%rcx
  40c526:	48 c1 e8 03          	shr    $0x3,%rax
  40c52a:	83 e1 07             	and    $0x7,%ecx
  40c52d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40c534:	38 c8                	cmp    %cl,%al
  40c536:	7f 08                	jg     40c540 <b64_decode.constprop.5+0x980>
  40c538:	84 c0                	test   %al,%al
  40c53a:	0f 85 c1 07 00 00    	jne    40cd01 <b64_decode.constprop.5+0x1141>
  40c540:	49 0f be 42 01       	movsbq 0x1(%r10),%rax
  40c545:	84 c0                	test   %al,%al
  40c547:	0f 84 53 01 00 00    	je     40c6a0 <b64_decode.constprop.5+0xae0>
	d = b64_decode_table[(int) *cp];
  40c54d:	4c 8d 0c 85 20 c1 42 	lea    0x42c120(,%rax,4),%r9
  40c554:	00 
  40c555:	4c 89 c9             	mov    %r9,%rcx
  40c558:	48 c1 e9 03          	shr    $0x3,%rcx
  40c55c:	44 0f b6 99 00 80 ff 	movzbl 0x7fff8000(%rcx),%r11d
  40c563:	7f 
  40c564:	4c 89 c9             	mov    %r9,%rcx
  40c567:	83 e1 07             	and    $0x7,%ecx
  40c56a:	83 c1 03             	add    $0x3,%ecx
  40c56d:	44 38 d9             	cmp    %r11b,%cl
  40c570:	7c 09                	jl     40c57b <b64_decode.constprop.5+0x9bb>
  40c572:	45 84 db             	test   %r11b,%r11b
  40c575:	0f 85 7e 07 00 00    	jne    40ccf9 <b64_decode.constprop.5+0x1139>
  40c57b:	44 8b 0c 85 20 c1 42 	mov    0x42c120(,%rax,4),%r9d
  40c582:	00 
	if ( d != -1 )
  40c583:	41 83 f9 ff          	cmp    $0xffffffff,%r9d
  40c587:	0f 84 c5 02 00 00    	je     40c852 <b64_decode.constprop.5+0xc92>
  40c58d:	89 d1                	mov    %edx,%ecx
		    space[space_idx++] = c;
  40c58f:	44 89 c0             	mov    %r8d,%eax
	if ( d != -1 )
  40c592:	44 89 ca             	mov    %r9d,%edx
  40c595:	49 89 fa             	mov    %rdi,%r10
  40c598:	41 89 c0             	mov    %eax,%r8d
  40c59b:	89 c8                	mov    %ecx,%eax
  40c59d:	48 83 c7 01          	add    $0x1,%rdi
  40c5a1:	89 d1                	mov    %edx,%ecx
  40c5a3:	89 c2                	mov    %eax,%edx
  40c5a5:	e9 14 fd ff ff       	jmpq   40c2be <b64_decode.constprop.5+0x6fe>
  40c5aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    for ( cp = str; *cp != '\0'; ++cp )
  40c5b0:	4c 89 d2             	mov    %r10,%rdx
  40c5b3:	4d 89 d0             	mov    %r10,%r8
  40c5b6:	48 c1 ea 03          	shr    $0x3,%rdx
  40c5ba:	41 83 e0 07          	and    $0x7,%r8d
  40c5be:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40c5c5:	44 38 c2             	cmp    %r8b,%dl
  40c5c8:	7f 08                	jg     40c5d2 <b64_decode.constprop.5+0xa12>
  40c5ca:	84 d2                	test   %dl,%dl
  40c5cc:	0f 85 1f 07 00 00    	jne    40ccf1 <b64_decode.constprop.5+0x1131>
  40c5d2:	48 0f be 57 01       	movsbq 0x1(%rdi),%rdx
  40c5d7:	84 d2                	test   %dl,%dl
  40c5d9:	0f 84 9c fb ff ff    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40c5df:	4c 8d 0c 95 20 c1 42 	lea    0x42c120(,%rdx,4),%r9
  40c5e6:	00 
  40c5e7:	4d 89 c8             	mov    %r9,%r8
  40c5ea:	49 c1 e8 03          	shr    $0x3,%r8
  40c5ee:	45 0f b6 98 00 80 ff 	movzbl 0x7fff8000(%r8),%r11d
  40c5f5:	7f 
  40c5f6:	4d 89 c8             	mov    %r9,%r8
  40c5f9:	41 83 e0 07          	and    $0x7,%r8d
  40c5fd:	41 83 c0 03          	add    $0x3,%r8d
  40c601:	45 38 d8             	cmp    %r11b,%r8b
  40c604:	7c 09                	jl     40c60f <b64_decode.constprop.5+0xa4f>
  40c606:	45 84 db             	test   %r11b,%r11b
  40c609:	0f 85 aa 05 00 00    	jne    40cbb9 <b64_decode.constprop.5+0xff9>
  40c60f:	8b 14 95 20 c1 42 00 	mov    0x42c120(,%rdx,4),%edx
	if ( d != -1 )
  40c616:	83 fa ff             	cmp    $0xffffffff,%edx
  40c619:	0f 85 03 fc ff ff    	jne    40c222 <b64_decode.constprop.5+0x662>
  40c61f:	4c 8d 47 02          	lea    0x2(%rdi),%r8
    for ( cp = str; *cp != '\0'; ++cp )
  40c623:	4c 89 c2             	mov    %r8,%rdx
  40c626:	4d 89 c1             	mov    %r8,%r9
  40c629:	48 c1 ea 03          	shr    $0x3,%rdx
  40c62d:	41 83 e1 07          	and    $0x7,%r9d
  40c631:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40c638:	44 38 ca             	cmp    %r9b,%dl
  40c63b:	7f 08                	jg     40c645 <b64_decode.constprop.5+0xa85>
  40c63d:	84 d2                	test   %dl,%dl
  40c63f:	0f 85 eb 06 00 00    	jne    40cd30 <b64_decode.constprop.5+0x1170>
  40c645:	48 0f be 57 02       	movsbq 0x2(%rdi),%rdx
  40c64a:	84 d2                	test   %dl,%dl
  40c64c:	0f 84 29 fb ff ff    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40c652:	48 8d 3c 95 20 c1 42 	lea    0x42c120(,%rdx,4),%rdi
  40c659:	00 
  40c65a:	49 89 f9             	mov    %rdi,%r9
  40c65d:	49 c1 e9 03          	shr    $0x3,%r9
  40c661:	45 0f b6 91 00 80 ff 	movzbl 0x7fff8000(%r9),%r10d
  40c668:	7f 
  40c669:	49 89 f9             	mov    %rdi,%r9
  40c66c:	41 83 e1 07          	and    $0x7,%r9d
  40c670:	41 83 c1 03          	add    $0x3,%r9d
  40c674:	45 38 d1             	cmp    %r10b,%r9b
  40c677:	7c 09                	jl     40c682 <b64_decode.constprop.5+0xac2>
  40c679:	45 84 d2             	test   %r10b,%r10b
  40c67c:	0f 85 b6 06 00 00    	jne    40cd38 <b64_decode.constprop.5+0x1178>
  40c682:	8b 14 95 20 c1 42 00 	mov    0x42c120(,%rdx,4),%edx
	if ( d != -1 )
  40c689:	4c 89 c7             	mov    %r8,%rdi
  40c68c:	83 fa ff             	cmp    $0xffffffff,%edx
  40c68f:	0f 85 93 fb ff ff    	jne    40c228 <b64_decode.constprop.5+0x668>
		++phase;
  40c695:	41 bb 01 00 00 00    	mov    $0x1,%r11d
  40c69b:	e9 e3 fa ff ff       	jmpq   40c183 <b64_decode.constprop.5+0x5c3>
		    space[space_idx++] = c;
  40c6a0:	44 89 c0             	mov    %r8d,%eax
  40c6a3:	e9 d3 fa ff ff       	jmpq   40c17b <b64_decode.constprop.5+0x5bb>
    for ( cp = str; *cp != '\0'; ++cp )
  40c6a8:	84 d2                	test   %dl,%dl
  40c6aa:	0f 84 2e fb ff ff    	je     40c1de <b64_decode.constprop.5+0x61e>
  40c6b0:	4c 89 d7             	mov    %r10,%rdi
  40c6b3:	e8 58 6a ff ff       	callq  403110 <__asan_report_load1@plt>
  40c6b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40c6bf:	00 
	d = b64_decode_table[(int) *cp];
  40c6c0:	45 84 db             	test   %r11b,%r11b
  40c6c3:	0f 84 49 fb ff ff    	je     40c212 <b64_decode.constprop.5+0x652>
  40c6c9:	4c 89 cf             	mov    %r9,%rdi
  40c6cc:	e8 ff 66 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40c6d1:	e8 3a 6a ff ff       	callq  403110 <__asan_report_load1@plt>
  40c6d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c6dd:	00 00 00 
  40c6e0:	4c 8d 47 02          	lea    0x2(%rdi),%r8
  40c6e4:	4c 89 c2             	mov    %r8,%rdx
  40c6e7:	4d 89 c1             	mov    %r8,%r9
  40c6ea:	48 c1 ea 03          	shr    $0x3,%rdx
  40c6ee:	41 83 e1 07          	and    $0x7,%r9d
  40c6f2:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40c6f9:	44 38 ca             	cmp    %r9b,%dl
  40c6fc:	7f 08                	jg     40c706 <b64_decode.constprop.5+0xb46>
  40c6fe:	84 d2                	test   %dl,%dl
  40c700:	0f 85 1d 06 00 00    	jne    40cd23 <b64_decode.constprop.5+0x1163>
  40c706:	48 0f be 57 02       	movsbq 0x2(%rdi),%rdx
  40c70b:	84 d2                	test   %dl,%dl
  40c70d:	0f 84 68 fa ff ff    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40c713:	48 8d 3c 95 20 c1 42 	lea    0x42c120(,%rdx,4),%rdi
  40c71a:	00 
  40c71b:	49 89 f9             	mov    %rdi,%r9
  40c71e:	49 c1 e9 03          	shr    $0x3,%r9
  40c722:	45 0f b6 91 00 80 ff 	movzbl 0x7fff8000(%r9),%r10d
  40c729:	7f 
  40c72a:	49 89 f9             	mov    %rdi,%r9
  40c72d:	41 83 e1 07          	and    $0x7,%r9d
  40c731:	41 83 c1 03          	add    $0x3,%r9d
  40c735:	45 38 d1             	cmp    %r10b,%r9b
  40c738:	7c 09                	jl     40c743 <b64_decode.constprop.5+0xb83>
  40c73a:	45 84 d2             	test   %r10b,%r10b
  40c73d:	0f 85 e8 05 00 00    	jne    40cd2b <b64_decode.constprop.5+0x116b>
  40c743:	8b 14 95 20 c1 42 00 	mov    0x42c120(,%rdx,4),%edx
	if ( d != -1 )
  40c74a:	4c 89 c7             	mov    %r8,%rdi
  40c74d:	83 fa ff             	cmp    $0xffffffff,%edx
  40c750:	0f 85 08 f7 ff ff    	jne    40be5e <b64_decode.constprop.5+0x29e>
		++phase;
  40c756:	41 bb 03 00 00 00    	mov    $0x3,%r11d
  40c75c:	e9 22 fa ff ff       	jmpq   40c183 <b64_decode.constprop.5+0x5c3>
    for ( cp = str; *cp != '\0'; ++cp )
  40c761:	4c 89 c9             	mov    %r9,%rcx
  40c764:	4d 89 c8             	mov    %r9,%r8
  40c767:	48 c1 e9 03          	shr    $0x3,%rcx
  40c76b:	41 83 e0 07          	and    $0x7,%r8d
  40c76f:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40c776:	44 38 c1             	cmp    %r8b,%cl
  40c779:	7f 08                	jg     40c783 <b64_decode.constprop.5+0xbc3>
  40c77b:	84 c9                	test   %cl,%cl
  40c77d:	0f 85 c3 04 00 00    	jne    40cc46 <b64_decode.constprop.5+0x1086>
  40c783:	48 0f be 4f 03       	movsbq 0x3(%rdi),%rcx
  40c788:	84 c9                	test   %cl,%cl
  40c78a:	0f 84 eb f9 ff ff    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40c790:	4c 8d 14 8d 20 c1 42 	lea    0x42c120(,%rcx,4),%r10
  40c797:	00 
  40c798:	4d 89 d0             	mov    %r10,%r8
  40c79b:	49 c1 e8 03          	shr    $0x3,%r8
  40c79f:	45 0f b6 98 00 80 ff 	movzbl 0x7fff8000(%r8),%r11d
  40c7a6:	7f 
  40c7a7:	4d 89 d0             	mov    %r10,%r8
  40c7aa:	41 83 e0 07          	and    $0x7,%r8d
  40c7ae:	41 83 c0 03          	add    $0x3,%r8d
  40c7b2:	45 38 d8             	cmp    %r11b,%r8b
  40c7b5:	7c 09                	jl     40c7c0 <b64_decode.constprop.5+0xc00>
  40c7b7:	45 84 db             	test   %r11b,%r11b
  40c7ba:	0f 85 8e 04 00 00    	jne    40cc4e <b64_decode.constprop.5+0x108e>
  40c7c0:	8b 0c 8d 20 c1 42 00 	mov    0x42c120(,%rcx,4),%ecx
	if ( d != -1 )
  40c7c7:	83 f9 ff             	cmp    $0xffffffff,%ecx
  40c7ca:	0f 84 e0 02 00 00    	je     40cab0 <b64_decode.constprop.5+0xef0>
  40c7d0:	4c 89 cf             	mov    %r9,%rdi
	d = b64_decode_table[(int) *cp];
  40c7d3:	89 ca                	mov    %ecx,%edx
  40c7d5:	e9 7b f4 ff ff       	jmpq   40bc55 <b64_decode.constprop.5+0x95>
  40c7da:	4c 8d 47 02          	lea    0x2(%rdi),%r8
    for ( cp = str; *cp != '\0'; ++cp )
  40c7de:	4c 89 c2             	mov    %r8,%rdx
  40c7e1:	4d 89 c1             	mov    %r8,%r9
  40c7e4:	48 c1 ea 03          	shr    $0x3,%rdx
  40c7e8:	41 83 e1 07          	and    $0x7,%r9d
  40c7ec:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40c7f3:	44 38 ca             	cmp    %r9b,%dl
  40c7f6:	7f 08                	jg     40c800 <b64_decode.constprop.5+0xc40>
  40c7f8:	84 d2                	test   %dl,%dl
  40c7fa:	0f 85 56 04 00 00    	jne    40cc56 <b64_decode.constprop.5+0x1096>
  40c800:	48 0f be 57 02       	movsbq 0x2(%rdi),%rdx
  40c805:	84 d2                	test   %dl,%dl
  40c807:	0f 84 6e f9 ff ff    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40c80d:	48 8d 3c 95 20 c1 42 	lea    0x42c120(,%rdx,4),%rdi
  40c814:	00 
  40c815:	49 89 f9             	mov    %rdi,%r9
  40c818:	49 c1 e9 03          	shr    $0x3,%r9
  40c81c:	45 0f b6 91 00 80 ff 	movzbl 0x7fff8000(%r9),%r10d
  40c823:	7f 
  40c824:	49 89 f9             	mov    %rdi,%r9
  40c827:	41 83 e1 07          	and    $0x7,%r9d
  40c82b:	41 83 c1 03          	add    $0x3,%r9d
  40c82f:	45 38 d1             	cmp    %r10b,%r9b
  40c832:	7c 09                	jl     40c83d <b64_decode.constprop.5+0xc7d>
  40c834:	45 84 d2             	test   %r10b,%r10b
  40c837:	0f 85 af 04 00 00    	jne    40ccec <b64_decode.constprop.5+0x112c>
  40c83d:	8b 14 95 20 c1 42 00 	mov    0x42c120(,%rdx,4),%edx
	if ( d != -1 )
  40c844:	83 fa ff             	cmp    $0xffffffff,%edx
  40c847:	0f 85 86 fb ff ff    	jne    40c3d3 <b64_decode.constprop.5+0x813>
  40c84d:	e9 04 ff ff ff       	jmpq   40c756 <b64_decode.constprop.5+0xb96>
  40c852:	49 8d 7a 02          	lea    0x2(%r10),%rdi
    for ( cp = str; *cp != '\0'; ++cp )
  40c856:	48 89 f8             	mov    %rdi,%rax
  40c859:	48 89 f9             	mov    %rdi,%rcx
  40c85c:	48 c1 e8 03          	shr    $0x3,%rax
  40c860:	83 e1 07             	and    $0x7,%ecx
  40c863:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40c86a:	38 c8                	cmp    %cl,%al
  40c86c:	7f 08                	jg     40c876 <b64_decode.constprop.5+0xcb6>
  40c86e:	84 c0                	test   %al,%al
  40c870:	0f 85 69 04 00 00    	jne    40ccdf <b64_decode.constprop.5+0x111f>
  40c876:	49 0f be 42 02       	movsbq 0x2(%r10),%rax
  40c87b:	84 c0                	test   %al,%al
  40c87d:	0f 84 1d fe ff ff    	je     40c6a0 <b64_decode.constprop.5+0xae0>
	d = b64_decode_table[(int) *cp];
  40c883:	4c 8d 0c 85 20 c1 42 	lea    0x42c120(,%rax,4),%r9
  40c88a:	00 
  40c88b:	4c 89 c9             	mov    %r9,%rcx
  40c88e:	48 c1 e9 03          	shr    $0x3,%rcx
  40c892:	44 0f b6 91 00 80 ff 	movzbl 0x7fff8000(%rcx),%r10d
  40c899:	7f 
  40c89a:	4c 89 c9             	mov    %r9,%rcx
  40c89d:	83 e1 07             	and    $0x7,%ecx
  40c8a0:	83 c1 03             	add    $0x3,%ecx
  40c8a3:	44 38 d1             	cmp    %r10b,%cl
  40c8a6:	7c 09                	jl     40c8b1 <b64_decode.constprop.5+0xcf1>
  40c8a8:	45 84 d2             	test   %r10b,%r10b
  40c8ab:	0f 85 33 04 00 00    	jne    40cce4 <b64_decode.constprop.5+0x1124>
  40c8b1:	44 8b 0c 85 20 c1 42 	mov    0x42c120(,%rax,4),%r9d
  40c8b8:	00 
	if ( d != -1 )
  40c8b9:	41 83 f9 ff          	cmp    $0xffffffff,%r9d
  40c8bd:	0f 85 ca fc ff ff    	jne    40c58d <b64_decode.constprop.5+0x9cd>
		    space[space_idx++] = c;
  40c8c3:	44 89 c0             	mov    %r8d,%eax
	if ( d != -1 )
  40c8c6:	89 d1                	mov    %edx,%ecx
  40c8c8:	49 89 f8             	mov    %rdi,%r8
		++phase;
  40c8cb:	41 bb 02 00 00 00    	mov    $0x2,%r11d
  40c8d1:	e9 ad f8 ff ff       	jmpq   40c183 <b64_decode.constprop.5+0x5c3>
    for ( cp = str; *cp != '\0'; ++cp )
  40c8d6:	4c 89 d0             	mov    %r10,%rax
  40c8d9:	4c 89 d1             	mov    %r10,%rcx
  40c8dc:	48 c1 e8 03          	shr    $0x3,%rax
  40c8e0:	83 e1 07             	and    $0x7,%ecx
  40c8e3:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40c8ea:	38 c8                	cmp    %cl,%al
  40c8ec:	7f 08                	jg     40c8f6 <b64_decode.constprop.5+0xd36>
  40c8ee:	84 c0                	test   %al,%al
  40c8f0:	0f 85 70 03 00 00    	jne    40cc66 <b64_decode.constprop.5+0x10a6>
  40c8f6:	48 0f be 47 03       	movsbq 0x3(%rdi),%rax
  40c8fb:	84 c0                	test   %al,%al
  40c8fd:	0f 84 75 f8 ff ff    	je     40c178 <b64_decode.constprop.5+0x5b8>
	d = b64_decode_table[(int) *cp];
  40c903:	4c 8d 04 85 20 c1 42 	lea    0x42c120(,%rax,4),%r8
  40c90a:	00 
  40c90b:	4c 89 c1             	mov    %r8,%rcx
  40c90e:	48 c1 e9 03          	shr    $0x3,%rcx
  40c912:	44 0f b6 99 00 80 ff 	movzbl 0x7fff8000(%rcx),%r11d
  40c919:	7f 
  40c91a:	4c 89 c1             	mov    %r8,%rcx
  40c91d:	83 e1 07             	and    $0x7,%ecx
  40c920:	83 c1 03             	add    $0x3,%ecx
  40c923:	44 38 d9             	cmp    %r11b,%cl
  40c926:	7c 09                	jl     40c931 <b64_decode.constprop.5+0xd71>
  40c928:	45 84 db             	test   %r11b,%r11b
  40c92b:	0f 85 3d 03 00 00    	jne    40cc6e <b64_decode.constprop.5+0x10ae>
  40c931:	8b 0c 85 20 c1 42 00 	mov    0x42c120(,%rax,4),%ecx
	if ( d != -1 )
  40c938:	83 f9 ff             	cmp    $0xffffffff,%ecx
  40c93b:	0f 84 e8 01 00 00    	je     40cb29 <b64_decode.constprop.5+0xf69>
		    space[space_idx++] = c;
  40c941:	44 89 c8             	mov    %r9d,%eax
	if ( d != -1 )
  40c944:	4c 89 d7             	mov    %r10,%rdi
	d = b64_decode_table[(int) *cp];
  40c947:	89 ca                	mov    %ecx,%edx
  40c949:	e9 07 f3 ff ff       	jmpq   40bc55 <b64_decode.constprop.5+0x95>
  40c94e:	49 8d 7a 02          	lea    0x2(%r10),%rdi
    for ( cp = str; *cp != '\0'; ++cp )
  40c952:	48 89 f9             	mov    %rdi,%rcx
  40c955:	49 89 f8             	mov    %rdi,%r8
  40c958:	48 c1 e9 03          	shr    $0x3,%rcx
  40c95c:	41 83 e0 07          	and    $0x7,%r8d
  40c960:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40c967:	44 38 c1             	cmp    %r8b,%cl
  40c96a:	7f 08                	jg     40c974 <b64_decode.constprop.5+0xdb4>
  40c96c:	84 c9                	test   %cl,%cl
  40c96e:	0f 85 02 03 00 00    	jne    40cc76 <b64_decode.constprop.5+0x10b6>
  40c974:	49 0f be 4a 02       	movsbq 0x2(%r10),%rcx
  40c979:	84 c9                	test   %cl,%cl
  40c97b:	0f 84 fa f7 ff ff    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40c981:	4c 8d 0c 8d 20 c1 42 	lea    0x42c120(,%rcx,4),%r9
  40c988:	00 
  40c989:	4d 89 c8             	mov    %r9,%r8
  40c98c:	49 c1 e8 03          	shr    $0x3,%r8
  40c990:	45 0f b6 90 00 80 ff 	movzbl 0x7fff8000(%r8),%r10d
  40c997:	7f 
  40c998:	4d 89 c8             	mov    %r9,%r8
  40c99b:	41 83 e0 07          	and    $0x7,%r8d
  40c99f:	41 83 c0 03          	add    $0x3,%r8d
  40c9a3:	45 38 d0             	cmp    %r10b,%r8b
  40c9a6:	7c 09                	jl     40c9b1 <b64_decode.constprop.5+0xdf1>
  40c9a8:	45 84 d2             	test   %r10b,%r10b
  40c9ab:	0f 85 55 03 00 00    	jne    40cd06 <b64_decode.constprop.5+0x1146>
  40c9b1:	44 8b 04 8d 20 c1 42 	mov    0x42c120(,%rcx,4),%r8d
  40c9b8:	00 
	if ( d != -1 )
  40c9b9:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
  40c9bd:	0f 85 e6 f8 ff ff    	jne    40c2a9 <b64_decode.constprop.5+0x6e9>
  40c9c3:	e9 fe fe ff ff       	jmpq   40c8c6 <b64_decode.constprop.5+0xd06>
  40c9c8:	4c 8d 47 04          	lea    0x4(%rdi),%r8
    for ( cp = str; *cp != '\0'; ++cp )
  40c9cc:	4c 89 c0             	mov    %r8,%rax
  40c9cf:	4c 89 c2             	mov    %r8,%rdx
  40c9d2:	48 c1 e8 03          	shr    $0x3,%rax
  40c9d6:	83 e2 07             	and    $0x7,%edx
  40c9d9:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40c9e0:	38 d0                	cmp    %dl,%al
  40c9e2:	7f 08                	jg     40c9ec <b64_decode.constprop.5+0xe2c>
  40c9e4:	84 c0                	test   %al,%al
  40c9e6:	0f 85 2a 03 00 00    	jne    40cd16 <b64_decode.constprop.5+0x1156>
  40c9ec:	48 0f be 47 04       	movsbq 0x4(%rdi),%rax
  40c9f1:	84 c0                	test   %al,%al
  40c9f3:	0f 84 7f f7 ff ff    	je     40c178 <b64_decode.constprop.5+0x5b8>
	d = b64_decode_table[(int) *cp];
  40c9f9:	48 8d 3c 85 20 c1 42 	lea    0x42c120(,%rax,4),%rdi
  40ca00:	00 
  40ca01:	48 89 fa             	mov    %rdi,%rdx
  40ca04:	48 c1 ea 03          	shr    $0x3,%rdx
  40ca08:	44 0f b6 92 00 80 ff 	movzbl 0x7fff8000(%rdx),%r10d
  40ca0f:	7f 
  40ca10:	48 89 fa             	mov    %rdi,%rdx
  40ca13:	83 e2 07             	and    $0x7,%edx
  40ca16:	83 c2 03             	add    $0x3,%edx
  40ca19:	44 38 d2             	cmp    %r10b,%dl
  40ca1c:	7c 09                	jl     40ca27 <b64_decode.constprop.5+0xe67>
  40ca1e:	45 84 d2             	test   %r10b,%r10b
  40ca21:	0f 85 f7 02 00 00    	jne    40cd1e <b64_decode.constprop.5+0x115e>
  40ca27:	8b 14 85 20 c1 42 00 	mov    0x42c120(,%rax,4),%edx
	if ( d != -1 )
  40ca2e:	4c 89 c7             	mov    %r8,%rdi
		    space[space_idx++] = c;
  40ca31:	44 89 c8             	mov    %r9d,%eax
	if ( d != -1 )
  40ca34:	83 fa ff             	cmp    $0xffffffff,%edx
  40ca37:	0f 85 eb f7 ff ff    	jne    40c228 <b64_decode.constprop.5+0x668>
  40ca3d:	e9 53 fc ff ff       	jmpq   40c695 <b64_decode.constprop.5+0xad5>
  40ca42:	4c 8d 47 04          	lea    0x4(%rdi),%r8
    for ( cp = str; *cp != '\0'; ++cp )
  40ca46:	4c 89 c2             	mov    %r8,%rdx
  40ca49:	4d 89 c1             	mov    %r8,%r9
  40ca4c:	48 c1 ea 03          	shr    $0x3,%rdx
  40ca50:	41 83 e1 07          	and    $0x7,%r9d
  40ca54:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40ca5b:	44 38 ca             	cmp    %r9b,%dl
  40ca5e:	7f 08                	jg     40ca68 <b64_decode.constprop.5+0xea8>
  40ca60:	84 d2                	test   %dl,%dl
  40ca62:	0f 85 a6 02 00 00    	jne    40cd0e <b64_decode.constprop.5+0x114e>
  40ca68:	48 0f be 57 04       	movsbq 0x4(%rdi),%rdx
  40ca6d:	84 d2                	test   %dl,%dl
  40ca6f:	0f 84 06 f7 ff ff    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40ca75:	48 8d 3c 95 20 c1 42 	lea    0x42c120(,%rdx,4),%rdi
  40ca7c:	00 
  40ca7d:	49 89 f9             	mov    %rdi,%r9
  40ca80:	49 c1 e9 03          	shr    $0x3,%r9
  40ca84:	45 0f b6 91 00 80 ff 	movzbl 0x7fff8000(%r9),%r10d
  40ca8b:	7f 
  40ca8c:	49 89 f9             	mov    %rdi,%r9
  40ca8f:	41 83 e1 07          	and    $0x7,%r9d
  40ca93:	41 83 c1 03          	add    $0x3,%r9d
  40ca97:	45 38 d1             	cmp    %r10b,%r9b
  40ca9a:	0f 8c e2 fb ff ff    	jl     40c682 <b64_decode.constprop.5+0xac2>
  40caa0:	45 84 d2             	test   %r10b,%r10b
  40caa3:	0f 84 d9 fb ff ff    	je     40c682 <b64_decode.constprop.5+0xac2>
  40caa9:	e8 22 63 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40caae:	66 90                	xchg   %ax,%ax
  40cab0:	4c 8d 47 04          	lea    0x4(%rdi),%r8
    for ( cp = str; *cp != '\0'; ++cp )
  40cab4:	4c 89 c1             	mov    %r8,%rcx
  40cab7:	4d 89 c1             	mov    %r8,%r9
  40caba:	48 c1 e9 03          	shr    $0x3,%rcx
  40cabe:	41 83 e1 07          	and    $0x7,%r9d
  40cac2:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40cac9:	44 38 c9             	cmp    %r9b,%cl
  40cacc:	7f 08                	jg     40cad6 <b64_decode.constprop.5+0xf16>
  40cace:	84 c9                	test   %cl,%cl
  40cad0:	0f 85 ad 01 00 00    	jne    40cc83 <b64_decode.constprop.5+0x10c3>
  40cad6:	48 0f be 4f 04       	movsbq 0x4(%rdi),%rcx
  40cadb:	84 c9                	test   %cl,%cl
  40cadd:	0f 84 98 f6 ff ff    	je     40c17b <b64_decode.constprop.5+0x5bb>
	d = b64_decode_table[(int) *cp];
  40cae3:	48 8d 3c 8d 20 c1 42 	lea    0x42c120(,%rcx,4),%rdi
  40caea:	00 
  40caeb:	49 89 f9             	mov    %rdi,%r9
  40caee:	49 c1 e9 03          	shr    $0x3,%r9
  40caf2:	45 0f b6 91 00 80 ff 	movzbl 0x7fff8000(%r9),%r10d
  40caf9:	7f 
  40cafa:	49 89 f9             	mov    %rdi,%r9
  40cafd:	41 83 e1 07          	and    $0x7,%r9d
  40cb01:	41 83 c1 03          	add    $0x3,%r9d
  40cb05:	45 38 d1             	cmp    %r10b,%r9b
  40cb08:	7c 09                	jl     40cb13 <b64_decode.constprop.5+0xf53>
  40cb0a:	45 84 d2             	test   %r10b,%r10b
  40cb0d:	0f 85 bf 01 00 00    	jne    40ccd2 <b64_decode.constprop.5+0x1112>
  40cb13:	8b 0c 8d 20 c1 42 00 	mov    0x42c120(,%rcx,4),%ecx
	if ( d != -1 )
  40cb1a:	4c 89 c7             	mov    %r8,%rdi
  40cb1d:	83 f9 ff             	cmp    $0xffffffff,%ecx
  40cb20:	74 78                	je     40cb9a <b64_decode.constprop.5+0xfda>
	d = b64_decode_table[(int) *cp];
  40cb22:	89 ca                	mov    %ecx,%edx
  40cb24:	e9 2c f1 ff ff       	jmpq   40bc55 <b64_decode.constprop.5+0x95>
  40cb29:	4c 8d 47 04          	lea    0x4(%rdi),%r8
    for ( cp = str; *cp != '\0'; ++cp )
  40cb2d:	4c 89 c0             	mov    %r8,%rax
  40cb30:	4c 89 c1             	mov    %r8,%rcx
  40cb33:	48 c1 e8 03          	shr    $0x3,%rax
  40cb37:	83 e1 07             	and    $0x7,%ecx
  40cb3a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40cb41:	38 c8                	cmp    %cl,%al
  40cb43:	7f 08                	jg     40cb4d <b64_decode.constprop.5+0xf8d>
  40cb45:	84 c0                	test   %al,%al
  40cb47:	0f 85 3e 01 00 00    	jne    40cc8b <b64_decode.constprop.5+0x10cb>
  40cb4d:	48 0f be 47 04       	movsbq 0x4(%rdi),%rax
  40cb52:	84 c0                	test   %al,%al
  40cb54:	0f 84 1e f6 ff ff    	je     40c178 <b64_decode.constprop.5+0x5b8>
	d = b64_decode_table[(int) *cp];
  40cb5a:	48 8d 3c 85 20 c1 42 	lea    0x42c120(,%rax,4),%rdi
  40cb61:	00 
  40cb62:	48 89 f9             	mov    %rdi,%rcx
  40cb65:	48 c1 e9 03          	shr    $0x3,%rcx
  40cb69:	44 0f b6 91 00 80 ff 	movzbl 0x7fff8000(%rcx),%r10d
  40cb70:	7f 
  40cb71:	48 89 f9             	mov    %rdi,%rcx
  40cb74:	83 e1 07             	and    $0x7,%ecx
  40cb77:	83 c1 03             	add    $0x3,%ecx
  40cb7a:	44 38 d1             	cmp    %r10b,%cl
  40cb7d:	7c 09                	jl     40cb88 <b64_decode.constprop.5+0xfc8>
  40cb7f:	45 84 d2             	test   %r10b,%r10b
  40cb82:	0f 85 0b 01 00 00    	jne    40cc93 <b64_decode.constprop.5+0x10d3>
  40cb88:	8b 0c 85 20 c1 42 00 	mov    0x42c120(,%rax,4),%ecx
	if ( d != -1 )
  40cb8f:	4c 89 c7             	mov    %r8,%rdi
		    space[space_idx++] = c;
  40cb92:	44 89 c8             	mov    %r9d,%eax
	if ( d != -1 )
  40cb95:	83 f9 ff             	cmp    $0xffffffff,%ecx
  40cb98:	75 88                	jne    40cb22 <b64_decode.constprop.5+0xf62>
  40cb9a:	89 d1                	mov    %edx,%ecx
		phase = 0;
  40cb9c:	45 31 db             	xor    %r11d,%r11d
  40cb9f:	e9 df f5 ff ff       	jmpq   40c183 <b64_decode.constprop.5+0x5c3>
	d = b64_decode_table[(int) *cp];
  40cba4:	4c 89 cf             	mov    %r9,%rdi
  40cba7:	e8 24 62 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40cbac:	e8 5f 65 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40cbb1:	4c 89 d7             	mov    %r10,%rdi
  40cbb4:	e8 17 62 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40cbb9:	4c 89 cf             	mov    %r9,%rdi
  40cbbc:	e8 0f 62 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40cbc1:	48 89 c7             	mov    %rax,%rdi
  40cbc4:	e8 47 65 ff ff       	callq  403110 <__asan_report_load1@plt>
		    space[space_idx++] = c;
  40cbc9:	48 89 c7             	mov    %rax,%rdi
  40cbcc:	e8 5f 65 ff ff       	callq  403130 <__asan_report_store1@plt>
	d = b64_decode_table[(int) *cp];
  40cbd1:	4c 89 cf             	mov    %r9,%rdi
  40cbd4:	e8 f7 61 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40cbd9:	4c 89 cf             	mov    %r9,%rdi
  40cbdc:	e8 ef 61 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40cbe1:	4c 89 c7             	mov    %r8,%rdi
  40cbe4:	e8 27 65 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40cbe9:	4c 89 cf             	mov    %r9,%rdi
  40cbec:	e8 df 61 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40cbf1:	48 89 cf             	mov    %rcx,%rdi
  40cbf4:	e8 17 65 ff ff       	callq  403110 <__asan_report_load1@plt>
  40cbf9:	48 89 d7             	mov    %rdx,%rdi
  40cbfc:	e8 0f 65 ff ff       	callq  403110 <__asan_report_load1@plt>
  40cc01:	48 89 c7             	mov    %rax,%rdi
  40cc04:	e8 07 65 ff ff       	callq  403110 <__asan_report_load1@plt>
		    space[space_idx++] = c;
  40cc09:	48 89 c7             	mov    %rax,%rdi
  40cc0c:	e8 1f 65 ff ff       	callq  403130 <__asan_report_store1@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40cc11:	4c 89 cf             	mov    %r9,%rdi
  40cc14:	e8 f7 64 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40cc19:	4c 89 cf             	mov    %r9,%rdi
  40cc1c:	e8 af 61 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40cc21:	4c 89 d7             	mov    %r10,%rdi
  40cc24:	e8 a7 61 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40cc29:	4c 89 d7             	mov    %r10,%rdi
  40cc2c:	e8 9f 61 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40cc31:	4c 89 d7             	mov    %r10,%rdi
  40cc34:	e8 97 61 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40cc39:	4c 89 c7             	mov    %r8,%rdi
  40cc3c:	e8 cf 64 ff ff       	callq  403110 <__asan_report_load1@plt>
  40cc41:	e8 ca 64 ff ff       	callq  403110 <__asan_report_load1@plt>
  40cc46:	4c 89 cf             	mov    %r9,%rdi
  40cc49:	e8 c2 64 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40cc4e:	4c 89 d7             	mov    %r10,%rdi
  40cc51:	e8 7a 61 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40cc56:	4c 89 c7             	mov    %r8,%rdi
  40cc59:	e8 b2 64 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40cc5e:	4c 89 d7             	mov    %r10,%rdi
  40cc61:	e8 6a 61 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40cc66:	4c 89 d7             	mov    %r10,%rdi
  40cc69:	e8 a2 64 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40cc6e:	4c 89 c7             	mov    %r8,%rdi
  40cc71:	e8 5a 61 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40cc76:	e8 95 64 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40cc7b:	4c 89 d7             	mov    %r10,%rdi
  40cc7e:	e8 4d 61 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40cc83:	4c 89 c7             	mov    %r8,%rdi
  40cc86:	e8 85 64 ff ff       	callq  403110 <__asan_report_load1@plt>
  40cc8b:	4c 89 c7             	mov    %r8,%rdi
  40cc8e:	e8 7d 64 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40cc93:	e8 38 61 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40cc98:	e8 33 61 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40cc9d:	4c 89 c7             	mov    %r8,%rdi
  40cca0:	e8 6b 64 ff ff       	callq  403110 <__asan_report_load1@plt>
		    space[space_idx++] = c;
  40cca5:	4c 89 c7             	mov    %r8,%rdi
  40cca8:	e8 83 64 ff ff       	callq  403130 <__asan_report_store1@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40ccad:	48 89 d7             	mov    %rdx,%rdi
  40ccb0:	e8 5b 64 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40ccb5:	e8 16 61 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40ccba:	4c 89 c7             	mov    %r8,%rdi
  40ccbd:	e8 4e 64 ff ff       	callq  403110 <__asan_report_load1@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40ccc2:	48 89 cf             	mov    %rcx,%rdi
  40ccc5:	e8 46 64 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40ccca:	4c 89 c7             	mov    %r8,%rdi
  40cccd:	e8 fe 60 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40ccd2:	e8 f9 60 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40ccd7:	4c 89 cf             	mov    %r9,%rdi
  40ccda:	e8 f1 60 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40ccdf:	e8 2c 64 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40cce4:	4c 89 cf             	mov    %r9,%rdi
  40cce7:	e8 e4 60 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40ccec:	e8 df 60 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40ccf1:	4c 89 d7             	mov    %r10,%rdi
  40ccf4:	e8 17 64 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40ccf9:	4c 89 cf             	mov    %r9,%rdi
  40ccfc:	e8 cf 60 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40cd01:	e8 0a 64 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40cd06:	4c 89 cf             	mov    %r9,%rdi
  40cd09:	e8 c2 60 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40cd0e:	4c 89 c7             	mov    %r8,%rdi
  40cd11:	e8 fa 63 ff ff       	callq  403110 <__asan_report_load1@plt>
  40cd16:	4c 89 c7             	mov    %r8,%rdi
  40cd19:	e8 f2 63 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40cd1e:	e8 ad 60 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40cd23:	4c 89 c7             	mov    %r8,%rdi
  40cd26:	e8 e5 63 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40cd2b:	e8 a0 60 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp = str; *cp != '\0'; ++cp )
  40cd30:	4c 89 c7             	mov    %r8,%rdi
  40cd33:	e8 d8 63 ff ff       	callq  403110 <__asan_report_load1@plt>
	d = b64_decode_table[(int) *cp];
  40cd38:	e8 93 60 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40cd3d:	0f 1f 00             	nopl   (%rax)

000000000040cd40 <defang.constprop.6>:
	  *cp1 != '\0' && cp2 - dfstr < dfsize - 5;
  40cd40:	48 89 f8             	mov    %rdi,%rax
defang( char* str, char* dfstr, int dfsize )
  40cd43:	48 83 ec 08          	sub    $0x8,%rsp
	  *cp1 != '\0' && cp2 - dfstr < dfsize - 5;
  40cd47:	48 89 fa             	mov    %rdi,%rdx
  40cd4a:	48 c1 e8 03          	shr    $0x3,%rax
  40cd4e:	83 e2 07             	and    $0x7,%edx
  40cd51:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40cd58:	38 d0                	cmp    %dl,%al
  40cd5a:	7f 08                	jg     40cd64 <defang.constprop.6+0x24>
  40cd5c:	84 c0                	test   %al,%al
  40cd5e:	0f 85 18 02 00 00    	jne    40cf7c <defang.constprop.6+0x23c>
  40cd64:	0f b6 17             	movzbl (%rdi),%edx
    for ( cp1 = str, cp2 = dfstr;
  40cd67:	48 89 f0             	mov    %rsi,%rax
  40cd6a:	84 d2                	test   %dl,%dl
  40cd6c:	75 77                	jne    40cde5 <defang.constprop.6+0xa5>
  40cd6e:	e9 dd 01 00 00       	jmpq   40cf50 <defang.constprop.6+0x210>
  40cd73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	    *cp2 = *cp1;
  40cd78:	48 89 c1             	mov    %rax,%rcx
  40cd7b:	49 89 c0             	mov    %rax,%r8
  40cd7e:	48 c1 e9 03          	shr    $0x3,%rcx
  40cd82:	41 83 e0 07          	and    $0x7,%r8d
  40cd86:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40cd8d:	44 38 c1             	cmp    %r8b,%cl
  40cd90:	7f 08                	jg     40cd9a <defang.constprop.6+0x5a>
  40cd92:	84 c9                	test   %cl,%cl
  40cd94:	0f 85 24 02 00 00    	jne    40cfbe <defang.constprop.6+0x27e>
  40cd9a:	88 10                	mov    %dl,(%rax)
  40cd9c:	48 89 c2             	mov    %rax,%rdx
	  ++cp1, ++cp2 )
  40cd9f:	48 83 c7 01          	add    $0x1,%rdi
  40cda3:	48 8d 42 01          	lea    0x1(%rdx),%rax
	  *cp1 != '\0' && cp2 - dfstr < dfsize - 5;
  40cda7:	48 89 fa             	mov    %rdi,%rdx
  40cdaa:	48 89 f9             	mov    %rdi,%rcx
  40cdad:	48 c1 ea 03          	shr    $0x3,%rdx
  40cdb1:	83 e1 07             	and    $0x7,%ecx
  40cdb4:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40cdbb:	38 ca                	cmp    %cl,%dl
  40cdbd:	7f 08                	jg     40cdc7 <defang.constprop.6+0x87>
  40cdbf:	84 d2                	test   %dl,%dl
  40cdc1:	0f 85 ba 01 00 00    	jne    40cf81 <defang.constprop.6+0x241>
  40cdc7:	0f b6 17             	movzbl (%rdi),%edx
    for ( cp1 = str, cp2 = dfstr;
  40cdca:	84 d2                	test   %dl,%dl
  40cdcc:	0f 84 7e 01 00 00    	je     40cf50 <defang.constprop.6+0x210>
	  *cp1 != '\0' && cp2 - dfstr < dfsize - 5;
  40cdd2:	48 89 c1             	mov    %rax,%rcx
  40cdd5:	48 29 f1             	sub    %rsi,%rcx
  40cdd8:	48 81 f9 e2 03 00 00 	cmp    $0x3e2,%rcx
  40cddf:	0f 8f 6b 01 00 00    	jg     40cf50 <defang.constprop.6+0x210>
	switch ( *cp1 )
  40cde5:	80 fa 3c             	cmp    $0x3c,%dl
  40cde8:	0f 84 b2 00 00 00    	je     40cea0 <defang.constprop.6+0x160>
  40cdee:	80 fa 3e             	cmp    $0x3e,%dl
  40cdf1:	75 85                	jne    40cd78 <defang.constprop.6+0x38>
	    *cp2++ = '&';
  40cdf3:	48 89 c2             	mov    %rax,%rdx
  40cdf6:	48 89 c1             	mov    %rax,%rcx
  40cdf9:	48 c1 ea 03          	shr    $0x3,%rdx
  40cdfd:	83 e1 07             	and    $0x7,%ecx
  40ce00:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40ce07:	38 ca                	cmp    %cl,%dl
  40ce09:	7f 08                	jg     40ce13 <defang.constprop.6+0xd3>
  40ce0b:	84 d2                	test   %dl,%dl
  40ce0d:	0f 85 73 01 00 00    	jne    40cf86 <defang.constprop.6+0x246>
	    *cp2++ = 'g';
  40ce13:	48 8d 50 01          	lea    0x1(%rax),%rdx
	    *cp2++ = '&';
  40ce17:	c6 00 26             	movb   $0x26,(%rax)
	    *cp2++ = 'g';
  40ce1a:	48 89 d1             	mov    %rdx,%rcx
  40ce1d:	49 89 d0             	mov    %rdx,%r8
  40ce20:	48 c1 e9 03          	shr    $0x3,%rcx
  40ce24:	41 83 e0 07          	and    $0x7,%r8d
  40ce28:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40ce2f:	44 38 c1             	cmp    %r8b,%cl
  40ce32:	7f 08                	jg     40ce3c <defang.constprop.6+0xfc>
  40ce34:	84 c9                	test   %cl,%cl
  40ce36:	0f 85 52 01 00 00    	jne    40cf8e <defang.constprop.6+0x24e>
	    *cp2++ = 't';
  40ce3c:	48 8d 48 02          	lea    0x2(%rax),%rcx
	    *cp2++ = 'g';
  40ce40:	c6 40 01 67          	movb   $0x67,0x1(%rax)
	    *cp2++ = 't';
  40ce44:	48 8d 50 03          	lea    0x3(%rax),%rdx
  40ce48:	49 89 c8             	mov    %rcx,%r8
  40ce4b:	49 89 c9             	mov    %rcx,%r9
  40ce4e:	49 c1 e8 03          	shr    $0x3,%r8
  40ce52:	41 83 e1 07          	and    $0x7,%r9d
  40ce56:	45 0f b6 80 00 80 ff 	movzbl 0x7fff8000(%r8),%r8d
  40ce5d:	7f 
  40ce5e:	45 38 c8             	cmp    %r9b,%r8b
  40ce61:	7f 09                	jg     40ce6c <defang.constprop.6+0x12c>
  40ce63:	45 84 c0             	test   %r8b,%r8b
  40ce66:	0f 85 4a 01 00 00    	jne    40cfb6 <defang.constprop.6+0x276>
	    *cp2 = ';';
  40ce6c:	48 89 d1             	mov    %rdx,%rcx
	    *cp2++ = 't';
  40ce6f:	c6 40 02 74          	movb   $0x74,0x2(%rax)
	    *cp2 = ';';
  40ce73:	49 89 d0             	mov    %rdx,%r8
  40ce76:	48 c1 e9 03          	shr    $0x3,%rcx
  40ce7a:	41 83 e0 07          	and    $0x7,%r8d
  40ce7e:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40ce85:	44 38 c1             	cmp    %r8b,%cl
  40ce88:	7f 08                	jg     40ce92 <defang.constprop.6+0x152>
  40ce8a:	84 c9                	test   %cl,%cl
  40ce8c:	0f 85 1c 01 00 00    	jne    40cfae <defang.constprop.6+0x26e>
  40ce92:	c6 40 03 3b          	movb   $0x3b,0x3(%rax)
	    break;
  40ce96:	e9 04 ff ff ff       	jmpq   40cd9f <defang.constprop.6+0x5f>
  40ce9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	    *cp2++ = '&';
  40cea0:	48 89 c2             	mov    %rax,%rdx
  40cea3:	48 89 c1             	mov    %rax,%rcx
  40cea6:	48 c1 ea 03          	shr    $0x3,%rdx
  40ceaa:	83 e1 07             	and    $0x7,%ecx
  40cead:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40ceb4:	38 ca                	cmp    %cl,%dl
  40ceb6:	7f 08                	jg     40cec0 <defang.constprop.6+0x180>
  40ceb8:	84 d2                	test   %dl,%dl
  40ceba:	0f 85 e6 00 00 00    	jne    40cfa6 <defang.constprop.6+0x266>
	    *cp2++ = 'l';
  40cec0:	48 8d 50 01          	lea    0x1(%rax),%rdx
	    *cp2++ = '&';
  40cec4:	c6 00 26             	movb   $0x26,(%rax)
	    *cp2++ = 'l';
  40cec7:	48 89 d1             	mov    %rdx,%rcx
  40ceca:	49 89 d0             	mov    %rdx,%r8
  40cecd:	48 c1 e9 03          	shr    $0x3,%rcx
  40ced1:	41 83 e0 07          	and    $0x7,%r8d
  40ced5:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40cedc:	44 38 c1             	cmp    %r8b,%cl
  40cedf:	7f 08                	jg     40cee9 <defang.constprop.6+0x1a9>
  40cee1:	84 c9                	test   %cl,%cl
  40cee3:	0f 85 b5 00 00 00    	jne    40cf9e <defang.constprop.6+0x25e>
	    *cp2++ = 't';
  40cee9:	48 8d 48 02          	lea    0x2(%rax),%rcx
	    *cp2++ = 'l';
  40ceed:	c6 40 01 6c          	movb   $0x6c,0x1(%rax)
	    *cp2++ = 't';
  40cef1:	48 8d 50 03          	lea    0x3(%rax),%rdx
  40cef5:	49 89 c8             	mov    %rcx,%r8
  40cef8:	49 89 c9             	mov    %rcx,%r9
  40cefb:	49 c1 e8 03          	shr    $0x3,%r8
  40ceff:	41 83 e1 07          	and    $0x7,%r9d
  40cf03:	45 0f b6 80 00 80 ff 	movzbl 0x7fff8000(%r8),%r8d
  40cf0a:	7f 
  40cf0b:	45 38 c8             	cmp    %r9b,%r8b
  40cf0e:	7f 09                	jg     40cf19 <defang.constprop.6+0x1d9>
  40cf10:	45 84 c0             	test   %r8b,%r8b
  40cf13:	0f 85 7d 00 00 00    	jne    40cf96 <defang.constprop.6+0x256>
	    *cp2 = ';';
  40cf19:	48 89 d1             	mov    %rdx,%rcx
	    *cp2++ = 't';
  40cf1c:	c6 40 02 74          	movb   $0x74,0x2(%rax)
	    *cp2 = ';';
  40cf20:	49 89 d0             	mov    %rdx,%r8
  40cf23:	48 c1 e9 03          	shr    $0x3,%rcx
  40cf27:	41 83 e0 07          	and    $0x7,%r8d
  40cf2b:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40cf32:	44 38 c1             	cmp    %r8b,%cl
  40cf35:	0f 8f 57 ff ff ff    	jg     40ce92 <defang.constprop.6+0x152>
  40cf3b:	84 c9                	test   %cl,%cl
  40cf3d:	0f 84 4f ff ff ff    	je     40ce92 <defang.constprop.6+0x152>
  40cf43:	48 89 d7             	mov    %rdx,%rdi
  40cf46:	e8 e5 61 ff ff       	callq  403130 <__asan_report_store1@plt>
  40cf4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    *cp2 = '\0';
  40cf50:	48 89 c2             	mov    %rax,%rdx
  40cf53:	48 89 c1             	mov    %rax,%rcx
  40cf56:	48 c1 ea 03          	shr    $0x3,%rdx
  40cf5a:	83 e1 07             	and    $0x7,%ecx
  40cf5d:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40cf64:	38 ca                	cmp    %cl,%dl
  40cf66:	7f 04                	jg     40cf6c <defang.constprop.6+0x22c>
  40cf68:	84 d2                	test   %dl,%dl
  40cf6a:	75 08                	jne    40cf74 <defang.constprop.6+0x234>
  40cf6c:	c6 00 00             	movb   $0x0,(%rax)
    }
  40cf6f:	48 83 c4 08          	add    $0x8,%rsp
  40cf73:	c3                   	retq   
    *cp2 = '\0';
  40cf74:	48 89 c7             	mov    %rax,%rdi
  40cf77:	e8 b4 61 ff ff       	callq  403130 <__asan_report_store1@plt>
	  *cp1 != '\0' && cp2 - dfstr < dfsize - 5;
  40cf7c:	e8 8f 61 ff ff       	callq  403110 <__asan_report_load1@plt>
  40cf81:	e8 8a 61 ff ff       	callq  403110 <__asan_report_load1@plt>
	    *cp2++ = '&';
  40cf86:	48 89 c7             	mov    %rax,%rdi
  40cf89:	e8 a2 61 ff ff       	callq  403130 <__asan_report_store1@plt>
	    *cp2++ = 'g';
  40cf8e:	48 89 d7             	mov    %rdx,%rdi
  40cf91:	e8 9a 61 ff ff       	callq  403130 <__asan_report_store1@plt>
	    *cp2++ = 't';
  40cf96:	48 89 cf             	mov    %rcx,%rdi
  40cf99:	e8 92 61 ff ff       	callq  403130 <__asan_report_store1@plt>
	    *cp2++ = 'l';
  40cf9e:	48 89 d7             	mov    %rdx,%rdi
  40cfa1:	e8 8a 61 ff ff       	callq  403130 <__asan_report_store1@plt>
	    *cp2++ = '&';
  40cfa6:	48 89 c7             	mov    %rax,%rdi
  40cfa9:	e8 82 61 ff ff       	callq  403130 <__asan_report_store1@plt>
	    *cp2 = ';';
  40cfae:	48 89 d7             	mov    %rdx,%rdi
  40cfb1:	e8 7a 61 ff ff       	callq  403130 <__asan_report_store1@plt>
	    *cp2++ = 't';
  40cfb6:	48 89 cf             	mov    %rcx,%rdi
  40cfb9:	e8 72 61 ff ff       	callq  403130 <__asan_report_store1@plt>
	    *cp2 = *cp1;
  40cfbe:	48 89 c7             	mov    %rax,%rdi
  40cfc1:	e8 6a 61 ff ff       	callq  403130 <__asan_report_store1@plt>
  40cfc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40cfcd:	00 00 00 

000000000040cfd0 <__bswap_32.constprop.7>:
# if __GNUC_PREREQ (4, 3)
static __inline unsigned int
__bswap_32 (unsigned int __bsx)
{
  return __builtin_bswap32 (__bsx);
}
  40cfd0:	b8 00 00 ff ff       	mov    $0xffff0000,%eax
  40cfd5:	c3                   	retq   
  40cfd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40cfdd:	00 00 00 

000000000040cfe0 <httpd_set_logfp>:
    {
  40cfe0:	41 54                	push   %r12
  40cfe2:	55                   	push   %rbp
    if ( hs->logfp != (FILE*) 0 )
  40cfe3:	48 8d 6f 58          	lea    0x58(%rdi),%rbp
  40cfe7:	48 89 e8             	mov    %rbp,%rax
    {
  40cfea:	53                   	push   %rbx
    if ( hs->logfp != (FILE*) 0 )
  40cfeb:	48 c1 e8 03          	shr    $0x3,%rax
  40cfef:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40cff6:	75 2d                	jne    40d025 <httpd_set_logfp+0x45>
  40cff8:	48 89 fb             	mov    %rdi,%rbx
  40cffb:	48 8b 7f 58          	mov    0x58(%rdi),%rdi
  40cfff:	49 89 f4             	mov    %rsi,%r12
  40d002:	48 85 ff             	test   %rdi,%rdi
  40d005:	74 05                	je     40d00c <httpd_set_logfp+0x2c>
	(void) fclose( hs->logfp );
  40d007:	e8 04 63 ff ff       	callq  403310 <fclose@plt>
    hs->logfp = logfp;
  40d00c:	48 89 e8             	mov    %rbp,%rax
  40d00f:	48 c1 e8 03          	shr    $0x3,%rax
  40d013:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40d01a:	75 11                	jne    40d02d <httpd_set_logfp+0x4d>
  40d01c:	4c 89 63 58          	mov    %r12,0x58(%rbx)
    }
  40d020:	5b                   	pop    %rbx
  40d021:	5d                   	pop    %rbp
  40d022:	41 5c                	pop    %r12
  40d024:	c3                   	retq   
    if ( hs->logfp != (FILE*) 0 )
  40d025:	48 89 ef             	mov    %rbp,%rdi
  40d028:	e8 23 62 ff ff       	callq  403250 <__asan_report_load8@plt>
    hs->logfp = logfp;
  40d02d:	48 89 ef             	mov    %rbp,%rdi
  40d030:	e8 6b 5f ff ff       	callq  402fa0 <__asan_report_store8@plt>
  40d035:	90                   	nop
  40d036:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d03d:	00 00 00 

000000000040d040 <httpd_unlisten>:
    {
  40d040:	55                   	push   %rbp
    if ( hs->listen4_fd != -1 )
  40d041:	48 8d 6f 48          	lea    0x48(%rdi),%rbp
    {
  40d045:	53                   	push   %rbx
    if ( hs->listen4_fd != -1 )
  40d046:	48 89 e8             	mov    %rbp,%rax
    {
  40d049:	48 89 fb             	mov    %rdi,%rbx
    if ( hs->listen4_fd != -1 )
  40d04c:	48 c1 e8 03          	shr    $0x3,%rax
    {
  40d050:	48 83 ec 08          	sub    $0x8,%rsp
    if ( hs->listen4_fd != -1 )
  40d054:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40d05b:	84 c0                	test   %al,%al
  40d05d:	74 08                	je     40d067 <httpd_unlisten+0x27>
  40d05f:	3c 03                	cmp    $0x3,%al
  40d061:	0f 8e a3 00 00 00    	jle    40d10a <httpd_unlisten+0xca>
  40d067:	8b 7b 48             	mov    0x48(%rbx),%edi
  40d06a:	83 ff ff             	cmp    $0xffffffff,%edi
  40d06d:	75 39                	jne    40d0a8 <httpd_unlisten+0x68>
    if ( hs->listen6_fd != -1 )
  40d06f:	48 8d 6b 4c          	lea    0x4c(%rbx),%rbp
  40d073:	48 89 e8             	mov    %rbp,%rax
  40d076:	48 c1 e8 03          	shr    $0x3,%rax
  40d07a:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  40d081:	48 89 e8             	mov    %rbp,%rax
  40d084:	83 e0 07             	and    $0x7,%eax
  40d087:	83 c0 03             	add    $0x3,%eax
  40d08a:	38 d0                	cmp    %dl,%al
  40d08c:	7c 04                	jl     40d092 <httpd_unlisten+0x52>
  40d08e:	84 d2                	test   %dl,%dl
  40d090:	75 70                	jne    40d102 <httpd_unlisten+0xc2>
  40d092:	8b 7b 4c             	mov    0x4c(%rbx),%edi
  40d095:	83 ff ff             	cmp    $0xffffffff,%edi
  40d098:	75 36                	jne    40d0d0 <httpd_unlisten+0x90>
    }
  40d09a:	48 83 c4 08          	add    $0x8,%rsp
  40d09e:	5b                   	pop    %rbx
  40d09f:	5d                   	pop    %rbp
  40d0a0:	c3                   	retq   
  40d0a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	(void) close( hs->listen4_fd );
  40d0a8:	e8 23 64 ff ff       	callq  4034d0 <close@plt>
	hs->listen4_fd = -1;
  40d0ad:	48 89 e8             	mov    %rbp,%rax
  40d0b0:	48 c1 e8 03          	shr    $0x3,%rax
  40d0b4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40d0bb:	84 c0                	test   %al,%al
  40d0bd:	74 04                	je     40d0c3 <httpd_unlisten+0x83>
  40d0bf:	3c 03                	cmp    $0x3,%al
  40d0c1:	7e 4f                	jle    40d112 <httpd_unlisten+0xd2>
  40d0c3:	c7 43 48 ff ff ff ff 	movl   $0xffffffff,0x48(%rbx)
  40d0ca:	eb a3                	jmp    40d06f <httpd_unlisten+0x2f>
  40d0cc:	0f 1f 40 00          	nopl   0x0(%rax)
	(void) close( hs->listen6_fd );
  40d0d0:	e8 fb 63 ff ff       	callq  4034d0 <close@plt>
	hs->listen6_fd = -1;
  40d0d5:	48 89 e8             	mov    %rbp,%rax
  40d0d8:	48 c1 e8 03          	shr    $0x3,%rax
  40d0dc:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  40d0e3:	48 89 e8             	mov    %rbp,%rax
  40d0e6:	83 e0 07             	and    $0x7,%eax
  40d0e9:	83 c0 03             	add    $0x3,%eax
  40d0ec:	38 d0                	cmp    %dl,%al
  40d0ee:	7c 04                	jl     40d0f4 <httpd_unlisten+0xb4>
  40d0f0:	84 d2                	test   %dl,%dl
  40d0f2:	75 26                	jne    40d11a <httpd_unlisten+0xda>
  40d0f4:	c7 43 4c ff ff ff ff 	movl   $0xffffffff,0x4c(%rbx)
    }
  40d0fb:	48 83 c4 08          	add    $0x8,%rsp
  40d0ff:	5b                   	pop    %rbx
  40d100:	5d                   	pop    %rbp
  40d101:	c3                   	retq   
    if ( hs->listen6_fd != -1 )
  40d102:	48 89 ef             	mov    %rbp,%rdi
  40d105:	e8 c6 5c ff ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( hs->listen4_fd != -1 )
  40d10a:	48 89 ef             	mov    %rbp,%rdi
  40d10d:	e8 be 5c ff ff       	callq  402dd0 <__asan_report_load4@plt>
	hs->listen4_fd = -1;
  40d112:	48 89 ef             	mov    %rbp,%rdi
  40d115:	e8 d6 5a ff ff       	callq  402bf0 <__asan_report_store4@plt>
	hs->listen6_fd = -1;
  40d11a:	48 89 ef             	mov    %rbp,%rdi
  40d11d:	e8 ce 5a ff ff       	callq  402bf0 <__asan_report_store4@plt>
  40d122:	0f 1f 40 00          	nopl   0x0(%rax)
  40d126:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d12d:	00 00 00 

000000000040d130 <httpd_terminate>:
    {
  40d130:	53                   	push   %rbx
  40d131:	48 89 fb             	mov    %rdi,%rbx
    httpd_unlisten( hs );
  40d134:	e8 07 ff ff ff       	callq  40d040 <httpd_unlisten>
    if ( hs->logfp != (FILE*) 0 )
  40d139:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
  40d13d:	48 89 f8             	mov    %rdi,%rax
  40d140:	48 c1 e8 03          	shr    $0x3,%rax
  40d144:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40d14b:	75 17                	jne    40d164 <httpd_terminate+0x34>
  40d14d:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
  40d151:	48 85 ff             	test   %rdi,%rdi
  40d154:	74 05                	je     40d15b <httpd_terminate+0x2b>
	(void) fclose( hs->logfp );
  40d156:	e8 b5 61 ff ff       	callq  403310 <fclose@plt>
    free_httpd_server( hs );
  40d15b:	48 89 df             	mov    %rbx,%rdi
    }
  40d15e:	5b                   	pop    %rbx
    free_httpd_server( hs );
  40d15f:	e9 8c da ff ff       	jmpq   40abf0 <free_httpd_server>
    if ( hs->logfp != (FILE*) 0 )
  40d164:	e8 e7 60 ff ff       	callq  403250 <__asan_report_load8@plt>
  40d169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040d170 <httpd_set_ndelay>:
    {
  40d170:	53                   	push   %rbx
    flags = fcntl( fd, F_GETFL, 0 );
  40d171:	31 d2                	xor    %edx,%edx
  40d173:	31 c0                	xor    %eax,%eax
  40d175:	be 03 00 00 00       	mov    $0x3,%esi
    {
  40d17a:	89 fb                	mov    %edi,%ebx
    flags = fcntl( fd, F_GETFL, 0 );
  40d17c:	e8 7f 5c ff ff       	callq  402e00 <fcntl@plt>
    if ( flags != -1 )
  40d181:	83 f8 ff             	cmp    $0xffffffff,%eax
  40d184:	74 09                	je     40d18f <httpd_set_ndelay+0x1f>
	newflags = flags | (int) O_NDELAY;
  40d186:	89 c2                	mov    %eax,%edx
  40d188:	80 ce 08             	or     $0x8,%dh
	if ( newflags != flags )
  40d18b:	39 d0                	cmp    %edx,%eax
  40d18d:	75 09                	jne    40d198 <httpd_set_ndelay+0x28>
    }
  40d18f:	5b                   	pop    %rbx
  40d190:	c3                   	retq   
  40d191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    (void) fcntl( fd, F_SETFL, newflags );
  40d198:	89 df                	mov    %ebx,%edi
  40d19a:	be 04 00 00 00       	mov    $0x4,%esi
  40d19f:	31 c0                	xor    %eax,%eax
    }
  40d1a1:	5b                   	pop    %rbx
	    (void) fcntl( fd, F_SETFL, newflags );
  40d1a2:	e9 59 5c ff ff       	jmpq   402e00 <fcntl@plt>
  40d1a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40d1ae:	00 00 

000000000040d1b0 <post_post_garbage_hack.isra.3>:
post_post_garbage_hack( httpd_conn* hc )
  40d1b0:	41 56                	push   %r14
  40d1b2:	41 55                	push   %r13
  40d1b4:	41 54                	push   %r12
  40d1b6:	49 89 fc             	mov    %rdi,%r12
  40d1b9:	55                   	push   %rbp
  40d1ba:	53                   	push   %rbx
  40d1bb:	48 83 ec 60          	sub    $0x60,%rsp
  40d1bf:	8b 15 3b 41 23 00    	mov    0x23413b(%rip),%edx        # 641300 <__asan_option_detect_stack_use_after_return>
  40d1c5:	48 89 e3             	mov    %rsp,%rbx
  40d1c8:	49 89 de             	mov    %rbx,%r14
  40d1cb:	85 d2                	test   %edx,%edx
  40d1cd:	0f 85 df 00 00 00    	jne    40d2b2 <post_post_garbage_hack.isra.3+0x102>
  40d1d3:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
  40d1da:	48 89 dd             	mov    %rbx,%rbp
  40d1dd:	4c 8d 6b 60          	lea    0x60(%rbx),%r13
  40d1e1:	48 c7 43 08 ed 20 42 	movq   $0x4220ed,0x8(%rbx)
  40d1e8:	00 
  40d1e9:	48 c1 ed 03          	shr    $0x3,%rbp
  40d1ed:	48 c7 43 10 b0 d1 40 	movq   $0x40d1b0,0x10(%rbx)
  40d1f4:	00 
    if ( sub_process )
  40d1f5:	8b 05 a5 5a 23 00    	mov    0x235aa5(%rip),%eax        # 642ca0 <sub_process>
post_post_garbage_hack( httpd_conn* hc )
  40d1fb:	c7 85 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbp)
  40d202:	f1 f1 f1 
  40d205:	c7 85 04 80 ff 7f 02 	movl   $0xf2f2f202,0x7fff8004(%rbp)
  40d20c:	f2 f2 f2 
  40d20f:	c7 85 08 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8008(%rbp)
  40d216:	f3 f3 f3 
    if ( sub_process )
  40d219:	85 c0                	test   %eax,%eax
  40d21b:	75 58                	jne    40d275 <post_post_garbage_hack.isra.3+0xc5>
    (void) read( hc->conn_fd, buf, sizeof(buf) );
  40d21d:	4c 89 e0             	mov    %r12,%rax
  40d220:	48 c1 e8 03          	shr    $0x3,%rax
  40d224:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  40d22b:	4c 89 e0             	mov    %r12,%rax
  40d22e:	83 e0 07             	and    $0x7,%eax
  40d231:	83 c0 03             	add    $0x3,%eax
  40d234:	38 d0                	cmp    %dl,%al
  40d236:	7c 04                	jl     40d23c <post_post_garbage_hack.isra.3+0x8c>
  40d238:	84 d2                	test   %dl,%dl
  40d23a:	75 66                	jne    40d2a2 <post_post_garbage_hack.isra.3+0xf2>
  40d23c:	41 8b 3c 24          	mov    (%r12),%edi
  40d240:	49 8d 75 c0          	lea    -0x40(%r13),%rsi
  40d244:	ba 02 00 00 00       	mov    $0x2,%edx
  40d249:	e8 72 5c ff ff       	callq  402ec0 <read@plt>
post_post_garbage_hack( httpd_conn* hc )
  40d24e:	49 39 de             	cmp    %rbx,%r14
  40d251:	75 75                	jne    40d2c8 <post_post_garbage_hack.isra.3+0x118>
  40d253:	48 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbp)
  40d25a:	00 00 00 00 
  40d25e:	c7 85 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbp)
  40d265:	00 00 00 
    }
  40d268:	48 83 c4 60          	add    $0x60,%rsp
  40d26c:	5b                   	pop    %rbx
  40d26d:	5d                   	pop    %rbp
  40d26e:	41 5c                	pop    %r12
  40d270:	41 5d                	pop    %r13
  40d272:	41 5e                	pop    %r14
  40d274:	c3                   	retq   
	httpd_set_ndelay( hc->conn_fd );
  40d275:	4c 89 e0             	mov    %r12,%rax
  40d278:	48 c1 e8 03          	shr    $0x3,%rax
  40d27c:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  40d283:	4c 89 e0             	mov    %r12,%rax
  40d286:	83 e0 07             	and    $0x7,%eax
  40d289:	83 c0 03             	add    $0x3,%eax
  40d28c:	38 d0                	cmp    %dl,%al
  40d28e:	7c 04                	jl     40d294 <post_post_garbage_hack.isra.3+0xe4>
  40d290:	84 d2                	test   %dl,%dl
  40d292:	75 16                	jne    40d2aa <post_post_garbage_hack.isra.3+0xfa>
  40d294:	41 8b 3c 24          	mov    (%r12),%edi
  40d298:	e8 d3 fe ff ff       	callq  40d170 <httpd_set_ndelay>
  40d29d:	e9 7b ff ff ff       	jmpq   40d21d <post_post_garbage_hack.isra.3+0x6d>
    (void) read( hc->conn_fd, buf, sizeof(buf) );
  40d2a2:	4c 89 e7             	mov    %r12,%rdi
  40d2a5:	e8 26 5b ff ff       	callq  402dd0 <__asan_report_load4@plt>
	httpd_set_ndelay( hc->conn_fd );
  40d2aa:	4c 89 e7             	mov    %r12,%rdi
  40d2ad:	e8 1e 5b ff ff       	callq  402dd0 <__asan_report_load4@plt>
post_post_garbage_hack( httpd_conn* hc )
  40d2b2:	bf 60 00 00 00       	mov    $0x60,%edi
  40d2b7:	e8 f4 5a ff ff       	callq  402db0 <__asan_stack_malloc_1@plt>
  40d2bc:	48 85 c0             	test   %rax,%rax
  40d2bf:	48 0f 45 d8          	cmovne %rax,%rbx
  40d2c3:	e9 0b ff ff ff       	jmpq   40d1d3 <post_post_garbage_hack.isra.3+0x23>
  40d2c8:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
  40d2cf:	f5 f5 f5 
  40d2d2:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  40d2d9:	48 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%rbp)
  40d2e0:	c7 85 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rbp)
  40d2e7:	f5 f5 f5 
  40d2ea:	e9 79 ff ff ff       	jmpq   40d268 <post_post_garbage_hack.isra.3+0xb8>
  40d2ef:	90                   	nop

000000000040d2f0 <httpd_clear_ndelay>:
    {
  40d2f0:	53                   	push   %rbx
    flags = fcntl( fd, F_GETFL, 0 );
  40d2f1:	31 d2                	xor    %edx,%edx
  40d2f3:	31 c0                	xor    %eax,%eax
  40d2f5:	be 03 00 00 00       	mov    $0x3,%esi
    {
  40d2fa:	89 fb                	mov    %edi,%ebx
    flags = fcntl( fd, F_GETFL, 0 );
  40d2fc:	e8 ff 5a ff ff       	callq  402e00 <fcntl@plt>
    if ( flags != -1 )
  40d301:	83 f8 ff             	cmp    $0xffffffff,%eax
  40d304:	74 09                	je     40d30f <httpd_clear_ndelay+0x1f>
	newflags = flags & ~ (int) O_NDELAY;
  40d306:	89 c2                	mov    %eax,%edx
  40d308:	80 e6 f7             	and    $0xf7,%dh
	if ( newflags != flags )
  40d30b:	39 d0                	cmp    %edx,%eax
  40d30d:	75 09                	jne    40d318 <httpd_clear_ndelay+0x28>
    }
  40d30f:	5b                   	pop    %rbx
  40d310:	c3                   	retq   
  40d311:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    (void) fcntl( fd, F_SETFL, newflags );
  40d318:	89 df                	mov    %ebx,%edi
  40d31a:	be 04 00 00 00       	mov    $0x4,%esi
  40d31f:	31 c0                	xor    %eax,%eax
    }
  40d321:	5b                   	pop    %rbx
	    (void) fcntl( fd, F_SETFL, newflags );
  40d322:	e9 d9 5a ff ff       	jmpq   402e00 <fcntl@plt>
  40d327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40d32e:	00 00 

000000000040d330 <httpd_realloc_str>:
    {
  40d330:	41 57                	push   %r15
  40d332:	41 56                	push   %r14
  40d334:	41 55                	push   %r13
    if ( *maxsizeP == 0 )
  40d336:	49 89 f5             	mov    %rsi,%r13
    {
  40d339:	41 54                	push   %r12
    if ( *maxsizeP == 0 )
  40d33b:	49 c1 ed 03          	shr    $0x3,%r13
    {
  40d33f:	55                   	push   %rbp
  40d340:	48 89 f5             	mov    %rsi,%rbp
  40d343:	53                   	push   %rbx
  40d344:	48 83 ec 08          	sub    $0x8,%rsp
    if ( *maxsizeP == 0 )
  40d348:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  40d34f:	00 
  40d350:	0f 85 21 01 00 00    	jne    40d477 <httpd_realloc_str+0x147>
  40d356:	48 8b 1e             	mov    (%rsi),%rbx
  40d359:	49 89 fc             	mov    %rdi,%r12
  40d35c:	48 85 db             	test   %rbx,%rbx
  40d35f:	0f 84 cb 00 00 00    	je     40d430 <httpd_realloc_str+0x100>
    else if ( size > *maxsizeP )
  40d365:	48 39 d3             	cmp    %rdx,%rbx
  40d368:	72 16                	jb     40d380 <httpd_realloc_str+0x50>
    }
  40d36a:	48 83 c4 08          	add    $0x8,%rsp
  40d36e:	5b                   	pop    %rbx
  40d36f:	5d                   	pop    %rbp
  40d370:	41 5c                	pop    %r12
  40d372:	41 5d                	pop    %r13
  40d374:	41 5e                	pop    %r14
  40d376:	41 5f                	pop    %r15
  40d378:	c3                   	retq   
  40d379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	*maxsizeP = MAX( *maxsizeP * 2, size * 5 / 4 );
  40d380:	48 8d 34 92          	lea    (%rdx,%rdx,4),%rsi
  40d384:	48 8d 04 1b          	lea    (%rbx,%rbx,1),%rax
	*strP = RENEW( *strP, char, *maxsizeP + 1 );
  40d388:	49 89 ff             	mov    %rdi,%r15
	str_alloc_size -= *maxsizeP;
  40d38b:	4c 8b 35 8e 58 23 00 	mov    0x23588e(%rip),%r14        # 642c20 <str_alloc_size>
	*maxsizeP = MAX( *maxsizeP * 2, size * 5 / 4 );
  40d392:	48 c1 ee 02          	shr    $0x2,%rsi
  40d396:	48 39 c6             	cmp    %rax,%rsi
  40d399:	48 0f 42 f0          	cmovb  %rax,%rsi
	*strP = RENEW( *strP, char, *maxsizeP + 1 );
  40d39d:	49 c1 ef 03          	shr    $0x3,%r15
	*maxsizeP = MAX( *maxsizeP * 2, size * 5 / 4 );
  40d3a1:	48 89 75 00          	mov    %rsi,0x0(%rbp)
	*strP = RENEW( *strP, char, *maxsizeP + 1 );
  40d3a5:	48 83 c6 01          	add    $0x1,%rsi
  40d3a9:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  40d3b0:	00 
  40d3b1:	0f 85 c8 00 00 00    	jne    40d47f <httpd_realloc_str+0x14f>
  40d3b7:	48 8b 3f             	mov    (%rdi),%rdi
  40d3ba:	e8 f1 5f ff ff       	callq  4033b0 <realloc@plt>
  40d3bf:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  40d3c6:	00 
  40d3c7:	0f 85 b7 00 00 00    	jne    40d484 <httpd_realloc_str+0x154>
	str_alloc_size += *maxsizeP;
  40d3cd:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  40d3d4:	00 
	*strP = RENEW( *strP, char, *maxsizeP + 1 );
  40d3d5:	49 89 04 24          	mov    %rax,(%r12)
	str_alloc_size += *maxsizeP;
  40d3d9:	0f 85 b5 00 00 00    	jne    40d494 <httpd_realloc_str+0x164>
  40d3df:	4c 03 75 00          	add    0x0(%rbp),%r14
  40d3e3:	49 29 de             	sub    %rbx,%r14
  40d3e6:	4c 89 35 33 58 23 00 	mov    %r14,0x235833(%rip)        # 642c20 <str_alloc_size>
    if ( *strP == (char*) 0 )
  40d3ed:	48 85 c0             	test   %rax,%rax
  40d3f0:	0f 85 74 ff ff ff    	jne    40d36a <httpd_realloc_str+0x3a>
	syslog(
  40d3f6:	48 89 e8             	mov    %rbp,%rax
  40d3f9:	48 c1 e8 03          	shr    $0x3,%rax
  40d3fd:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40d404:	0f 85 92 00 00 00    	jne    40d49c <httpd_realloc_str+0x16c>
  40d40a:	48 8b 55 00          	mov    0x0(%rbp),%rdx
  40d40e:	bf 03 00 00 00       	mov    $0x3,%edi
  40d413:	be 60 33 42 00       	mov    $0x423360,%esi
  40d418:	31 c0                	xor    %eax,%eax
  40d41a:	e8 21 58 ff ff       	callq  402c40 <syslog@plt>
	exit( 1 );
  40d41f:	e8 1c 5c ff ff       	callq  403040 <__asan_handle_no_return@plt>
  40d424:	bf 01 00 00 00       	mov    $0x1,%edi
  40d429:	e8 b2 5c ff ff       	callq  4030e0 <exit@plt>
  40d42e:	66 90                	xchg   %ax,%ax
	*maxsizeP = MAX( 200, size + 100 );
  40d430:	48 8d 5a 64          	lea    0x64(%rdx),%rbx
  40d434:	b8 c8 00 00 00       	mov    $0xc8,%eax
  40d439:	48 81 fb c8 00 00 00 	cmp    $0xc8,%rbx
  40d440:	48 0f 42 d8          	cmovb  %rax,%rbx
  40d444:	48 89 1e             	mov    %rbx,(%rsi)
	*strP = NEW( char, *maxsizeP + 1 );
  40d447:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
  40d44b:	e8 60 5c ff ff       	callq  4030b0 <malloc@plt>
  40d450:	4c 89 e2             	mov    %r12,%rdx
  40d453:	48 c1 ea 03          	shr    $0x3,%rdx
  40d457:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40d45e:	75 2c                	jne    40d48c <httpd_realloc_str+0x15c>
  40d460:	49 89 04 24          	mov    %rax,(%r12)
	++str_alloc_count;
  40d464:	83 05 f5 57 23 00 01 	addl   $0x1,0x2357f5(%rip)        # 642c60 <str_alloc_count>
	str_alloc_size += *maxsizeP;
  40d46b:	48 01 1d ae 57 23 00 	add    %rbx,0x2357ae(%rip)        # 642c20 <str_alloc_size>
  40d472:	e9 76 ff ff ff       	jmpq   40d3ed <httpd_realloc_str+0xbd>
    if ( *maxsizeP == 0 )
  40d477:	48 89 f7             	mov    %rsi,%rdi
  40d47a:	e8 d1 5d ff ff       	callq  403250 <__asan_report_load8@plt>
	*strP = RENEW( *strP, char, *maxsizeP + 1 );
  40d47f:	e8 cc 5d ff ff       	callq  403250 <__asan_report_load8@plt>
  40d484:	4c 89 e7             	mov    %r12,%rdi
  40d487:	e8 14 5b ff ff       	callq  402fa0 <__asan_report_store8@plt>
	*strP = NEW( char, *maxsizeP + 1 );
  40d48c:	4c 89 e7             	mov    %r12,%rdi
  40d48f:	e8 0c 5b ff ff       	callq  402fa0 <__asan_report_store8@plt>
	str_alloc_size += *maxsizeP;
  40d494:	48 89 ef             	mov    %rbp,%rdi
  40d497:	e8 b4 5d ff ff       	callq  403250 <__asan_report_load8@plt>
	syslog(
  40d49c:	48 89 ef             	mov    %rbp,%rdi
  40d49f:	e8 ac 5d ff ff       	callq  403250 <__asan_report_load8@plt>
  40d4a4:	66 90                	xchg   %ax,%ax
  40d4a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d4ad:	00 00 00 

000000000040d4b0 <add_response>:
    {
  40d4b0:	41 57                	push   %r15
  40d4b2:	41 56                	push   %r14
  40d4b4:	41 55                	push   %r13
  40d4b6:	49 89 f5             	mov    %rsi,%r13
  40d4b9:	41 54                	push   %r12
  40d4bb:	55                   	push   %rbp
  40d4bc:	53                   	push   %rbx
  40d4bd:	48 89 fb             	mov    %rdi,%rbx
    len = strlen( str );
  40d4c0:	48 89 f7             	mov    %rsi,%rdi
    httpd_realloc_str( &hc->response, &hc->maxresponse, hc->responselen + len );
  40d4c3:	4c 8d b3 d8 01 00 00 	lea    0x1d8(%rbx),%r14
  40d4ca:	4d 89 f7             	mov    %r14,%r15
    {
  40d4cd:	48 83 ec 08          	sub    $0x8,%rsp
    httpd_realloc_str( &hc->response, &hc->maxresponse, hc->responselen + len );
  40d4d1:	49 c1 ef 03          	shr    $0x3,%r15
    len = strlen( str );
  40d4d5:	e8 a6 57 ff ff       	callq  402c80 <strlen@plt>
    httpd_realloc_str( &hc->response, &hc->maxresponse, hc->responselen + len );
  40d4da:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  40d4e1:	00 
  40d4e2:	75 6c                	jne    40d550 <add_response+0xa0>
  40d4e4:	48 8b 93 d8 01 00 00 	mov    0x1d8(%rbx),%rdx
  40d4eb:	4c 8d a3 70 01 00 00 	lea    0x170(%rbx),%r12
  40d4f2:	48 8d b3 d0 01 00 00 	lea    0x1d0(%rbx),%rsi
  40d4f9:	48 89 c5             	mov    %rax,%rbp
  40d4fc:	4c 89 e7             	mov    %r12,%rdi
  40d4ff:	48 01 c2             	add    %rax,%rdx
  40d502:	e8 29 fe ff ff       	callq  40d330 <httpd_realloc_str>
    (void) memmove( &(hc->response[hc->responselen]), str, len );
  40d507:	4c 89 e0             	mov    %r12,%rax
  40d50a:	48 c1 e8 03          	shr    $0x3,%rax
  40d50e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40d515:	75 49                	jne    40d560 <add_response+0xb0>
  40d517:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  40d51e:	00 
  40d51f:	48 8b bb 70 01 00 00 	mov    0x170(%rbx),%rdi
  40d526:	75 30                	jne    40d558 <add_response+0xa8>
  40d528:	48 03 bb d8 01 00 00 	add    0x1d8(%rbx),%rdi
  40d52f:	48 89 ea             	mov    %rbp,%rdx
  40d532:	4c 89 ee             	mov    %r13,%rsi
  40d535:	e8 a6 57 ff ff       	callq  402ce0 <memmove@plt>
    hc->responselen += len;
  40d53a:	48 01 ab d8 01 00 00 	add    %rbp,0x1d8(%rbx)
    }
  40d541:	48 83 c4 08          	add    $0x8,%rsp
  40d545:	5b                   	pop    %rbx
  40d546:	5d                   	pop    %rbp
  40d547:	41 5c                	pop    %r12
  40d549:	41 5d                	pop    %r13
  40d54b:	41 5e                	pop    %r14
  40d54d:	41 5f                	pop    %r15
  40d54f:	c3                   	retq   
    httpd_realloc_str( &hc->response, &hc->maxresponse, hc->responselen + len );
  40d550:	4c 89 f7             	mov    %r14,%rdi
  40d553:	e8 f8 5c ff ff       	callq  403250 <__asan_report_load8@plt>
    (void) memmove( &(hc->response[hc->responselen]), str, len );
  40d558:	4c 89 f7             	mov    %r14,%rdi
  40d55b:	e8 f0 5c ff ff       	callq  403250 <__asan_report_load8@plt>
  40d560:	4c 89 e7             	mov    %r12,%rdi
  40d563:	e8 e8 5c ff ff       	callq  403250 <__asan_report_load8@plt>
  40d568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40d56f:	00 

000000000040d570 <send_mime>:
    {
  40d570:	41 57                	push   %r15
  40d572:	41 89 f7             	mov    %esi,%r15d
  40d575:	41 56                	push   %r14
  40d577:	49 89 fe             	mov    %rdi,%r14
  40d57a:	41 55                	push   %r13
  40d57c:	4d 89 cd             	mov    %r9,%r13
  40d57f:	41 54                	push   %r12
  40d581:	55                   	push   %rbp
  40d582:	53                   	push   %rbx
  40d583:	48 81 ec 58 09 00 00 	sub    $0x958,%rsp
  40d58a:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
  40d58f:	44 8b 05 6a 3d 23 00 	mov    0x233d6a(%rip),%r8d        # 641300 <__asan_option_detect_stack_use_after_return>
  40d596:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
  40d59b:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
  40d5a0:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  40d5a5:	45 85 c0             	test   %r8d,%r8d
  40d5a8:	0f 85 f8 07 00 00    	jne    40dda6 <send_mime+0x836>
  40d5ae:	48 c7 45 00 b3 8a b5 	movq   $0x41b58ab3,0x0(%rbp)
  40d5b5:	41 
  40d5b6:	48 89 eb             	mov    %rbp,%rbx
  40d5b9:	4c 8d a5 00 09 00 00 	lea    0x900(%rbp),%r12
    hc->status = status;
  40d5c0:	49 8d be b8 00 00 00 	lea    0xb8(%r14),%rdi
    {
  40d5c7:	48 c7 45 08 60 c7 42 	movq   $0x42c760,0x8(%rbp)
  40d5ce:	00 
  40d5cf:	48 c1 eb 03          	shr    $0x3,%rbx
  40d5d3:	48 c7 45 10 70 d5 40 	movq   $0x40d570,0x10(%rbp)
  40d5da:	00 
send_mime( httpd_conn* hc, int status, char* title, char* encodings, char* extraheads, char* type, off_t length, time_t mod )
  40d5db:	48 8b 84 24 98 09 00 	mov    0x998(%rsp),%rax
  40d5e2:	00 
    {
  40d5e3:	c7 83 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbx)
  40d5ea:	f1 f1 f1 
  40d5ed:	c7 83 04 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff8004(%rbx)
  40d5f4:	f2 f2 f2 
  40d5f7:	c7 83 08 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8008(%rbx)
  40d5fe:	f2 f2 f2 
  40d601:	c7 83 0c 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff800c(%rbx)
  40d608:	f2 f2 f2 
  40d60b:	c7 83 10 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8010(%rbx)
  40d612:	f2 f2 f2 
  40d615:	c7 83 14 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff8014(%rbx)
  40d61c:	f2 f2 f2 
  40d61f:	c7 83 18 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8018(%rbx)
  40d626:	f2 f2 f2 
  40d629:	c7 83 28 80 ff 7f 04 	movl   $0xf2f2f204,0x7fff8028(%rbx)
  40d630:	f2 f2 f2 
  40d633:	c7 83 2c 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff802c(%rbx)
  40d63a:	f2 f2 f2 
  40d63d:	c7 83 3c 80 ff 7f 04 	movl   $0xf2f2f204,0x7fff803c(%rbx)
  40d644:	f2 f2 f2 
  40d647:	c7 83 40 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8040(%rbx)
  40d64e:	f2 f2 f2 
  40d651:	c7 83 50 80 ff 7f 04 	movl   $0xf2f2f204,0x7fff8050(%rbx)
  40d658:	f2 f2 f2 
  40d65b:	c7 83 54 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8054(%rbx)
  40d662:	f2 f2 f2 
  40d665:	c7 83 94 80 ff 7f 00 	movl   $0xf2040000,0x7fff8094(%rbx)
  40d66c:	00 04 f2 
  40d66f:	c7 83 98 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8098(%rbx)
  40d676:	f2 f2 f2 
  40d679:	c7 83 18 81 ff 7f 00 	movl   $0xf2f2f200,0x7fff8118(%rbx)
  40d680:	f2 f2 f2 
  40d683:	c7 83 1c 81 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff811c(%rbx)
  40d68a:	f3 f3 f3 
send_mime( httpd_conn* hc, int status, char* title, char* encodings, char* extraheads, char* type, off_t length, time_t mod )
  40d68d:	49 89 84 24 a0 f7 ff 	mov    %rax,-0x860(%r12)
  40d694:	ff 
    hc->status = status;
  40d695:	48 89 f8             	mov    %rdi,%rax
  40d698:	48 c1 e8 03          	shr    $0x3,%rax
  40d69c:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40d6a3:	84 c0                	test   %al,%al
  40d6a5:	74 08                	je     40d6af <send_mime+0x13f>
  40d6a7:	3c 03                	cmp    $0x3,%al
  40d6a9:	0f 8e ed 06 00 00    	jle    40dd9c <send_mime+0x82c>
    hc->bytes_to_send = length;
  40d6af:	49 8d be c0 00 00 00 	lea    0xc0(%r14),%rdi
    hc->status = status;
  40d6b6:	45 89 be b8 00 00 00 	mov    %r15d,0xb8(%r14)
    hc->bytes_to_send = length;
  40d6bd:	48 89 f8             	mov    %rdi,%rax
  40d6c0:	48 c1 e8 03          	shr    $0x3,%rax
  40d6c4:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40d6cb:	0f 85 08 07 00 00    	jne    40ddd9 <send_mime+0x869>
  40d6d1:	48 8b 84 24 90 09 00 	mov    0x990(%rsp),%rax
  40d6d8:	00 
    if ( hc->mime_flag )
  40d6d9:	49 8d be 08 02 00 00 	lea    0x208(%r14),%rdi
    hc->bytes_to_send = length;
  40d6e0:	49 89 86 c0 00 00 00 	mov    %rax,0xc0(%r14)
    if ( hc->mime_flag )
  40d6e7:	48 89 f8             	mov    %rdi,%rax
  40d6ea:	48 c1 e8 03          	shr    $0x3,%rax
  40d6ee:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40d6f5:	84 c0                	test   %al,%al
  40d6f7:	74 08                	je     40d701 <send_mime+0x191>
  40d6f9:	3c 03                	cmp    $0x3,%al
  40d6fb:	0f 8e 96 06 00 00    	jle    40dd97 <send_mime+0x827>
  40d701:	41 8b be 08 02 00 00 	mov    0x208(%r14),%edi
  40d708:	85 ff                	test   %edi,%edi
  40d70a:	0f 84 f7 02 00 00    	je     40da07 <send_mime+0x497>
	if ( status == 200 && hc->got_range &&
  40d710:	49 8d 96 10 02 00 00 	lea    0x210(%r14),%rdx
  40d717:	41 81 ff c8 00 00 00 	cmp    $0xc8,%r15d
  40d71e:	0f 84 2c 04 00 00    	je     40db50 <send_mime+0x5e0>
	    hc->got_range = 0;
  40d724:	48 89 d0             	mov    %rdx,%rax
  40d727:	48 c1 e8 03          	shr    $0x3,%rax
  40d72b:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40d732:	84 c0                	test   %al,%al
  40d734:	74 08                	je     40d73e <send_mime+0x1ce>
  40d736:	3c 03                	cmp    $0x3,%al
  40d738:	0f 8e c9 06 00 00    	jle    40de07 <send_mime+0x897>
  40d73e:	44 89 f8             	mov    %r15d,%eax
  40d741:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
  40d746:	41 c7 86 10 02 00 00 	movl   $0x0,0x210(%r14)
  40d74d:	00 00 00 00 
  40d751:	f7 ea                	imul   %edx
  40d753:	44 89 f8             	mov    %r15d,%eax
	    partial_content = 0;
  40d756:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
  40d75d:	00 
  40d75e:	c1 f8 1f             	sar    $0x1f,%eax
  40d761:	c1 fa 05             	sar    $0x5,%edx
  40d764:	29 c2                	sub    %eax,%edx
  40d766:	8d 42 fe             	lea    -0x2(%rdx),%eax
  40d769:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
	now = time( (time_t*) 0 );
  40d76d:	31 ff                	xor    %edi,%edi
  40d76f:	e8 fc 57 ff ff       	callq  402f70 <time@plt>
  40d774:	49 8d b4 24 20 f7 ff 	lea    -0x8e0(%r12),%rsi
  40d77b:	ff 
  40d77c:	48 89 f2             	mov    %rsi,%rdx
  40d77f:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
  40d784:	48 c1 ea 03          	shr    $0x3,%rdx
  40d788:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40d78f:	0f 85 60 06 00 00    	jne    40ddf5 <send_mime+0x885>
	if ( mod == (time_t) 0 )
  40d795:	49 83 bc 24 a0 f7 ff 	cmpq   $0x0,-0x860(%r12)
  40d79c:	ff 00 
	now = time( (time_t*) 0 );
  40d79e:	49 89 84 24 20 f7 ff 	mov    %rax,-0x8e0(%r12)
  40d7a5:	ff 
	if ( mod == (time_t) 0 )
  40d7a6:	75 08                	jne    40d7b0 <send_mime+0x240>
	    mod = now;
  40d7a8:	49 89 84 24 a0 f7 ff 	mov    %rax,-0x860(%r12)
  40d7af:	ff 
	(void) strftime( nowbuf, sizeof(nowbuf), rfc1123fmt, gmtime( &now ) );
  40d7b0:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  40d7b5:	e8 d6 55 ff ff       	callq  402d90 <gmtime@plt>
  40d7ba:	ba 00 34 42 00       	mov    $0x423400,%edx
  40d7bf:	be 64 00 00 00       	mov    $0x64,%esi
  40d7c4:	49 8d 8c 24 e0 f7 ff 	lea    -0x820(%r12),%rcx
  40d7cb:	ff 
  40d7cc:	48 89 cf             	mov    %rcx,%rdi
  40d7cf:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
  40d7d4:	48 89 c1             	mov    %rax,%rcx
  40d7d7:	e8 b4 56 ff ff       	callq  402e90 <strftime@plt>
	(void) strftime( modbuf, sizeof(modbuf), rfc1123fmt, gmtime( &mod ) );
  40d7dc:	49 8d bc 24 a0 f7 ff 	lea    -0x860(%r12),%rdi
  40d7e3:	ff 
  40d7e4:	e8 a7 55 ff ff       	callq  402d90 <gmtime@plt>
  40d7e9:	49 8d b4 24 80 f8 ff 	lea    -0x780(%r12),%rsi
  40d7f0:	ff 
  40d7f1:	ba 00 34 42 00       	mov    $0x423400,%edx
  40d7f6:	48 89 f7             	mov    %rsi,%rdi
  40d7f9:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
  40d7fe:	48 89 c1             	mov    %rax,%rcx
  40d801:	be 64 00 00 00       	mov    $0x64,%esi
  40d806:	e8 85 56 ff ff       	callq  402e90 <strftime@plt>
	    fixed_type, sizeof(fixed_type), type, hc->hs->charset );
  40d80b:	49 8d 46 08          	lea    0x8(%r14),%rax
  40d80f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  40d814:	48 c1 e8 03          	shr    $0x3,%rax
  40d818:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40d81f:	0f 85 d8 05 00 00    	jne    40ddfd <send_mime+0x88d>
  40d825:	49 8b 46 08          	mov    0x8(%r14),%rax
	(void) my_snprintf(
  40d829:	48 8d 78 28          	lea    0x28(%rax),%rdi
  40d82d:	48 89 fa             	mov    %rdi,%rdx
  40d830:	48 c1 ea 03          	shr    $0x3,%rdx
  40d834:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40d83b:	0f 85 d8 05 00 00    	jne    40de19 <send_mime+0x8a9>
  40d841:	4d 8d 84 24 c0 f9 ff 	lea    -0x640(%r12),%r8
  40d848:	ff 
  40d849:	48 8b 48 28          	mov    0x28(%rax),%rcx
  40d84d:	4c 89 ea             	mov    %r13,%rdx
  40d850:	31 c0                	xor    %eax,%eax
  40d852:	4c 89 c7             	mov    %r8,%rdi
  40d855:	be f4 01 00 00       	mov    $0x1f4,%esi
  40d85a:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
  40d85f:	e8 ac d6 ff ff       	callq  40af10 <my_snprintf>
	(void) my_snprintf( buf, sizeof(buf),
  40d864:	49 8d be e0 00 00 00 	lea    0xe0(%r14),%rdi
  40d86b:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
  40d870:	48 89 f8             	mov    %rdi,%rax
  40d873:	48 c1 e8 03          	shr    $0x3,%rax
  40d877:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40d87e:	0f 85 9a 05 00 00    	jne    40de1e <send_mime+0x8ae>
  40d884:	ff 74 24 38          	pushq  0x38(%rsp)
  40d888:	ba 40 34 42 00       	mov    $0x423440,%edx
  40d88d:	be e8 03 00 00       	mov    $0x3e8,%esi
  40d892:	31 c0                	xor    %eax,%eax
  40d894:	ff 74 24 38          	pushq  0x38(%rsp)
  40d898:	4d 8d ac 24 e0 fb ff 	lea    -0x420(%r12),%r13
  40d89f:	ff 
  40d8a0:	49 8b 8e e0 00 00 00 	mov    0xe0(%r14),%rcx
  40d8a7:	41 50                	push   %r8
  40d8a9:	4c 89 ef             	mov    %r13,%rdi
  40d8ac:	45 89 f8             	mov    %r15d,%r8d
  40d8af:	68 e0 34 42 00       	pushq  $0x4234e0
  40d8b4:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
  40d8b9:	e8 52 d6 ff ff       	callq  40af10 <my_snprintf>
	add_response( hc, buf );
  40d8be:	48 83 c4 20          	add    $0x20,%rsp
  40d8c2:	4c 89 ee             	mov    %r13,%rsi
  40d8c5:	4c 89 f7             	mov    %r14,%rdi
  40d8c8:	e8 e3 fb ff ff       	callq  40d4b0 <add_response>
	if ( s100 != 2 && s100 != 3 )
  40d8cd:	83 7c 24 4c 01       	cmpl   $0x1,0x4c(%rsp)
  40d8d2:	76 1f                	jbe    40d8f3 <send_mime+0x383>
	    (void) my_snprintf( buf, sizeof(buf),
  40d8d4:	be e8 03 00 00       	mov    $0x3e8,%esi
  40d8d9:	4c 89 ef             	mov    %r13,%rdi
  40d8dc:	ba 20 35 42 00       	mov    $0x423520,%edx
  40d8e1:	31 c0                	xor    %eax,%eax
  40d8e3:	e8 28 d6 ff ff       	callq  40af10 <my_snprintf>
	    add_response( hc, buf );
  40d8e8:	4c 89 ee             	mov    %r13,%rsi
  40d8eb:	4c 89 f7             	mov    %r14,%rdi
  40d8ee:	e8 bd fb ff ff       	callq  40d4b0 <add_response>
	if ( encodings[0] != '\0' )
  40d8f3:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  40d8f8:	48 89 f0             	mov    %rsi,%rax
  40d8fb:	83 e6 07             	and    $0x7,%esi
  40d8fe:	48 c1 e8 03          	shr    $0x3,%rax
  40d902:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40d909:	40 38 f0             	cmp    %sil,%al
  40d90c:	7f 08                	jg     40d916 <send_mime+0x3a6>
  40d90e:	84 c0                	test   %al,%al
  40d910:	0f 85 f9 04 00 00    	jne    40de0f <send_mime+0x89f>
  40d916:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  40d91b:	80 38 00             	cmpb   $0x0,(%rax)
  40d91e:	0f 85 4c 04 00 00    	jne    40dd70 <send_mime+0x800>
	if ( partial_content )
  40d924:	8b 4c 24 48          	mov    0x48(%rsp),%ecx
  40d928:	85 c9                	test   %ecx,%ecx
  40d92a:	0f 85 70 03 00 00    	jne    40dca0 <send_mime+0x730>
	else if ( length >= 0 )
  40d930:	48 83 bc 24 90 09 00 	cmpq   $0x0,0x990(%rsp)
  40d937:	00 00 
  40d939:	0f 89 21 03 00 00    	jns    40dc60 <send_mime+0x6f0>
	if ( hc->hs->p3p[0] != '\0' )
  40d93f:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  40d944:	48 c1 e8 03          	shr    $0x3,%rax
  40d948:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40d94f:	0f 85 ce 04 00 00    	jne    40de23 <send_mime+0x8b3>
  40d955:	49 8b 46 08          	mov    0x8(%r14),%rax
  40d959:	48 8d 78 30          	lea    0x30(%rax),%rdi
  40d95d:	48 89 fa             	mov    %rdi,%rdx
  40d960:	48 c1 ea 03          	shr    $0x3,%rdx
  40d964:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40d96b:	0f 85 bc 04 00 00    	jne    40de2d <send_mime+0x8bd>
  40d971:	48 8b 48 30          	mov    0x30(%rax),%rcx
  40d975:	48 89 ca             	mov    %rcx,%rdx
  40d978:	48 89 ce             	mov    %rcx,%rsi
  40d97b:	48 c1 ea 03          	shr    $0x3,%rdx
  40d97f:	83 e6 07             	and    $0x7,%esi
  40d982:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40d989:	40 38 f2             	cmp    %sil,%dl
  40d98c:	7f 08                	jg     40d996 <send_mime+0x426>
  40d98e:	84 d2                	test   %dl,%dl
  40d990:	0f 85 48 04 00 00    	jne    40ddde <send_mime+0x86e>
  40d996:	80 39 00             	cmpb   $0x0,(%rcx)
  40d999:	0f 85 89 03 00 00    	jne    40dd28 <send_mime+0x7b8>
	if ( hc->hs->max_age >= 0 )
  40d99f:	48 8d 78 38          	lea    0x38(%rax),%rdi
  40d9a3:	48 89 fa             	mov    %rdi,%rdx
  40d9a6:	48 c1 ea 03          	shr    $0x3,%rdx
  40d9aa:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40d9b1:	84 d2                	test   %dl,%dl
  40d9b3:	74 09                	je     40d9be <send_mime+0x44e>
  40d9b5:	80 fa 03             	cmp    $0x3,%dl
  40d9b8:	0f 8e 28 04 00 00    	jle    40dde6 <send_mime+0x876>
  40d9be:	48 63 40 38          	movslq 0x38(%rax),%rax
  40d9c2:	85 c0                	test   %eax,%eax
  40d9c4:	0f 89 b6 00 00 00    	jns    40da80 <send_mime+0x510>
	if ( extraheads[0] != '\0' )
  40d9ca:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
  40d9cf:	48 89 c8             	mov    %rcx,%rax
  40d9d2:	83 e1 07             	and    $0x7,%ecx
  40d9d5:	48 c1 e8 03          	shr    $0x3,%rax
  40d9d9:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40d9e0:	38 c8                	cmp    %cl,%al
  40d9e2:	7f 08                	jg     40d9ec <send_mime+0x47c>
  40d9e4:	84 c0                	test   %al,%al
  40d9e6:	0f 85 ff 03 00 00    	jne    40ddeb <send_mime+0x87b>
  40d9ec:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  40d9f1:	80 38 00             	cmpb   $0x0,(%rax)
  40d9f4:	0f 85 96 02 00 00    	jne    40dc90 <send_mime+0x720>
	add_response( hc, "\015\012" );
  40d9fa:	be 00 37 42 00       	mov    $0x423700,%esi
  40d9ff:	4c 89 f7             	mov    %r14,%rdi
  40da02:	e8 a9 fa ff ff       	callq  40d4b0 <add_response>
    {
  40da07:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
  40da0c:	48 39 e8             	cmp    %rbp,%rax
  40da0f:	0f 85 a7 03 00 00    	jne    40ddbc <send_mime+0x84c>
  40da15:	48 c7 83 10 80 ff 7f 	movq   $0x0,0x7fff8010(%rbx)
  40da1c:	00 00 00 00 
  40da20:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40da24:	c7 83 18 80 ff 7f 00 	movl   $0x0,0x7fff8018(%rbx)
  40da2b:	00 00 00 
  40da2e:	48 c7 83 28 80 ff 7f 	movq   $0x0,0x7fff8028(%rbx)
  40da35:	00 00 00 00 
  40da39:	48 c7 83 3c 80 ff 7f 	movq   $0x0,0x7fff803c(%rbx)
  40da40:	00 00 00 00 
  40da44:	48 c7 83 50 80 ff 7f 	movq   $0x0,0x7fff8050(%rbx)
  40da4b:	00 00 00 00 
  40da4f:	48 c7 83 94 80 ff 7f 	movq   $0x0,0x7fff8094(%rbx)
  40da56:	00 00 00 00 
  40da5a:	48 c7 83 18 81 ff 7f 	movq   $0x0,0x7fff8118(%rbx)
  40da61:	00 00 00 00 
  40da65:	0f 11 83 00 80 ff 7f 	movups %xmm0,0x7fff8000(%rbx)
    }
  40da6c:	48 81 c4 58 09 00 00 	add    $0x958,%rsp
  40da73:	5b                   	pop    %rbx
  40da74:	5d                   	pop    %rbp
  40da75:	41 5c                	pop    %r12
  40da77:	41 5d                	pop    %r13
  40da79:	41 5e                	pop    %r14
  40da7b:	41 5f                	pop    %r15
  40da7d:	c3                   	retq   
  40da7e:	66 90                	xchg   %ax,%ax
	    expires = now + hc->hs->max_age;
  40da80:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  40da85:	48 c1 ea 03          	shr    $0x3,%rdx
  40da89:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40da90:	0f 85 b8 03 00 00    	jne    40de4e <send_mime+0x8de>
  40da96:	49 8d bc 24 60 f7 ff 	lea    -0x8a0(%r12),%rdi
  40da9d:	ff 
  40da9e:	49 03 84 24 20 f7 ff 	add    -0x8e0(%r12),%rax
  40daa5:	ff 
  40daa6:	48 89 fa             	mov    %rdi,%rdx
  40daa9:	48 c1 ea 03          	shr    $0x3,%rdx
  40daad:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40dab4:	0f 85 9e 03 00 00    	jne    40de58 <send_mime+0x8e8>
  40daba:	49 89 84 24 60 f7 ff 	mov    %rax,-0x8a0(%r12)
  40dac1:	ff 
	    (void) strftime(
  40dac2:	49 81 ec e0 06 00 00 	sub    $0x6e0,%r12
		expbuf, sizeof(expbuf), rfc1123fmt, gmtime( &expires ) );
  40dac9:	e8 c2 52 ff ff       	callq  402d90 <gmtime@plt>
	    (void) strftime(
  40dace:	ba 00 34 42 00       	mov    $0x423400,%edx
  40dad3:	be 64 00 00 00       	mov    $0x64,%esi
  40dad8:	4c 89 e7             	mov    %r12,%rdi
  40dadb:	48 89 c1             	mov    %rax,%rcx
  40dade:	e8 ad 53 ff ff       	callq  402e90 <strftime@plt>
		hc->hs->max_age, expbuf );
  40dae3:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  40dae8:	48 c1 e8 03          	shr    $0x3,%rax
  40daec:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40daf3:	0f 85 64 03 00 00    	jne    40de5d <send_mime+0x8ed>
  40daf9:	49 8b 46 08          	mov    0x8(%r14),%rax
	    (void) my_snprintf( buf, sizeof(buf),
  40dafd:	48 8d 78 38          	lea    0x38(%rax),%rdi
  40db01:	48 89 fa             	mov    %rdi,%rdx
  40db04:	48 c1 ea 03          	shr    $0x3,%rdx
  40db08:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40db0f:	84 d2                	test   %dl,%dl
  40db11:	74 09                	je     40db1c <send_mime+0x5ac>
  40db13:	80 fa 03             	cmp    $0x3,%dl
  40db16:	0f 8e 85 02 00 00    	jle    40dda1 <send_mime+0x831>
  40db1c:	8b 48 38             	mov    0x38(%rax),%ecx
  40db1f:	4c 89 ef             	mov    %r13,%rdi
  40db22:	4d 89 e0             	mov    %r12,%r8
  40db25:	ba a0 36 42 00       	mov    $0x4236a0,%edx
  40db2a:	be e8 03 00 00       	mov    $0x3e8,%esi
  40db2f:	31 c0                	xor    %eax,%eax
  40db31:	e8 da d3 ff ff       	callq  40af10 <my_snprintf>
	    add_response( hc, buf );
  40db36:	4c 89 ee             	mov    %r13,%rsi
  40db39:	4c 89 f7             	mov    %r14,%rdi
  40db3c:	e8 6f f9 ff ff       	callq  40d4b0 <add_response>
  40db41:	e9 84 fe ff ff       	jmpq   40d9ca <send_mime+0x45a>
  40db46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40db4d:	00 00 00 
	if ( status == 200 && hc->got_range &&
  40db50:	48 89 d0             	mov    %rdx,%rax
  40db53:	48 c1 e8 03          	shr    $0x3,%rax
  40db57:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40db5e:	84 c0                	test   %al,%al
  40db60:	74 08                	je     40db6a <send_mime+0x5fa>
  40db62:	3c 03                	cmp    $0x3,%al
  40db64:	0f 8e dc 02 00 00    	jle    40de46 <send_mime+0x8d6>
  40db6a:	41 8b b6 10 02 00 00 	mov    0x210(%r14),%esi
  40db71:	85 f6                	test   %esi,%esi
  40db73:	0f 84 ab fb ff ff    	je     40d724 <send_mime+0x1b4>
	     ( hc->last_byte_index >= hc->first_byte_index ) &&
  40db79:	49 8d be 20 02 00 00 	lea    0x220(%r14),%rdi
  40db80:	48 89 f8             	mov    %rdi,%rax
  40db83:	48 c1 e8 03          	shr    $0x3,%rax
  40db87:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40db8e:	0f 85 e2 02 00 00    	jne    40de76 <send_mime+0x906>
  40db94:	49 8d be 18 02 00 00 	lea    0x218(%r14),%rdi
  40db9b:	49 8b 86 20 02 00 00 	mov    0x220(%r14),%rax
  40dba2:	48 89 f9             	mov    %rdi,%rcx
  40dba5:	48 c1 e9 03          	shr    $0x3,%rcx
  40dba9:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  40dbb0:	0f 85 bb 02 00 00    	jne    40de71 <send_mime+0x901>
  40dbb6:	49 8b 8e 18 02 00 00 	mov    0x218(%r14),%rcx
	if ( status == 200 && hc->got_range &&
  40dbbd:	48 39 c8             	cmp    %rcx,%rax
  40dbc0:	0f 8c 5e fb ff ff    	jl     40d724 <send_mime+0x1b4>
	     ( ( hc->last_byte_index != length - 1 ) ||
  40dbc6:	48 8b b4 24 90 09 00 	mov    0x990(%rsp),%rsi
  40dbcd:	00 
  40dbce:	48 83 ee 01          	sub    $0x1,%rsi
  40dbd2:	48 39 c6             	cmp    %rax,%rsi
  40dbd5:	75 09                	jne    40dbe0 <send_mime+0x670>
  40dbd7:	48 85 c9             	test   %rcx,%rcx
  40dbda:	0f 84 44 fb ff ff    	je     40d724 <send_mime+0x1b4>
	     ( hc->range_if == (time_t) -1 ||
  40dbe0:	49 8d be e8 01 00 00 	lea    0x1e8(%r14),%rdi
  40dbe7:	48 89 f8             	mov    %rdi,%rax
  40dbea:	48 c1 e8 03          	shr    $0x3,%rax
  40dbee:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40dbf5:	0f 85 6c 02 00 00    	jne    40de67 <send_mime+0x8f7>
  40dbfb:	49 8b 86 e8 01 00 00 	mov    0x1e8(%r14),%rax
	       ( hc->first_byte_index != 0 ) ) &&
  40dc02:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  40dc06:	74 28                	je     40dc30 <send_mime+0x6c0>
	       hc->range_if == hc->sb.st_mtime ) )
  40dc08:	49 8d be 88 02 00 00 	lea    0x288(%r14),%rdi
  40dc0f:	48 89 f9             	mov    %rdi,%rcx
  40dc12:	48 c1 e9 03          	shr    $0x3,%rcx
  40dc16:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  40dc1d:	0f 85 49 02 00 00    	jne    40de6c <send_mime+0x8fc>
	     ( hc->range_if == (time_t) -1 ||
  40dc23:	49 3b 86 88 02 00 00 	cmp    0x288(%r14),%rax
  40dc2a:	0f 85 f4 fa ff ff    	jne    40d724 <send_mime+0x1b4>
	    title = ok206title;
  40dc30:	c7 44 24 4c 00 00 00 	movl   $0x0,0x4c(%rsp)
  40dc37:	00 
	    hc->status = status = 206;
  40dc38:	41 bf ce 00 00 00    	mov    $0xce,%r15d
  40dc3e:	41 c7 86 b8 00 00 00 	movl   $0xce,0xb8(%r14)
  40dc45:	ce 00 00 00 
	    partial_content = 1;
  40dc49:	c7 44 24 48 01 00 00 	movl   $0x1,0x48(%rsp)
  40dc50:	00 
	    title = ok206title;
  40dc51:	48 c7 44 24 18 c0 33 	movq   $0x4233c0,0x18(%rsp)
  40dc58:	42 00 
  40dc5a:	e9 0e fb ff ff       	jmpq   40d76d <send_mime+0x1fd>
  40dc5f:	90                   	nop
	    (void) my_snprintf( buf, sizeof(buf),
  40dc60:	4c 89 ef             	mov    %r13,%rdi
  40dc63:	ba 20 36 42 00       	mov    $0x423620,%edx
  40dc68:	be e8 03 00 00       	mov    $0x3e8,%esi
  40dc6d:	31 c0                	xor    %eax,%eax
  40dc6f:	48 8b 8c 24 90 09 00 	mov    0x990(%rsp),%rcx
  40dc76:	00 
  40dc77:	e8 94 d2 ff ff       	callq  40af10 <my_snprintf>
	    add_response( hc, buf );
  40dc7c:	4c 89 ee             	mov    %r13,%rsi
  40dc7f:	4c 89 f7             	mov    %r14,%rdi
  40dc82:	e8 29 f8 ff ff       	callq  40d4b0 <add_response>
  40dc87:	e9 b3 fc ff ff       	jmpq   40d93f <send_mime+0x3cf>
  40dc8c:	0f 1f 40 00          	nopl   0x0(%rax)
	    add_response( hc, extraheads );
  40dc90:	48 89 c6             	mov    %rax,%rsi
  40dc93:	4c 89 f7             	mov    %r14,%rdi
  40dc96:	e8 15 f8 ff ff       	callq  40d4b0 <add_response>
  40dc9b:	e9 5a fd ff ff       	jmpq   40d9fa <send_mime+0x48a>
		(int64_t) ( hc->last_byte_index - hc->first_byte_index + 1 ) );
  40dca0:	49 8d be 20 02 00 00 	lea    0x220(%r14),%rdi
  40dca7:	48 89 f8             	mov    %rdi,%rax
  40dcaa:	48 c1 e8 03          	shr    $0x3,%rax
  40dcae:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40dcb5:	0f 85 77 01 00 00    	jne    40de32 <send_mime+0x8c2>
  40dcbb:	49 8d be 18 02 00 00 	lea    0x218(%r14),%rdi
  40dcc2:	4d 8b 86 20 02 00 00 	mov    0x220(%r14),%r8
  40dcc9:	48 89 f8             	mov    %rdi,%rax
  40dccc:	48 c1 e8 03          	shr    $0x3,%rax
  40dcd0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40dcd7:	0f 85 64 01 00 00    	jne    40de41 <send_mime+0x8d1>
  40dcdd:	4c 89 c0             	mov    %r8,%rax
	    (void) my_snprintf( buf, sizeof(buf),
  40dce0:	48 83 ec 08          	sub    $0x8,%rsp
  40dce4:	ba c0 35 42 00       	mov    $0x4235c0,%edx
  40dce9:	4c 89 ef             	mov    %r13,%rdi
		(int64_t) ( hc->last_byte_index - hc->first_byte_index + 1 ) );
  40dcec:	49 8b 8e 18 02 00 00 	mov    0x218(%r14),%rcx
	    (void) my_snprintf( buf, sizeof(buf),
  40dcf3:	be e8 03 00 00       	mov    $0x3e8,%esi
		(int64_t) ( hc->last_byte_index - hc->first_byte_index + 1 ) );
  40dcf8:	48 29 c8             	sub    %rcx,%rax
  40dcfb:	48 83 c0 01          	add    $0x1,%rax
	    (void) my_snprintf( buf, sizeof(buf),
  40dcff:	50                   	push   %rax
  40dd00:	4c 8b 8c 24 a0 09 00 	mov    0x9a0(%rsp),%r9
  40dd07:	00 
  40dd08:	31 c0                	xor    %eax,%eax
  40dd0a:	e8 01 d2 ff ff       	callq  40af10 <my_snprintf>
	    add_response( hc, buf );
  40dd0f:	4c 89 ee             	mov    %r13,%rsi
  40dd12:	4c 89 f7             	mov    %r14,%rdi
  40dd15:	e8 96 f7 ff ff       	callq  40d4b0 <add_response>
  40dd1a:	58                   	pop    %rax
  40dd1b:	5a                   	pop    %rdx
  40dd1c:	e9 1e fc ff ff       	jmpq   40d93f <send_mime+0x3cf>
  40dd21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    (void) my_snprintf( buf, sizeof(buf), "P3P: %s\015\012", hc->hs->p3p );
  40dd28:	ba 60 36 42 00       	mov    $0x423660,%edx
  40dd2d:	be e8 03 00 00       	mov    $0x3e8,%esi
  40dd32:	4c 89 ef             	mov    %r13,%rdi
  40dd35:	31 c0                	xor    %eax,%eax
  40dd37:	e8 d4 d1 ff ff       	callq  40af10 <my_snprintf>
	    add_response( hc, buf );
  40dd3c:	4c 89 ee             	mov    %r13,%rsi
  40dd3f:	4c 89 f7             	mov    %r14,%rdi
  40dd42:	e8 69 f7 ff ff       	callq  40d4b0 <add_response>
  40dd47:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  40dd4c:	48 c1 e8 03          	shr    $0x3,%rax
  40dd50:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40dd57:	0f 85 da 00 00 00    	jne    40de37 <send_mime+0x8c7>
  40dd5d:	49 8b 46 08          	mov    0x8(%r14),%rax
  40dd61:	e9 39 fc ff ff       	jmpq   40d99f <send_mime+0x42f>
  40dd66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40dd6d:	00 00 00 
	    (void) my_snprintf( buf, sizeof(buf),
  40dd70:	48 89 c1             	mov    %rax,%rcx
  40dd73:	4c 89 ef             	mov    %r13,%rdi
  40dd76:	ba 80 35 42 00       	mov    $0x423580,%edx
  40dd7b:	be e8 03 00 00       	mov    $0x3e8,%esi
  40dd80:	31 c0                	xor    %eax,%eax
  40dd82:	e8 89 d1 ff ff       	callq  40af10 <my_snprintf>
	    add_response( hc, buf );
  40dd87:	4c 89 ee             	mov    %r13,%rsi
  40dd8a:	4c 89 f7             	mov    %r14,%rdi
  40dd8d:	e8 1e f7 ff ff       	callq  40d4b0 <add_response>
  40dd92:	e9 8d fb ff ff       	jmpq   40d924 <send_mime+0x3b4>
    if ( hc->mime_flag )
  40dd97:	e8 34 50 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    hc->status = status;
  40dd9c:	e8 4f 4e ff ff       	callq  402bf0 <__asan_report_store4@plt>
	    (void) my_snprintf( buf, sizeof(buf),
  40dda1:	e8 2a 50 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    {
  40dda6:	bf 00 09 00 00       	mov    $0x900,%edi
  40ddab:	e8 a0 50 ff ff       	callq  402e50 <__asan_stack_malloc_6@plt>
  40ddb0:	48 85 c0             	test   %rax,%rax
  40ddb3:	48 0f 45 e8          	cmovne %rax,%rbp
  40ddb7:	e9 f2 f7 ff ff       	jmpq   40d5ae <send_mime+0x3e>
  40ddbc:	48 c7 45 00 0e 36 e0 	movq   $0x45e0360e,0x0(%rbp)
  40ddc3:	45 
  40ddc4:	48 89 c2             	mov    %rax,%rdx
  40ddc7:	be 00 09 00 00       	mov    $0x900,%esi
  40ddcc:	48 89 ef             	mov    %rbp,%rdi
  40ddcf:	e8 8c 56 ff ff       	callq  403460 <__asan_stack_free_6@plt>
  40ddd4:	e9 93 fc ff ff       	jmpq   40da6c <send_mime+0x4fc>
    hc->bytes_to_send = length;
  40ddd9:	e8 c2 51 ff ff       	callq  402fa0 <__asan_report_store8@plt>
	if ( hc->hs->p3p[0] != '\0' )
  40ddde:	48 89 cf             	mov    %rcx,%rdi
  40dde1:	e8 2a 53 ff ff       	callq  403110 <__asan_report_load1@plt>
	if ( hc->hs->max_age >= 0 )
  40dde6:	e8 e5 4f ff ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( extraheads[0] != '\0' )
  40ddeb:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40ddf0:	e8 1b 53 ff ff       	callq  403110 <__asan_report_load1@plt>
	now = time( (time_t*) 0 );
  40ddf5:	48 89 f7             	mov    %rsi,%rdi
  40ddf8:	e8 a3 51 ff ff       	callq  402fa0 <__asan_report_store8@plt>
	    fixed_type, sizeof(fixed_type), type, hc->hs->charset );
  40ddfd:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  40de02:	e8 49 54 ff ff       	callq  403250 <__asan_report_load8@plt>
	    hc->got_range = 0;
  40de07:	48 89 d7             	mov    %rdx,%rdi
  40de0a:	e8 e1 4d ff ff       	callq  402bf0 <__asan_report_store4@plt>
	if ( encodings[0] != '\0' )
  40de0f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  40de14:	e8 f7 52 ff ff       	callq  403110 <__asan_report_load1@plt>
	(void) my_snprintf(
  40de19:	e8 32 54 ff ff       	callq  403250 <__asan_report_load8@plt>
	(void) my_snprintf( buf, sizeof(buf),
  40de1e:	e8 2d 54 ff ff       	callq  403250 <__asan_report_load8@plt>
	if ( hc->hs->p3p[0] != '\0' )
  40de23:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  40de28:	e8 23 54 ff ff       	callq  403250 <__asan_report_load8@plt>
  40de2d:	e8 1e 54 ff ff       	callq  403250 <__asan_report_load8@plt>
		(int64_t) ( hc->last_byte_index - hc->first_byte_index + 1 ) );
  40de32:	e8 19 54 ff ff       	callq  403250 <__asan_report_load8@plt>
  40de37:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  40de3c:	e8 0f 54 ff ff       	callq  403250 <__asan_report_load8@plt>
  40de41:	e8 0a 54 ff ff       	callq  403250 <__asan_report_load8@plt>
	if ( status == 200 && hc->got_range &&
  40de46:	48 89 d7             	mov    %rdx,%rdi
  40de49:	e8 82 4f ff ff       	callq  402dd0 <__asan_report_load4@plt>
	    expires = now + hc->hs->max_age;
  40de4e:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  40de53:	e8 f8 53 ff ff       	callq  403250 <__asan_report_load8@plt>
  40de58:	e8 43 51 ff ff       	callq  402fa0 <__asan_report_store8@plt>
		hc->hs->max_age, expbuf );
  40de5d:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  40de62:	e8 e9 53 ff ff       	callq  403250 <__asan_report_load8@plt>
	     ( hc->range_if == (time_t) -1 ||
  40de67:	e8 e4 53 ff ff       	callq  403250 <__asan_report_load8@plt>
	       hc->range_if == hc->sb.st_mtime ) )
  40de6c:	e8 df 53 ff ff       	callq  403250 <__asan_report_load8@plt>
	     ( hc->last_byte_index >= hc->first_byte_index ) &&
  40de71:	e8 da 53 ff ff       	callq  403250 <__asan_report_load8@plt>
  40de76:	e8 d5 53 ff ff       	callq  403250 <__asan_report_load8@plt>
  40de7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040de80 <send_response_tail>:
    {
  40de80:	41 56                	push   %r14
  40de82:	49 89 fe             	mov    %rdi,%r14
  40de85:	41 55                	push   %r13
  40de87:	41 54                	push   %r12
  40de89:	55                   	push   %rbp
  40de8a:	53                   	push   %rbx
  40de8b:	48 81 ec 40 04 00 00 	sub    $0x440,%rsp
  40de92:	8b 05 68 34 23 00    	mov    0x233468(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  40de98:	48 89 e3             	mov    %rsp,%rbx
  40de9b:	49 89 dd             	mov    %rbx,%r13
  40de9e:	85 c0                	test   %eax,%eax
  40dea0:	0f 85 94 00 00 00    	jne    40df3a <send_response_tail+0xba>
  40dea6:	48 89 dd             	mov    %rbx,%rbp
  40dea9:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    (void) my_snprintf( buf, sizeof(buf), "\
  40deb0:	4c 8d 63 20          	lea    0x20(%rbx),%r12
  40deb4:	31 c0                	xor    %eax,%eax
    {
  40deb6:	48 c1 ed 03          	shr    $0x3,%rbp
  40deba:	48 c7 43 08 fb 20 42 	movq   $0x4220fb,0x8(%rbx)
  40dec1:	00 
    (void) my_snprintf( buf, sizeof(buf), "\
  40dec2:	be e8 03 00 00       	mov    $0x3e8,%esi
  40dec7:	4c 89 e7             	mov    %r12,%rdi
  40deca:	41 b8 e0 34 42 00    	mov    $0x4234e0,%r8d
  40ded0:	b9 40 37 42 00       	mov    $0x423740,%ecx
  40ded5:	ba 80 37 42 00       	mov    $0x423780,%edx
    {
  40deda:	48 c7 43 10 80 de 40 	movq   $0x40de80,0x10(%rbx)
  40dee1:	00 
  40dee2:	c7 85 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbp)
  40dee9:	f1 f1 f1 
  40deec:	c7 85 80 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff8080(%rbp)
  40def3:	f2 f2 f2 
  40def6:	c7 85 84 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8084(%rbp)
  40defd:	f3 f3 f3 
    (void) my_snprintf( buf, sizeof(buf), "\
  40df00:	e8 0b d0 ff ff       	callq  40af10 <my_snprintf>
    add_response( hc, buf );
  40df05:	4c 89 e6             	mov    %r12,%rsi
  40df08:	4c 89 f7             	mov    %r14,%rdi
  40df0b:	e8 a0 f5 ff ff       	callq  40d4b0 <add_response>
    {
  40df10:	49 39 dd             	cmp    %rbx,%r13
  40df13:	75 3b                	jne    40df50 <send_response_tail+0xd0>
  40df15:	c7 85 00 80 ff 7f 00 	movl   $0x0,0x7fff8000(%rbp)
  40df1c:	00 00 00 
  40df1f:	48 c7 85 80 80 ff 7f 	movq   $0x0,0x7fff8080(%rbp)
  40df26:	00 00 00 00 
    }
  40df2a:	48 81 c4 40 04 00 00 	add    $0x440,%rsp
  40df31:	5b                   	pop    %rbx
  40df32:	5d                   	pop    %rbp
  40df33:	41 5c                	pop    %r12
  40df35:	41 5d                	pop    %r13
  40df37:	41 5e                	pop    %r14
  40df39:	c3                   	retq   
    {
  40df3a:	bf 40 04 00 00       	mov    $0x440,%edi
  40df3f:	e8 8c 52 ff ff       	callq  4031d0 <__asan_stack_malloc_5@plt>
  40df44:	48 85 c0             	test   %rax,%rax
  40df47:	48 0f 45 d8          	cmovne %rax,%rbx
  40df4b:	e9 56 ff ff ff       	jmpq   40dea6 <send_response_tail+0x26>
  40df50:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  40df57:	4c 89 ea             	mov    %r13,%rdx
  40df5a:	be 40 04 00 00       	mov    $0x440,%esi
  40df5f:	48 89 df             	mov    %rbx,%rdi
  40df62:	e8 49 53 ff ff       	callq  4032b0 <__asan_stack_free_5@plt>
  40df67:	eb c1                	jmp    40df2a <send_response_tail+0xaa>
  40df69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040df70 <send_err_file>:
    {
  40df70:	41 57                	push   %r15
  40df72:	41 56                	push   %r14
  40df74:	41 55                	push   %r13
  40df76:	49 89 fd             	mov    %rdi,%r13
  40df79:	41 54                	push   %r12
  40df7b:	55                   	push   %rbp
  40df7c:	53                   	push   %rbx
  40df7d:	89 f3                	mov    %esi,%ebx
  40df7f:	48 81 ec 68 04 00 00 	sub    $0x468,%rsp
  40df86:	8b 35 74 33 23 00    	mov    0x233374(%rip),%esi        # 641300 <__asan_option_detect_stack_use_after_return>
  40df8c:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
  40df91:	85 f6                	test   %esi,%esi
  40df93:	0f 85 40 01 00 00    	jne    40e0d9 <send_err_file+0x169>
  40df99:	4d 89 e7             	mov    %r12,%r15
  40df9c:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    fp = fopen( filename, "r" );
  40dfa1:	be e0 37 42 00       	mov    $0x4237e0,%esi
  40dfa6:	4c 89 c7             	mov    %r8,%rdi
    {
  40dfa9:	49 c1 ef 03          	shr    $0x3,%r15
  40dfad:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  40dfb2:	4d 8d b4 24 40 04 00 	lea    0x440(%r12),%r14
  40dfb9:	00 
  40dfba:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
  40dfc1:	41 
  40dfc2:	49 c7 44 24 08 fb 20 	movq   $0x4220fb,0x8(%r12)
  40dfc9:	42 00 
  40dfcb:	49 c7 44 24 10 70 df 	movq   $0x40df70,0x10(%r12)
  40dfd2:	40 00 
  40dfd4:	41 c7 87 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r15)
  40dfdb:	f1 f1 f1 f1 
  40dfdf:	41 c7 87 80 80 ff 7f 	movl   $0xf2f2f200,0x7fff8080(%r15)
  40dfe6:	00 f2 f2 f2 
  40dfea:	41 c7 87 84 80 ff 7f 	movl   $0xf3f3f3f3,0x7fff8084(%r15)
  40dff1:	f3 f3 f3 f3 
    fp = fopen( filename, "r" );
  40dff5:	e8 06 4f ff ff       	callq  402f00 <fopen@plt>
  40dffa:	48 89 c5             	mov    %rax,%rbp
    if ( fp == (FILE*) 0 )
  40dffd:	48 85 c0             	test   %rax,%rax
  40e000:	0f 84 ca 00 00 00    	je     40e0d0 <send_err_file+0x160>
    send_mime(
  40e006:	6a 00                	pushq  $0x0
  40e008:	89 de                	mov    %ebx,%esi
  40e00a:	41 b9 20 38 42 00    	mov    $0x423820,%r9d
  40e010:	4c 89 ef             	mov    %r13,%rdi
  40e013:	6a ff                	pushq  $0xffffffffffffffff
  40e015:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40e01a:	49 8d 5c 24 20       	lea    0x20(%r12),%rbx
  40e01f:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  40e024:	49 89 c8             	mov    %rcx,%r8
  40e027:	b9 60 38 42 00       	mov    $0x423860,%ecx
  40e02c:	e8 3f f5 ff ff       	callq  40d570 <send_mime>
  40e031:	58                   	pop    %rax
  40e032:	5a                   	pop    %rdx
  40e033:	eb 37                	jmp    40e06c <send_err_file+0xfc>
  40e035:	0f 1f 00             	nopl   (%rax)
	buf[r] = '\0';
  40e038:	48 8d 3c 03          	lea    (%rbx,%rax,1),%rdi
  40e03c:	48 89 fa             	mov    %rdi,%rdx
  40e03f:	48 89 f9             	mov    %rdi,%rcx
  40e042:	48 c1 ea 03          	shr    $0x3,%rdx
  40e046:	83 e1 07             	and    $0x7,%ecx
  40e049:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40e050:	38 ca                	cmp    %cl,%dl
  40e052:	7f 04                	jg     40e058 <send_err_file+0xe8>
  40e054:	84 d2                	test   %dl,%dl
  40e056:	75 7c                	jne    40e0d4 <send_err_file+0x164>
  40e058:	42 c6 84 30 e0 fb ff 	movb   $0x0,-0x420(%rax,%r14,1)
  40e05f:	ff 00 
	add_response( hc, buf );
  40e061:	48 89 de             	mov    %rbx,%rsi
  40e064:	4c 89 ef             	mov    %r13,%rdi
  40e067:	e8 44 f4 ff ff       	callq  40d4b0 <add_response>
	r = fread( buf, 1, sizeof(buf) - 1, fp );
  40e06c:	48 89 e9             	mov    %rbp,%rcx
  40e06f:	ba e7 03 00 00       	mov    $0x3e7,%edx
  40e074:	be 01 00 00 00       	mov    $0x1,%esi
  40e079:	48 89 df             	mov    %rbx,%rdi
  40e07c:	e8 af 4d ff ff       	callq  402e30 <fread@plt>
	if ( r == 0 )
  40e081:	48 85 c0             	test   %rax,%rax
  40e084:	75 b2                	jne    40e038 <send_err_file+0xc8>
    (void) fclose( fp );
  40e086:	48 89 ef             	mov    %rbp,%rdi
    return 1;
  40e089:	bb 01 00 00 00       	mov    $0x1,%ebx
    (void) fclose( fp );
  40e08e:	e8 7d 52 ff ff       	callq  403310 <fclose@plt>
    send_response_tail( hc );
  40e093:	4c 89 ef             	mov    %r13,%rdi
  40e096:	e8 e5 fd ff ff       	callq  40de80 <send_response_tail>
    {
  40e09b:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  40e0a0:	4c 39 e0             	cmp    %r12,%rax
  40e0a3:	75 68                	jne    40e10d <send_err_file+0x19d>
  40e0a5:	41 c7 87 00 80 ff 7f 	movl   $0x0,0x7fff8000(%r15)
  40e0ac:	00 00 00 00 
  40e0b0:	49 c7 87 80 80 ff 7f 	movq   $0x0,0x7fff8080(%r15)
  40e0b7:	00 00 00 00 
    }
  40e0bb:	48 81 c4 68 04 00 00 	add    $0x468,%rsp
  40e0c2:	89 d8                	mov    %ebx,%eax
  40e0c4:	5b                   	pop    %rbx
  40e0c5:	5d                   	pop    %rbp
  40e0c6:	41 5c                	pop    %r12
  40e0c8:	41 5d                	pop    %r13
  40e0ca:	41 5e                	pop    %r14
  40e0cc:	41 5f                	pop    %r15
  40e0ce:	c3                   	retq   
  40e0cf:	90                   	nop
	return 0;
  40e0d0:	31 db                	xor    %ebx,%ebx
  40e0d2:	eb c7                	jmp    40e09b <send_err_file+0x12b>
	buf[r] = '\0';
  40e0d4:	e8 57 50 ff ff       	callq  403130 <__asan_report_store1@plt>
    {
  40e0d9:	bf 40 04 00 00       	mov    $0x440,%edi
  40e0de:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
  40e0e3:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
  40e0e8:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  40e0ed:	e8 de 50 ff ff       	callq  4031d0 <__asan_stack_malloc_5@plt>
  40e0f2:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
  40e0f7:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
  40e0fc:	48 85 c0             	test   %rax,%rax
  40e0ff:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  40e104:	4c 0f 45 e0          	cmovne %rax,%r12
  40e108:	e9 8c fe ff ff       	jmpq   40df99 <send_err_file+0x29>
  40e10d:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
  40e114:	45 
  40e115:	48 89 c2             	mov    %rax,%rdx
  40e118:	be 40 04 00 00       	mov    $0x440,%esi
  40e11d:	4c 89 e7             	mov    %r12,%rdi
  40e120:	e8 8b 51 ff ff       	callq  4032b0 <__asan_stack_free_5@plt>
  40e125:	eb 94                	jmp    40e0bb <send_err_file+0x14b>
  40e127:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40e12e:	00 00 

000000000040e130 <send_response>:
    {
  40e130:	41 57                	push   %r15
  40e132:	41 89 f7             	mov    %esi,%r15d
  40e135:	41 56                	push   %r14
  40e137:	49 89 d6             	mov    %rdx,%r14
  40e13a:	41 55                	push   %r13
  40e13c:	41 54                	push   %r12
  40e13e:	55                   	push   %rbp
  40e13f:	53                   	push   %rbx
  40e140:	48 89 fb             	mov    %rdi,%rbx
  40e143:	48 81 ec 68 0c 00 00 	sub    $0xc68,%rsp
  40e14a:	8b 35 b0 31 23 00    	mov    0x2331b0(%rip),%esi        # 641300 <__asan_option_detect_stack_use_after_return>
  40e150:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
  40e155:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
  40e15a:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
  40e15f:	85 f6                	test   %esi,%esi
  40e161:	0f 85 ab 01 00 00    	jne    40e312 <send_response+0x1e2>
  40e167:	49 89 ec             	mov    %rbp,%r12
    (void) my_snprintf( buf, sizeof(buf), "\
  40e16a:	4c 8d ad 40 04 00 00 	lea    0x440(%rbp),%r13
    send_mime(
  40e171:	49 89 c8             	mov    %rcx,%r8
  40e174:	4c 89 f2             	mov    %r14,%rdx
    {
  40e177:	49 c1 ec 03          	shr    $0x3,%r12
    send_mime(
  40e17b:	41 b9 20 38 42 00    	mov    $0x423820,%r9d
  40e181:	44 89 fe             	mov    %r15d,%esi
  40e184:	48 89 df             	mov    %rbx,%rdi
    {
  40e187:	48 c7 45 00 b3 8a b5 	movq   $0x41b58ab3,0x0(%rbp)
  40e18e:	41 
    send_mime(
  40e18f:	b9 60 38 42 00       	mov    $0x423860,%ecx
    {
  40e194:	48 c7 45 08 e8 c7 42 	movq   $0x42c7e8,0x8(%rbp)
  40e19b:	00 
  40e19c:	48 c7 45 10 30 e1 40 	movq   $0x40e130,0x10(%rbp)
  40e1a3:	00 
  40e1a4:	41 c7 84 24 00 80 ff 	movl   $0xf1f1f1f1,0x7fff8000(%r12)
  40e1ab:	7f f1 f1 f1 f1 
  40e1b0:	41 c7 84 24 80 80 ff 	movl   $0xf2f2f200,0x7fff8080(%r12)
  40e1b7:	7f 00 f2 f2 f2 
  40e1bc:	41 c7 84 24 84 80 ff 	movl   $0xf2f2f2f2,0x7fff8084(%r12)
  40e1c3:	7f f2 f2 f2 f2 
  40e1c8:	41 c7 84 24 80 81 ff 	movl   $0xf2f20000,0x7fff8180(%r12)
  40e1cf:	7f 00 00 f2 f2 
  40e1d4:	41 c7 84 24 84 81 ff 	movl   $0xf3f3f3f3,0x7fff8184(%r12)
  40e1db:	7f f3 f3 f3 f3 
    send_mime(
  40e1e0:	6a 00                	pushq  $0x0
  40e1e2:	6a ff                	pushq  $0xffffffffffffffff
  40e1e4:	e8 87 f3 ff ff       	callq  40d570 <send_mime>
    (void) my_snprintf( buf, sizeof(buf), "\
  40e1e9:	45 89 f9             	mov    %r15d,%r9d
  40e1ec:	4d 89 f0             	mov    %r14,%r8
  40e1ef:	ba a0 38 42 00       	mov    $0x4238a0,%edx
  40e1f4:	44 89 f9             	mov    %r15d,%ecx
  40e1f7:	be d0 07 00 00       	mov    $0x7d0,%esi
  40e1fc:	4c 89 ef             	mov    %r13,%rdi
  40e1ff:	31 c0                	xor    %eax,%eax
  40e201:	4c 89 34 24          	mov    %r14,(%rsp)
  40e205:	e8 06 cd ff ff       	callq  40af10 <my_snprintf>
    add_response( hc, buf );
  40e20a:	4c 89 ee             	mov    %r13,%rsi
  40e20d:	48 89 df             	mov    %rbx,%rdi
  40e210:	e8 9b f2 ff ff       	callq  40d4b0 <add_response>
    defang( arg, defanged_arg, sizeof(defanged_arg) );
  40e215:	48 8d 4d 20          	lea    0x20(%rbp),%rcx
  40e219:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  40e21e:	48 89 ce             	mov    %rcx,%rsi
  40e221:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
  40e226:	e8 15 eb ff ff       	callq  40cd40 <defang.constprop.6>
    (void) my_snprintf( buf, sizeof(buf), form, defanged_arg );
  40e22b:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  40e230:	4c 89 ef             	mov    %r13,%rdi
  40e233:	31 c0                	xor    %eax,%eax
  40e235:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  40e23a:	be d0 07 00 00       	mov    $0x7d0,%esi
  40e23f:	e8 cc cc ff ff       	callq  40af10 <my_snprintf>
    add_response( hc, buf );
  40e244:	48 89 df             	mov    %rbx,%rdi
  40e247:	4c 89 ee             	mov    %r13,%rsi
  40e24a:	e8 61 f2 ff ff       	callq  40d4b0 <add_response>
    if ( match( "**MSIE**", hc->useragent ) )
  40e24f:	48 8d bb 18 01 00 00 	lea    0x118(%rbx),%rdi
  40e256:	5a                   	pop    %rdx
  40e257:	59                   	pop    %rcx
  40e258:	48 89 f8             	mov    %rdi,%rax
  40e25b:	48 c1 e8 03          	shr    $0x3,%rax
  40e25f:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40e266:	0f 85 a1 00 00 00    	jne    40e30d <send_response+0x1dd>
  40e26c:	48 8b b3 18 01 00 00 	mov    0x118(%rbx),%rsi
  40e273:	bf 40 39 42 00       	mov    $0x423940,%edi
  40e278:	e8 13 0d 01 00       	callq  41ef90 <match>
  40e27d:	85 c0                	test   %eax,%eax
  40e27f:	75 4f                	jne    40e2d0 <send_response+0x1a0>
    send_response_tail( hc );
  40e281:	48 89 df             	mov    %rbx,%rdi
  40e284:	e8 f7 fb ff ff       	callq  40de80 <send_response_tail>
    {
  40e289:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  40e28e:	48 39 e8             	cmp    %rbp,%rax
  40e291:	0f 85 9b 00 00 00    	jne    40e332 <send_response+0x202>
  40e297:	41 c7 84 24 00 80 ff 	movl   $0x0,0x7fff8000(%r12)
  40e29e:	7f 00 00 00 00 
  40e2a3:	49 c7 84 24 80 80 ff 	movq   $0x0,0x7fff8080(%r12)
  40e2aa:	7f 00 00 00 00 
  40e2af:	49 c7 84 24 80 81 ff 	movq   $0x0,0x7fff8180(%r12)
  40e2b6:	7f 00 00 00 00 
    }
  40e2bb:	48 81 c4 68 0c 00 00 	add    $0xc68,%rsp
  40e2c2:	5b                   	pop    %rbx
  40e2c3:	5d                   	pop    %rbp
  40e2c4:	41 5c                	pop    %r12
  40e2c6:	41 5d                	pop    %r13
  40e2c8:	41 5e                	pop    %r14
  40e2ca:	41 5f                	pop    %r15
  40e2cc:	c3                   	retq   
  40e2cd:	0f 1f 00             	nopl   (%rax)
	add_response( hc, "<!--\n" );
  40e2d0:	be 80 39 42 00       	mov    $0x423980,%esi
  40e2d5:	48 89 df             	mov    %rbx,%rdi
  40e2d8:	41 bd 06 00 00 00    	mov    $0x6,%r13d
  40e2de:	e8 cd f1 ff ff       	callq  40d4b0 <add_response>
  40e2e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	    add_response( hc, "Padding so that MSIE deigns to show this error instead of its own canned one.\n");
  40e2e8:	be c0 39 42 00       	mov    $0x4239c0,%esi
  40e2ed:	48 89 df             	mov    %rbx,%rdi
  40e2f0:	e8 bb f1 ff ff       	callq  40d4b0 <add_response>
	for ( n = 0; n < 6; ++n )
  40e2f5:	41 83 ed 01          	sub    $0x1,%r13d
  40e2f9:	75 ed                	jne    40e2e8 <send_response+0x1b8>
	add_response( hc, "-->\n" );
  40e2fb:	be 40 3a 42 00       	mov    $0x423a40,%esi
  40e300:	48 89 df             	mov    %rbx,%rdi
  40e303:	e8 a8 f1 ff ff       	callq  40d4b0 <add_response>
  40e308:	e9 74 ff ff ff       	jmpq   40e281 <send_response+0x151>
    if ( match( "**MSIE**", hc->useragent ) )
  40e30d:	e8 3e 4f ff ff       	callq  403250 <__asan_report_load8@plt>
    {
  40e312:	bf 40 0c 00 00       	mov    $0xc40,%edi
  40e317:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
  40e31c:	e8 2f 4b ff ff       	callq  402e50 <__asan_stack_malloc_6@plt>
  40e321:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  40e326:	48 85 c0             	test   %rax,%rax
  40e329:	48 0f 45 e8          	cmovne %rax,%rbp
  40e32d:	e9 35 fe ff ff       	jmpq   40e167 <send_response+0x37>
  40e332:	48 c7 45 00 0e 36 e0 	movq   $0x45e0360e,0x0(%rbp)
  40e339:	45 
  40e33a:	48 89 c2             	mov    %rax,%rdx
  40e33d:	be 40 0c 00 00       	mov    $0xc40,%esi
  40e342:	48 89 ef             	mov    %rbp,%rdi
  40e345:	e8 16 51 ff ff       	callq  403460 <__asan_stack_free_6@plt>
  40e34a:	e9 6c ff ff ff       	jmpq   40e2bb <send_response+0x18b>
  40e34f:	90                   	nop

000000000040e350 <expand_symlinks>:
    {
  40e350:	41 57                	push   %r15
  40e352:	41 56                	push   %r14
  40e354:	41 55                	push   %r13
  40e356:	41 54                	push   %r12
  40e358:	55                   	push   %rbp
  40e359:	89 cd                	mov    %ecx,%ebp
  40e35b:	53                   	push   %rbx
  40e35c:	48 81 ec e8 14 00 00 	sub    $0x14e8,%rsp
  40e363:	8b 0d 97 2f 23 00    	mov    0x232f97(%rip),%ecx        # 641300 <__asan_option_detect_stack_use_after_return>
  40e369:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
  40e36e:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
  40e373:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
  40e378:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  40e37d:	85 c9                	test   %ecx,%ecx
  40e37f:	0f 85 25 0c 00 00    	jne    40efaa <expand_symlinks+0xc5a>
  40e385:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  40e38a:	49 89 c5             	mov    %rax,%r13
  40e38d:	48 8d 98 a0 14 00 00 	lea    0x14a0(%rax),%rbx
  40e394:	49 c1 ed 03          	shr    $0x3,%r13
  40e398:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
  40e39d:	48 c7 00 b3 8a b5 41 	movq   $0x41b58ab3,(%rax)
  40e3a4:	48 c7 40 08 18 c8 42 	movq   $0x42c818,0x8(%rax)
  40e3ab:	00 
  40e3ac:	48 c7 40 10 50 e3 40 	movq   $0x40e350,0x10(%rax)
  40e3b3:	00 
  40e3b4:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
  40e3bb:	f1 f1 f1 f1 
  40e3bf:	41 c7 85 14 80 ff 7f 	movl   $0xf2f20000,0x7fff8014(%r13)
  40e3c6:	00 00 f2 f2 
  40e3ca:	41 c7 85 18 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8018(%r13)
  40e3d1:	f2 f2 f2 f2 
  40e3d5:	41 c7 85 8c 82 ff 7f 	movl   $0xf2f2f200,0x7fff828c(%r13)
  40e3dc:	00 f2 f2 f2 
  40e3e0:	41 c7 85 90 82 ff 7f 	movl   $0xf3f3f3f3,0x7fff8290(%r13)
  40e3e7:	f3 f3 f3 f3 
    if ( no_symlink_check )
  40e3eb:	85 d2                	test   %edx,%edx
  40e3ed:	74 52                	je     40e441 <expand_symlinks+0xf1>
	if ( stat( path, &sb ) != -1 )
  40e3ef:	48 8d 58 20          	lea    0x20(%rax),%rbx
  40e3f3:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  40e3f8:	48 89 de             	mov    %rbx,%rsi
  40e3fb:	e8 80 0c 01 00       	callq  41f080 <__stat>
  40e400:	83 f8 ff             	cmp    $0xffffffff,%eax
  40e403:	0f 85 07 09 00 00    	jne    40ed10 <expand_symlinks+0x9c0>
  40e409:	48 c1 eb 03          	shr    $0x3,%rbx
  40e40d:	b8 f8 f8 ff ff       	mov    $0xfffff8f8,%eax
  40e412:	c7 83 00 80 ff 7f f8 	movl   $0xf8f8f8f8,0x7fff8000(%rbx)
  40e419:	f8 f8 f8 
  40e41c:	c7 83 04 80 ff 7f f8 	movl   $0xf8f8f8f8,0x7fff8004(%rbx)
  40e423:	f8 f8 f8 
  40e426:	c7 83 08 80 ff 7f f8 	movl   $0xf8f8f8f8,0x7fff8008(%rbx)
  40e42d:	f8 f8 f8 
  40e430:	c7 83 0c 80 ff 7f f8 	movl   $0xf8f8f8f8,0x7fff800c(%rbx)
  40e437:	f8 f8 f8 
  40e43a:	66 89 83 10 80 ff 7f 	mov    %ax,0x7fff8010(%rbx)
    httpd_realloc_str( &checked, &maxchecked, 1 );
  40e441:	ba 01 00 00 00       	mov    $0x1,%edx
  40e446:	bf 40 2a 64 00       	mov    $0x642a40,%edi
  40e44b:	be 00 2a 64 00       	mov    $0x642a00,%esi
  40e450:	e8 db ee ff ff       	callq  40d330 <httpd_realloc_str>
    checked[0] = '\0';
  40e455:	48 8b 3d e4 45 23 00 	mov    0x2345e4(%rip),%rdi        # 642a40 <checked.6240>
  40e45c:	48 89 f8             	mov    %rdi,%rax
  40e45f:	48 89 fa             	mov    %rdi,%rdx
  40e462:	48 c1 e8 03          	shr    $0x3,%rax
  40e466:	83 e2 07             	and    $0x7,%edx
  40e469:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40e470:	38 d0                	cmp    %dl,%al
  40e472:	7f 08                	jg     40e47c <expand_symlinks+0x12c>
  40e474:	84 c0                	test   %al,%al
  40e476:	0f 85 e6 0a 00 00    	jne    40ef62 <expand_symlinks+0xc12>
    restlen = strlen( path );
  40e47c:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
    checked[0] = '\0';
  40e481:	c6 07 00             	movb   $0x0,(%rdi)
    restlen = strlen( path );
  40e484:	4c 89 f7             	mov    %r14,%rdi
  40e487:	e8 f4 47 ff ff       	callq  402c80 <strlen@plt>
    httpd_realloc_str( &rest, &maxrest, restlen );
  40e48c:	be 80 29 64 00       	mov    $0x642980,%esi
  40e491:	bf c0 29 64 00       	mov    $0x6429c0,%edi
  40e496:	48 89 c2             	mov    %rax,%rdx
    restlen = strlen( path );
  40e499:	48 89 c3             	mov    %rax,%rbx
    httpd_realloc_str( &rest, &maxrest, restlen );
  40e49c:	e8 8f ee ff ff       	callq  40d330 <httpd_realloc_str>
    (void) strcpy( rest, path );
  40e4a1:	48 8b 3d 18 45 23 00 	mov    0x234518(%rip),%rdi        # 6429c0 <rest.6241>
  40e4a8:	4c 89 f6             	mov    %r14,%rsi
  40e4ab:	e8 60 4a ff ff       	callq  402f10 <strcpy@plt>
    if ( restlen && rest[restlen - 1] == '/' )
  40e4b0:	4c 8b 35 09 45 23 00 	mov    0x234509(%rip),%r14        # 6429c0 <rest.6241>
  40e4b7:	48 85 db             	test   %rbx,%rbx
  40e4ba:	0f 84 50 03 00 00    	je     40e810 <expand_symlinks+0x4c0>
  40e4c0:	4c 8d 63 ff          	lea    -0x1(%rbx),%r12
  40e4c4:	4b 8d 3c 26          	lea    (%r14,%r12,1),%rdi
  40e4c8:	48 89 f8             	mov    %rdi,%rax
  40e4cb:	48 89 fa             	mov    %rdi,%rdx
  40e4ce:	48 c1 e8 03          	shr    $0x3,%rax
  40e4d2:	83 e2 07             	and    $0x7,%edx
  40e4d5:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40e4dc:	38 d0                	cmp    %dl,%al
  40e4de:	7f 08                	jg     40e4e8 <expand_symlinks+0x198>
  40e4e0:	84 c0                	test   %al,%al
  40e4e2:	0f 85 8a 0b 00 00    	jne    40f072 <expand_symlinks+0xd22>
  40e4e8:	80 3f 2f             	cmpb   $0x2f,(%rdi)
  40e4eb:	0f 84 bf 09 00 00    	je     40eeb0 <expand_symlinks+0xb60>
    if ( ! tildemapped )
  40e4f1:	85 ed                	test   %ebp,%ebp
  40e4f3:	0f 84 e7 08 00 00    	je     40ede0 <expand_symlinks+0xa90>
	linklen = readlink( checked, link, sizeof(link) - 1 );
  40e4f9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
	rest[--restlen] = '\0';         /* trim trailing slash */
  40e4fe:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
  40e505:	00 
  40e506:	31 ed                	xor    %ebp,%ebp
	linklen = readlink( checked, link, sizeof(link) - 1 );
  40e508:	4c 89 6c 24 38       	mov    %r13,0x38(%rsp)
  40e50d:	48 2d c0 13 00 00    	sub    $0x13c0,%rax
  40e513:	48 89 04 24          	mov    %rax,(%rsp)
  40e517:	e9 ef 00 00 00       	jmpq   40e60b <expand_symlinks+0x2bb>
  40e51c:	0f 1f 40 00          	nopl   0x0(%rax)
	    i = cp1 - r;
  40e520:	4c 29 f0             	sub    %r14,%rax
  40e523:	49 89 c5             	mov    %rax,%r13
	    if ( i == 0 )
  40e526:	48 98                	cltq   
  40e528:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  40e52d:	45 85 ed             	test   %r13d,%r13d
  40e530:	0f 84 4a 03 00 00    	je     40e880 <expand_symlinks+0x530>
	    else if ( strncmp( r, "..", MAX( i, 2 ) ) == 0 )
  40e536:	41 83 fd 02          	cmp    $0x2,%r13d
  40e53a:	ba 02 00 00 00       	mov    $0x2,%edx
  40e53f:	be 80 3a 42 00       	mov    $0x423a80,%esi
  40e544:	4c 89 f7             	mov    %r14,%rdi
  40e547:	41 0f 4d d5          	cmovge %r13d,%edx
  40e54b:	48 63 d2             	movslq %edx,%rdx
  40e54e:	e8 9d 4e ff ff       	callq  4033f0 <strncmp@plt>
  40e553:	85 c0                	test   %eax,%eax
  40e555:	0f 85 1d 04 00 00    	jne    40e978 <expand_symlinks+0x628>
		if ( checkedlen != 0 )
  40e55b:	4c 8b 3d de 44 23 00 	mov    0x2344de(%rip),%r15        # 642a40 <checked.6240>
  40e562:	45 31 e4             	xor    %r12d,%r12d
  40e565:	48 85 ed             	test   %rbp,%rbp
  40e568:	74 26                	je     40e590 <expand_symlinks+0x240>
		    cp2 = strrchr( checked, '/' );
  40e56a:	be 2f 00 00 00       	mov    $0x2f,%esi
  40e56f:	4c 89 ff             	mov    %r15,%rdi
  40e572:	e8 09 49 ff ff       	callq  402e80 <strrchr@plt>
		    if ( cp2 == (char*) 0 )
  40e577:	48 85 c0             	test   %rax,%rax
  40e57a:	74 14                	je     40e590 <expand_symlinks+0x240>
		    else if ( cp2 == checked )
  40e57c:	4c 39 f8             	cmp    %r15,%rax
  40e57f:	0f 84 1b 09 00 00    	je     40eea0 <expand_symlinks+0xb50>
			checkedlen = cp2 - checked;
  40e585:	49 89 c4             	mov    %rax,%r12
  40e588:	4d 29 fc             	sub    %r15,%r12
  40e58b:	49 89 c7             	mov    %rax,%r15
  40e58e:	66 90                	xchg   %ax,%ax
	    checked[checkedlen] = '\0';
  40e590:	4c 89 f8             	mov    %r15,%rax
  40e593:	4c 89 fe             	mov    %r15,%rsi
  40e596:	48 c1 e8 03          	shr    $0x3,%rax
  40e59a:	83 e6 07             	and    $0x7,%esi
  40e59d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40e5a4:	40 38 f0             	cmp    %sil,%al
  40e5a7:	7f 08                	jg     40e5b1 <expand_symlinks+0x261>
  40e5a9:	84 c0                	test   %al,%al
  40e5ab:	0f 85 c8 09 00 00    	jne    40ef79 <expand_symlinks+0xc29>
  40e5b1:	41 c6 07 00          	movb   $0x0,(%r15)
	    r += i + 1;
  40e5b5:	49 63 c5             	movslq %r13d,%rax
	    restlen -= i + 1;
  40e5b8:	41 8d 4d 01          	lea    0x1(%r13),%ecx
  40e5bc:	49 89 df             	mov    %rbx,%r15
	if ( checked[0] == '\0' )
  40e5bf:	4c 8b 2d 7a 44 23 00 	mov    0x23447a(%rip),%r13        # 642a40 <checked.6240>
	    r += i + 1;
  40e5c6:	4d 8d 74 06 01       	lea    0x1(%r14,%rax,1),%r14
	    restlen -= i + 1;
  40e5cb:	48 63 c9             	movslq %ecx,%rcx
  40e5ce:	49 29 cf             	sub    %rcx,%r15
	if ( checked[0] == '\0' )
  40e5d1:	4c 89 e8             	mov    %r13,%rax
  40e5d4:	4c 89 ea             	mov    %r13,%rdx
  40e5d7:	48 c1 e8 03          	shr    $0x3,%rax
  40e5db:	83 e2 07             	and    $0x7,%edx
  40e5de:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40e5e5:	38 d0                	cmp    %dl,%al
  40e5e7:	7f 08                	jg     40e5f1 <expand_symlinks+0x2a1>
  40e5e9:	84 c0                	test   %al,%al
  40e5eb:	0f 85 90 09 00 00    	jne    40ef81 <expand_symlinks+0xc31>
  40e5f1:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
  40e5f6:	0f 85 ce 00 00 00    	jne    40e6ca <expand_symlinks+0x37a>
  40e5fc:	4c 89 fb             	mov    %r15,%rbx
  40e5ff:	4c 89 e5             	mov    %r12,%rbp
    while ( restlen > 0 )
  40e602:	48 85 db             	test   %rbx,%rbx
  40e605:	0f 84 f5 08 00 00    	je     40ef00 <expand_symlinks+0xbb0>
	cp1 = strchr( r, '/' );
  40e60b:	be 2f 00 00 00       	mov    $0x2f,%esi
  40e610:	4c 89 f7             	mov    %r14,%rdi
  40e613:	e8 a8 4d ff ff       	callq  4033c0 <strchr@plt>
	if ( cp1 != (char*) 0 )
  40e618:	48 85 c0             	test   %rax,%rax
  40e61b:	0f 85 ff fe ff ff    	jne    40e520 <expand_symlinks+0x1d0>
	    if ( strcmp( r, ".." ) == 0 )
  40e621:	be 80 3a 42 00       	mov    $0x423a80,%esi
  40e626:	4c 89 f7             	mov    %r14,%rdi
  40e629:	e8 12 48 ff ff       	callq  402e40 <strcmp@plt>
  40e62e:	85 c0                	test   %eax,%eax
  40e630:	0f 85 ca 03 00 00    	jne    40ea00 <expand_symlinks+0x6b0>
		if ( checkedlen != 0 )
  40e636:	4c 8b 2d 03 44 23 00 	mov    0x234403(%rip),%r13        # 642a40 <checked.6240>
  40e63d:	48 85 ed             	test   %rbp,%rbp
  40e640:	0f 84 b2 03 00 00    	je     40e9f8 <expand_symlinks+0x6a8>
		    cp2 = strrchr( checked, '/' );
  40e646:	be 2f 00 00 00       	mov    $0x2f,%esi
  40e64b:	4c 89 ef             	mov    %r13,%rdi
			checkedlen = 0;
  40e64e:	45 31 e4             	xor    %r12d,%r12d
		    cp2 = strrchr( checked, '/' );
  40e651:	e8 2a 48 ff ff       	callq  402e80 <strrchr@plt>
		    if ( cp2 == (char*) 0 )
  40e656:	48 85 c0             	test   %rax,%rax
  40e659:	74 12                	je     40e66d <expand_symlinks+0x31d>
		    else if ( cp2 == checked )
  40e65b:	4c 39 e8             	cmp    %r13,%rax
  40e65e:	0f 84 bc 08 00 00    	je     40ef20 <expand_symlinks+0xbd0>
			checkedlen = cp2 - checked;
  40e664:	49 89 c4             	mov    %rax,%r12
  40e667:	4d 29 ec             	sub    %r13,%r12
  40e66a:	49 89 c5             	mov    %rax,%r13
		    checked[checkedlen] = '\0';
  40e66d:	4c 89 e8             	mov    %r13,%rax
  40e670:	4c 89 ea             	mov    %r13,%rdx
  40e673:	48 c1 e8 03          	shr    $0x3,%rax
  40e677:	83 e2 07             	and    $0x7,%edx
  40e67a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40e681:	38 d0                	cmp    %dl,%al
  40e683:	7f 08                	jg     40e68d <expand_symlinks+0x33d>
  40e685:	84 c0                	test   %al,%al
  40e687:	0f 85 dd 09 00 00    	jne    40f06a <expand_symlinks+0xd1a>
  40e68d:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
  40e692:	4c 8b 2d a7 43 23 00 	mov    0x2343a7(%rip),%r13        # 642a40 <checked.6240>
	if ( checked[0] == '\0' )
  40e699:	4c 89 e8             	mov    %r13,%rax
  40e69c:	4c 89 ea             	mov    %r13,%rdx
	    r += restlen;
  40e69f:	49 01 de             	add    %rbx,%r14
	if ( checked[0] == '\0' )
  40e6a2:	48 c1 e8 03          	shr    $0x3,%rax
  40e6a6:	83 e2 07             	and    $0x7,%edx
  40e6a9:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40e6b0:	38 d0                	cmp    %dl,%al
  40e6b2:	7f 08                	jg     40e6bc <expand_symlinks+0x36c>
  40e6b4:	84 c0                	test   %al,%al
  40e6b6:	0f 85 41 09 00 00    	jne    40effd <expand_symlinks+0xcad>
  40e6bc:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
  40e6c1:	0f 84 39 08 00 00    	je     40ef00 <expand_symlinks+0xbb0>
	    restlen = 0;
  40e6c7:	45 31 ff             	xor    %r15d,%r15d
	linklen = readlink( checked, link, sizeof(link) - 1 );
  40e6ca:	48 8b 34 24          	mov    (%rsp),%rsi
  40e6ce:	4c 89 ef             	mov    %r13,%rdi
  40e6d1:	ba 87 13 00 00       	mov    $0x1387,%edx
  40e6d6:	e8 05 49 ff ff       	callq  402fe0 <readlink@plt>
  40e6db:	49 89 c5             	mov    %rax,%r13
	if ( linklen == -1 )
  40e6de:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  40e6e2:	0f 84 d8 01 00 00    	je     40e8c0 <expand_symlinks+0x570>
	++nlinks;
  40e6e8:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
  40e6ed:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
	if ( nlinks > MAX_LINKS )
  40e6f1:	83 fb 20             	cmp    $0x20,%ebx
  40e6f4:	0f 8f 46 08 00 00    	jg     40ef40 <expand_symlinks+0xbf0>
	link[linklen] = '\0';
  40e6fa:	48 8b 1c 24          	mov    (%rsp),%rbx
  40e6fe:	48 8d 3c 03          	lea    (%rbx,%rax,1),%rdi
  40e702:	48 89 fa             	mov    %rdi,%rdx
  40e705:	48 89 f9             	mov    %rdi,%rcx
  40e708:	48 c1 ea 03          	shr    $0x3,%rdx
  40e70c:	83 e1 07             	and    $0x7,%ecx
  40e70f:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40e716:	38 ca                	cmp    %cl,%dl
  40e718:	7f 08                	jg     40e722 <expand_symlinks+0x3d2>
  40e71a:	84 d2                	test   %dl,%dl
  40e71c:	0f 85 74 08 00 00    	jne    40ef96 <expand_symlinks+0xc46>
  40e722:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
	if ( link[linklen - 1] == '/' )
  40e727:	48 83 e8 01          	sub    $0x1,%rax
	link[linklen] = '\0';
  40e72b:	c6 84 18 41 ec ff ff 	movb   $0x0,-0x13bf(%rax,%rbx,1)
  40e732:	00 
	if ( link[linklen - 1] == '/' )
  40e733:	48 8b 1c 24          	mov    (%rsp),%rbx
  40e737:	48 8d 3c 03          	lea    (%rbx,%rax,1),%rdi
  40e73b:	48 89 fa             	mov    %rdi,%rdx
  40e73e:	48 89 f9             	mov    %rdi,%rcx
  40e741:	48 c1 ea 03          	shr    $0x3,%rdx
  40e745:	83 e1 07             	and    $0x7,%ecx
  40e748:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40e74f:	38 ca                	cmp    %cl,%dl
  40e751:	7f 08                	jg     40e75b <expand_symlinks+0x40b>
  40e753:	84 d2                	test   %dl,%dl
  40e755:	0f 85 2e 08 00 00    	jne    40ef89 <expand_symlinks+0xc39>
  40e75b:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
  40e760:	80 bc 18 40 ec ff ff 	cmpb   $0x2f,-0x13c0(%rax,%rbx,1)
  40e767:	2f 
  40e768:	75 0b                	jne    40e775 <expand_symlinks+0x425>
	    link[--linklen] = '\0';     /* trim trailing slash */
  40e76a:	c6 84 18 40 ec ff ff 	movb   $0x0,-0x13c0(%rax,%rbx,1)
  40e771:	00 
  40e772:	49 89 c5             	mov    %rax,%r13
	if ( restlen != 0 )
  40e775:	4d 85 ff             	test   %r15,%r15
  40e778:	0f 85 c2 02 00 00    	jne    40ea40 <expand_symlinks+0x6f0>
	    httpd_realloc_str( &rest, &maxrest, linklen );
  40e77e:	4c 89 ea             	mov    %r13,%rdx
  40e781:	be 80 29 64 00       	mov    $0x642980,%esi
  40e786:	bf c0 29 64 00       	mov    $0x6429c0,%edi
	    restlen = linklen;
  40e78b:	4c 89 eb             	mov    %r13,%rbx
	    httpd_realloc_str( &rest, &maxrest, linklen );
  40e78e:	e8 9d eb ff ff       	callq  40d330 <httpd_realloc_str>
	    (void) strcpy( rest, link );
  40e793:	48 8b 34 24          	mov    (%rsp),%rsi
  40e797:	48 8b 3d 22 42 23 00 	mov    0x234222(%rip),%rdi        # 6429c0 <rest.6241>
  40e79e:	e8 6d 47 ff ff       	callq  402f10 <strcpy@plt>
	    r = rest;
  40e7a3:	4c 8b 35 16 42 23 00 	mov    0x234216(%rip),%r14        # 6429c0 <rest.6241>
	if ( rest[0] == '/' )
  40e7aa:	4c 89 f0             	mov    %r14,%rax
  40e7ad:	4c 89 f2             	mov    %r14,%rdx
  40e7b0:	48 c1 e8 03          	shr    $0x3,%rax
  40e7b4:	83 e2 07             	and    $0x7,%edx
  40e7b7:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40e7be:	38 d0                	cmp    %dl,%al
  40e7c0:	7f 08                	jg     40e7ca <expand_symlinks+0x47a>
  40e7c2:	84 c0                	test   %al,%al
  40e7c4:	0f 85 c4 07 00 00    	jne    40ef8e <expand_symlinks+0xc3e>
  40e7ca:	41 80 3e 2f          	cmpb   $0x2f,(%r14)
  40e7ce:	48 8b 3d 6b 42 23 00 	mov    0x23426b(%rip),%rdi        # 642a40 <checked.6240>
  40e7d5:	0f 84 ed 01 00 00    	je     40e9c8 <expand_symlinks+0x678>
	    checked[checkedlen] = '\0';
  40e7db:	48 01 ef             	add    %rbp,%rdi
  40e7de:	48 89 f8             	mov    %rdi,%rax
  40e7e1:	48 89 fa             	mov    %rdi,%rdx
  40e7e4:	48 c1 e8 03          	shr    $0x3,%rax
  40e7e8:	83 e2 07             	and    $0x7,%edx
  40e7eb:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40e7f2:	38 d0                	cmp    %dl,%al
  40e7f4:	7f 08                	jg     40e7fe <expand_symlinks+0x4ae>
  40e7f6:	84 c0                	test   %al,%al
  40e7f8:	0f 85 fa 07 00 00    	jne    40eff8 <expand_symlinks+0xca8>
  40e7fe:	c6 07 00             	movb   $0x0,(%rdi)
  40e801:	e9 fc fd ff ff       	jmpq   40e602 <expand_symlinks+0x2b2>
  40e806:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40e80d:	00 00 00 
    if ( ! tildemapped )
  40e810:	85 ed                	test   %ebp,%ebp
  40e812:	0f 84 68 04 00 00    	je     40ec80 <expand_symlinks+0x930>
    *restP = r;
  40e818:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  40e81d:	48 c1 e8 03          	shr    $0x3,%rax
  40e821:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40e828:	0f 85 dc 07 00 00    	jne    40f00a <expand_symlinks+0xcba>
  40e82e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  40e833:	4c 89 30             	mov    %r14,(%rax)
    if ( checked[0] == '\0' )
  40e836:	48 8b 1d 03 42 23 00 	mov    0x234203(%rip),%rbx        # 642a40 <checked.6240>
  40e83d:	48 89 d8             	mov    %rbx,%rax
  40e840:	48 89 da             	mov    %rbx,%rdx
  40e843:	48 c1 e8 03          	shr    $0x3,%rax
  40e847:	83 e2 07             	and    $0x7,%edx
  40e84a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40e851:	38 d0                	cmp    %dl,%al
  40e853:	7f 08                	jg     40e85d <expand_symlinks+0x50d>
  40e855:	84 c0                	test   %al,%al
  40e857:	0f 85 f5 07 00 00    	jne    40f052 <expand_symlinks+0xd02>
  40e85d:	80 3b 00             	cmpb   $0x0,(%rbx)
  40e860:	0f 85 ba 00 00 00    	jne    40e920 <expand_symlinks+0x5d0>
	(void) strcpy( checked, "." );
  40e866:	ba 02 00 00 00       	mov    $0x2,%edx
  40e86b:	be c0 3a 42 00       	mov    $0x423ac0,%esi
  40e870:	48 89 df             	mov    %rbx,%rdi
  40e873:	e8 c8 48 ff ff       	callq  403140 <memcpy@plt>
  40e878:	e9 83 03 00 00       	jmpq   40ec00 <expand_symlinks+0x8b0>
  40e87d:	0f 1f 00             	nopl   (%rax)
		httpd_realloc_str( &checked, &maxchecked, checkedlen + 1 );
  40e880:	4c 8d 65 01          	lea    0x1(%rbp),%r12
  40e884:	be 00 2a 64 00       	mov    $0x642a00,%esi
  40e889:	bf 40 2a 64 00       	mov    $0x642a40,%edi
  40e88e:	4c 89 e2             	mov    %r12,%rdx
  40e891:	e8 9a ea ff ff       	callq  40d330 <httpd_realloc_str>
		(void) strncpy( &checked[checkedlen], r, 1 );
  40e896:	48 8b 3d a3 41 23 00 	mov    0x2341a3(%rip),%rdi        # 642a40 <checked.6240>
  40e89d:	ba 01 00 00 00       	mov    $0x1,%edx
  40e8a2:	4c 89 f6             	mov    %r14,%rsi
  40e8a5:	48 01 ef             	add    %rbp,%rdi
  40e8a8:	e8 b3 43 ff ff       	callq  402c60 <strncpy@plt>
		checkedlen += 1;
  40e8ad:	4c 8b 3d 8c 41 23 00 	mov    0x23418c(%rip),%r15        # 642a40 <checked.6240>
  40e8b4:	4d 01 e7             	add    %r12,%r15
  40e8b7:	e9 d4 fc ff ff       	jmpq   40e590 <expand_symlinks+0x240>
  40e8bc:	0f 1f 40 00          	nopl   0x0(%rax)
	    if ( errno == EINVAL )
  40e8c0:	e8 3b 43 ff ff       	callq  402c00 <__errno_location@plt>
  40e8c5:	48 89 c2             	mov    %rax,%rdx
  40e8c8:	48 c1 ea 03          	shr    $0x3,%rdx
  40e8cc:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  40e8d3:	48 89 c2             	mov    %rax,%rdx
  40e8d6:	83 e2 07             	and    $0x7,%edx
  40e8d9:	83 c2 03             	add    $0x3,%edx
  40e8dc:	38 ca                	cmp    %cl,%dl
  40e8de:	7c 08                	jl     40e8e8 <expand_symlinks+0x598>
  40e8e0:	84 c9                	test   %cl,%cl
  40e8e2:	0f 85 e5 06 00 00    	jne    40efcd <expand_symlinks+0xc7d>
  40e8e8:	8b 00                	mov    (%rax),%eax
  40e8ea:	83 f8 16             	cmp    $0x16,%eax
  40e8ed:	0f 84 09 fd ff ff    	je     40e5fc <expand_symlinks+0x2ac>
  40e8f3:	4d 89 f8             	mov    %r15,%r8
  40e8f6:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
	    if ( errno == EACCES || errno == ENOENT || errno == ENOTDIR )
  40e8fb:	83 f8 14             	cmp    $0x14,%eax
  40e8fe:	0f 86 94 02 00 00    	jbe    40eb98 <expand_symlinks+0x848>
	    syslog( LOG_ERR, "readlink %.80s - %m", checked );
  40e904:	48 8b 15 35 41 23 00 	mov    0x234135(%rip),%rdx        # 642a40 <checked.6240>
  40e90b:	be 00 3b 42 00       	mov    $0x423b00,%esi
  40e910:	31 c0                	xor    %eax,%eax
	    return (char*) 0;
  40e912:	31 db                	xor    %ebx,%ebx
	    syslog( LOG_ERR, "readlink %.80s - %m", checked );
  40e914:	bf 03 00 00 00       	mov    $0x3,%edi
  40e919:	e8 22 43 ff ff       	callq  402c40 <syslog@plt>
  40e91e:	66 90                	xchg   %ax,%ax
    {
  40e920:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
  40e925:	48 3b 44 24 20       	cmp    0x20(%rsp),%rax
  40e92a:	0f 85 a5 06 00 00    	jne    40efd5 <expand_symlinks+0xc85>
  40e930:	49 c7 85 10 80 ff 7f 	movq   $0x0,0x7fff8010(%r13)
  40e937:	00 00 00 00 
  40e93b:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40e93f:	41 c7 85 18 80 ff 7f 	movl   $0x0,0x7fff8018(%r13)
  40e946:	00 00 00 00 
  40e94a:	49 c7 85 8c 82 ff 7f 	movq   $0x0,0x7fff828c(%r13)
  40e951:	00 00 00 00 
  40e955:	41 0f 11 85 00 80 ff 	movups %xmm0,0x7fff8000(%r13)
  40e95c:	7f 
    }
  40e95d:	48 81 c4 e8 14 00 00 	add    $0x14e8,%rsp
  40e964:	48 89 d8             	mov    %rbx,%rax
  40e967:	5b                   	pop    %rbx
  40e968:	5d                   	pop    %rbp
  40e969:	41 5c                	pop    %r12
  40e96b:	41 5d                	pop    %r13
  40e96d:	41 5e                	pop    %r14
  40e96f:	41 5f                	pop    %r15
  40e971:	c3                   	retq   
  40e972:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
		httpd_realloc_str( &checked, &maxchecked, checkedlen + 1 + i );
  40e978:	49 63 c5             	movslq %r13d,%rax
  40e97b:	4c 8d 7d 01          	lea    0x1(%rbp),%r15
  40e97f:	bf 40 2a 64 00       	mov    $0x642a40,%edi
  40e984:	be 00 2a 64 00       	mov    $0x642a00,%esi
  40e989:	4d 8d 24 07          	lea    (%r15,%rax,1),%r12
  40e98d:	4c 89 e2             	mov    %r12,%rdx
  40e990:	e8 9b e9 ff ff       	callq  40d330 <httpd_realloc_str>
		if ( checkedlen > 0 && checked[checkedlen-1] != '/' )
  40e995:	48 8b 3d a4 40 23 00 	mov    0x2340a4(%rip),%rdi        # 642a40 <checked.6240>
  40e99c:	48 85 ed             	test   %rbp,%rbp
  40e99f:	0f 85 8b 01 00 00    	jne    40eb30 <expand_symlinks+0x7e0>
  40e9a5:	4d 63 e5             	movslq %r13d,%r12
		(void) strncpy( &checked[checkedlen], r, i );
  40e9a8:	49 63 d5             	movslq %r13d,%rdx
  40e9ab:	4c 89 f6             	mov    %r14,%rsi
  40e9ae:	e8 ad 42 ff ff       	callq  402c60 <strncpy@plt>
		checkedlen += i;
  40e9b3:	4c 8b 3d 86 40 23 00 	mov    0x234086(%rip),%r15        # 642a40 <checked.6240>
  40e9ba:	4d 01 e7             	add    %r12,%r15
  40e9bd:	e9 ce fb ff ff       	jmpq   40e590 <expand_symlinks+0x240>
  40e9c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	    checked[0] = '\0';
  40e9c8:	48 89 f8             	mov    %rdi,%rax
  40e9cb:	48 89 fa             	mov    %rdi,%rdx
  40e9ce:	48 c1 e8 03          	shr    $0x3,%rax
  40e9d2:	83 e2 07             	and    $0x7,%edx
  40e9d5:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40e9dc:	38 d0                	cmp    %dl,%al
  40e9de:	7f 08                	jg     40e9e8 <expand_symlinks+0x698>
  40e9e0:	84 c0                	test   %al,%al
  40e9e2:	0f 85 1d 06 00 00    	jne    40f005 <expand_symlinks+0xcb5>
  40e9e8:	c6 07 00             	movb   $0x0,(%rdi)
	    checkedlen = 0;
  40e9eb:	31 ed                	xor    %ebp,%ebp
  40e9ed:	e9 10 fc ff ff       	jmpq   40e602 <expand_symlinks+0x2b2>
  40e9f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40e9f8:	45 31 e4             	xor    %r12d,%r12d
  40e9fb:	e9 99 fc ff ff       	jmpq   40e699 <expand_symlinks+0x349>
		    &checked, &maxchecked, checkedlen + 1 + restlen );
  40ea00:	4c 8d 64 1d 00       	lea    0x0(%rbp,%rbx,1),%r12
		httpd_realloc_str(
  40ea05:	bf 40 2a 64 00       	mov    $0x642a40,%edi
  40ea0a:	be 00 2a 64 00       	mov    $0x642a00,%esi
  40ea0f:	49 8d 54 24 01       	lea    0x1(%r12),%rdx
  40ea14:	e8 17 e9 ff ff       	callq  40d330 <httpd_realloc_str>
		if ( checkedlen > 0 && checked[checkedlen-1] != '/' )
  40ea19:	48 8b 3d 20 40 23 00 	mov    0x234020(%rip),%rdi        # 642a40 <checked.6240>
  40ea20:	48 85 ed             	test   %rbp,%rbp
  40ea23:	0f 85 e7 01 00 00    	jne    40ec10 <expand_symlinks+0x8c0>
  40ea29:	49 89 dc             	mov    %rbx,%r12
		(void) strcpy( &checked[checkedlen], r );
  40ea2c:	4c 89 f6             	mov    %r14,%rsi
  40ea2f:	e8 dc 44 ff ff       	callq  402f10 <strcpy@plt>
		checkedlen += restlen;
  40ea34:	4c 8b 2d 05 40 23 00 	mov    0x234005(%rip),%r13        # 642a40 <checked.6240>
  40ea3b:	e9 59 fc ff ff       	jmpq   40e699 <expand_symlinks+0x349>
	    (void) strcpy( rest, r );
  40ea40:	48 8b 3d 79 3f 23 00 	mov    0x233f79(%rip),%rdi        # 6429c0 <rest.6241>
  40ea47:	4c 89 f6             	mov    %r14,%rsi
	    httpd_realloc_str( &rest, &maxrest, restlen + linklen + 1 );
  40ea4a:	4b 8d 5c 3d 01       	lea    0x1(%r13,%r15,1),%rbx
	    (void) strcpy( rest, r );
  40ea4f:	e8 bc 44 ff ff       	callq  402f10 <strcpy@plt>
	    httpd_realloc_str( &rest, &maxrest, restlen + linklen + 1 );
  40ea54:	48 89 da             	mov    %rbx,%rdx
  40ea57:	be 80 29 64 00       	mov    $0x642980,%esi
  40ea5c:	bf c0 29 64 00       	mov    $0x6429c0,%edi
  40ea61:	e8 ca e8 ff ff       	callq  40d330 <httpd_realloc_str>
	    for ( i = restlen; i >= 0; --i )
  40ea66:	45 85 ff             	test   %r15d,%r15d
  40ea69:	78 79                	js     40eae4 <expand_symlinks+0x794>
  40ea6b:	49 63 d7             	movslq %r15d,%rdx
  40ea6e:	44 89 f8             	mov    %r15d,%eax
  40ea71:	49 8d 75 01          	lea    0x1(%r13),%rsi
  40ea75:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
  40ea79:	48 29 c1             	sub    %rax,%rcx
  40ea7c:	49 89 c8             	mov    %rcx,%r8
  40ea7f:	90                   	nop
		rest[i + linklen + 1] = rest[i];
  40ea80:	48 8b 3d 39 3f 23 00 	mov    0x233f39(%rip),%rdi        # 6429c0 <rest.6241>
  40ea87:	48 8d 0c 16          	lea    (%rsi,%rdx,1),%rcx
  40ea8b:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
  40ea8f:	48 01 cf             	add    %rcx,%rdi
  40ea92:	48 89 c1             	mov    %rax,%rcx
  40ea95:	49 89 c1             	mov    %rax,%r9
  40ea98:	48 c1 e9 03          	shr    $0x3,%rcx
  40ea9c:	41 83 e1 07          	and    $0x7,%r9d
  40eaa0:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  40eaa7:	44 38 c9             	cmp    %r9b,%cl
  40eaaa:	7f 08                	jg     40eab4 <expand_symlinks+0x764>
  40eaac:	84 c9                	test   %cl,%cl
  40eaae:	0f 85 bd 04 00 00    	jne    40ef71 <expand_symlinks+0xc21>
  40eab4:	0f b6 08             	movzbl (%rax),%ecx
  40eab7:	48 89 f8             	mov    %rdi,%rax
  40eaba:	49 89 f9             	mov    %rdi,%r9
  40eabd:	48 c1 e8 03          	shr    $0x3,%rax
  40eac1:	41 83 e1 07          	and    $0x7,%r9d
  40eac5:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40eacc:	44 38 c8             	cmp    %r9b,%al
  40eacf:	7f 08                	jg     40ead9 <expand_symlinks+0x789>
  40ead1:	84 c0                	test   %al,%al
  40ead3:	0f 85 93 04 00 00    	jne    40ef6c <expand_symlinks+0xc1c>
  40ead9:	48 83 ea 01          	sub    $0x1,%rdx
  40eadd:	88 0f                	mov    %cl,(%rdi)
	    for ( i = restlen; i >= 0; --i )
  40eadf:	4c 39 c2             	cmp    %r8,%rdx
  40eae2:	75 9c                	jne    40ea80 <expand_symlinks+0x730>
	    (void) strcpy( rest, link );
  40eae4:	48 8b 34 24          	mov    (%rsp),%rsi
  40eae8:	48 8b 3d d1 3e 23 00 	mov    0x233ed1(%rip),%rdi        # 6429c0 <rest.6241>
  40eaef:	e8 1c 44 ff ff       	callq  402f10 <strcpy@plt>
	    rest[linklen] = '/';
  40eaf4:	4c 03 2d c5 3e 23 00 	add    0x233ec5(%rip),%r13        # 6429c0 <rest.6241>
  40eafb:	4c 89 e8             	mov    %r13,%rax
  40eafe:	4c 89 ea             	mov    %r13,%rdx
  40eb01:	48 c1 e8 03          	shr    $0x3,%rax
  40eb05:	83 e2 07             	and    $0x7,%edx
  40eb08:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40eb0f:	38 d0                	cmp    %dl,%al
  40eb11:	7f 08                	jg     40eb1b <expand_symlinks+0x7cb>
  40eb13:	84 c0                	test   %al,%al
  40eb15:	0f 85 47 05 00 00    	jne    40f062 <expand_symlinks+0xd12>
  40eb1b:	41 c6 45 00 2f       	movb   $0x2f,0x0(%r13)
	    r = rest;
  40eb20:	4c 8b 35 99 3e 23 00 	mov    0x233e99(%rip),%r14        # 6429c0 <rest.6241>
  40eb27:	e9 7e fc ff ff       	jmpq   40e7aa <expand_symlinks+0x45a>
  40eb2c:	0f 1f 40 00          	nopl   0x0(%rax)
		if ( checkedlen > 0 && checked[checkedlen-1] != '/' )
  40eb30:	48 8d 44 2f ff       	lea    -0x1(%rdi,%rbp,1),%rax
  40eb35:	48 89 c2             	mov    %rax,%rdx
  40eb38:	48 89 c6             	mov    %rax,%rsi
  40eb3b:	48 c1 ea 03          	shr    $0x3,%rdx
  40eb3f:	83 e6 07             	and    $0x7,%esi
  40eb42:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40eb49:	40 38 f2             	cmp    %sil,%dl
  40eb4c:	7f 08                	jg     40eb56 <expand_symlinks+0x806>
  40eb4e:	84 d2                	test   %dl,%dl
  40eb50:	0f 85 04 05 00 00    	jne    40f05a <expand_symlinks+0xd0a>
  40eb56:	48 01 ef             	add    %rbp,%rdi
  40eb59:	80 38 2f             	cmpb   $0x2f,(%rax)
  40eb5c:	0f 84 ae 03 00 00    	je     40ef10 <expand_symlinks+0xbc0>
		    checked[checkedlen++] = '/';
  40eb62:	48 89 f8             	mov    %rdi,%rax
  40eb65:	48 89 fa             	mov    %rdi,%rdx
  40eb68:	48 c1 e8 03          	shr    $0x3,%rax
  40eb6c:	83 e2 07             	and    $0x7,%edx
  40eb6f:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40eb76:	38 d0                	cmp    %dl,%al
  40eb78:	7f 08                	jg     40eb82 <expand_symlinks+0x832>
  40eb7a:	84 c0                	test   %al,%al
  40eb7c:	0f 85 92 04 00 00    	jne    40f014 <expand_symlinks+0xcc4>
  40eb82:	c6 07 2f             	movb   $0x2f,(%rdi)
  40eb85:	48 8b 3d b4 3e 23 00 	mov    0x233eb4(%rip),%rdi        # 642a40 <checked.6240>
  40eb8c:	4c 01 ff             	add    %r15,%rdi
  40eb8f:	e9 14 fe ff ff       	jmpq   40e9a8 <expand_symlinks+0x658>
  40eb94:	0f 1f 40 00          	nopl   0x0(%rax)
	    if ( errno == EACCES || errno == ENOENT || errno == ENOTDIR )
  40eb98:	ba 04 20 10 00       	mov    $0x102004,%edx
  40eb9d:	48 0f a3 c2          	bt     %rax,%rdx
  40eba1:	0f 83 5d fd ff ff    	jae    40e904 <expand_symlinks+0x5b4>
		*restP = r - ( prevrestlen - restlen );
  40eba7:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  40ebac:	49 29 d8             	sub    %rbx,%r8
  40ebaf:	4b 8d 0c 06          	lea    (%r14,%r8,1),%rcx
  40ebb3:	48 c1 e8 03          	shr    $0x3,%rax
  40ebb7:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40ebbe:	0f 85 dc 03 00 00    	jne    40efa0 <expand_symlinks+0xc50>
  40ebc4:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  40ebc9:	48 89 08             	mov    %rcx,(%rax)
		if ( prevcheckedlen == 0 )
  40ebcc:	48 85 ed             	test   %rbp,%rbp
  40ebcf:	0f 84 ab 02 00 00    	je     40ee80 <expand_symlinks+0xb30>
		    checked[prevcheckedlen] = '\0';
  40ebd5:	48 03 2d 64 3e 23 00 	add    0x233e64(%rip),%rbp        # 642a40 <checked.6240>
  40ebdc:	48 89 e8             	mov    %rbp,%rax
  40ebdf:	48 89 ea             	mov    %rbp,%rdx
  40ebe2:	48 c1 e8 03          	shr    $0x3,%rax
  40ebe6:	83 e2 07             	and    $0x7,%edx
  40ebe9:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40ebf0:	38 d0                	cmp    %dl,%al
  40ebf2:	7f 08                	jg     40ebfc <expand_symlinks+0x8ac>
  40ebf4:	84 c0                	test   %al,%al
  40ebf6:	0f 85 4e 04 00 00    	jne    40f04a <expand_symlinks+0xcfa>
  40ebfc:	c6 45 00 00          	movb   $0x0,0x0(%rbp)
		return checked;
  40ec00:	48 8b 1d 39 3e 23 00 	mov    0x233e39(%rip),%rbx        # 642a40 <checked.6240>
    return checked;
  40ec07:	e9 14 fd ff ff       	jmpq   40e920 <expand_symlinks+0x5d0>
  40ec0c:	0f 1f 40 00          	nopl   0x0(%rax)
		if ( checkedlen > 0 && checked[checkedlen-1] != '/' )
  40ec10:	48 8d 44 2f ff       	lea    -0x1(%rdi,%rbp,1),%rax
  40ec15:	48 89 c2             	mov    %rax,%rdx
  40ec18:	48 89 c1             	mov    %rax,%rcx
  40ec1b:	48 c1 ea 03          	shr    $0x3,%rdx
  40ec1f:	83 e1 07             	and    $0x7,%ecx
  40ec22:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40ec29:	38 ca                	cmp    %cl,%dl
  40ec2b:	7f 08                	jg     40ec35 <expand_symlinks+0x8e5>
  40ec2d:	84 d2                	test   %dl,%dl
  40ec2f:	0f 85 03 04 00 00    	jne    40f038 <expand_symlinks+0xce8>
  40ec35:	48 01 ef             	add    %rbp,%rdi
  40ec38:	80 38 2f             	cmpb   $0x2f,(%rax)
  40ec3b:	0f 84 eb fd ff ff    	je     40ea2c <expand_symlinks+0x6dc>
		    checked[checkedlen++] = '/';
  40ec41:	48 89 f8             	mov    %rdi,%rax
  40ec44:	48 89 fa             	mov    %rdi,%rdx
  40ec47:	4c 8d 65 01          	lea    0x1(%rbp),%r12
  40ec4b:	48 c1 e8 03          	shr    $0x3,%rax
  40ec4f:	83 e2 07             	and    $0x7,%edx
  40ec52:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40ec59:	38 d0                	cmp    %dl,%al
  40ec5b:	7f 08                	jg     40ec65 <expand_symlinks+0x915>
  40ec5d:	84 c0                	test   %al,%al
  40ec5f:	0f 85 db 03 00 00    	jne    40f040 <expand_symlinks+0xcf0>
  40ec65:	c6 07 2f             	movb   $0x2f,(%rdi)
  40ec68:	48 8b 3d d1 3d 23 00 	mov    0x233dd1(%rip),%rdi        # 642a40 <checked.6240>
  40ec6f:	4c 01 e7             	add    %r12,%rdi
  40ec72:	49 01 dc             	add    %rbx,%r12
  40ec75:	e9 b2 fd ff ff       	jmpq   40ea2c <expand_symlinks+0x6dc>
  40ec7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	while ( rest[0] == '/' )
  40ec80:	4c 89 f0             	mov    %r14,%rax
  40ec83:	4c 89 f2             	mov    %r14,%rdx
  40ec86:	48 c1 e8 03          	shr    $0x3,%rax
  40ec8a:	83 e2 07             	and    $0x7,%edx
  40ec8d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40ec94:	38 d0                	cmp    %dl,%al
  40ec96:	7f 08                	jg     40eca0 <expand_symlinks+0x950>
  40ec98:	84 c0                	test   %al,%al
  40ec9a:	0f 85 90 03 00 00    	jne    40f030 <expand_symlinks+0xce0>
  40eca0:	41 80 3e 2f          	cmpb   $0x2f,(%r14)
  40eca4:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
  40ecab:	0f 85 67 fb ff ff    	jne    40e818 <expand_symlinks+0x4c8>
  40ecb1:	4c 89 f7             	mov    %r14,%rdi
  40ecb4:	eb 0e                	jmp    40ecc4 <expand_symlinks+0x974>
  40ecb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ecbd:	00 00 00 
  40ecc0:	49 83 ec 01          	sub    $0x1,%r12
	    (void) strcpy( rest, &(rest[1]) );
  40ecc4:	48 8d 77 01          	lea    0x1(%rdi),%rsi
	    --restlen;
  40ecc8:	4c 89 e3             	mov    %r12,%rbx
	    (void) strcpy( rest, &(rest[1]) );
  40eccb:	e8 40 42 ff ff       	callq  402f10 <strcpy@plt>
	while ( rest[0] == '/' )
  40ecd0:	48 8b 3d e9 3c 23 00 	mov    0x233ce9(%rip),%rdi        # 6429c0 <rest.6241>
  40ecd7:	48 89 f8             	mov    %rdi,%rax
  40ecda:	48 89 fa             	mov    %rdi,%rdx
  40ecdd:	48 c1 e8 03          	shr    $0x3,%rax
  40ece1:	83 e2 07             	and    $0x7,%edx
  40ece4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40eceb:	38 d0                	cmp    %dl,%al
  40eced:	7f 08                	jg     40ecf7 <expand_symlinks+0x9a7>
  40ecef:	84 c0                	test   %al,%al
  40ecf1:	0f 85 70 02 00 00    	jne    40ef67 <expand_symlinks+0xc17>
  40ecf7:	80 3f 2f             	cmpb   $0x2f,(%rdi)
  40ecfa:	74 c4                	je     40ecc0 <expand_symlinks+0x970>
  40ecfc:	49 89 fe             	mov    %rdi,%r14
    while ( restlen > 0 )
  40ecff:	4d 85 e4             	test   %r12,%r12
  40ed02:	0f 85 f1 f7 ff ff    	jne    40e4f9 <expand_symlinks+0x1a9>
  40ed08:	e9 0b fb ff ff       	jmpq   40e818 <expand_symlinks+0x4c8>
  40ed0d:	0f 1f 00             	nopl   (%rax)
	    checkedlen = strlen( path );
  40ed10:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
  40ed15:	4c 89 f7             	mov    %r14,%rdi
  40ed18:	e8 63 3f ff ff       	callq  402c80 <strlen@plt>
	    httpd_realloc_str( &checked, &maxchecked, checkedlen );
  40ed1d:	be 00 2a 64 00       	mov    $0x642a00,%esi
  40ed22:	bf 40 2a 64 00       	mov    $0x642a40,%edi
  40ed27:	48 89 c2             	mov    %rax,%rdx
	    checkedlen = strlen( path );
  40ed2a:	48 89 c3             	mov    %rax,%rbx
	    httpd_realloc_str( &checked, &maxchecked, checkedlen );
  40ed2d:	e8 fe e5 ff ff       	callq  40d330 <httpd_realloc_str>
	    (void) strcpy( checked, path );
  40ed32:	48 8b 3d 07 3d 23 00 	mov    0x233d07(%rip),%rdi        # 642a40 <checked.6240>
  40ed39:	4c 89 f6             	mov    %r14,%rsi
  40ed3c:	e8 cf 41 ff ff       	callq  402f10 <strcpy@plt>
	    while ( checkedlen && checked[checkedlen - 1] == '/' )
  40ed41:	48 85 db             	test   %rbx,%rbx
  40ed44:	0f 84 c6 00 00 00    	je     40ee10 <expand_symlinks+0xac0>
  40ed4a:	48 8b 3d ef 3c 23 00 	mov    0x233cef(%rip),%rdi        # 642a40 <checked.6240>
  40ed51:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
  40ed55:	48 01 c7             	add    %rax,%rdi
  40ed58:	48 89 fa             	mov    %rdi,%rdx
  40ed5b:	48 89 f9             	mov    %rdi,%rcx
  40ed5e:	48 c1 ea 03          	shr    $0x3,%rdx
  40ed62:	83 e1 07             	and    $0x7,%ecx
  40ed65:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40ed6c:	38 ca                	cmp    %cl,%dl
  40ed6e:	7f 10                	jg     40ed80 <expand_symlinks+0xa30>
  40ed70:	84 d2                	test   %dl,%dl
  40ed72:	0f 85 cd 02 00 00    	jne    40f045 <expand_symlinks+0xcf5>
  40ed78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40ed7f:	00 
  40ed80:	80 3f 2f             	cmpb   $0x2f,(%rdi)
  40ed83:	0f 85 87 00 00 00    	jne    40ee10 <expand_symlinks+0xac0>
		checked[checkedlen - 1] = '\0';
  40ed89:	48 89 fa             	mov    %rdi,%rdx
  40ed8c:	48 89 f9             	mov    %rdi,%rcx
  40ed8f:	48 c1 ea 03          	shr    $0x3,%rdx
  40ed93:	83 e1 07             	and    $0x7,%ecx
  40ed96:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40ed9d:	38 ca                	cmp    %cl,%dl
  40ed9f:	7f 08                	jg     40eda9 <expand_symlinks+0xa59>
  40eda1:	84 d2                	test   %dl,%dl
  40eda3:	0f 85 f2 01 00 00    	jne    40ef9b <expand_symlinks+0xc4b>
  40eda9:	c6 07 00             	movb   $0x0,(%rdi)
	    while ( checkedlen && checked[checkedlen - 1] == '/' )
  40edac:	48 85 c0             	test   %rax,%rax
  40edaf:	74 5f                	je     40ee10 <expand_symlinks+0xac0>
  40edb1:	48 8b 3d 88 3c 23 00 	mov    0x233c88(%rip),%rdi        # 642a40 <checked.6240>
  40edb8:	48 83 e8 01          	sub    $0x1,%rax
  40edbc:	48 01 c7             	add    %rax,%rdi
  40edbf:	48 89 fa             	mov    %rdi,%rdx
  40edc2:	48 89 f9             	mov    %rdi,%rcx
  40edc5:	48 c1 ea 03          	shr    $0x3,%rdx
  40edc9:	83 e1 07             	and    $0x7,%ecx
  40edcc:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40edd3:	38 ca                	cmp    %cl,%dl
  40edd5:	7f a9                	jg     40ed80 <expand_symlinks+0xa30>
  40edd7:	84 d2                	test   %dl,%dl
  40edd9:	74 a5                	je     40ed80 <expand_symlinks+0xa30>
  40eddb:	e8 30 43 ff ff       	callq  403110 <__asan_report_load1@plt>
	while ( rest[0] == '/' )
  40ede0:	4c 89 f0             	mov    %r14,%rax
  40ede3:	4c 89 f2             	mov    %r14,%rdx
  40ede6:	48 c1 e8 03          	shr    $0x3,%rax
  40edea:	83 e2 07             	and    $0x7,%edx
  40eded:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40edf4:	38 d0                	cmp    %dl,%al
  40edf6:	7f 08                	jg     40ee00 <expand_symlinks+0xab0>
  40edf8:	84 c0                	test   %al,%al
  40edfa:	0f 85 19 02 00 00    	jne    40f019 <expand_symlinks+0xcc9>
  40ee00:	41 80 3e 2f          	cmpb   $0x2f,(%r14)
  40ee04:	0f 84 a7 fe ff ff    	je     40ecb1 <expand_symlinks+0x961>
  40ee0a:	e9 ea f6 ff ff       	jmpq   40e4f9 <expand_symlinks+0x1a9>
  40ee0f:	90                   	nop
	    httpd_realloc_str( &rest, &maxrest, 0 );
  40ee10:	31 d2                	xor    %edx,%edx
  40ee12:	bf c0 29 64 00       	mov    $0x6429c0,%edi
  40ee17:	be 80 29 64 00       	mov    $0x642980,%esi
  40ee1c:	e8 0f e5 ff ff       	callq  40d330 <httpd_realloc_str>
	    rest[0] = '\0';
  40ee21:	48 8b 3d 98 3b 23 00 	mov    0x233b98(%rip),%rdi        # 6429c0 <rest.6241>
  40ee28:	48 89 f8             	mov    %rdi,%rax
  40ee2b:	48 89 fa             	mov    %rdi,%rdx
  40ee2e:	48 c1 e8 03          	shr    $0x3,%rax
  40ee32:	83 e2 07             	and    $0x7,%edx
  40ee35:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40ee3c:	38 d0                	cmp    %dl,%al
  40ee3e:	7f 08                	jg     40ee48 <expand_symlinks+0xaf8>
  40ee40:	84 c0                	test   %al,%al
  40ee42:	0f 85 e3 01 00 00    	jne    40f02b <expand_symlinks+0xcdb>
	    *restP = rest;
  40ee48:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
	    rest[0] = '\0';
  40ee4d:	c6 07 00             	movb   $0x0,(%rdi)
	    *restP = rest;
  40ee50:	48 8b 05 69 3b 23 00 	mov    0x233b69(%rip),%rax        # 6429c0 <rest.6241>
  40ee57:	48 c1 ea 03          	shr    $0x3,%rdx
  40ee5b:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40ee62:	0f 85 b9 01 00 00    	jne    40f021 <expand_symlinks+0xcd1>
  40ee68:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  40ee6d:	48 89 06             	mov    %rax,(%rsi)
	    return checked;
  40ee70:	48 8b 1d c9 3b 23 00 	mov    0x233bc9(%rip),%rbx        # 642a40 <checked.6240>
  40ee77:	e9 a4 fa ff ff       	jmpq   40e920 <expand_symlinks+0x5d0>
  40ee7c:	0f 1f 40 00          	nopl   0x0(%rax)
		    (void) strcpy( checked, "." );
  40ee80:	48 8b 3d b9 3b 23 00 	mov    0x233bb9(%rip),%rdi        # 642a40 <checked.6240>
  40ee87:	ba 02 00 00 00       	mov    $0x2,%edx
  40ee8c:	be c0 3a 42 00       	mov    $0x423ac0,%esi
  40ee91:	e8 aa 42 ff ff       	callq  403140 <memcpy@plt>
  40ee96:	e9 65 fd ff ff       	jmpq   40ec00 <expand_symlinks+0x8b0>
  40ee9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40eea0:	49 83 c7 01          	add    $0x1,%r15
			checkedlen = 1;
  40eea4:	41 bc 01 00 00 00    	mov    $0x1,%r12d
  40eeaa:	e9 e1 f6 ff ff       	jmpq   40e590 <expand_symlinks+0x240>
  40eeaf:	90                   	nop
	rest[--restlen] = '\0';         /* trim trailing slash */
  40eeb0:	c6 07 00             	movb   $0x0,(%rdi)
    if ( ! tildemapped )
  40eeb3:	4c 8b 35 06 3b 23 00 	mov    0x233b06(%rip),%r14        # 6429c0 <rest.6241>
  40eeba:	85 ed                	test   %ebp,%ebp
  40eebc:	75 72                	jne    40ef30 <expand_symlinks+0xbe0>
	while ( rest[0] == '/' )
  40eebe:	4c 89 f0             	mov    %r14,%rax
  40eec1:	4c 89 f2             	mov    %r14,%rdx
  40eec4:	48 c1 e8 03          	shr    $0x3,%rax
  40eec8:	83 e2 07             	and    $0x7,%edx
  40eecb:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40eed2:	38 d0                	cmp    %dl,%al
  40eed4:	7f 12                	jg     40eee8 <expand_symlinks+0xb98>
  40eed6:	84 c0                	test   %al,%al
  40eed8:	74 0e                	je     40eee8 <expand_symlinks+0xb98>
  40eeda:	4c 89 f7             	mov    %r14,%rdi
  40eedd:	e8 2e 42 ff ff       	callq  403110 <__asan_report_load1@plt>
  40eee2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40eee8:	41 80 3e 2f          	cmpb   $0x2f,(%r14)
  40eeec:	75 42                	jne    40ef30 <expand_symlinks+0xbe0>
  40eeee:	49 83 ec 01          	sub    $0x1,%r12
  40eef2:	4c 89 f7             	mov    %r14,%rdi
  40eef5:	e9 ca fd ff ff       	jmpq   40ecc4 <expand_symlinks+0x974>
  40eefa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40ef00:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
  40ef05:	e9 0e f9 ff ff       	jmpq   40e818 <expand_symlinks+0x4c8>
  40ef0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40ef10:	49 63 c5             	movslq %r13d,%rax
  40ef13:	4c 8d 64 05 00       	lea    0x0(%rbp,%rax,1),%r12
  40ef18:	e9 8b fa ff ff       	jmpq   40e9a8 <expand_symlinks+0x658>
  40ef1d:	0f 1f 00             	nopl   (%rax)
  40ef20:	49 83 c5 01          	add    $0x1,%r13
			checkedlen = 1;
  40ef24:	41 bc 01 00 00 00    	mov    $0x1,%r12d
  40ef2a:	e9 3e f7 ff ff       	jmpq   40e66d <expand_symlinks+0x31d>
  40ef2f:	90                   	nop
	rest[--restlen] = '\0';         /* trim trailing slash */
  40ef30:	4c 89 e3             	mov    %r12,%rbx
  40ef33:	e9 c7 fd ff ff       	jmpq   40ecff <expand_symlinks+0x9af>
  40ef38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40ef3f:	00 
	    syslog( LOG_ERR, "too many symlinks in %.80s", path );
  40ef40:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
  40ef45:	be 40 3b 42 00       	mov    $0x423b40,%esi
  40ef4a:	31 c0                	xor    %eax,%eax
	    return (char*) 0;
  40ef4c:	31 db                	xor    %ebx,%ebx
	    syslog( LOG_ERR, "too many symlinks in %.80s", path );
  40ef4e:	bf 03 00 00 00       	mov    $0x3,%edi
  40ef53:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
  40ef58:	e8 e3 3c ff ff       	callq  402c40 <syslog@plt>
	    return (char*) 0;
  40ef5d:	e9 be f9 ff ff       	jmpq   40e920 <expand_symlinks+0x5d0>
    checked[0] = '\0';
  40ef62:	e8 c9 41 ff ff       	callq  403130 <__asan_report_store1@plt>
	while ( rest[0] == '/' )
  40ef67:	e8 a4 41 ff ff       	callq  403110 <__asan_report_load1@plt>
		rest[i + linklen + 1] = rest[i];
  40ef6c:	e8 bf 41 ff ff       	callq  403130 <__asan_report_store1@plt>
  40ef71:	48 89 c7             	mov    %rax,%rdi
  40ef74:	e8 97 41 ff ff       	callq  403110 <__asan_report_load1@plt>
	    checked[checkedlen] = '\0';
  40ef79:	4c 89 ff             	mov    %r15,%rdi
  40ef7c:	e8 af 41 ff ff       	callq  403130 <__asan_report_store1@plt>
	if ( checked[0] == '\0' )
  40ef81:	4c 89 ef             	mov    %r13,%rdi
  40ef84:	e8 87 41 ff ff       	callq  403110 <__asan_report_load1@plt>
	if ( link[linklen - 1] == '/' )
  40ef89:	e8 82 41 ff ff       	callq  403110 <__asan_report_load1@plt>
	if ( rest[0] == '/' )
  40ef8e:	4c 89 f7             	mov    %r14,%rdi
  40ef91:	e8 7a 41 ff ff       	callq  403110 <__asan_report_load1@plt>
	link[linklen] = '\0';
  40ef96:	e8 95 41 ff ff       	callq  403130 <__asan_report_store1@plt>
		checked[checkedlen - 1] = '\0';
  40ef9b:	e8 90 41 ff ff       	callq  403130 <__asan_report_store1@plt>
		*restP = r - ( prevrestlen - restlen );
  40efa0:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  40efa5:	e8 f6 3f ff ff       	callq  402fa0 <__asan_report_store8@plt>
    {
  40efaa:	bf a0 14 00 00       	mov    $0x14a0,%edi
  40efaf:	89 14 24             	mov    %edx,(%rsp)
  40efb2:	e8 79 3f ff ff       	callq  402f30 <__asan_stack_malloc_7@plt>
  40efb7:	8b 14 24             	mov    (%rsp),%edx
  40efba:	48 85 c0             	test   %rax,%rax
  40efbd:	48 0f 44 44 24 20    	cmove  0x20(%rsp),%rax
  40efc3:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  40efc8:	e9 b8 f3 ff ff       	jmpq   40e385 <expand_symlinks+0x35>
	    if ( errno == EINVAL )
  40efcd:	48 89 c7             	mov    %rax,%rdi
  40efd0:	e8 fb 3d ff ff       	callq  402dd0 <__asan_report_load4@plt>
    {
  40efd5:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  40efda:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
  40efdf:	be a0 14 00 00       	mov    $0x14a0,%esi
  40efe4:	48 c7 00 0e 36 e0 45 	movq   $0x45e0360e,(%rax)
  40efeb:	48 89 c7             	mov    %rax,%rdi
  40efee:	e8 5d 3c ff ff       	callq  402c50 <__asan_stack_free_7@plt>
  40eff3:	e9 65 f9 ff ff       	jmpq   40e95d <expand_symlinks+0x60d>
	    checked[checkedlen] = '\0';
  40eff8:	e8 33 41 ff ff       	callq  403130 <__asan_report_store1@plt>
	if ( checked[0] == '\0' )
  40effd:	4c 89 ef             	mov    %r13,%rdi
  40f000:	e8 0b 41 ff ff       	callq  403110 <__asan_report_load1@plt>
	    checked[0] = '\0';
  40f005:	e8 26 41 ff ff       	callq  403130 <__asan_report_store1@plt>
    *restP = r;
  40f00a:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  40f00f:	e8 8c 3f ff ff       	callq  402fa0 <__asan_report_store8@plt>
		    checked[checkedlen++] = '/';
  40f014:	e8 17 41 ff ff       	callq  403130 <__asan_report_store1@plt>
	while ( rest[0] == '/' )
  40f019:	4c 89 f7             	mov    %r14,%rdi
  40f01c:	e8 ef 40 ff ff       	callq  403110 <__asan_report_load1@plt>
	    *restP = rest;
  40f021:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  40f026:	e8 75 3f ff ff       	callq  402fa0 <__asan_report_store8@plt>
	    rest[0] = '\0';
  40f02b:	e8 00 41 ff ff       	callq  403130 <__asan_report_store1@plt>
	while ( rest[0] == '/' )
  40f030:	4c 89 f7             	mov    %r14,%rdi
  40f033:	e8 d8 40 ff ff       	callq  403110 <__asan_report_load1@plt>
		if ( checkedlen > 0 && checked[checkedlen-1] != '/' )
  40f038:	48 89 c7             	mov    %rax,%rdi
  40f03b:	e8 d0 40 ff ff       	callq  403110 <__asan_report_load1@plt>
		    checked[checkedlen++] = '/';
  40f040:	e8 eb 40 ff ff       	callq  403130 <__asan_report_store1@plt>
	    while ( checkedlen && checked[checkedlen - 1] == '/' )
  40f045:	e8 c6 40 ff ff       	callq  403110 <__asan_report_load1@plt>
		    checked[prevcheckedlen] = '\0';
  40f04a:	48 89 ef             	mov    %rbp,%rdi
  40f04d:	e8 de 40 ff ff       	callq  403130 <__asan_report_store1@plt>
    if ( checked[0] == '\0' )
  40f052:	48 89 df             	mov    %rbx,%rdi
  40f055:	e8 b6 40 ff ff       	callq  403110 <__asan_report_load1@plt>
		if ( checkedlen > 0 && checked[checkedlen-1] != '/' )
  40f05a:	48 89 c7             	mov    %rax,%rdi
  40f05d:	e8 ae 40 ff ff       	callq  403110 <__asan_report_load1@plt>
	    rest[linklen] = '/';
  40f062:	4c 89 ef             	mov    %r13,%rdi
  40f065:	e8 c6 40 ff ff       	callq  403130 <__asan_report_store1@plt>
		    checked[checkedlen] = '\0';
  40f06a:	4c 89 ef             	mov    %r13,%rdi
  40f06d:	e8 be 40 ff ff       	callq  403130 <__asan_report_store1@plt>
    if ( restlen && rest[restlen - 1] == '/' )
  40f072:	e8 99 40 ff ff       	callq  403110 <__asan_report_load1@plt>
  40f077:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40f07e:	00 00 

000000000040f080 <send_dirredirect>:
    {
  40f080:	41 57                	push   %r15
  40f082:	41 56                	push   %r14
    if ( hc->query[0] != '\0')
  40f084:	4c 8d b7 08 01 00 00 	lea    0x108(%rdi),%r14
    {
  40f08b:	41 55                	push   %r13
    if ( hc->query[0] != '\0')
  40f08d:	4c 89 f0             	mov    %r14,%rax
    {
  40f090:	41 54                	push   %r12
    if ( hc->query[0] != '\0')
  40f092:	48 c1 e8 03          	shr    $0x3,%rax
    {
  40f096:	55                   	push   %rbp
  40f097:	53                   	push   %rbx
  40f098:	48 83 ec 08          	sub    $0x8,%rsp
    if ( hc->query[0] != '\0')
  40f09c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f0a3:	0f 85 e2 01 00 00    	jne    40f28b <send_dirredirect+0x20b>
  40f0a9:	48 8b af 08 01 00 00 	mov    0x108(%rdi),%rbp
  40f0b0:	48 89 fb             	mov    %rdi,%rbx
  40f0b3:	48 89 e8             	mov    %rbp,%rax
  40f0b6:	48 89 ea             	mov    %rbp,%rdx
  40f0b9:	48 c1 e8 03          	shr    $0x3,%rax
  40f0bd:	83 e2 07             	and    $0x7,%edx
  40f0c0:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40f0c7:	38 d0                	cmp    %dl,%al
  40f0c9:	7f 08                	jg     40f0d3 <send_dirredirect+0x53>
  40f0cb:	84 c0                	test   %al,%al
  40f0cd:	0f 85 b0 01 00 00    	jne    40f283 <send_dirredirect+0x203>
  40f0d3:	4c 8d ab d0 00 00 00 	lea    0xd0(%rbx),%r13
  40f0da:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
  40f0de:	4d 89 ef             	mov    %r13,%r15
  40f0e1:	49 c1 ef 03          	shr    $0x3,%r15
  40f0e5:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  40f0ec:	00 
  40f0ed:	0f 85 a0 01 00 00    	jne    40f293 <send_dirredirect+0x213>
  40f0f3:	4c 8b a3 d0 00 00 00 	mov    0xd0(%rbx),%r12
  40f0fa:	84 c0                	test   %al,%al
  40f0fc:	0f 84 36 01 00 00    	je     40f238 <send_dirredirect+0x1b8>
	char* cp = strchr( hc->encodedurl, '?' );
  40f102:	be 3f 00 00 00       	mov    $0x3f,%esi
  40f107:	4c 89 e7             	mov    %r12,%rdi
  40f10a:	e8 b1 42 ff ff       	callq  4033c0 <strchr@plt>
	if ( cp != (char*) 0 )	/* should always find it */
  40f10f:	48 85 c0             	test   %rax,%rax
  40f112:	74 31                	je     40f145 <send_dirredirect+0xc5>
	    *cp = '\0';
  40f114:	48 89 c2             	mov    %rax,%rdx
  40f117:	48 89 c1             	mov    %rax,%rcx
  40f11a:	48 c1 ea 03          	shr    $0x3,%rdx
  40f11e:	83 e1 07             	and    $0x7,%ecx
  40f121:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  40f128:	38 ca                	cmp    %cl,%dl
  40f12a:	7f 08                	jg     40f134 <send_dirredirect+0xb4>
  40f12c:	84 d2                	test   %dl,%dl
  40f12e:	0f 85 77 01 00 00    	jne    40f2ab <send_dirredirect+0x22b>
  40f134:	c6 00 00             	movb   $0x0,(%rax)
  40f137:	4c 8b a3 d0 00 00 00 	mov    0xd0(%rbx),%r12
  40f13e:	48 8b ab 08 01 00 00 	mov    0x108(%rbx),%rbp
	    strlen( hc->encodedurl ) + 2 + strlen( hc->query ) );
  40f145:	4c 89 e7             	mov    %r12,%rdi
  40f148:	e8 33 3b ff ff       	callq  402c80 <strlen@plt>
  40f14d:	48 89 ef             	mov    %rbp,%rdi
  40f150:	49 89 c4             	mov    %rax,%r12
  40f153:	e8 28 3b ff ff       	callq  402c80 <strlen@plt>
	httpd_realloc_str(
  40f158:	be 00 28 64 00       	mov    $0x642800,%esi
  40f15d:	bf 40 28 64 00       	mov    $0x642840,%edi
  40f162:	49 8d 54 04 02       	lea    0x2(%r12,%rax,1),%rdx
  40f167:	e8 c4 e1 ff ff       	callq  40d330 <httpd_realloc_str>
	(void) my_snprintf( location, maxlocation,
  40f16c:	4c 89 f0             	mov    %r14,%rax
  40f16f:	48 c1 e8 03          	shr    $0x3,%rax
  40f173:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f17a:	0f 85 1b 01 00 00    	jne    40f29b <send_dirredirect+0x21b>
  40f180:	4c 89 e8             	mov    %r13,%rax
  40f183:	4c 8b 83 08 01 00 00 	mov    0x108(%rbx),%r8
  40f18a:	48 c1 e8 03          	shr    $0x3,%rax
  40f18e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f195:	0f 85 08 01 00 00    	jne    40f2a3 <send_dirredirect+0x223>
  40f19b:	48 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%rcx
  40f1a2:	48 8b 35 57 36 23 00 	mov    0x233657(%rip),%rsi        # 642800 <maxlocation.6189>
  40f1a9:	ba 80 3b 42 00       	mov    $0x423b80,%edx
  40f1ae:	31 c0                	xor    %eax,%eax
  40f1b0:	48 8b 3d 89 36 23 00 	mov    0x233689(%rip),%rdi        # 642840 <location.6187>
  40f1b7:	e8 54 bd ff ff       	callq  40af10 <my_snprintf>
	&header, &maxheader, sizeof(headstr) + strlen( location ) );
  40f1bc:	48 8b 3d 7d 36 23 00 	mov    0x23367d(%rip),%rdi        # 642840 <location.6187>
  40f1c3:	e8 b8 3a ff ff       	callq  402c80 <strlen@plt>
    httpd_realloc_str(
  40f1c8:	be 80 27 64 00       	mov    $0x642780,%esi
  40f1cd:	bf c0 27 64 00       	mov    $0x6427c0,%edi
  40f1d2:	48 8d 50 0b          	lea    0xb(%rax),%rdx
  40f1d6:	e8 55 e1 ff ff       	callq  40d330 <httpd_realloc_str>
    (void) my_snprintf( header, maxheader,
  40f1db:	4c 8b 05 5e 36 23 00 	mov    0x23365e(%rip),%r8        # 642840 <location.6187>
  40f1e2:	b9 a0 46 63 00       	mov    $0x6346a0,%ecx
  40f1e7:	31 c0                	xor    %eax,%eax
  40f1e9:	48 8b 35 90 35 23 00 	mov    0x233590(%rip),%rsi        # 642780 <maxheader.6190>
  40f1f0:	48 8b 3d c9 35 23 00 	mov    0x2335c9(%rip),%rdi        # 6427c0 <header.6188>
  40f1f7:	ba 00 3c 42 00       	mov    $0x423c00,%edx
  40f1fc:	e8 0f bd ff ff       	callq  40af10 <my_snprintf>
    send_response( hc, 302, err302title, header, err302form, location );
  40f201:	4c 8b 0d 38 36 23 00 	mov    0x233638(%rip),%r9        # 642840 <location.6187>
  40f208:	48 89 df             	mov    %rbx,%rdi
  40f20b:	48 8b 0d ae 35 23 00 	mov    0x2335ae(%rip),%rcx        # 6427c0 <header.6188>
    }
  40f212:	48 83 c4 08          	add    $0x8,%rsp
    send_response( hc, 302, err302title, header, err302form, location );
  40f216:	41 b8 40 3c 42 00    	mov    $0x423c40,%r8d
  40f21c:	ba 80 3c 42 00       	mov    $0x423c80,%edx
  40f221:	be 2e 01 00 00       	mov    $0x12e,%esi
    }
  40f226:	5b                   	pop    %rbx
  40f227:	5d                   	pop    %rbp
  40f228:	41 5c                	pop    %r12
  40f22a:	41 5d                	pop    %r13
  40f22c:	41 5e                	pop    %r14
  40f22e:	41 5f                	pop    %r15
    send_response( hc, 302, err302title, header, err302form, location );
  40f230:	e9 fb ee ff ff       	jmpq   40e130 <send_response>
  40f235:	0f 1f 00             	nopl   (%rax)
	    &location, &maxlocation, strlen( hc->encodedurl ) + 1 );
  40f238:	4c 89 e7             	mov    %r12,%rdi
  40f23b:	e8 40 3a ff ff       	callq  402c80 <strlen@plt>
	httpd_realloc_str(
  40f240:	be 00 28 64 00       	mov    $0x642800,%esi
  40f245:	bf 40 28 64 00       	mov    $0x642840,%edi
  40f24a:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40f24e:	e8 dd e0 ff ff       	callq  40d330 <httpd_realloc_str>
	(void) my_snprintf( location, maxlocation,
  40f253:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  40f25a:	00 
  40f25b:	75 56                	jne    40f2b3 <send_dirredirect+0x233>
  40f25d:	48 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%rcx
  40f264:	48 8b 35 95 35 23 00 	mov    0x233595(%rip),%rsi        # 642800 <maxlocation.6189>
  40f26b:	ba c0 3b 42 00       	mov    $0x423bc0,%edx
  40f270:	31 c0                	xor    %eax,%eax
  40f272:	48 8b 3d c7 35 23 00 	mov    0x2335c7(%rip),%rdi        # 642840 <location.6187>
  40f279:	e8 92 bc ff ff       	callq  40af10 <my_snprintf>
  40f27e:	e9 39 ff ff ff       	jmpq   40f1bc <send_dirredirect+0x13c>
    if ( hc->query[0] != '\0')
  40f283:	48 89 ef             	mov    %rbp,%rdi
  40f286:	e8 85 3e ff ff       	callq  403110 <__asan_report_load1@plt>
  40f28b:	4c 89 f7             	mov    %r14,%rdi
  40f28e:	e8 bd 3f ff ff       	callq  403250 <__asan_report_load8@plt>
  40f293:	4c 89 ef             	mov    %r13,%rdi
  40f296:	e8 b5 3f ff ff       	callq  403250 <__asan_report_load8@plt>
	(void) my_snprintf( location, maxlocation,
  40f29b:	4c 89 f7             	mov    %r14,%rdi
  40f29e:	e8 ad 3f ff ff       	callq  403250 <__asan_report_load8@plt>
  40f2a3:	4c 89 ef             	mov    %r13,%rdi
  40f2a6:	e8 a5 3f ff ff       	callq  403250 <__asan_report_load8@plt>
	    *cp = '\0';
  40f2ab:	48 89 c7             	mov    %rax,%rdi
  40f2ae:	e8 7d 3e ff ff       	callq  403130 <__asan_report_store1@plt>
	(void) my_snprintf( location, maxlocation,
  40f2b3:	4c 89 ef             	mov    %r13,%rdi
  40f2b6:	e8 95 3f ff ff       	callq  403250 <__asan_report_load8@plt>
  40f2bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040f2c0 <really_check_referer>:
    {
  40f2c0:	41 57                	push   %r15
  40f2c2:	49 89 ff             	mov    %rdi,%r15
    hs = hc->hs;
  40f2c5:	48 83 c7 08          	add    $0x8,%rdi
    {
  40f2c9:	41 56                	push   %r14
    hs = hc->hs;
  40f2cb:	48 89 f8             	mov    %rdi,%rax
    {
  40f2ce:	41 55                	push   %r13
    hs = hc->hs;
  40f2d0:	48 c1 e8 03          	shr    $0x3,%rax
    {
  40f2d4:	41 54                	push   %r12
  40f2d6:	55                   	push   %rbp
  40f2d7:	53                   	push   %rbx
  40f2d8:	48 83 ec 28          	sub    $0x28,%rsp
    hs = hc->hs;
  40f2dc:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f2e3:	0f 85 94 04 00 00    	jne    40f77d <really_check_referer+0x4bd>
    if ( hc->referer == (char*) 0 || hc->referer[0] == '\0' ||
  40f2e9:	49 8d bf 10 01 00 00 	lea    0x110(%r15),%rdi
    hs = hc->hs;
  40f2f0:	4d 8b 77 08          	mov    0x8(%r15),%r14
    if ( hc->referer == (char*) 0 || hc->referer[0] == '\0' ||
  40f2f4:	48 89 f8             	mov    %rdi,%rax
  40f2f7:	48 c1 e8 03          	shr    $0x3,%rax
  40f2fb:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f302:	0f 85 70 04 00 00    	jne    40f778 <really_check_referer+0x4b8>
  40f308:	49 8b bf 10 01 00 00 	mov    0x110(%r15),%rdi
  40f30f:	48 85 ff             	test   %rdi,%rdi
  40f312:	0f 84 b0 02 00 00    	je     40f5c8 <really_check_referer+0x308>
  40f318:	48 89 f8             	mov    %rdi,%rax
  40f31b:	48 89 fa             	mov    %rdi,%rdx
  40f31e:	48 c1 e8 03          	shr    $0x3,%rax
  40f322:	83 e2 07             	and    $0x7,%edx
  40f325:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40f32c:	38 d0                	cmp    %dl,%al
  40f32e:	7f 08                	jg     40f338 <really_check_referer+0x78>
  40f330:	84 c0                	test   %al,%al
  40f332:	0f 85 04 04 00 00    	jne    40f73c <really_check_referer+0x47c>
  40f338:	80 3f 00             	cmpb   $0x0,(%rdi)
  40f33b:	0f 84 87 02 00 00    	je     40f5c8 <really_check_referer+0x308>
	 ( cp1 = strstr( hc->referer, "//" ) ) == (char*) 0 )
  40f341:	be a0 30 42 00       	mov    $0x4230a0,%esi
  40f346:	e8 35 40 ff ff       	callq  403380 <strstr@plt>
  40f34b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    if ( hc->referer == (char*) 0 || hc->referer[0] == '\0' ||
  40f350:	48 85 c0             	test   %rax,%rax
  40f353:	0f 84 6f 02 00 00    	je     40f5c8 <really_check_referer+0x308>
    for ( cp2 = cp1; *cp2 != '/' && *cp2 != ':' && *cp2 != '\0'; ++cp2 )
  40f359:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40f35e:	48 8d 68 02          	lea    0x2(%rax),%rbp
  40f362:	48 89 e8             	mov    %rbp,%rax
  40f365:	48 89 ea             	mov    %rbp,%rdx
  40f368:	48 c1 e8 03          	shr    $0x3,%rax
  40f36c:	83 e2 07             	and    $0x7,%edx
  40f36f:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40f376:	38 d0                	cmp    %dl,%al
  40f378:	7f 08                	jg     40f382 <really_check_referer+0xc2>
  40f37a:	84 c0                	test   %al,%al
  40f37c:	0f 85 c4 03 00 00    	jne    40f746 <really_check_referer+0x486>
  40f382:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40f387:	0f b6 40 02          	movzbl 0x2(%rax),%eax
  40f38b:	3c 3a                	cmp    $0x3a,%al
  40f38d:	0f 86 dd 02 00 00    	jbe    40f670 <really_check_referer+0x3b0>
  40f393:	48 be 01 00 00 00 00 	movabs $0x400800000000001,%rsi
  40f39a:	80 00 04 
    cp1 += 2;
  40f39d:	48 89 eb             	mov    %rbp,%rbx
  40f3a0:	49 89 ec             	mov    %rbp,%r12
    for ( cp2 = cp1; *cp2 != '/' && *cp2 != ':' && *cp2 != '\0'; ++cp2 )
  40f3a3:	49 83 c4 01          	add    $0x1,%r12
  40f3a7:	4c 89 e0             	mov    %r12,%rax
  40f3aa:	4c 89 e2             	mov    %r12,%rdx
  40f3ad:	48 c1 e8 03          	shr    $0x3,%rax
  40f3b1:	83 e2 07             	and    $0x7,%edx
  40f3b4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40f3bb:	38 d0                	cmp    %dl,%al
  40f3bd:	7f 08                	jg     40f3c7 <really_check_referer+0x107>
  40f3bf:	84 c0                	test   %al,%al
  40f3c1:	0f 85 e8 03 00 00    	jne    40f7af <really_check_referer+0x4ef>
  40f3c7:	41 0f b6 04 24       	movzbl (%r12),%eax
  40f3cc:	3c 3a                	cmp    $0x3a,%al
  40f3ce:	77 d3                	ja     40f3a3 <really_check_referer+0xe3>
  40f3d0:	48 0f a3 c6          	bt     %rax,%rsi
  40f3d4:	73 cd                	jae    40f3a3 <really_check_referer+0xe3>
    httpd_realloc_str( &refhost, &refhost_size, cp2 - cp1 );
  40f3d6:	4c 89 e2             	mov    %r12,%rdx
  40f3d9:	be 00 22 64 00       	mov    $0x642200,%esi
  40f3de:	bf 40 22 64 00       	mov    $0x642240,%edi
  40f3e3:	48 29 ea             	sub    %rbp,%rdx
  40f3e6:	e8 45 df ff ff       	callq  40d330 <httpd_realloc_str>
    for ( cp3 = refhost; cp1 < cp2; ++cp1, ++cp3 )
  40f3eb:	48 8b 05 4e 2e 23 00 	mov    0x232e4e(%rip),%rax        # 642240 <refhost.6673>
  40f3f2:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  40f3f7:	4c 39 e5             	cmp    %r12,%rbp
  40f3fa:	0f 83 24 01 00 00    	jae    40f524 <really_check_referer+0x264>
	if ( isupper(*cp1) )
  40f400:	e8 fb 3b ff ff       	callq  403000 <__ctype_b_loc@plt>
    for ( cp3 = refhost; cp1 < cp2; ++cp1, ++cp3 )
  40f405:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
	if ( isupper(*cp1) )
  40f40a:	49 89 c0             	mov    %rax,%r8
  40f40d:	49 89 c5             	mov    %rax,%r13
  40f410:	49 c1 e8 03          	shr    $0x3,%r8
  40f414:	0f 1f 40 00          	nopl   0x0(%rax)
  40f418:	41 80 b8 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r8)
  40f41f:	00 
  40f420:	0f 85 30 03 00 00    	jne    40f756 <really_check_referer+0x496>
  40f426:	48 89 d8             	mov    %rbx,%rax
  40f429:	48 89 da             	mov    %rbx,%rdx
  40f42c:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  40f430:	48 c1 e8 03          	shr    $0x3,%rax
  40f434:	83 e2 07             	and    $0x7,%edx
  40f437:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40f43e:	38 d0                	cmp    %dl,%al
  40f440:	7f 08                	jg     40f44a <really_check_referer+0x18a>
  40f442:	84 c0                	test   %al,%al
  40f444:	0f 85 04 03 00 00    	jne    40f74e <really_check_referer+0x48e>
  40f44a:	4c 0f be 0b          	movsbq (%rbx),%r9
  40f44e:	4a 8d 3c 4f          	lea    (%rdi,%r9,2),%rdi
  40f452:	4c 89 ca             	mov    %r9,%rdx
  40f455:	48 89 f8             	mov    %rdi,%rax
  40f458:	48 c1 e8 03          	shr    $0x3,%rax
  40f45c:	44 0f b6 90 00 80 ff 	movzbl 0x7fff8000(%rax),%r10d
  40f463:	7f 
  40f464:	48 89 f8             	mov    %rdi,%rax
  40f467:	83 e0 07             	and    $0x7,%eax
  40f46a:	83 c0 01             	add    $0x1,%eax
  40f46d:	44 38 d0             	cmp    %r10b,%al
  40f470:	7c 09                	jl     40f47b <really_check_referer+0x1bb>
  40f472:	45 84 d2             	test   %r10b,%r10b
  40f475:	0f 85 eb 02 00 00    	jne    40f766 <really_check_referer+0x4a6>
  40f47b:	0f b7 07             	movzwl (%rdi),%eax
  40f47e:	4c 89 0c 24          	mov    %r9,(%rsp)
  40f482:	f6 c4 01             	test   $0x1,%ah
  40f485:	74 54                	je     40f4db <really_check_referer+0x21b>
  40f487:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
	    *cp3 = tolower(*cp1);
  40f48c:	e8 ff 37 ff ff       	callq  402c90 <__ctype_tolower_loc@plt>
  40f491:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
  40f496:	4c 8b 0c 24          	mov    (%rsp),%r9
  40f49a:	48 89 c2             	mov    %rax,%rdx
  40f49d:	48 c1 ea 03          	shr    $0x3,%rdx
  40f4a1:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40f4a8:	0f 85 c2 02 00 00    	jne    40f770 <really_check_referer+0x4b0>
  40f4ae:	48 8b 00             	mov    (%rax),%rax
  40f4b1:	4a 8d 3c 88          	lea    (%rax,%r9,4),%rdi
  40f4b5:	48 89 f8             	mov    %rdi,%rax
  40f4b8:	48 c1 e8 03          	shr    $0x3,%rax
  40f4bc:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  40f4c3:	48 89 f8             	mov    %rdi,%rax
  40f4c6:	83 e0 07             	and    $0x7,%eax
  40f4c9:	83 c0 03             	add    $0x3,%eax
  40f4cc:	38 d0                	cmp    %dl,%al
  40f4ce:	7c 08                	jl     40f4d8 <really_check_referer+0x218>
  40f4d0:	84 d2                	test   %dl,%dl
  40f4d2:	0f 85 93 02 00 00    	jne    40f76b <really_check_referer+0x4ab>
  40f4d8:	0f b6 17             	movzbl (%rdi),%edx
  40f4db:	48 89 e8             	mov    %rbp,%rax
  40f4de:	48 89 ef             	mov    %rbp,%rdi
  40f4e1:	48 c1 e8 03          	shr    $0x3,%rax
  40f4e5:	83 e7 07             	and    $0x7,%edi
  40f4e8:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40f4ef:	40 38 f8             	cmp    %dil,%al
  40f4f2:	7f 08                	jg     40f4fc <really_check_referer+0x23c>
  40f4f4:	84 c0                	test   %al,%al
  40f4f6:	0f 85 62 02 00 00    	jne    40f75e <really_check_referer+0x49e>
    for ( cp3 = refhost; cp1 < cp2; ++cp1, ++cp3 )
  40f4fc:	48 83 c3 01          	add    $0x1,%rbx
  40f500:	88 55 00             	mov    %dl,0x0(%rbp)
  40f503:	48 83 c5 01          	add    $0x1,%rbp
  40f507:	49 39 dc             	cmp    %rbx,%r12
  40f50a:	0f 85 08 ff ff ff    	jne    40f418 <really_check_referer+0x158>
  40f510:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  40f515:	4c 2b 64 24 18       	sub    0x18(%rsp),%r12
  40f51a:	4a 8d 44 20 fe       	lea    -0x2(%rax,%r12,1),%rax
  40f51f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    *cp3 = '\0';
  40f524:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
  40f529:	48 89 c8             	mov    %rcx,%rax
  40f52c:	83 e1 07             	and    $0x7,%ecx
  40f52f:	48 c1 e8 03          	shr    $0x3,%rax
  40f533:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40f53a:	38 c8                	cmp    %cl,%al
  40f53c:	7f 08                	jg     40f546 <really_check_referer+0x286>
  40f53e:	84 c0                	test   %al,%al
  40f540:	0f 85 4b 02 00 00    	jne    40f791 <really_check_referer+0x4d1>
  40f546:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    if ( hs->local_pattern != (char*) 0 )
  40f54b:	49 8d 7e 78          	lea    0x78(%r14),%rdi
    *cp3 = '\0';
  40f54f:	c6 00 00             	movb   $0x0,(%rax)
    if ( hs->local_pattern != (char*) 0 )
  40f552:	48 89 f8             	mov    %rdi,%rax
  40f555:	48 c1 e8 03          	shr    $0x3,%rax
  40f559:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f560:	0f 85 26 02 00 00    	jne    40f78c <really_check_referer+0x4cc>
  40f566:	49 8b 7e 78          	mov    0x78(%r14),%rdi
  40f56a:	48 85 ff             	test   %rdi,%rdi
  40f56d:	0f 84 3d 01 00 00    	je     40f6b0 <really_check_referer+0x3f0>
    if ( ! match( lp, refhost ) && match( hs->url_pattern, hc->origfilename ) )
  40f573:	48 8b 35 c6 2c 23 00 	mov    0x232cc6(%rip),%rsi        # 642240 <refhost.6673>
  40f57a:	e8 11 fa 00 00       	callq  41ef90 <match>
  40f57f:	85 c0                	test   %eax,%eax
  40f581:	75 71                	jne    40f5f4 <really_check_referer+0x334>
  40f583:	49 8d bf e8 00 00 00 	lea    0xe8(%r15),%rdi
  40f58a:	48 89 f8             	mov    %rdi,%rax
  40f58d:	48 c1 e8 03          	shr    $0x3,%rax
  40f591:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f598:	0f 85 fd 01 00 00    	jne    40f79b <really_check_referer+0x4db>
  40f59e:	49 8d 7e 70          	lea    0x70(%r14),%rdi
  40f5a2:	49 8b b7 e8 00 00 00 	mov    0xe8(%r15),%rsi
  40f5a9:	48 89 f8             	mov    %rdi,%rax
  40f5ac:	48 c1 e8 03          	shr    $0x3,%rax
  40f5b0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f5b7:	0f 84 8d 00 00 00    	je     40f64a <really_check_referer+0x38a>
  40f5bd:	e8 8e 3c ff ff       	callq  403250 <__asan_report_load8@plt>
  40f5c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	if ( hs->no_empty_referers && match( hs->url_pattern, hc->origfilename ) )
  40f5c8:	49 8d be 80 00 00 00 	lea    0x80(%r14),%rdi
  40f5cf:	48 89 f8             	mov    %rdi,%rax
  40f5d2:	48 c1 e8 03          	shr    $0x3,%rax
  40f5d6:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40f5dd:	84 c0                	test   %al,%al
  40f5df:	74 08                	je     40f5e9 <really_check_referer+0x329>
  40f5e1:	3c 03                	cmp    $0x3,%al
  40f5e3:	0f 8e 58 01 00 00    	jle    40f741 <really_check_referer+0x481>
  40f5e9:	41 8b 96 80 00 00 00 	mov    0x80(%r14),%edx
  40f5f0:	85 d2                	test   %edx,%edx
  40f5f2:	75 1c                	jne    40f610 <really_check_referer+0x350>
    }
  40f5f4:	48 83 c4 28          	add    $0x28,%rsp
	return 1;
  40f5f8:	b8 01 00 00 00       	mov    $0x1,%eax
    }
  40f5fd:	5b                   	pop    %rbx
  40f5fe:	5d                   	pop    %rbp
  40f5ff:	41 5c                	pop    %r12
  40f601:	41 5d                	pop    %r13
  40f603:	41 5e                	pop    %r14
  40f605:	41 5f                	pop    %r15
  40f607:	c3                   	retq   
  40f608:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40f60f:	00 
	if ( hs->no_empty_referers && match( hs->url_pattern, hc->origfilename ) )
  40f610:	49 8d bf e8 00 00 00 	lea    0xe8(%r15),%rdi
  40f617:	48 89 f8             	mov    %rdi,%rax
  40f61a:	48 c1 e8 03          	shr    $0x3,%rax
  40f61e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f625:	0f 85 57 01 00 00    	jne    40f782 <really_check_referer+0x4c2>
  40f62b:	49 8d 7e 70          	lea    0x70(%r14),%rdi
  40f62f:	49 8b b7 e8 00 00 00 	mov    0xe8(%r15),%rsi
  40f636:	48 89 f8             	mov    %rdi,%rax
  40f639:	48 c1 e8 03          	shr    $0x3,%rax
  40f63d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f644:	0f 85 3d 01 00 00    	jne    40f787 <really_check_referer+0x4c7>
    if ( ! match( lp, refhost ) && match( hs->url_pattern, hc->origfilename ) )
  40f64a:	49 8b 7e 70          	mov    0x70(%r14),%rdi
  40f64e:	e8 3d f9 00 00       	callq  41ef90 <match>
  40f653:	85 c0                	test   %eax,%eax
  40f655:	0f 94 c0             	sete   %al
    }
  40f658:	48 83 c4 28          	add    $0x28,%rsp
  40f65c:	5b                   	pop    %rbx
    if ( ! match( lp, refhost ) && match( hs->url_pattern, hc->origfilename ) )
  40f65d:	0f b6 c0             	movzbl %al,%eax
    }
  40f660:	5d                   	pop    %rbp
  40f661:	41 5c                	pop    %r12
  40f663:	41 5d                	pop    %r13
  40f665:	41 5e                	pop    %r14
  40f667:	41 5f                	pop    %r15
  40f669:	c3                   	retq   
  40f66a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    for ( cp2 = cp1; *cp2 != '/' && *cp2 != ':' && *cp2 != '\0'; ++cp2 )
  40f670:	48 ba 01 00 00 00 00 	movabs $0x400800000000001,%rdx
  40f677:	80 00 04 
  40f67a:	48 0f a3 c2          	bt     %rax,%rdx
  40f67e:	0f 83 0f fd ff ff    	jae    40f393 <really_check_referer+0xd3>
    httpd_realloc_str( &refhost, &refhost_size, cp2 - cp1 );
  40f684:	31 d2                	xor    %edx,%edx
  40f686:	be 00 22 64 00       	mov    $0x642200,%esi
  40f68b:	bf 40 22 64 00       	mov    $0x642240,%edi
  40f690:	e8 9b dc ff ff       	callq  40d330 <httpd_realloc_str>
    for ( cp3 = refhost; cp1 < cp2; ++cp1, ++cp3 )
  40f695:	48 8b 05 a4 2b 23 00 	mov    0x232ba4(%rip),%rax        # 642240 <refhost.6673>
  40f69c:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  40f6a1:	e9 7e fe ff ff       	jmpq   40f524 <really_check_referer+0x264>
  40f6a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40f6ad:	00 00 00 
	if ( ! hs->vhost )
  40f6b0:	49 8d 7e 64          	lea    0x64(%r14),%rdi
  40f6b4:	48 89 f8             	mov    %rdi,%rax
  40f6b7:	48 c1 e8 03          	shr    $0x3,%rax
  40f6bb:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  40f6c2:	48 89 f8             	mov    %rdi,%rax
  40f6c5:	83 e0 07             	and    $0x7,%eax
  40f6c8:	83 c0 03             	add    $0x3,%eax
  40f6cb:	38 d0                	cmp    %dl,%al
  40f6cd:	7c 08                	jl     40f6d7 <really_check_referer+0x417>
  40f6cf:	84 d2                	test   %dl,%dl
  40f6d1:	0f 85 d3 00 00 00    	jne    40f7aa <really_check_referer+0x4ea>
  40f6d7:	41 8b 46 64          	mov    0x64(%r14),%eax
  40f6db:	85 c0                	test   %eax,%eax
  40f6dd:	75 31                	jne    40f710 <really_check_referer+0x450>
	    lp = hs->server_hostname;
  40f6df:	49 8d 7e 08          	lea    0x8(%r14),%rdi
  40f6e3:	48 89 f8             	mov    %rdi,%rax
  40f6e6:	48 c1 e8 03          	shr    $0x3,%rax
  40f6ea:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f6f1:	0f 85 ae 00 00 00    	jne    40f7a5 <really_check_referer+0x4e5>
  40f6f7:	49 8b 7e 08          	mov    0x8(%r14),%rdi
	    if ( lp == (char*) 0 )
  40f6fb:	48 85 ff             	test   %rdi,%rdi
  40f6fe:	0f 85 6f fe ff ff    	jne    40f573 <really_check_referer+0x2b3>
  40f704:	e9 eb fe ff ff       	jmpq   40f5f4 <really_check_referer+0x334>
  40f709:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    lp = hc->hostname;
  40f710:	49 8d bf 00 02 00 00 	lea    0x200(%r15),%rdi
  40f717:	48 89 f8             	mov    %rdi,%rax
  40f71a:	48 c1 e8 03          	shr    $0x3,%rax
  40f71e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f725:	75 79                	jne    40f7a0 <really_check_referer+0x4e0>
  40f727:	49 8b bf 00 02 00 00 	mov    0x200(%r15),%rdi
	    if ( lp == (char*) 0 )
  40f72e:	48 85 ff             	test   %rdi,%rdi
  40f731:	0f 85 3c fe ff ff    	jne    40f573 <really_check_referer+0x2b3>
  40f737:	e9 b8 fe ff ff       	jmpq   40f5f4 <really_check_referer+0x334>
    if ( hc->referer == (char*) 0 || hc->referer[0] == '\0' ||
  40f73c:	e8 cf 39 ff ff       	callq  403110 <__asan_report_load1@plt>
	if ( hs->no_empty_referers && match( hs->url_pattern, hc->origfilename ) )
  40f741:	e8 8a 36 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp2 = cp1; *cp2 != '/' && *cp2 != ':' && *cp2 != '\0'; ++cp2 )
  40f746:	48 89 ef             	mov    %rbp,%rdi
  40f749:	e8 c2 39 ff ff       	callq  403110 <__asan_report_load1@plt>
	if ( isupper(*cp1) )
  40f74e:	48 89 df             	mov    %rbx,%rdi
  40f751:	e8 ba 39 ff ff       	callq  403110 <__asan_report_load1@plt>
  40f756:	4c 89 ef             	mov    %r13,%rdi
  40f759:	e8 f2 3a ff ff       	callq  403250 <__asan_report_load8@plt>
	    *cp3 = tolower(*cp1);
  40f75e:	48 89 ef             	mov    %rbp,%rdi
  40f761:	e8 ca 39 ff ff       	callq  403130 <__asan_report_store1@plt>
	if ( isupper(*cp1) )
  40f766:	e8 45 38 ff ff       	callq  402fb0 <__asan_report_load2@plt>
	    *cp3 = tolower(*cp1);
  40f76b:	e8 60 36 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  40f770:	48 89 c7             	mov    %rax,%rdi
  40f773:	e8 d8 3a ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->referer == (char*) 0 || hc->referer[0] == '\0' ||
  40f778:	e8 d3 3a ff ff       	callq  403250 <__asan_report_load8@plt>
    hs = hc->hs;
  40f77d:	e8 ce 3a ff ff       	callq  403250 <__asan_report_load8@plt>
	if ( hs->no_empty_referers && match( hs->url_pattern, hc->origfilename ) )
  40f782:	e8 c9 3a ff ff       	callq  403250 <__asan_report_load8@plt>
  40f787:	e8 c4 3a ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( hs->local_pattern != (char*) 0 )
  40f78c:	e8 bf 3a ff ff       	callq  403250 <__asan_report_load8@plt>
    *cp3 = '\0';
  40f791:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40f796:	e8 95 39 ff ff       	callq  403130 <__asan_report_store1@plt>
    if ( ! match( lp, refhost ) && match( hs->url_pattern, hc->origfilename ) )
  40f79b:	e8 b0 3a ff ff       	callq  403250 <__asan_report_load8@plt>
	    lp = hc->hostname;
  40f7a0:	e8 ab 3a ff ff       	callq  403250 <__asan_report_load8@plt>
	    lp = hs->server_hostname;
  40f7a5:	e8 a6 3a ff ff       	callq  403250 <__asan_report_load8@plt>
	if ( ! hs->vhost )
  40f7aa:	e8 21 36 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( cp2 = cp1; *cp2 != '/' && *cp2 != ':' && *cp2 != '\0'; ++cp2 )
  40f7af:	4c 89 e7             	mov    %r12,%rdi
  40f7b2:	e8 59 39 ff ff       	callq  403110 <__asan_report_load1@plt>
  40f7b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40f7be:	00 00 

000000000040f7c0 <build_env>:
    {
  40f7c0:	41 54                	push   %r12
  40f7c2:	49 89 f4             	mov    %rsi,%r12
  40f7c5:	55                   	push   %rbp
  40f7c6:	48 89 fd             	mov    %rdi,%rbp
  40f7c9:	53                   	push   %rbx
    size = strlen( fmt ) + strlen( arg );
  40f7ca:	e8 b1 34 ff ff       	callq  402c80 <strlen@plt>
  40f7cf:	4c 89 e7             	mov    %r12,%rdi
  40f7d2:	48 89 c3             	mov    %rax,%rbx
  40f7d5:	e8 a6 34 ff ff       	callq  402c80 <strlen@plt>
    if ( size > maxbuf )
  40f7da:	48 8b 35 1f 28 23 00 	mov    0x23281f(%rip),%rsi        # 642000 <maxbuf.6540>
    size = strlen( fmt ) + strlen( arg );
  40f7e1:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    if ( size > maxbuf )
  40f7e5:	48 39 d6             	cmp    %rdx,%rsi
  40f7e8:	72 2a                	jb     40f814 <build_env+0x54>
    (void) my_snprintf( buf, maxbuf, fmt, arg );
  40f7ea:	48 8b 3d cf 27 23 00 	mov    0x2327cf(%rip),%rdi        # 641fc0 <buf.6539>
  40f7f1:	31 c0                	xor    %eax,%eax
  40f7f3:	4c 89 e1             	mov    %r12,%rcx
  40f7f6:	48 89 ea             	mov    %rbp,%rdx
  40f7f9:	e8 12 b7 ff ff       	callq  40af10 <my_snprintf>
    cp = strdup( buf );
  40f7fe:	48 8b 3d bb 27 23 00 	mov    0x2327bb(%rip),%rdi        # 641fc0 <buf.6539>
  40f805:	e8 a6 34 ff ff       	callq  402cb0 <strdup@plt>
    if ( cp == (char*) 0 )
  40f80a:	48 85 c0             	test   %rax,%rax
  40f80d:	74 1d                	je     40f82c <build_env+0x6c>
    }
  40f80f:	5b                   	pop    %rbx
  40f810:	5d                   	pop    %rbp
  40f811:	41 5c                	pop    %r12
  40f813:	c3                   	retq   
	httpd_realloc_str( &buf, &maxbuf, size );
  40f814:	be 00 20 64 00       	mov    $0x642000,%esi
  40f819:	bf c0 1f 64 00       	mov    $0x641fc0,%edi
  40f81e:	e8 0d db ff ff       	callq  40d330 <httpd_realloc_str>
  40f823:	48 8b 35 d6 27 23 00 	mov    0x2327d6(%rip),%rsi        # 642000 <maxbuf.6540>
  40f82a:	eb be                	jmp    40f7ea <build_env+0x2a>
	syslog( LOG_ERR, "out of memory copying environment variable" );
  40f82c:	bf 03 00 00 00       	mov    $0x3,%edi
  40f831:	be c0 3c 42 00       	mov    $0x423cc0,%esi
  40f836:	e8 05 34 ff ff       	callq  402c40 <syslog@plt>
	exit( 1 );
  40f83b:	e8 00 38 ff ff       	callq  403040 <__asan_handle_no_return@plt>
  40f840:	bf 01 00 00 00       	mov    $0x1,%edi
  40f845:	e8 96 38 ff ff       	callq  4030e0 <exit@plt>
  40f84a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040f850 <figure_mime>:
    {
  40f850:	41 57                	push   %r15
  40f852:	41 56                	push   %r14
  40f854:	41 55                	push   %r13
  40f856:	41 54                	push   %r12
  40f858:	55                   	push   %rbp
  40f859:	53                   	push   %rbx
  40f85a:	48 81 ec 38 02 00 00 	sub    $0x238,%rsp
  40f861:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
  40f866:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
  40f86b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  40f870:	8b 05 8a 1a 23 00    	mov    0x231a8a(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  40f876:	85 c0                	test   %eax,%eax
  40f878:	0f 85 82 05 00 00    	jne    40fe00 <figure_mime+0x5b0>
  40f87e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  40f883:	48 8d 88 e0 01 00 00 	lea    0x1e0(%rax),%rcx
  40f88a:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  40f88f:	48 c7 00 b3 8a b5 41 	movq   $0x41b58ab3,(%rax)
  40f896:	48 c7 40 08 0c 21 42 	movq   $0x42210c,0x8(%rax)
  40f89d:	00 
  40f89e:	48 c7 40 10 50 f8 40 	movq   $0x40f850,0x10(%rax)
  40f8a5:	00 
  40f8a6:	48 c1 e8 03          	shr    $0x3,%rax
  40f8aa:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
  40f8af:	c7 80 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rax)
  40f8b6:	f1 f1 f1 
  40f8b9:	c7 80 34 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8034(%rax)
  40f8c0:	00 f2 f2 
  40f8c3:	c7 80 38 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8038(%rax)
  40f8ca:	f3 f3 f3 
    hc->type = default_type;
  40f8cd:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40f8d2:	48 8d b8 f8 01 00 00 	lea    0x1f8(%rax),%rdi
  40f8d9:	48 89 f8             	mov    %rdi,%rax
  40f8dc:	48 c1 e8 03          	shr    $0x3,%rax
  40f8e0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f8e7:	0f 85 0e 05 00 00    	jne    40fdfb <figure_mime+0x5ab>
  40f8ed:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    for ( prev_dot = &hc->expnfilename[strlen(hc->expnfilename)]; ; prev_dot = dot )
  40f8f2:	48 8d b8 f0 00 00 00 	lea    0xf0(%rax),%rdi
    hc->type = default_type;
  40f8f9:	48 c7 80 f8 01 00 00 	movq   $0x423d20,0x1f8(%rax)
  40f900:	20 3d 42 00 
    for ( prev_dot = &hc->expnfilename[strlen(hc->expnfilename)]; ; prev_dot = dot )
  40f904:	48 89 f8             	mov    %rdi,%rax
  40f907:	48 c1 e8 03          	shr    $0x3,%rax
  40f90b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f912:	0f 85 de 04 00 00    	jne    40fdf6 <figure_mime+0x5a6>
  40f918:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40f91d:	48 8b 98 f0 00 00 00 	mov    0xf0(%rax),%rbx
  40f924:	48 89 df             	mov    %rbx,%rdi
  40f927:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
  40f92c:	e8 4f 33 ff ff       	callq  402c80 <strlen@plt>
    n_me_indexes = 0;
  40f931:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%rsp)
  40f938:	00 
    for ( prev_dot = &hc->expnfilename[strlen(hc->expnfilename)]; ; prev_dot = dot )
  40f939:	48 01 d8             	add    %rbx,%rax
  40f93c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  40f941:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
  40f945:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
		    me_indexes[n_me_indexes] = i;
  40f94a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  40f94f:	48 83 c0 20          	add    $0x20,%rax
  40f953:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  40f958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40f95f:	00 
	for ( dot = prev_dot - 1; dot >= hc->expnfilename && *dot != '.'; --dot )
  40f960:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  40f965:	4c 8d 70 ff          	lea    -0x1(%rax),%r14
  40f969:	4c 39 74 24 10       	cmp    %r14,0x10(%rsp)
  40f96e:	77 6d                	ja     40f9dd <figure_mime+0x18d>
  40f970:	4c 89 f0             	mov    %r14,%rax
  40f973:	4c 89 f2             	mov    %r14,%rdx
  40f976:	48 c1 e8 03          	shr    $0x3,%rax
  40f97a:	83 e2 07             	and    $0x7,%edx
  40f97d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40f984:	38 d0                	cmp    %dl,%al
  40f986:	7f 08                	jg     40f990 <figure_mime+0x140>
  40f988:	84 c0                	test   %al,%al
  40f98a:	0f 85 8d 04 00 00    	jne    40fe1d <figure_mime+0x5cd>
  40f990:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  40f995:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40f99a:	80 78 ff 2e          	cmpb   $0x2e,-0x1(%rax)
  40f99e:	75 34                	jne    40f9d4 <figure_mime+0x184>
  40f9a0:	e9 18 04 00 00       	jmpq   40fdbd <figure_mime+0x56d>
  40f9a5:	0f 1f 00             	nopl   (%rax)
  40f9a8:	48 89 f8             	mov    %rdi,%rax
  40f9ab:	48 89 fa             	mov    %rdi,%rdx
  40f9ae:	48 c1 e8 03          	shr    $0x3,%rax
  40f9b2:	83 e2 07             	and    $0x7,%edx
  40f9b5:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40f9bc:	38 d0                	cmp    %dl,%al
  40f9be:	7f 08                	jg     40f9c8 <figure_mime+0x178>
  40f9c0:	84 c0                	test   %al,%al
  40f9c2:	0f 85 12 04 00 00    	jne    40fdda <figure_mime+0x58a>
  40f9c8:	80 3f 2e             	cmpb   $0x2e,(%rdi)
  40f9cb:	0f 84 1f 02 00 00    	je     40fbf0 <figure_mime+0x3a0>
  40f9d1:	49 89 fe             	mov    %rdi,%r14
  40f9d4:	49 8d 7e ff          	lea    -0x1(%r14),%rdi
  40f9d8:	48 39 cf             	cmp    %rcx,%rdi
  40f9db:	75 cb                	jne    40f9a8 <figure_mime+0x158>
    hc->encodings[0] = '\0';
  40f9dd:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40f9e2:	48 8d a8 f8 00 00 00 	lea    0xf8(%rax),%rbp
  40f9e9:	48 89 e8             	mov    %rbp,%rax
  40f9ec:	48 c1 e8 03          	shr    $0x3,%rax
  40f9f0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40f9f7:	0f 85 ae 04 00 00    	jne    40feab <figure_mime+0x65b>
  40f9fd:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40fa02:	48 8b b8 f8 00 00 00 	mov    0xf8(%rax),%rdi
  40fa09:	48 89 f8             	mov    %rdi,%rax
  40fa0c:	48 89 fa             	mov    %rdi,%rdx
  40fa0f:	48 c1 e8 03          	shr    $0x3,%rax
  40fa13:	83 e2 07             	and    $0x7,%edx
  40fa16:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40fa1d:	38 d0                	cmp    %dl,%al
  40fa1f:	7f 08                	jg     40fa29 <figure_mime+0x1d9>
  40fa21:	84 c0                	test   %al,%al
  40fa23:	0f 85 c3 03 00 00    	jne    40fdec <figure_mime+0x59c>
    for ( i = n_me_indexes - 1; i >= 0; --i )
  40fa29:	8b 44 24 34          	mov    0x34(%rsp),%eax
    hc->encodings[0] = '\0';
  40fa2d:	c6 07 00             	movb   $0x0,(%rdi)
    for ( i = n_me_indexes - 1; i >= 0; --i )
  40fa30:	83 e8 01             	sub    $0x1,%eax
  40fa33:	83 f8 ff             	cmp    $0xffffffff,%eax
  40fa36:	0f 84 45 03 00 00    	je     40fd81 <figure_mime+0x531>
  40fa3c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  40fa41:	48 63 d0             	movslq %eax,%rdx
	if ( hc->encodings[0] != '\0' )
  40fa44:	49 89 ed             	mov    %rbp,%r13
  40fa47:	89 c0                	mov    %eax,%eax
  40fa49:	48 c1 e2 02          	shl    $0x2,%rdx
  40fa4d:	48 c1 e0 02          	shl    $0x2,%rax
  40fa51:	48 89 2c 24          	mov    %rbp,(%rsp)
  40fa55:	48 8d b1 90 01 00 00 	lea    0x190(%rcx),%rsi
  40fa5c:	49 c1 ed 03          	shr    $0x3,%r13
  40fa60:	48 89 cd             	mov    %rcx,%rbp
  40fa63:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  40fa68:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  40fa6d:	4c 8d a4 32 3c fe ff 	lea    -0x1c4(%rdx,%rsi,1),%r12
  40fa74:	ff 
  40fa75:	4c 8d bc 32 40 fe ff 	lea    -0x1c0(%rdx,%rsi,1),%r15
  40fa7c:	ff 
  40fa7d:	4d 89 e6             	mov    %r12,%r14
    encodings_len = 0;
  40fa80:	45 31 e4             	xor    %r12d,%r12d
  40fa83:	49 29 c6             	sub    %rax,%r14
	if ( hc->encodings[0] != '\0' )
  40fa86:	4c 89 e8             	mov    %r13,%rax
  40fa89:	4d 89 e5             	mov    %r12,%r13
  40fa8c:	4d 89 fc             	mov    %r15,%r12
  40fa8f:	49 89 c7             	mov    %rax,%r15
  40fa92:	e9 95 00 00 00       	jmpq   40fb2c <figure_mime+0x2dc>
  40fa97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40fa9e:	00 00 
	(void) strcpy( &hc->encodings[encodings_len], enc_tab[me_indexes[i]].val );
  40faa0:	4c 89 e0             	mov    %r12,%rax
  40faa3:	48 c1 e8 03          	shr    $0x3,%rax
  40faa7:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  40faae:	4c 89 e0             	mov    %r12,%rax
  40fab1:	83 e0 07             	and    $0x7,%eax
  40fab4:	83 c0 03             	add    $0x3,%eax
  40fab7:	38 d0                	cmp    %dl,%al
  40fab9:	7c 08                	jl     40fac3 <figure_mime+0x273>
  40fabb:	84 d2                	test   %dl,%dl
  40fabd:	0f 85 d6 03 00 00    	jne    40fe99 <figure_mime+0x649>
  40fac3:	49 63 04 24          	movslq (%r12),%rax
  40fac7:	48 c1 e0 05          	shl    $0x5,%rax
  40facb:	48 8d 90 d0 5e 63 00 	lea    0x635ed0(%rax),%rdx
  40fad2:	48 89 d6             	mov    %rdx,%rsi
  40fad5:	48 c1 ee 03          	shr    $0x3,%rsi
  40fad9:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  40fae0:	0f 85 ab 03 00 00    	jne    40fe91 <figure_mime+0x641>
  40fae6:	48 8b b0 d0 5e 63 00 	mov    0x635ed0(%rax),%rsi
  40faed:	4c 01 ef             	add    %r13,%rdi
  40faf0:	e8 1b 34 ff ff       	callq  402f10 <strcpy@plt>
	encodings_len += enc_tab[me_indexes[i]].val_len;
  40faf5:	49 63 04 24          	movslq (%r12),%rax
  40faf9:	48 c1 e0 05          	shl    $0x5,%rax
  40fafd:	48 8d b8 d8 5e 63 00 	lea    0x635ed8(%rax),%rdi
  40fb04:	48 89 fa             	mov    %rdi,%rdx
  40fb07:	48 c1 ea 03          	shr    $0x3,%rdx
  40fb0b:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40fb12:	0f 85 74 03 00 00    	jne    40fe8c <figure_mime+0x63c>
  40fb18:	49 83 ec 04          	sub    $0x4,%r12
  40fb1c:	4c 03 a8 d8 5e 63 00 	add    0x635ed8(%rax),%r13
    for ( i = n_me_indexes - 1; i >= 0; --i )
  40fb23:	4d 39 f4             	cmp    %r14,%r12
  40fb26:	0f 84 55 02 00 00    	je     40fd81 <figure_mime+0x531>
	    encodings_len + enc_tab[me_indexes[i]].val_len + 1 );
  40fb2c:	4c 89 e0             	mov    %r12,%rax
  40fb2f:	48 c1 e8 03          	shr    $0x3,%rax
  40fb33:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  40fb3a:	4c 89 e0             	mov    %r12,%rax
  40fb3d:	83 e0 07             	and    $0x7,%eax
  40fb40:	83 c0 03             	add    $0x3,%eax
  40fb43:	38 d0                	cmp    %dl,%al
  40fb45:	7c 08                	jl     40fb4f <figure_mime+0x2ff>
  40fb47:	84 d2                	test   %dl,%dl
  40fb49:	0f 85 e7 02 00 00    	jne    40fe36 <figure_mime+0x5e6>
  40fb4f:	49 63 04 24          	movslq (%r12),%rax
  40fb53:	48 c1 e0 05          	shl    $0x5,%rax
  40fb57:	48 8d b8 d8 5e 63 00 	lea    0x635ed8(%rax),%rdi
  40fb5e:	48 89 fa             	mov    %rdi,%rdx
  40fb61:	48 c1 ea 03          	shr    $0x3,%rdx
  40fb65:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  40fb6c:	0f 85 bf 02 00 00    	jne    40fe31 <figure_mime+0x5e1>
	httpd_realloc_str(
  40fb72:	48 8b 90 d8 5e 63 00 	mov    0x635ed8(%rax),%rdx
  40fb79:	49 8d 5d 01          	lea    0x1(%r13),%rbx
  40fb7d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  40fb82:	48 8b 3c 24          	mov    (%rsp),%rdi
  40fb86:	48 01 da             	add    %rbx,%rdx
  40fb89:	e8 a2 d7 ff ff       	callq  40d330 <httpd_realloc_str>
	if ( hc->encodings[0] != '\0' )
  40fb8e:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  40fb95:	00 
  40fb96:	0f 85 89 02 00 00    	jne    40fe25 <figure_mime+0x5d5>
  40fb9c:	48 8b bd f8 00 00 00 	mov    0xf8(%rbp),%rdi
  40fba3:	48 89 f8             	mov    %rdi,%rax
  40fba6:	48 89 fa             	mov    %rdi,%rdx
  40fba9:	48 c1 e8 03          	shr    $0x3,%rax
  40fbad:	83 e2 07             	and    $0x7,%edx
  40fbb0:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40fbb7:	38 d0                	cmp    %dl,%al
  40fbb9:	7f 08                	jg     40fbc3 <figure_mime+0x373>
  40fbbb:	84 c0                	test   %al,%al
  40fbbd:	0f 85 de 02 00 00    	jne    40fea1 <figure_mime+0x651>
  40fbc3:	80 3f 00             	cmpb   $0x0,(%rdi)
  40fbc6:	0f 84 d4 fe ff ff    	je     40faa0 <figure_mime+0x250>
	    (void) strcpy( &hc->encodings[encodings_len], "," );
  40fbcc:	4c 01 ef             	add    %r13,%rdi
  40fbcf:	ba 02 00 00 00       	mov    $0x2,%edx
  40fbd4:	be 60 3d 42 00       	mov    $0x423d60,%esi
	    ++encodings_len;
  40fbd9:	49 89 dd             	mov    %rbx,%r13
	    (void) strcpy( &hc->encodings[encodings_len], "," );
  40fbdc:	e8 5f 35 ff ff       	callq  403140 <memcpy@plt>
	    ++encodings_len;
  40fbe1:	48 8b bd f8 00 00 00 	mov    0xf8(%rbp),%rdi
  40fbe8:	e9 b3 fe ff ff       	jmpq   40faa0 <figure_mime+0x250>
  40fbed:	0f 1f 00             	nopl   (%rax)
  40fbf0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
	for ( dot = prev_dot - 1; dot >= hc->expnfilename && *dot != '.'; --dot )
  40fbf5:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40fbfa:	4c 29 f0             	sub    %r14,%rax
  40fbfd:	49 89 c7             	mov    %rax,%r15
	for ( i = 0; i < n_enc_tab; ++i )
  40fc00:	bb c8 5e 63 00       	mov    $0x635ec8,%ebx
  40fc05:	31 ed                	xor    %ebp,%ebp
  40fc07:	4d 89 fc             	mov    %r15,%r12
	    if ( ext_len == enc_tab[i].ext_len && strncasecmp( ext, enc_tab[i].ext, ext_len ) == 0 )
  40fc0a:	48 89 d8             	mov    %rbx,%rax
  40fc0d:	48 c1 e8 03          	shr    $0x3,%rax
  40fc11:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40fc18:	0f 85 c1 01 00 00    	jne    40fddf <figure_mime+0x58f>
  40fc1e:	4c 39 23             	cmp    %r12,(%rbx)
  40fc21:	0f 84 d9 00 00 00    	je     40fd00 <figure_mime+0x4b0>
	for ( i = 0; i < n_enc_tab; ++i )
  40fc27:	83 c5 01             	add    $0x1,%ebp
  40fc2a:	48 83 c3 20          	add    $0x20,%rbx
  40fc2e:	83 fd 04             	cmp    $0x4,%ebp
  40fc31:	75 d7                	jne    40fc0a <figure_mime+0x3ba>
	bot = 0;
  40fc33:	45 31 e4             	xor    %r12d,%r12d
	top = n_typ_tab - 1;
  40fc36:	4c 89 34 24          	mov    %r14,(%rsp)
  40fc3a:	41 bd bd 00 00 00    	mov    $0xbd,%r13d
  40fc40:	45 89 e6             	mov    %r12d,%r14d
  40fc43:	4d 89 fc             	mov    %r15,%r12
  40fc46:	eb 17                	jmp    40fc5f <figure_mime+0x40f>
  40fc48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40fc4f:	00 
	    else if ( r > 0 )
  40fc50:	74 56                	je     40fca8 <figure_mime+0x458>
		    bot = mid + 1;
  40fc52:	44 8d 75 01          	lea    0x1(%rbp),%r14d
	while ( top >= bot )
  40fc56:	45 39 f5             	cmp    %r14d,%r13d
  40fc59:	0f 8c 01 fd ff ff    	jl     40f960 <figure_mime+0x110>
	    mid = ( top + bot ) / 2;
  40fc5f:	43 8d 6c 35 00       	lea    0x0(%r13,%r14,1),%ebp
  40fc64:	d1 fd                	sar    %ebp
	    r = strncasecmp( ext, typ_tab[mid].ext, ext_len );
  40fc66:	48 63 dd             	movslq %ebp,%rbx
  40fc69:	48 c1 e3 05          	shl    $0x5,%rbx
  40fc6d:	4c 8d bb e0 46 63 00 	lea    0x6346e0(%rbx),%r15
  40fc74:	4c 89 f8             	mov    %r15,%rax
  40fc77:	48 c1 e8 03          	shr    $0x3,%rax
  40fc7b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40fc82:	0f 85 4a 01 00 00    	jne    40fdd2 <figure_mime+0x582>
  40fc88:	48 8b b3 e0 46 63 00 	mov    0x6346e0(%rbx),%rsi
  40fc8f:	48 8b 3c 24          	mov    (%rsp),%rdi
  40fc93:	4c 89 e2             	mov    %r12,%rdx
  40fc96:	e8 95 2f ff ff       	callq  402c30 <strncasecmp@plt>
	    if ( r < 0 )
  40fc9b:	85 c0                	test   %eax,%eax
  40fc9d:	79 b1                	jns    40fc50 <figure_mime+0x400>
		    top = mid - 1;
  40fc9f:	44 8d 6d ff          	lea    -0x1(%rbp),%r13d
  40fca3:	eb b1                	jmp    40fc56 <figure_mime+0x406>
  40fca5:	0f 1f 00             	nopl   (%rax)
		if ( ext_len < typ_tab[mid].ext_len )
  40fca8:	49 8d 7f 08          	lea    0x8(%r15),%rdi
  40fcac:	48 89 f8             	mov    %rdi,%rax
  40fcaf:	48 c1 e8 03          	shr    $0x3,%rax
  40fcb3:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40fcba:	0f 85 27 01 00 00    	jne    40fde7 <figure_mime+0x597>
  40fcc0:	4d 39 67 08          	cmp    %r12,0x8(%r15)
  40fcc4:	77 d9                	ja     40fc9f <figure_mime+0x44f>
		else if ( ext_len > typ_tab[mid].ext_len )
  40fcc6:	72 8a                	jb     40fc52 <figure_mime+0x402>
		    hc->type = typ_tab[mid].val;
  40fcc8:	48 8d bb f0 46 63 00 	lea    0x6346f0(%rbx),%rdi
  40fccf:	48 89 f8             	mov    %rdi,%rax
  40fcd2:	48 c1 e8 03          	shr    $0x3,%rax
  40fcd6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40fcdd:	0f 85 c3 01 00 00    	jne    40fea6 <figure_mime+0x656>
  40fce3:	49 8b 47 10          	mov    0x10(%r15),%rax
  40fce7:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  40fcec:	48 89 81 f8 01 00 00 	mov    %rax,0x1f8(%rcx)
		    goto done;
  40fcf3:	e9 e5 fc ff ff       	jmpq   40f9dd <figure_mime+0x18d>
  40fcf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40fcff:	00 
	    if ( ext_len == enc_tab[i].ext_len && strncasecmp( ext, enc_tab[i].ext, ext_len ) == 0 )
  40fd00:	48 8d 7b f8          	lea    -0x8(%rbx),%rdi
  40fd04:	48 89 f8             	mov    %rdi,%rax
  40fd07:	48 c1 e8 03          	shr    $0x3,%rax
  40fd0b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40fd12:	0f 85 9b 01 00 00    	jne    40feb3 <figure_mime+0x663>
  40fd18:	48 8b 73 f8          	mov    -0x8(%rbx),%rsi
  40fd1c:	4c 89 e2             	mov    %r12,%rdx
  40fd1f:	4c 89 f7             	mov    %r14,%rdi
  40fd22:	e8 09 2f ff ff       	callq  402c30 <strncasecmp@plt>
  40fd27:	85 c0                	test   %eax,%eax
  40fd29:	0f 85 f8 fe ff ff    	jne    40fc27 <figure_mime+0x3d7>
		if ( n_me_indexes < sizeof(me_indexes)/sizeof(*me_indexes) )
  40fd2f:	8b 44 24 34          	mov    0x34(%rsp),%eax
  40fd33:	83 f8 63             	cmp    $0x63,%eax
  40fd36:	0f 8f f7 fe ff ff    	jg     40fc33 <figure_mime+0x3e3>
		    me_indexes[n_me_indexes] = i;
  40fd3c:	48 63 d0             	movslq %eax,%rdx
  40fd3f:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
  40fd44:	48 8d 3c 90          	lea    (%rax,%rdx,4),%rdi
  40fd48:	48 89 f8             	mov    %rdi,%rax
  40fd4b:	48 c1 e8 03          	shr    $0x3,%rax
  40fd4f:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  40fd56:	48 89 f8             	mov    %rdi,%rax
  40fd59:	83 e0 07             	and    $0x7,%eax
  40fd5c:	83 c0 03             	add    $0x3,%eax
  40fd5f:	38 c8                	cmp    %cl,%al
  40fd61:	7c 08                	jl     40fd6b <figure_mime+0x51b>
  40fd63:	84 c9                	test   %cl,%cl
  40fd65:	0f 85 86 00 00 00    	jne    40fdf1 <figure_mime+0x5a1>
  40fd6b:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
		    ++n_me_indexes;
  40fd70:	83 44 24 34 01       	addl   $0x1,0x34(%rsp)
		    me_indexes[n_me_indexes] = i;
  40fd75:	89 ac 90 40 fe ff ff 	mov    %ebp,-0x1c0(%rax,%rdx,4)
		    ++n_me_indexes;
  40fd7c:	e9 b2 fe ff ff       	jmpq   40fc33 <figure_mime+0x3e3>
    {
  40fd81:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
  40fd86:	48 3b 44 24 28       	cmp    0x28(%rsp),%rax
  40fd8b:	0f 85 ad 00 00 00    	jne    40fe3e <figure_mime+0x5ee>
  40fd91:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
  40fd96:	c7 80 00 80 ff 7f 00 	movl   $0x0,0x7fff8000(%rax)
  40fd9d:	00 00 00 
  40fda0:	48 c7 80 34 80 ff 7f 	movq   $0x0,0x7fff8034(%rax)
  40fda7:	00 00 00 00 
    }
  40fdab:	48 81 c4 38 02 00 00 	add    $0x238,%rsp
  40fdb2:	5b                   	pop    %rbx
  40fdb3:	5d                   	pop    %rbp
  40fdb4:	41 5c                	pop    %r12
  40fdb6:	41 5d                	pop    %r13
  40fdb8:	41 5e                	pop    %r14
  40fdba:	41 5f                	pop    %r15
  40fdbc:	c3                   	retq   
	for ( dot = prev_dot - 1; dot >= hc->expnfilename && *dot != '.'; --dot )
  40fdbd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  40fdc2:	45 31 ff             	xor    %r15d,%r15d
  40fdc5:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
  40fdca:	49 89 c6             	mov    %rax,%r14
  40fdcd:	e9 2e fe ff ff       	jmpq   40fc00 <figure_mime+0x3b0>
	    r = strncasecmp( ext, typ_tab[mid].ext, ext_len );
  40fdd2:	4c 89 ff             	mov    %r15,%rdi
  40fdd5:	e8 76 34 ff ff       	callq  403250 <__asan_report_load8@plt>
	for ( dot = prev_dot - 1; dot >= hc->expnfilename && *dot != '.'; --dot )
  40fdda:	e8 31 33 ff ff       	callq  403110 <__asan_report_load1@plt>
	    if ( ext_len == enc_tab[i].ext_len && strncasecmp( ext, enc_tab[i].ext, ext_len ) == 0 )
  40fddf:	48 89 df             	mov    %rbx,%rdi
  40fde2:	e8 69 34 ff ff       	callq  403250 <__asan_report_load8@plt>
		if ( ext_len < typ_tab[mid].ext_len )
  40fde7:	e8 64 34 ff ff       	callq  403250 <__asan_report_load8@plt>
    hc->encodings[0] = '\0';
  40fdec:	e8 3f 33 ff ff       	callq  403130 <__asan_report_store1@plt>
		    me_indexes[n_me_indexes] = i;
  40fdf1:	e8 fa 2d ff ff       	callq  402bf0 <__asan_report_store4@plt>
    for ( prev_dot = &hc->expnfilename[strlen(hc->expnfilename)]; ; prev_dot = dot )
  40fdf6:	e8 55 34 ff ff       	callq  403250 <__asan_report_load8@plt>
    hc->type = default_type;
  40fdfb:	e8 a0 31 ff ff       	callq  402fa0 <__asan_report_store8@plt>
    {
  40fe00:	bf e0 01 00 00       	mov    $0x1e0,%edi
  40fe05:	e8 76 36 ff ff       	callq  403480 <__asan_stack_malloc_3@plt>
  40fe0a:	48 85 c0             	test   %rax,%rax
  40fe0d:	48 0f 44 44 24 28    	cmove  0x28(%rsp),%rax
  40fe13:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  40fe18:	e9 61 fa ff ff       	jmpq   40f87e <figure_mime+0x2e>
	for ( dot = prev_dot - 1; dot >= hc->expnfilename && *dot != '.'; --dot )
  40fe1d:	4c 89 f7             	mov    %r14,%rdi
  40fe20:	e8 eb 32 ff ff       	callq  403110 <__asan_report_load1@plt>
  40fe25:	48 8b 2c 24          	mov    (%rsp),%rbp
	if ( hc->encodings[0] != '\0' )
  40fe29:	48 89 ef             	mov    %rbp,%rdi
  40fe2c:	e8 1f 34 ff ff       	callq  403250 <__asan_report_load8@plt>
	    encodings_len + enc_tab[me_indexes[i]].val_len + 1 );
  40fe31:	e8 1a 34 ff ff       	callq  403250 <__asan_report_load8@plt>
  40fe36:	4c 89 e7             	mov    %r12,%rdi
  40fe39:	e8 92 2f ff ff       	callq  402dd0 <__asan_report_load4@plt>
    {
  40fe3e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  40fe43:	66 0f 6f 05 45 1f 01 	movdqa 0x11f45(%rip),%xmm0        # 421d90 <_IO_stdin_used+0x2cd0>
  40fe4a:	00 
  40fe4b:	48 b9 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rcx
  40fe52:	f5 f5 f5 
  40fe55:	48 c7 00 0e 36 e0 45 	movq   $0x45e0360e,(%rax)
  40fe5c:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
  40fe61:	0f 11 80 00 80 ff 7f 	movups %xmm0,0x7fff8000(%rax)
  40fe68:	0f 11 80 10 80 ff 7f 	movups %xmm0,0x7fff8010(%rax)
  40fe6f:	0f 11 80 20 80 ff 7f 	movups %xmm0,0x7fff8020(%rax)
  40fe76:	48 89 88 30 80 ff 7f 	mov    %rcx,0x7fff8030(%rax)
  40fe7d:	c7 80 38 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8038(%rax)
  40fe84:	f5 f5 f5 
  40fe87:	e9 1f ff ff ff       	jmpq   40fdab <figure_mime+0x55b>
	encodings_len += enc_tab[me_indexes[i]].val_len;
  40fe8c:	e8 bf 33 ff ff       	callq  403250 <__asan_report_load8@plt>
	(void) strcpy( &hc->encodings[encodings_len], enc_tab[me_indexes[i]].val );
  40fe91:	48 89 d7             	mov    %rdx,%rdi
  40fe94:	e8 b7 33 ff ff       	callq  403250 <__asan_report_load8@plt>
  40fe99:	4c 89 e7             	mov    %r12,%rdi
  40fe9c:	e8 2f 2f ff ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( hc->encodings[0] != '\0' )
  40fea1:	e8 6a 32 ff ff       	callq  403110 <__asan_report_load1@plt>
		    hc->type = typ_tab[mid].val;
  40fea6:	e8 a5 33 ff ff       	callq  403250 <__asan_report_load8@plt>
    hc->encodings[0] = '\0';
  40feab:	48 89 ef             	mov    %rbp,%rdi
  40feae:	e8 9d 33 ff ff       	callq  403250 <__asan_report_load8@plt>
	    if ( ext_len == enc_tab[i].ext_len && strncasecmp( ext, enc_tab[i].ext, ext_len ) == 0 )
  40feb3:	e8 98 33 ff ff       	callq  403250 <__asan_report_load8@plt>
  40feb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40febf:	00 

000000000040fec0 <httpd_send_err>:
    {
  40fec0:	41 57                	push   %r15
  40fec2:	49 89 ff             	mov    %rdi,%r15
  40fec5:	41 56                	push   %r14
  40fec7:	49 89 d6             	mov    %rdx,%r14
  40feca:	41 55                	push   %r13
  40fecc:	41 54                	push   %r12
  40fece:	41 89 f4             	mov    %esi,%r12d
  40fed1:	55                   	push   %rbp
  40fed2:	53                   	push   %rbx
  40fed3:	48 81 ec 68 04 00 00 	sub    $0x468,%rsp
  40feda:	8b 15 20 14 23 00    	mov    0x231420(%rip),%edx        # 641300 <__asan_option_detect_stack_use_after_return>
  40fee0:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  40fee5:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
  40feea:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
  40feef:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
  40fef4:	85 d2                	test   %edx,%edx
  40fef6:	0f 85 ee 01 00 00    	jne    4100ea <httpd_send_err+0x22a>
    if ( hc->hs->vhost && hc->hostdir[0] != '\0' )
  40fefc:	49 8d 7f 08          	lea    0x8(%r15),%rdi
    {
  40ff00:	48 89 dd             	mov    %rbx,%rbp
  40ff03:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
  40ff0a:	48 8d b3 40 04 00 00 	lea    0x440(%rbx),%rsi
    if ( hc->hs->vhost && hc->hostdir[0] != '\0' )
  40ff11:	48 89 f8             	mov    %rdi,%rax
    {
  40ff14:	48 c1 ed 03          	shr    $0x3,%rbp
  40ff18:	48 c7 43 08 24 21 42 	movq   $0x422124,0x8(%rbx)
  40ff1f:	00 
    if ( hc->hs->vhost && hc->hostdir[0] != '\0' )
  40ff20:	48 c1 e8 03          	shr    $0x3,%rax
    {
  40ff24:	48 c7 43 10 c0 fe 40 	movq   $0x40fec0,0x10(%rbx)
  40ff2b:	00 
  40ff2c:	c7 85 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbp)
  40ff33:	f1 f1 f1 
  40ff36:	c7 85 80 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff8080(%rbp)
  40ff3d:	f2 f2 f2 
  40ff40:	c7 85 84 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8084(%rbp)
  40ff47:	f3 f3 f3 
    if ( hc->hs->vhost && hc->hostdir[0] != '\0' )
  40ff4a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40ff51:	0f 85 8e 01 00 00    	jne    4100e5 <httpd_send_err+0x225>
  40ff57:	49 8b 57 08          	mov    0x8(%r15),%rdx
  40ff5b:	48 8d 7a 64          	lea    0x64(%rdx),%rdi
  40ff5f:	48 89 f8             	mov    %rdi,%rax
  40ff62:	48 c1 e8 03          	shr    $0x3,%rax
  40ff66:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  40ff6d:	48 89 f8             	mov    %rdi,%rax
  40ff70:	83 e0 07             	and    $0x7,%eax
  40ff73:	83 c0 03             	add    $0x3,%eax
  40ff76:	38 c8                	cmp    %cl,%al
  40ff78:	7c 08                	jl     40ff82 <httpd_send_err+0xc2>
  40ff7a:	84 c9                	test   %cl,%cl
  40ff7c:	0f 85 3a 01 00 00    	jne    4100bc <httpd_send_err+0x1fc>
  40ff82:	8b 42 64             	mov    0x64(%rdx),%eax
  40ff85:	85 c0                	test   %eax,%eax
  40ff87:	0f 84 23 01 00 00    	je     4100b0 <httpd_send_err+0x1f0>
  40ff8d:	49 8d bf 58 01 00 00 	lea    0x158(%r15),%rdi
  40ff94:	48 89 f8             	mov    %rdi,%rax
  40ff97:	48 c1 e8 03          	shr    $0x3,%rax
  40ff9b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  40ffa2:	0f 85 58 01 00 00    	jne    410100 <httpd_send_err+0x240>
  40ffa8:	49 8b 8f 58 01 00 00 	mov    0x158(%r15),%rcx
  40ffaf:	48 89 c8             	mov    %rcx,%rax
  40ffb2:	48 89 ca             	mov    %rcx,%rdx
  40ffb5:	48 c1 e8 03          	shr    $0x3,%rax
  40ffb9:	83 e2 07             	and    $0x7,%edx
  40ffbc:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  40ffc3:	38 d0                	cmp    %dl,%al
  40ffc5:	7f 08                	jg     40ffcf <httpd_send_err+0x10f>
  40ffc7:	84 c0                	test   %al,%al
  40ffc9:	0f 85 f2 00 00 00    	jne    4100c1 <httpd_send_err+0x201>
  40ffcf:	80 39 00             	cmpb   $0x0,(%rcx)
  40ffd2:	4c 8d ae e0 fb ff ff 	lea    -0x420(%rsi),%r13
  40ffd9:	0f 85 91 00 00 00    	jne    410070 <httpd_send_err+0x1b0>
    (void) my_snprintf( filename, sizeof(filename),
  40ffdf:	45 89 e0             	mov    %r12d,%r8d
  40ffe2:	b9 a0 3d 42 00       	mov    $0x423da0,%ecx
  40ffe7:	ba e0 3d 42 00       	mov    $0x423de0,%edx
  40ffec:	4c 89 ef             	mov    %r13,%rdi
  40ffef:	be e8 03 00 00       	mov    $0x3e8,%esi
  40fff4:	31 c0                	xor    %eax,%eax
  40fff6:	e8 15 af ff ff       	callq  40af10 <my_snprintf>
    if ( send_err_file( hc, status, title, extraheads, filename ) )
  40fffb:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  410000:	4d 89 e8             	mov    %r13,%r8
  410003:	4c 89 f2             	mov    %r14,%rdx
  410006:	44 89 e6             	mov    %r12d,%esi
  410009:	4c 89 ff             	mov    %r15,%rdi
  41000c:	e8 5f df ff ff       	callq  40df70 <send_err_file>
  410011:	85 c0                	test   %eax,%eax
  410013:	74 3b                	je     410050 <httpd_send_err+0x190>
    {
  410015:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  41001a:	48 39 d8             	cmp    %rbx,%rax
  41001d:	0f 85 a6 00 00 00    	jne    4100c9 <httpd_send_err+0x209>
  410023:	c7 85 00 80 ff 7f 00 	movl   $0x0,0x7fff8000(%rbp)
  41002a:	00 00 00 
  41002d:	48 c7 85 80 80 ff 7f 	movq   $0x0,0x7fff8080(%rbp)
  410034:	00 00 00 00 
    }
  410038:	48 81 c4 68 04 00 00 	add    $0x468,%rsp
  41003f:	5b                   	pop    %rbx
  410040:	5d                   	pop    %rbp
  410041:	41 5c                	pop    %r12
  410043:	41 5d                	pop    %r13
  410045:	41 5e                	pop    %r14
  410047:	41 5f                	pop    %r15
  410049:	c3                   	retq   
  41004a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    send_response( hc, status, title, extraheads, form, arg );
  410050:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
  410055:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
  41005a:	4c 89 f2             	mov    %r14,%rdx
  41005d:	44 89 e6             	mov    %r12d,%esi
  410060:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  410065:	4c 89 ff             	mov    %r15,%rdi
  410068:	e8 c3 e0 ff ff       	callq  40e130 <send_response>
  41006d:	eb a6                	jmp    410015 <httpd_send_err+0x155>
  41006f:	90                   	nop
	(void) my_snprintf( filename, sizeof(filename),
  410070:	41 b8 a0 3d 42 00    	mov    $0x423da0,%r8d
  410076:	ba 20 3e 42 00       	mov    $0x423e20,%edx
  41007b:	4c 89 ef             	mov    %r13,%rdi
  41007e:	31 c0                	xor    %eax,%eax
  410080:	be e8 03 00 00       	mov    $0x3e8,%esi
  410085:	45 89 e1             	mov    %r12d,%r9d
  410088:	e8 83 ae ff ff       	callq  40af10 <my_snprintf>
	if ( send_err_file( hc, status, title, extraheads, filename ) )
  41008d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  410092:	4d 89 e8             	mov    %r13,%r8
  410095:	4c 89 f2             	mov    %r14,%rdx
  410098:	44 89 e6             	mov    %r12d,%esi
  41009b:	4c 89 ff             	mov    %r15,%rdi
  41009e:	e8 cd de ff ff       	callq  40df70 <send_err_file>
  4100a3:	85 c0                	test   %eax,%eax
  4100a5:	0f 84 34 ff ff ff    	je     40ffdf <httpd_send_err+0x11f>
  4100ab:	e9 65 ff ff ff       	jmpq   410015 <httpd_send_err+0x155>
  4100b0:	4c 8d ae e0 fb ff ff 	lea    -0x420(%rsi),%r13
  4100b7:	e9 23 ff ff ff       	jmpq   40ffdf <httpd_send_err+0x11f>
    if ( hc->hs->vhost && hc->hostdir[0] != '\0' )
  4100bc:	e8 0f 2d ff ff       	callq  402dd0 <__asan_report_load4@plt>
  4100c1:	48 89 cf             	mov    %rcx,%rdi
  4100c4:	e8 47 30 ff ff       	callq  403110 <__asan_report_load1@plt>
    {
  4100c9:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  4100d0:	48 89 c2             	mov    %rax,%rdx
  4100d3:	be 40 04 00 00       	mov    $0x440,%esi
  4100d8:	48 89 df             	mov    %rbx,%rdi
  4100db:	e8 d0 31 ff ff       	callq  4032b0 <__asan_stack_free_5@plt>
  4100e0:	e9 53 ff ff ff       	jmpq   410038 <httpd_send_err+0x178>
    if ( hc->hs->vhost && hc->hostdir[0] != '\0' )
  4100e5:	e8 66 31 ff ff       	callq  403250 <__asan_report_load8@plt>
    {
  4100ea:	bf 40 04 00 00       	mov    $0x440,%edi
  4100ef:	e8 dc 30 ff ff       	callq  4031d0 <__asan_stack_malloc_5@plt>
  4100f4:	48 85 c0             	test   %rax,%rax
  4100f7:	48 0f 45 d8          	cmovne %rax,%rbx
  4100fb:	e9 fc fd ff ff       	jmpq   40fefc <httpd_send_err+0x3c>
    if ( hc->hs->vhost && hc->hostdir[0] != '\0' )
  410100:	e8 4b 31 ff ff       	callq  403250 <__asan_report_load8@plt>
  410105:	90                   	nop
  410106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41010d:	00 00 00 

0000000000410110 <send_authenticate>:
    {
  410110:	55                   	push   %rbp
  410111:	48 89 f5             	mov    %rsi,%rbp
  410114:	53                   	push   %rbx
  410115:	48 89 fb             	mov    %rdi,%rbx
	&header, &maxheader, sizeof(headstr) + strlen( realm ) + 3 );
  410118:	48 89 f7             	mov    %rsi,%rdi
    {
  41011b:	48 83 ec 08          	sub    $0x8,%rsp
	&header, &maxheader, sizeof(headstr) + strlen( realm ) + 3 );
  41011f:	e8 5c 2b ff ff       	callq  402c80 <strlen@plt>
    httpd_realloc_str(
  410124:	be 80 22 64 00       	mov    $0x642280,%esi
  410129:	bf c0 22 64 00       	mov    $0x6422c0,%edi
  41012e:	48 8d 50 23          	lea    0x23(%rax),%rdx
  410132:	e8 f9 d1 ff ff       	callq  40d330 <httpd_realloc_str>
    (void) my_snprintf( header, maxheader, "%s%s\"\015\012", headstr, realm );
  410137:	31 c0                	xor    %eax,%eax
  410139:	49 89 e8             	mov    %rbp,%r8
  41013c:	b9 60 46 63 00       	mov    $0x634660,%ecx
  410141:	48 8b 3d 78 21 23 00 	mov    0x232178(%rip),%rdi        # 6422c0 <header.6129>
  410148:	48 8b 35 31 21 23 00 	mov    0x232131(%rip),%rsi        # 642280 <maxheader.6130>
  41014f:	ba 60 3e 42 00       	mov    $0x423e60,%edx
  410154:	e8 b7 ad ff ff       	callq  40af10 <my_snprintf>
    httpd_send_err( hc, 401, err401title, header, err401form, hc->encodedurl );
  410159:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
  410160:	48 89 f8             	mov    %rdi,%rax
  410163:	48 c1 e8 03          	shr    $0x3,%rax
  410167:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41016e:	0f 85 9d 00 00 00    	jne    410211 <send_authenticate+0x101>
  410174:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  41017b:	ba 00 3f 42 00       	mov    $0x423f00,%edx
  410180:	48 89 df             	mov    %rbx,%rdi
  410183:	be 91 01 00 00       	mov    $0x191,%esi
  410188:	48 8b 0d 31 21 23 00 	mov    0x232131(%rip),%rcx        # 6422c0 <header.6129>
  41018f:	41 b8 a0 3e 42 00    	mov    $0x423ea0,%r8d
  410195:	e8 26 fd ff ff       	callq  40fec0 <httpd_send_err>
    if ( hc->method == METHOD_POST )
  41019a:	48 8d bb b4 00 00 00 	lea    0xb4(%rbx),%rdi
  4101a1:	48 89 f8             	mov    %rdi,%rax
  4101a4:	48 c1 e8 03          	shr    $0x3,%rax
  4101a8:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4101af:	48 89 f8             	mov    %rdi,%rax
  4101b2:	83 e0 07             	and    $0x7,%eax
  4101b5:	83 c0 03             	add    $0x3,%eax
  4101b8:	38 d0                	cmp    %dl,%al
  4101ba:	7c 04                	jl     4101c0 <send_authenticate+0xb0>
  4101bc:	84 d2                	test   %dl,%dl
  4101be:	75 47                	jne    410207 <send_authenticate+0xf7>
  4101c0:	83 bb b4 00 00 00 03 	cmpl   $0x3,0xb4(%rbx)
  4101c7:	74 07                	je     4101d0 <send_authenticate+0xc0>
    }
  4101c9:	48 83 c4 08          	add    $0x8,%rsp
  4101cd:	5b                   	pop    %rbx
  4101ce:	5d                   	pop    %rbp
  4101cf:	c3                   	retq   
	hc->should_linger = 1;
  4101d0:	48 8d bb 2c 02 00 00 	lea    0x22c(%rbx),%rdi
  4101d7:	48 89 f8             	mov    %rdi,%rax
  4101da:	48 c1 e8 03          	shr    $0x3,%rax
  4101de:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4101e5:	48 89 f8             	mov    %rdi,%rax
  4101e8:	83 e0 07             	and    $0x7,%eax
  4101eb:	83 c0 03             	add    $0x3,%eax
  4101ee:	38 d0                	cmp    %dl,%al
  4101f0:	7c 04                	jl     4101f6 <send_authenticate+0xe6>
  4101f2:	84 d2                	test   %dl,%dl
  4101f4:	75 16                	jne    41020c <send_authenticate+0xfc>
  4101f6:	c7 83 2c 02 00 00 01 	movl   $0x1,0x22c(%rbx)
  4101fd:	00 00 00 
    }
  410200:	48 83 c4 08          	add    $0x8,%rsp
  410204:	5b                   	pop    %rbx
  410205:	5d                   	pop    %rbp
  410206:	c3                   	retq   
    if ( hc->method == METHOD_POST )
  410207:	e8 c4 2b ff ff       	callq  402dd0 <__asan_report_load4@plt>
	hc->should_linger = 1;
  41020c:	e8 df 29 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    httpd_send_err( hc, 401, err401title, header, err401form, hc->encodedurl );
  410211:	e8 3a 30 ff ff       	callq  403250 <__asan_report_load8@plt>
  410216:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41021d:	00 00 00 

0000000000410220 <httpd_method_str>:
    switch ( method )
  410220:	83 ef 01             	sub    $0x1,%edi
  410223:	83 ff 02             	cmp    $0x2,%edi
  410226:	77 28                	ja     410250 <httpd_method_str+0x30>
  410228:	48 8d 04 fd 80 6c 42 	lea    0x426c80(,%rdi,8),%rax
  41022f:	00 
  410230:	48 89 c2             	mov    %rax,%rdx
  410233:	48 c1 ea 03          	shr    $0x3,%rdx
  410237:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41023e:	75 16                	jne    410256 <httpd_method_str+0x36>
  410240:	48 8b 04 fd 80 6c 42 	mov    0x426c80(,%rdi,8),%rax
  410247:	00 
  410248:	c3                   	retq   
  410249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  410250:	b8 40 3f 42 00       	mov    $0x423f40,%eax
    }
  410255:	c3                   	retq   
    {
  410256:	52                   	push   %rdx
  410257:	48 89 c7             	mov    %rax,%rdi
  41025a:	e8 f1 2f ff ff       	callq  403250 <__asan_report_load8@plt>
  41025f:	90                   	nop

0000000000410260 <httpd_get_conn>:
    {
  410260:	41 57                	push   %r15
  410262:	41 89 f7             	mov    %esi,%r15d
  410265:	41 56                	push   %r14
  410267:	49 89 d6             	mov    %rdx,%r14
  41026a:	41 55                	push   %r13
  41026c:	41 54                	push   %r12
  41026e:	55                   	push   %rbp
  41026f:	53                   	push   %rbx
  410270:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
  410277:	8b 15 83 10 23 00    	mov    0x231083(%rip),%edx        # 641300 <__asan_option_detect_stack_use_after_return>
  41027d:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  410282:	48 8d 5c 24 60       	lea    0x60(%rsp),%rbx
  410287:	85 d2                	test   %edx,%edx
  410289:	0f 85 b6 0e 00 00    	jne    411145 <httpd_get_conn+0xee5>
  41028f:	48 89 dd             	mov    %rbx,%rbp
    if ( ! hc->initialized )
  410292:	4c 89 f0             	mov    %r14,%rax
    {
  410295:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
  41029c:	4c 8d a3 00 01 00 00 	lea    0x100(%rbx),%r12
  4102a3:	48 c1 ed 03          	shr    $0x3,%rbp
    if ( ! hc->initialized )
  4102a7:	48 c1 e8 03          	shr    $0x3,%rax
    {
  4102ab:	48 c7 43 08 3a 21 42 	movq   $0x42213a,0x8(%rbx)
  4102b2:	00 
  4102b3:	48 c7 43 10 60 02 41 	movq   $0x410260,0x10(%rbx)
  4102ba:	00 
  4102bb:	c7 85 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbp)
  4102c2:	f1 f1 f1 
  4102c5:	c7 85 04 80 ff 7f 04 	movl   $0xf2f2f204,0x7fff8004(%rbp)
  4102cc:	f2 f2 f2 
  4102cf:	c7 85 08 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8008(%rbp)
  4102d6:	f2 f2 f2 
  4102d9:	c7 85 1c 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff801c(%rbp)
  4102e0:	f3 f3 f3 
    if ( ! hc->initialized )
  4102e3:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4102ea:	84 c0                	test   %al,%al
  4102ec:	74 08                	je     4102f6 <httpd_get_conn+0x96>
  4102ee:	3c 03                	cmp    $0x3,%al
  4102f0:	0f 8e b6 0d 00 00    	jle    4110ac <httpd_get_conn+0xe4c>
  4102f6:	41 8b 06             	mov    (%r14),%eax
  4102f9:	85 c0                	test   %eax,%eax
  4102fb:	0f 84 5f 0a 00 00    	je     410d60 <httpd_get_conn+0xb00>
    sz = sizeof(sa);
  410301:	49 8d 94 24 20 ff ff 	lea    -0xe0(%r12),%rdx
  410308:	ff 
  410309:	48 89 d0             	mov    %rdx,%rax
  41030c:	48 c1 e8 03          	shr    $0x3,%rax
  410310:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  410317:	84 c0                	test   %al,%al
  410319:	74 08                	je     410323 <httpd_get_conn+0xc3>
  41031b:	3c 03                	cmp    $0x3,%al
  41031d:	0f 8e 81 0d 00 00    	jle    4110a4 <httpd_get_conn+0xe44>
    hc->conn_fd = accept( listen_fd, &sa.sa, &sz );
  410323:	4d 8d ac 24 60 ff ff 	lea    -0xa0(%r12),%r13
  41032a:	ff 
  41032b:	44 89 ff             	mov    %r15d,%edi
    sz = sizeof(sa);
  41032e:	41 c7 84 24 20 ff ff 	movl   $0x80,-0xe0(%r12)
  410335:	ff 80 00 00 00 
    hc->conn_fd = accept( listen_fd, &sa.sa, &sz );
  41033a:	4d 8d be c0 02 00 00 	lea    0x2c0(%r14),%r15
  410341:	4c 89 ee             	mov    %r13,%rsi
  410344:	e8 e7 30 ff ff       	callq  403430 <accept@plt>
  410349:	41 89 c0             	mov    %eax,%r8d
  41034c:	4c 89 f8             	mov    %r15,%rax
  41034f:	48 c1 e8 03          	shr    $0x3,%rax
  410353:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41035a:	84 c0                	test   %al,%al
  41035c:	74 08                	je     410366 <httpd_get_conn+0x106>
  41035e:	3c 03                	cmp    $0x3,%al
  410360:	0f 8e 36 0d 00 00    	jle    41109c <httpd_get_conn+0xe3c>
  410366:	45 89 86 c0 02 00 00 	mov    %r8d,0x2c0(%r14)
    if ( hc->conn_fd < 0 )
  41036d:	45 85 c0             	test   %r8d,%r8d
  410370:	0f 88 9a 09 00 00    	js     410d10 <httpd_get_conn+0xab0>
    if ( ! sockaddr_check( &sa ) )
  410376:	4c 89 e8             	mov    %r13,%rax
  410379:	48 c1 e8 03          	shr    $0x3,%rax
  41037d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  410384:	84 c0                	test   %al,%al
  410386:	74 08                	je     410390 <httpd_get_conn+0x130>
  410388:	3c 01                	cmp    $0x1,%al
  41038a:	0f 8e 24 0d 00 00    	jle    4110b4 <httpd_get_conn+0xe54>
  410390:	41 0f b7 bc 24 60 ff 	movzwl -0xa0(%r12),%edi
  410397:	ff ff 
  410399:	e8 d2 b5 ff ff       	callq  40b970 <sockaddr_check.isra.0>
  41039e:	85 c0                	test   %eax,%eax
  4103a0:	0f 84 f2 08 00 00    	je     410c98 <httpd_get_conn+0xa38>
    (void) fcntl( hc->conn_fd, F_SETFD, 1 );
  4103a6:	44 89 c7             	mov    %r8d,%edi
  4103a9:	31 c0                	xor    %eax,%eax
  4103ab:	ba 01 00 00 00       	mov    $0x1,%edx
  4103b0:	be 02 00 00 00       	mov    $0x2,%esi
  4103b5:	e8 46 2a ff ff       	callq  402e00 <fcntl@plt>
    hc->hs = hs;
  4103ba:	49 8d 7e 08          	lea    0x8(%r14),%rdi
  4103be:	48 89 f8             	mov    %rdi,%rax
  4103c1:	48 c1 e8 03          	shr    $0x3,%rax
  4103c5:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4103cc:	0f 85 c8 0e 00 00    	jne    41129a <httpd_get_conn+0x103a>
  4103d2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    (void) memset( &hc->client_addr, 0, sizeof(hc->client_addr) );
  4103d7:	4d 8d 7e 10          	lea    0x10(%r14),%r15
  4103db:	ba 80 00 00 00       	mov    $0x80,%edx
  4103e0:	31 f6                	xor    %esi,%esi
  4103e2:	4c 89 ff             	mov    %r15,%rdi
    hc->hs = hs;
  4103e5:	49 89 46 08          	mov    %rax,0x8(%r14)
    (void) memset( &hc->client_addr, 0, sizeof(hc->client_addr) );
  4103e9:	e8 c2 2a ff ff       	callq  402eb0 <memset@plt>
    (void) memmove( &hc->client_addr, &sa, sockaddr_len( &sa ) );
  4103ee:	4c 89 e8             	mov    %r13,%rax
  4103f1:	48 c1 e8 03          	shr    $0x3,%rax
  4103f5:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4103fc:	84 c0                	test   %al,%al
  4103fe:	74 08                	je     410408 <httpd_get_conn+0x1a8>
  410400:	3c 01                	cmp    $0x1,%al
  410402:	0f 8e b4 0c 00 00    	jle    4110bc <httpd_get_conn+0xe5c>
  410408:	41 0f b7 bc 24 60 ff 	movzwl -0xa0(%r12),%edi
  41040f:	ff ff 
  410411:	e8 7a b5 ff ff       	callq  40b990 <sockaddr_len.isra.1>
  410416:	4c 89 ff             	mov    %r15,%rdi
  410419:	4c 89 ee             	mov    %r13,%rsi
  41041c:	48 89 c2             	mov    %rax,%rdx
  41041f:	e8 1c 2d ff ff       	callq  403140 <memcpy@plt>
    hc->read_idx = 0;
  410424:	49 8d be a0 00 00 00 	lea    0xa0(%r14),%rdi
  41042b:	48 89 f8             	mov    %rdi,%rax
  41042e:	48 c1 e8 03          	shr    $0x3,%rax
  410432:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410439:	0f 85 71 0d 00 00    	jne    4111b0 <httpd_get_conn+0xf50>
    hc->checked_idx = 0;
  41043f:	49 8d be a8 00 00 00 	lea    0xa8(%r14),%rdi
    hc->read_idx = 0;
  410446:	49 c7 86 a0 00 00 00 	movq   $0x0,0xa0(%r14)
  41044d:	00 00 00 00 
    hc->checked_idx = 0;
  410451:	48 89 f8             	mov    %rdi,%rax
  410454:	48 c1 e8 03          	shr    $0x3,%rax
  410458:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41045f:	0f 85 50 0d 00 00    	jne    4111b5 <httpd_get_conn+0xf55>
    hc->checked_state = CHST_FIRSTWORD;
  410465:	49 8d be b0 00 00 00 	lea    0xb0(%r14),%rdi
    hc->checked_idx = 0;
  41046c:	49 c7 86 a8 00 00 00 	movq   $0x0,0xa8(%r14)
  410473:	00 00 00 00 
    hc->checked_state = CHST_FIRSTWORD;
  410477:	48 89 f8             	mov    %rdi,%rax
  41047a:	48 c1 e8 03          	shr    $0x3,%rax
  41047e:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  410485:	84 c0                	test   %al,%al
  410487:	74 08                	je     410491 <httpd_get_conn+0x231>
  410489:	3c 03                	cmp    $0x3,%al
  41048b:	0f 8e 33 0c 00 00    	jle    4110c4 <httpd_get_conn+0xe64>
    hc->method = METHOD_UNKNOWN;
  410491:	49 8d be b4 00 00 00 	lea    0xb4(%r14),%rdi
    hc->checked_state = CHST_FIRSTWORD;
  410498:	41 c7 86 b0 00 00 00 	movl   $0x0,0xb0(%r14)
  41049f:	00 00 00 00 
    hc->method = METHOD_UNKNOWN;
  4104a3:	48 89 f8             	mov    %rdi,%rax
  4104a6:	48 c1 e8 03          	shr    $0x3,%rax
  4104aa:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4104b1:	48 89 f8             	mov    %rdi,%rax
  4104b4:	83 e0 07             	and    $0x7,%eax
  4104b7:	83 c0 03             	add    $0x3,%eax
  4104ba:	38 d0                	cmp    %dl,%al
  4104bc:	7c 08                	jl     4104c6 <httpd_get_conn+0x266>
  4104be:	84 d2                	test   %dl,%dl
  4104c0:	0f 85 03 0c 00 00    	jne    4110c9 <httpd_get_conn+0xe69>
    hc->status = 0;
  4104c6:	49 8d be b8 00 00 00 	lea    0xb8(%r14),%rdi
    hc->method = METHOD_UNKNOWN;
  4104cd:	41 c7 86 b4 00 00 00 	movl   $0x0,0xb4(%r14)
  4104d4:	00 00 00 00 
    hc->status = 0;
  4104d8:	48 89 f8             	mov    %rdi,%rax
  4104db:	48 c1 e8 03          	shr    $0x3,%rax
  4104df:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4104e6:	84 c0                	test   %al,%al
  4104e8:	74 08                	je     4104f2 <httpd_get_conn+0x292>
  4104ea:	3c 03                	cmp    $0x3,%al
  4104ec:	0f 8e dc 0b 00 00    	jle    4110ce <httpd_get_conn+0xe6e>
    hc->bytes_to_send = 0;
  4104f2:	49 8d be c0 00 00 00 	lea    0xc0(%r14),%rdi
    hc->status = 0;
  4104f9:	41 c7 86 b8 00 00 00 	movl   $0x0,0xb8(%r14)
  410500:	00 00 00 00 
    hc->bytes_to_send = 0;
  410504:	48 89 f8             	mov    %rdi,%rax
  410507:	48 c1 e8 03          	shr    $0x3,%rax
  41050b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410512:	0f 85 87 0d 00 00    	jne    41129f <httpd_get_conn+0x103f>
    hc->bytes_sent = 0;
  410518:	49 8d be c8 00 00 00 	lea    0xc8(%r14),%rdi
    hc->bytes_to_send = 0;
  41051f:	49 c7 86 c0 00 00 00 	movq   $0x0,0xc0(%r14)
  410526:	00 00 00 00 
    hc->bytes_sent = 0;
  41052a:	48 89 f8             	mov    %rdi,%rax
  41052d:	48 c1 e8 03          	shr    $0x3,%rax
  410531:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410538:	0f 85 4e 0c 00 00    	jne    41118c <httpd_get_conn+0xf2c>
    hc->encodedurl = "";
  41053e:	49 8d be d0 00 00 00 	lea    0xd0(%r14),%rdi
    hc->bytes_sent = 0;
  410545:	49 c7 86 c8 00 00 00 	movq   $0x0,0xc8(%r14)
  41054c:	00 00 00 00 
    hc->encodedurl = "";
  410550:	48 89 f8             	mov    %rdi,%rax
  410553:	48 c1 e8 03          	shr    $0x3,%rax
  410557:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41055e:	0f 85 2d 0c 00 00    	jne    411191 <httpd_get_conn+0xf31>
    hc->decodedurl[0] = '\0';
  410564:	49 8d be d8 00 00 00 	lea    0xd8(%r14),%rdi
    hc->encodedurl = "";
  41056b:	49 c7 86 d0 00 00 00 	movq   $0x423860,0xd0(%r14)
  410572:	60 38 42 00 
    hc->decodedurl[0] = '\0';
  410576:	48 89 f8             	mov    %rdi,%rax
  410579:	48 c1 e8 03          	shr    $0x3,%rax
  41057d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410584:	0f 85 0c 0c 00 00    	jne    411196 <httpd_get_conn+0xf36>
  41058a:	49 8b be d8 00 00 00 	mov    0xd8(%r14),%rdi
  410591:	48 89 f8             	mov    %rdi,%rax
  410594:	48 89 fa             	mov    %rdi,%rdx
  410597:	48 c1 e8 03          	shr    $0x3,%rax
  41059b:	83 e2 07             	and    $0x7,%edx
  41059e:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4105a5:	38 d0                	cmp    %dl,%al
  4105a7:	7f 08                	jg     4105b1 <httpd_get_conn+0x351>
  4105a9:	84 c0                	test   %al,%al
  4105ab:	0f 85 22 0b 00 00    	jne    4110d3 <httpd_get_conn+0xe73>
  4105b1:	c6 07 00             	movb   $0x0,(%rdi)
    hc->protocol = "UNKNOWN";
  4105b4:	49 8d be e0 00 00 00 	lea    0xe0(%r14),%rdi
  4105bb:	48 89 f8             	mov    %rdi,%rax
  4105be:	48 c1 e8 03          	shr    $0x3,%rax
  4105c2:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4105c9:	0f 85 b3 0b 00 00    	jne    411182 <httpd_get_conn+0xf22>
    hc->origfilename[0] = '\0';
  4105cf:	49 8d be e8 00 00 00 	lea    0xe8(%r14),%rdi
    hc->protocol = "UNKNOWN";
  4105d6:	49 c7 86 e0 00 00 00 	movq   $0x423f40,0xe0(%r14)
  4105dd:	40 3f 42 00 
    hc->origfilename[0] = '\0';
  4105e1:	48 89 f8             	mov    %rdi,%rax
  4105e4:	48 c1 e8 03          	shr    $0x3,%rax
  4105e8:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4105ef:	0f 85 92 0b 00 00    	jne    411187 <httpd_get_conn+0xf27>
  4105f5:	49 8b be e8 00 00 00 	mov    0xe8(%r14),%rdi
  4105fc:	48 89 f8             	mov    %rdi,%rax
  4105ff:	48 89 fa             	mov    %rdi,%rdx
  410602:	48 c1 e8 03          	shr    $0x3,%rax
  410606:	83 e2 07             	and    $0x7,%edx
  410609:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  410610:	38 d0                	cmp    %dl,%al
  410612:	7f 08                	jg     41061c <httpd_get_conn+0x3bc>
  410614:	84 c0                	test   %al,%al
  410616:	0f 85 bc 0a 00 00    	jne    4110d8 <httpd_get_conn+0xe78>
  41061c:	c6 07 00             	movb   $0x0,(%rdi)
    hc->expnfilename[0] = '\0';
  41061f:	49 8d be f0 00 00 00 	lea    0xf0(%r14),%rdi
  410626:	48 89 f8             	mov    %rdi,%rax
  410629:	48 c1 e8 03          	shr    $0x3,%rax
  41062d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410634:	0f 85 61 0b 00 00    	jne    41119b <httpd_get_conn+0xf3b>
  41063a:	49 8b be f0 00 00 00 	mov    0xf0(%r14),%rdi
  410641:	48 89 f8             	mov    %rdi,%rax
  410644:	48 89 fa             	mov    %rdi,%rdx
  410647:	48 c1 e8 03          	shr    $0x3,%rax
  41064b:	83 e2 07             	and    $0x7,%edx
  41064e:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  410655:	38 d0                	cmp    %dl,%al
  410657:	7f 08                	jg     410661 <httpd_get_conn+0x401>
  410659:	84 c0                	test   %al,%al
  41065b:	0f 85 7c 0a 00 00    	jne    4110dd <httpd_get_conn+0xe7d>
  410661:	c6 07 00             	movb   $0x0,(%rdi)
    hc->encodings[0] = '\0';
  410664:	49 8d be f8 00 00 00 	lea    0xf8(%r14),%rdi
  41066b:	48 89 f8             	mov    %rdi,%rax
  41066e:	48 c1 e8 03          	shr    $0x3,%rax
  410672:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410679:	0f 85 f1 0b 00 00    	jne    411270 <httpd_get_conn+0x1010>
  41067f:	49 8b be f8 00 00 00 	mov    0xf8(%r14),%rdi
  410686:	48 89 f8             	mov    %rdi,%rax
  410689:	48 89 fa             	mov    %rdi,%rdx
  41068c:	48 c1 e8 03          	shr    $0x3,%rax
  410690:	83 e2 07             	and    $0x7,%edx
  410693:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41069a:	38 d0                	cmp    %dl,%al
  41069c:	7f 08                	jg     4106a6 <httpd_get_conn+0x446>
  41069e:	84 c0                	test   %al,%al
  4106a0:	0f 85 3c 0a 00 00    	jne    4110e2 <httpd_get_conn+0xe82>
  4106a6:	c6 07 00             	movb   $0x0,(%rdi)
    hc->pathinfo[0] = '\0';
  4106a9:	49 8d be 00 01 00 00 	lea    0x100(%r14),%rdi
  4106b0:	48 89 f8             	mov    %rdi,%rax
  4106b3:	48 c1 e8 03          	shr    $0x3,%rax
  4106b7:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4106be:	0f 85 b1 0b 00 00    	jne    411275 <httpd_get_conn+0x1015>
  4106c4:	49 8b be 00 01 00 00 	mov    0x100(%r14),%rdi
  4106cb:	48 89 f8             	mov    %rdi,%rax
  4106ce:	48 89 fa             	mov    %rdi,%rdx
  4106d1:	48 c1 e8 03          	shr    $0x3,%rax
  4106d5:	83 e2 07             	and    $0x7,%edx
  4106d8:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4106df:	38 d0                	cmp    %dl,%al
  4106e1:	7f 08                	jg     4106eb <httpd_get_conn+0x48b>
  4106e3:	84 c0                	test   %al,%al
  4106e5:	0f 85 fc 09 00 00    	jne    4110e7 <httpd_get_conn+0xe87>
  4106eb:	c6 07 00             	movb   $0x0,(%rdi)
    hc->query[0] = '\0';
  4106ee:	49 8d be 08 01 00 00 	lea    0x108(%r14),%rdi
  4106f5:	48 89 f8             	mov    %rdi,%rax
  4106f8:	48 c1 e8 03          	shr    $0x3,%rax
  4106fc:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410703:	0f 85 5d 0b 00 00    	jne    411266 <httpd_get_conn+0x1006>
  410709:	49 8b be 08 01 00 00 	mov    0x108(%r14),%rdi
  410710:	48 89 f8             	mov    %rdi,%rax
  410713:	48 89 fa             	mov    %rdi,%rdx
  410716:	48 c1 e8 03          	shr    $0x3,%rax
  41071a:	83 e2 07             	and    $0x7,%edx
  41071d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  410724:	38 d0                	cmp    %dl,%al
  410726:	7f 08                	jg     410730 <httpd_get_conn+0x4d0>
  410728:	84 c0                	test   %al,%al
  41072a:	0f 85 bc 09 00 00    	jne    4110ec <httpd_get_conn+0xe8c>
  410730:	c6 07 00             	movb   $0x0,(%rdi)
    hc->referer = "";
  410733:	49 8d be 10 01 00 00 	lea    0x110(%r14),%rdi
  41073a:	48 89 f8             	mov    %rdi,%rax
  41073d:	48 c1 e8 03          	shr    $0x3,%rax
  410741:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410748:	0f 85 1d 0b 00 00    	jne    41126b <httpd_get_conn+0x100b>
    hc->useragent = "";
  41074e:	49 8d be 18 01 00 00 	lea    0x118(%r14),%rdi
    hc->referer = "";
  410755:	49 c7 86 10 01 00 00 	movq   $0x423860,0x110(%r14)
  41075c:	60 38 42 00 
    hc->useragent = "";
  410760:	48 89 f8             	mov    %rdi,%rax
  410763:	48 c1 e8 03          	shr    $0x3,%rax
  410767:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41076e:	0f 85 c4 0a 00 00    	jne    411238 <httpd_get_conn+0xfd8>
    hc->accept[0] = '\0';
  410774:	49 8d be 20 01 00 00 	lea    0x120(%r14),%rdi
    hc->useragent = "";
  41077b:	49 c7 86 18 01 00 00 	movq   $0x423860,0x118(%r14)
  410782:	60 38 42 00 
    hc->accept[0] = '\0';
  410786:	48 89 f8             	mov    %rdi,%rax
  410789:	48 c1 e8 03          	shr    $0x3,%rax
  41078d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410794:	0f 85 a3 0a 00 00    	jne    41123d <httpd_get_conn+0xfdd>
  41079a:	49 8b be 20 01 00 00 	mov    0x120(%r14),%rdi
  4107a1:	48 89 f8             	mov    %rdi,%rax
  4107a4:	48 89 fa             	mov    %rdi,%rdx
  4107a7:	48 c1 e8 03          	shr    $0x3,%rax
  4107ab:	83 e2 07             	and    $0x7,%edx
  4107ae:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4107b5:	38 d0                	cmp    %dl,%al
  4107b7:	7f 08                	jg     4107c1 <httpd_get_conn+0x561>
  4107b9:	84 c0                	test   %al,%al
  4107bb:	0f 85 30 09 00 00    	jne    4110f1 <httpd_get_conn+0xe91>
  4107c1:	c6 07 00             	movb   $0x0,(%rdi)
    hc->accepte[0] = '\0';
  4107c4:	49 8d be 28 01 00 00 	lea    0x128(%r14),%rdi
  4107cb:	48 89 f8             	mov    %rdi,%rax
  4107ce:	48 c1 e8 03          	shr    $0x3,%rax
  4107d2:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4107d9:	0f 85 09 0a 00 00    	jne    4111e8 <httpd_get_conn+0xf88>
  4107df:	49 8b be 28 01 00 00 	mov    0x128(%r14),%rdi
  4107e6:	48 89 f8             	mov    %rdi,%rax
  4107e9:	48 89 fa             	mov    %rdi,%rdx
  4107ec:	48 c1 e8 03          	shr    $0x3,%rax
  4107f0:	83 e2 07             	and    $0x7,%edx
  4107f3:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4107fa:	38 d0                	cmp    %dl,%al
  4107fc:	7f 08                	jg     410806 <httpd_get_conn+0x5a6>
  4107fe:	84 c0                	test   %al,%al
  410800:	0f 85 f0 08 00 00    	jne    4110f6 <httpd_get_conn+0xe96>
  410806:	c6 07 00             	movb   $0x0,(%rdi)
    hc->acceptl = "";
  410809:	49 8d be 30 01 00 00 	lea    0x130(%r14),%rdi
  410810:	48 89 f8             	mov    %rdi,%rax
  410813:	48 c1 e8 03          	shr    $0x3,%rax
  410817:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41081e:	0f 85 c9 09 00 00    	jne    4111ed <httpd_get_conn+0xf8d>
    hc->cookie = "";
  410824:	49 8d be 38 01 00 00 	lea    0x138(%r14),%rdi
    hc->acceptl = "";
  41082b:	49 c7 86 30 01 00 00 	movq   $0x423860,0x130(%r14)
  410832:	60 38 42 00 
    hc->cookie = "";
  410836:	48 89 f8             	mov    %rdi,%rax
  410839:	48 c1 e8 03          	shr    $0x3,%rax
  41083d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410844:	0f 85 da 09 00 00    	jne    411224 <httpd_get_conn+0xfc4>
    hc->contenttype = "";
  41084a:	49 8d be 40 01 00 00 	lea    0x140(%r14),%rdi
    hc->cookie = "";
  410851:	49 c7 86 38 01 00 00 	movq   $0x423860,0x138(%r14)
  410858:	60 38 42 00 
    hc->contenttype = "";
  41085c:	48 89 f8             	mov    %rdi,%rax
  41085f:	48 c1 e8 03          	shr    $0x3,%rax
  410863:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41086a:	0f 85 b9 09 00 00    	jne    411229 <httpd_get_conn+0xfc9>
    hc->reqhost[0] = '\0';
  410870:	49 8d be 48 01 00 00 	lea    0x148(%r14),%rdi
    hc->contenttype = "";
  410877:	49 c7 86 40 01 00 00 	movq   $0x423860,0x140(%r14)
  41087e:	60 38 42 00 
    hc->reqhost[0] = '\0';
  410882:	48 89 f8             	mov    %rdi,%rax
  410885:	48 c1 e8 03          	shr    $0x3,%rax
  410889:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410890:	0f 85 c6 09 00 00    	jne    41125c <httpd_get_conn+0xffc>
  410896:	49 8b be 48 01 00 00 	mov    0x148(%r14),%rdi
  41089d:	48 89 f8             	mov    %rdi,%rax
  4108a0:	48 89 fa             	mov    %rdi,%rdx
  4108a3:	48 c1 e8 03          	shr    $0x3,%rax
  4108a7:	83 e2 07             	and    $0x7,%edx
  4108aa:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4108b1:	38 d0                	cmp    %dl,%al
  4108b3:	7f 08                	jg     4108bd <httpd_get_conn+0x65d>
  4108b5:	84 c0                	test   %al,%al
  4108b7:	0f 85 46 08 00 00    	jne    411103 <httpd_get_conn+0xea3>
  4108bd:	c6 07 00             	movb   $0x0,(%rdi)
    hc->hdrhost = "";
  4108c0:	49 8d be 50 01 00 00 	lea    0x150(%r14),%rdi
  4108c7:	48 89 f8             	mov    %rdi,%rax
  4108ca:	48 c1 e8 03          	shr    $0x3,%rax
  4108ce:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4108d5:	0f 85 77 09 00 00    	jne    411252 <httpd_get_conn+0xff2>
    hc->hostdir[0] = '\0';
  4108db:	49 8d be 58 01 00 00 	lea    0x158(%r14),%rdi
    hc->hdrhost = "";
  4108e2:	49 c7 86 50 01 00 00 	movq   $0x423860,0x150(%r14)
  4108e9:	60 38 42 00 
    hc->hostdir[0] = '\0';
  4108ed:	48 89 f8             	mov    %rdi,%rax
  4108f0:	48 c1 e8 03          	shr    $0x3,%rax
  4108f4:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4108fb:	0f 85 56 09 00 00    	jne    411257 <httpd_get_conn+0xff7>
  410901:	49 8b be 58 01 00 00 	mov    0x158(%r14),%rdi
  410908:	48 89 f8             	mov    %rdi,%rax
  41090b:	48 89 fa             	mov    %rdi,%rdx
  41090e:	48 c1 e8 03          	shr    $0x3,%rax
  410912:	83 e2 07             	and    $0x7,%edx
  410915:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41091c:	38 d0                	cmp    %dl,%al
  41091e:	7f 08                	jg     410928 <httpd_get_conn+0x6c8>
  410920:	84 c0                	test   %al,%al
  410922:	0f 85 e0 07 00 00    	jne    411108 <httpd_get_conn+0xea8>
  410928:	c6 07 00             	movb   $0x0,(%rdi)
    hc->authorization = "";
  41092b:	49 8d be 60 01 00 00 	lea    0x160(%r14),%rdi
  410932:	48 89 f8             	mov    %rdi,%rax
  410935:	48 c1 e8 03          	shr    $0x3,%rax
  410939:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410940:	0f 85 1b 09 00 00    	jne    411261 <httpd_get_conn+0x1001>
    hc->remoteuser[0] = '\0';
  410946:	49 8d be 68 01 00 00 	lea    0x168(%r14),%rdi
    hc->authorization = "";
  41094d:	49 c7 86 60 01 00 00 	movq   $0x423860,0x160(%r14)
  410954:	60 38 42 00 
    hc->remoteuser[0] = '\0';
  410958:	48 89 f8             	mov    %rdi,%rax
  41095b:	48 c1 e8 03          	shr    $0x3,%rax
  41095f:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410966:	0f 85 c2 08 00 00    	jne    41122e <httpd_get_conn+0xfce>
  41096c:	49 8b be 68 01 00 00 	mov    0x168(%r14),%rdi
  410973:	48 89 f8             	mov    %rdi,%rax
  410976:	48 89 fa             	mov    %rdi,%rdx
  410979:	48 c1 e8 03          	shr    $0x3,%rax
  41097d:	83 e2 07             	and    $0x7,%edx
  410980:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  410987:	38 d0                	cmp    %dl,%al
  410989:	7f 08                	jg     410993 <httpd_get_conn+0x733>
  41098b:	84 c0                	test   %al,%al
  41098d:	0f 85 7a 07 00 00    	jne    41110d <httpd_get_conn+0xead>
  410993:	c6 07 00             	movb   $0x0,(%rdi)
    hc->response[0] = '\0';
  410996:	49 8d be 70 01 00 00 	lea    0x170(%r14),%rdi
  41099d:	48 89 f8             	mov    %rdi,%rax
  4109a0:	48 c1 e8 03          	shr    $0x3,%rax
  4109a4:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4109ab:	0f 85 82 08 00 00    	jne    411233 <httpd_get_conn+0xfd3>
  4109b1:	49 8b be 70 01 00 00 	mov    0x170(%r14),%rdi
  4109b8:	48 89 f8             	mov    %rdi,%rax
  4109bb:	48 89 fa             	mov    %rdi,%rdx
  4109be:	48 c1 e8 03          	shr    $0x3,%rax
  4109c2:	83 e2 07             	and    $0x7,%edx
  4109c5:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4109cc:	38 d0                	cmp    %dl,%al
  4109ce:	7f 08                	jg     4109d8 <httpd_get_conn+0x778>
  4109d0:	84 c0                	test   %al,%al
  4109d2:	0f 85 3a 07 00 00    	jne    411112 <httpd_get_conn+0xeb2>
  4109d8:	c6 07 00             	movb   $0x0,(%rdi)
    hc->responselen = 0;
  4109db:	49 8d be d8 01 00 00 	lea    0x1d8(%r14),%rdi
  4109e2:	48 89 f8             	mov    %rdi,%rax
  4109e5:	48 c1 e8 03          	shr    $0x3,%rax
  4109e9:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4109f0:	0f 85 d8 07 00 00    	jne    4111ce <httpd_get_conn+0xf6e>
    hc->if_modified_since = (time_t) -1;
  4109f6:	49 8d be e0 01 00 00 	lea    0x1e0(%r14),%rdi
    hc->responselen = 0;
  4109fd:	49 c7 86 d8 01 00 00 	movq   $0x0,0x1d8(%r14)
  410a04:	00 00 00 00 
    hc->if_modified_since = (time_t) -1;
  410a08:	48 89 f8             	mov    %rdi,%rax
  410a0b:	48 c1 e8 03          	shr    $0x3,%rax
  410a0f:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410a16:	0f 85 b7 07 00 00    	jne    4111d3 <httpd_get_conn+0xf73>
    hc->range_if = (time_t) -1;
  410a1c:	49 8d be e8 01 00 00 	lea    0x1e8(%r14),%rdi
    hc->if_modified_since = (time_t) -1;
  410a23:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    hc->range_if = (time_t) -1;
  410a2a:	48 89 fa             	mov    %rdi,%rdx
    hc->if_modified_since = (time_t) -1;
  410a2d:	49 89 86 e0 01 00 00 	mov    %rax,0x1e0(%r14)
    hc->range_if = (time_t) -1;
  410a34:	48 c1 ea 03          	shr    $0x3,%rdx
  410a38:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  410a3f:	0f 85 75 07 00 00    	jne    4111ba <httpd_get_conn+0xf5a>
    hc->contentlength = -1;
  410a45:	49 8d be f0 01 00 00 	lea    0x1f0(%r14),%rdi
    hc->range_if = (time_t) -1;
  410a4c:	49 89 86 e8 01 00 00 	mov    %rax,0x1e8(%r14)
    hc->contentlength = -1;
  410a53:	48 89 fa             	mov    %rdi,%rdx
  410a56:	48 c1 ea 03          	shr    $0x3,%rdx
  410a5a:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  410a61:	0f 85 58 07 00 00    	jne    4111bf <httpd_get_conn+0xf5f>
    hc->type = "";
  410a67:	49 8d be f8 01 00 00 	lea    0x1f8(%r14),%rdi
    hc->contentlength = -1;
  410a6e:	49 89 86 f0 01 00 00 	mov    %rax,0x1f0(%r14)
    hc->type = "";
  410a75:	48 89 f8             	mov    %rdi,%rax
  410a78:	48 c1 e8 03          	shr    $0x3,%rax
  410a7c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410a83:	0f 85 3b 07 00 00    	jne    4111c4 <httpd_get_conn+0xf64>
    hc->hostname = (char*) 0;
  410a89:	49 8d be 00 02 00 00 	lea    0x200(%r14),%rdi
    hc->type = "";
  410a90:	49 c7 86 f8 01 00 00 	movq   $0x423860,0x1f8(%r14)
  410a97:	60 38 42 00 
    hc->hostname = (char*) 0;
  410a9b:	48 89 f8             	mov    %rdi,%rax
  410a9e:	48 c1 e8 03          	shr    $0x3,%rax
  410aa2:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410aa9:	0f 85 1a 07 00 00    	jne    4111c9 <httpd_get_conn+0xf69>
    hc->mime_flag = 1;
  410aaf:	49 8d be 08 02 00 00 	lea    0x208(%r14),%rdi
    hc->hostname = (char*) 0;
  410ab6:	49 c7 86 00 02 00 00 	movq   $0x0,0x200(%r14)
  410abd:	00 00 00 00 
    hc->mime_flag = 1;
  410ac1:	48 89 f8             	mov    %rdi,%rax
  410ac4:	48 c1 e8 03          	shr    $0x3,%rax
  410ac8:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  410acf:	84 c0                	test   %al,%al
  410ad1:	74 08                	je     410adb <httpd_get_conn+0x87b>
  410ad3:	3c 03                	cmp    $0x3,%al
  410ad5:	0f 8e 3c 06 00 00    	jle    411117 <httpd_get_conn+0xeb7>
    hc->one_one = 0;
  410adb:	49 8d be 0c 02 00 00 	lea    0x20c(%r14),%rdi
    hc->mime_flag = 1;
  410ae2:	41 c7 86 08 02 00 00 	movl   $0x1,0x208(%r14)
  410ae9:	01 00 00 00 
    hc->one_one = 0;
  410aed:	48 89 f8             	mov    %rdi,%rax
  410af0:	48 c1 e8 03          	shr    $0x3,%rax
  410af4:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  410afb:	48 89 f8             	mov    %rdi,%rax
  410afe:	83 e0 07             	and    $0x7,%eax
  410b01:	83 c0 03             	add    $0x3,%eax
  410b04:	38 d0                	cmp    %dl,%al
  410b06:	7c 08                	jl     410b10 <httpd_get_conn+0x8b0>
  410b08:	84 d2                	test   %dl,%dl
  410b0a:	0f 85 0c 06 00 00    	jne    41111c <httpd_get_conn+0xebc>
    hc->got_range = 0;
  410b10:	49 8d be 10 02 00 00 	lea    0x210(%r14),%rdi
    hc->one_one = 0;
  410b17:	41 c7 86 0c 02 00 00 	movl   $0x0,0x20c(%r14)
  410b1e:	00 00 00 00 
    hc->got_range = 0;
  410b22:	48 89 f8             	mov    %rdi,%rax
  410b25:	48 c1 e8 03          	shr    $0x3,%rax
  410b29:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  410b30:	84 c0                	test   %al,%al
  410b32:	74 08                	je     410b3c <httpd_get_conn+0x8dc>
  410b34:	3c 03                	cmp    $0x3,%al
  410b36:	0f 8e e5 05 00 00    	jle    411121 <httpd_get_conn+0xec1>
    hc->tildemapped = 0;
  410b3c:	49 8d be 14 02 00 00 	lea    0x214(%r14),%rdi
    hc->got_range = 0;
  410b43:	41 c7 86 10 02 00 00 	movl   $0x0,0x210(%r14)
  410b4a:	00 00 00 00 
    hc->tildemapped = 0;
  410b4e:	48 89 f8             	mov    %rdi,%rax
  410b51:	48 c1 e8 03          	shr    $0x3,%rax
  410b55:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  410b5c:	48 89 f8             	mov    %rdi,%rax
  410b5f:	83 e0 07             	and    $0x7,%eax
  410b62:	83 c0 03             	add    $0x3,%eax
  410b65:	38 d0                	cmp    %dl,%al
  410b67:	7c 08                	jl     410b71 <httpd_get_conn+0x911>
  410b69:	84 d2                	test   %dl,%dl
  410b6b:	0f 85 b5 05 00 00    	jne    411126 <httpd_get_conn+0xec6>
    hc->first_byte_index = 0;
  410b71:	49 8d be 18 02 00 00 	lea    0x218(%r14),%rdi
    hc->tildemapped = 0;
  410b78:	41 c7 86 14 02 00 00 	movl   $0x0,0x214(%r14)
  410b7f:	00 00 00 00 
    hc->first_byte_index = 0;
  410b83:	48 89 f8             	mov    %rdi,%rax
  410b86:	48 c1 e8 03          	shr    $0x3,%rax
  410b8a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410b91:	0f 85 83 06 00 00    	jne    41121a <httpd_get_conn+0xfba>
    hc->last_byte_index = -1;
  410b97:	49 8d be 20 02 00 00 	lea    0x220(%r14),%rdi
    hc->first_byte_index = 0;
  410b9e:	49 c7 86 18 02 00 00 	movq   $0x0,0x218(%r14)
  410ba5:	00 00 00 00 
    hc->last_byte_index = -1;
  410ba9:	48 89 f8             	mov    %rdi,%rax
  410bac:	48 c1 e8 03          	shr    $0x3,%rax
  410bb0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410bb7:	0f 85 62 06 00 00    	jne    41121f <httpd_get_conn+0xfbf>
    hc->keep_alive = 0;
  410bbd:	49 8d be 28 02 00 00 	lea    0x228(%r14),%rdi
    hc->last_byte_index = -1;
  410bc4:	49 c7 86 20 02 00 00 	movq   $0xffffffffffffffff,0x220(%r14)
  410bcb:	ff ff ff ff 
    hc->keep_alive = 0;
  410bcf:	48 89 f8             	mov    %rdi,%rax
  410bd2:	48 c1 e8 03          	shr    $0x3,%rax
  410bd6:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  410bdd:	84 c0                	test   %al,%al
  410bdf:	74 08                	je     410be9 <httpd_get_conn+0x989>
  410be1:	3c 03                	cmp    $0x3,%al
  410be3:	0f 8e 42 05 00 00    	jle    41112b <httpd_get_conn+0xecb>
    hc->should_linger = 0;
  410be9:	49 8d be 2c 02 00 00 	lea    0x22c(%r14),%rdi
    hc->keep_alive = 0;
  410bf0:	41 c7 86 28 02 00 00 	movl   $0x0,0x228(%r14)
  410bf7:	00 00 00 00 
    hc->should_linger = 0;
  410bfb:	48 89 f8             	mov    %rdi,%rax
  410bfe:	48 c1 e8 03          	shr    $0x3,%rax
  410c02:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  410c09:	48 89 f8             	mov    %rdi,%rax
  410c0c:	83 e0 07             	and    $0x7,%eax
  410c0f:	83 c0 03             	add    $0x3,%eax
  410c12:	38 d0                	cmp    %dl,%al
  410c14:	7c 08                	jl     410c1e <httpd_get_conn+0x9be>
  410c16:	84 d2                	test   %dl,%dl
  410c18:	0f 85 12 05 00 00    	jne    411130 <httpd_get_conn+0xed0>
    hc->file_address = (char*) 0;
  410c1e:	49 8d be c8 02 00 00 	lea    0x2c8(%r14),%rdi
    hc->should_linger = 0;
  410c25:	41 c7 86 2c 02 00 00 	movl   $0x0,0x22c(%r14)
  410c2c:	00 00 00 00 
    hc->file_address = (char*) 0;
  410c30:	48 89 f8             	mov    %rdi,%rax
  410c33:	48 c1 e8 03          	shr    $0x3,%rax
  410c37:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410c3e:	0f 85 39 05 00 00    	jne    41117d <httpd_get_conn+0xf1d>
  410c44:	49 c7 86 c8 02 00 00 	movq   $0x0,0x2c8(%r14)
  410c4b:	00 00 00 00 
    return GC_OK;
  410c4f:	ba 01 00 00 00       	mov    $0x1,%edx
    {
  410c54:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  410c59:	48 39 d8             	cmp    %rbx,%rax
  410c5c:	0f 85 f9 04 00 00    	jne    41115b <httpd_get_conn+0xefb>
  410c62:	48 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbp)
  410c69:	00 00 00 00 
  410c6d:	c7 85 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbp)
  410c74:	00 00 00 
  410c77:	c7 85 1c 80 ff 7f 00 	movl   $0x0,0x7fff801c(%rbp)
  410c7e:	00 00 00 
    }
  410c81:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
  410c88:	89 d0                	mov    %edx,%eax
  410c8a:	5b                   	pop    %rbx
  410c8b:	5d                   	pop    %rbp
  410c8c:	41 5c                	pop    %r12
  410c8e:	41 5d                	pop    %r13
  410c90:	41 5e                	pop    %r14
  410c92:	41 5f                	pop    %r15
  410c94:	c3                   	retq   
  410c95:	0f 1f 00             	nopl   (%rax)
  410c98:	89 44 24 08          	mov    %eax,0x8(%rsp)
	syslog( LOG_ERR, "unknown sockaddr family" );
  410c9c:	be c0 3f 42 00       	mov    $0x423fc0,%esi
  410ca1:	31 c0                	xor    %eax,%eax
  410ca3:	bf 03 00 00 00       	mov    $0x3,%edi
  410ca8:	e8 93 1f ff ff       	callq  402c40 <syslog@plt>
	close( hc->conn_fd );
  410cad:	4c 89 f8             	mov    %r15,%rax
  410cb0:	8b 54 24 08          	mov    0x8(%rsp),%edx
  410cb4:	48 c1 e8 03          	shr    $0x3,%rax
  410cb8:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  410cbf:	84 c0                	test   %al,%al
  410cc1:	74 08                	je     410ccb <httpd_get_conn+0xa6b>
  410cc3:	3c 03                	cmp    $0x3,%al
  410cc5:	0f 8e 6a 04 00 00    	jle    411135 <httpd_get_conn+0xed5>
  410ccb:	41 8b be c0 02 00 00 	mov    0x2c0(%r14),%edi
  410cd2:	89 54 24 08          	mov    %edx,0x8(%rsp)
  410cd6:	e8 f5 27 ff ff       	callq  4034d0 <close@plt>
	hc->conn_fd = -1;
  410cdb:	4c 89 f8             	mov    %r15,%rax
  410cde:	8b 54 24 08          	mov    0x8(%rsp),%edx
  410ce2:	48 c1 e8 03          	shr    $0x3,%rax
  410ce6:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  410ced:	84 c0                	test   %al,%al
  410cef:	74 08                	je     410cf9 <httpd_get_conn+0xa99>
  410cf1:	3c 03                	cmp    $0x3,%al
  410cf3:	0f 8e 44 04 00 00    	jle    41113d <httpd_get_conn+0xedd>
  410cf9:	41 c7 86 c0 02 00 00 	movl   $0xffffffff,0x2c0(%r14)
  410d00:	ff ff ff ff 
	return GC_FAIL;
  410d04:	e9 4b ff ff ff       	jmpq   410c54 <httpd_get_conn+0x9f4>
  410d09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	if ( errno == EWOULDBLOCK )
  410d10:	e8 eb 1e ff ff       	callq  402c00 <__errno_location@plt>
  410d15:	48 89 c2             	mov    %rax,%rdx
  410d18:	48 c1 ea 03          	shr    $0x3,%rdx
  410d1c:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  410d23:	48 89 c2             	mov    %rax,%rdx
  410d26:	83 e2 07             	and    $0x7,%edx
  410d29:	83 c2 03             	add    $0x3,%edx
  410d2c:	38 ca                	cmp    %cl,%dl
  410d2e:	7c 08                	jl     410d38 <httpd_get_conn+0xad8>
  410d30:	84 c9                	test   %cl,%cl
  410d32:	0f 85 68 04 00 00    	jne    4111a0 <httpd_get_conn+0xf40>
  410d38:	83 38 0b             	cmpl   $0xb,(%rax)
	    return GC_NO_MORE;
  410d3b:	ba 02 00 00 00       	mov    $0x2,%edx
	if ( errno == EWOULDBLOCK )
  410d40:	0f 84 0e ff ff ff    	je     410c54 <httpd_get_conn+0x9f4>
	syslog( LOG_ERR, "accept - %m" );
  410d46:	be 80 3f 42 00       	mov    $0x423f80,%esi
  410d4b:	bf 03 00 00 00       	mov    $0x3,%edi
  410d50:	31 c0                	xor    %eax,%eax
  410d52:	e8 e9 1e ff ff       	callq  402c40 <syslog@plt>
	return GC_FAIL;
  410d57:	31 d2                	xor    %edx,%edx
  410d59:	e9 f6 fe ff ff       	jmpq   410c54 <httpd_get_conn+0x9f4>
  410d5e:	66 90                	xchg   %ax,%ax
	hc->read_size = 0;
  410d60:	49 8d b6 98 00 00 00 	lea    0x98(%r14),%rsi
  410d67:	48 89 f0             	mov    %rsi,%rax
  410d6a:	48 c1 e8 03          	shr    $0x3,%rax
  410d6e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410d75:	0f 85 2d 04 00 00    	jne    4111a8 <httpd_get_conn+0xf48>
  410d7b:	49 c7 86 98 00 00 00 	movq   $0x0,0x98(%r14)
  410d82:	00 00 00 00 
	httpd_realloc_str( &hc->read_buf, &hc->read_size, 500 );
  410d86:	49 8d be 90 00 00 00 	lea    0x90(%r14),%rdi
  410d8d:	ba f4 01 00 00       	mov    $0x1f4,%edx
  410d92:	e8 99 c5 ff ff       	callq  40d330 <httpd_realloc_str>
	    hc->maxremoteuser = hc->maxresponse = 0;
  410d97:	49 8d 8e d0 01 00 00 	lea    0x1d0(%r14),%rcx
  410d9e:	48 89 c8             	mov    %rcx,%rax
  410da1:	48 c1 e8 03          	shr    $0x3,%rax
  410da5:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410dac:	0f 85 26 04 00 00    	jne    4111d8 <httpd_get_conn+0xf78>
  410db2:	4d 8d 86 c8 01 00 00 	lea    0x1c8(%r14),%r8
  410db9:	49 c7 86 d0 01 00 00 	movq   $0x0,0x1d0(%r14)
  410dc0:	00 00 00 00 
  410dc4:	4c 89 c0             	mov    %r8,%rax
  410dc7:	48 c1 e8 03          	shr    $0x3,%rax
  410dcb:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410dd2:	0f 85 08 04 00 00    	jne    4111e0 <httpd_get_conn+0xf80>
	    hc->maxaccepte = hc->maxreqhost = hc->maxhostdir =
  410dd8:	49 8d 86 c0 01 00 00 	lea    0x1c0(%r14),%rax
	    hc->maxremoteuser = hc->maxresponse = 0;
  410ddf:	49 c7 86 c8 01 00 00 	movq   $0x0,0x1c8(%r14)
  410de6:	00 00 00 00 
	    hc->maxaccepte = hc->maxreqhost = hc->maxhostdir =
  410dea:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  410def:	48 c1 e8 03          	shr    $0x3,%rax
  410df3:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410dfa:	0f 85 f2 03 00 00    	jne    4111f2 <httpd_get_conn+0xf92>
  410e00:	49 8d 86 b8 01 00 00 	lea    0x1b8(%r14),%rax
  410e07:	49 c7 86 c0 01 00 00 	movq   $0x0,0x1c0(%r14)
  410e0e:	00 00 00 00 
  410e12:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  410e17:	48 c1 e8 03          	shr    $0x3,%rax
  410e1b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410e22:	0f 85 d4 03 00 00    	jne    4111fc <httpd_get_conn+0xf9c>
  410e28:	49 8d 86 b0 01 00 00 	lea    0x1b0(%r14),%rax
  410e2f:	49 c7 86 b8 01 00 00 	movq   $0x0,0x1b8(%r14)
  410e36:	00 00 00 00 
  410e3a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  410e3f:	48 c1 e8 03          	shr    $0x3,%rax
  410e43:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410e4a:	0f 85 b6 03 00 00    	jne    411206 <httpd_get_conn+0xfa6>
	    hc->maxpathinfo = hc->maxquery = hc->maxaccept =
  410e50:	49 8d 86 a8 01 00 00 	lea    0x1a8(%r14),%rax
	    hc->maxaccepte = hc->maxreqhost = hc->maxhostdir =
  410e57:	49 c7 86 b0 01 00 00 	movq   $0x0,0x1b0(%r14)
  410e5e:	00 00 00 00 
	    hc->maxpathinfo = hc->maxquery = hc->maxaccept =
  410e62:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  410e67:	48 c1 e8 03          	shr    $0x3,%rax
  410e6b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410e72:	0f 85 98 03 00 00    	jne    411210 <httpd_get_conn+0xfb0>
  410e78:	4d 8d ae a0 01 00 00 	lea    0x1a0(%r14),%r13
  410e7f:	49 c7 86 a8 01 00 00 	movq   $0x0,0x1a8(%r14)
  410e86:	00 00 00 00 
  410e8a:	4c 89 e8             	mov    %r13,%rax
  410e8d:	48 c1 e8 03          	shr    $0x3,%rax
  410e91:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  410e98:	0f 85 a4 03 00 00    	jne    411242 <httpd_get_conn+0xfe2>
  410e9e:	49 8d 86 98 01 00 00 	lea    0x198(%r14),%rax
  410ea5:	49 c7 86 a0 01 00 00 	movq   $0x0,0x1a0(%r14)
  410eac:	00 00 00 00 
  410eb0:	48 89 c2             	mov    %rax,%rdx
  410eb3:	48 c1 ea 03          	shr    $0x3,%rdx
  410eb7:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  410ebe:	0f 85 86 03 00 00    	jne    41124a <httpd_get_conn+0xfea>
	    hc->maxorigfilename = hc->maxexpnfilename = hc->maxencodings =
  410ec4:	4d 8d 8e 90 01 00 00 	lea    0x190(%r14),%r9
	    hc->maxpathinfo = hc->maxquery = hc->maxaccept =
  410ecb:	49 c7 86 98 01 00 00 	movq   $0x0,0x198(%r14)
  410ed2:	00 00 00 00 
	    hc->maxorigfilename = hc->maxexpnfilename = hc->maxencodings =
  410ed6:	4c 89 ca             	mov    %r9,%rdx
  410ed9:	48 c1 ea 03          	shr    $0x3,%rdx
  410edd:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  410ee4:	0f 85 90 03 00 00    	jne    41127a <httpd_get_conn+0x101a>
  410eea:	4d 8d 96 88 01 00 00 	lea    0x188(%r14),%r10
  410ef1:	49 c7 86 90 01 00 00 	movq   $0x0,0x190(%r14)
  410ef8:	00 00 00 00 
  410efc:	4c 89 d2             	mov    %r10,%rdx
  410eff:	48 c1 ea 03          	shr    $0x3,%rdx
  410f03:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  410f0a:	0f 85 72 03 00 00    	jne    411282 <httpd_get_conn+0x1022>
  410f10:	4d 8d 9e 80 01 00 00 	lea    0x180(%r14),%r11
  410f17:	49 c7 86 88 01 00 00 	movq   $0x0,0x188(%r14)
  410f1e:	00 00 00 00 
  410f22:	4c 89 da             	mov    %r11,%rdx
  410f25:	48 c1 ea 03          	shr    $0x3,%rdx
  410f29:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  410f30:	0f 85 54 03 00 00    	jne    41128a <httpd_get_conn+0x102a>
	hc->maxdecodedurl =
  410f36:	49 8d b6 78 01 00 00 	lea    0x178(%r14),%rsi
	    hc->maxorigfilename = hc->maxexpnfilename = hc->maxencodings =
  410f3d:	49 c7 86 80 01 00 00 	movq   $0x0,0x180(%r14)
  410f44:	00 00 00 00 
	hc->maxdecodedurl =
  410f48:	48 89 f2             	mov    %rsi,%rdx
  410f4b:	48 c1 ea 03          	shr    $0x3,%rdx
  410f4f:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  410f56:	0f 85 36 03 00 00    	jne    411292 <httpd_get_conn+0x1032>
  410f5c:	49 c7 86 78 01 00 00 	movq   $0x0,0x178(%r14)
  410f63:	00 00 00 00 
	httpd_realloc_str( &hc->decodedurl, &hc->maxdecodedurl, 1 );
  410f67:	49 8d be d8 00 00 00 	lea    0xd8(%r14),%rdi
  410f6e:	ba 01 00 00 00       	mov    $0x1,%edx
  410f73:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
  410f78:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
  410f7d:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
  410f82:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
  410f87:	4c 89 54 24 50       	mov    %r10,0x50(%rsp)
  410f8c:	4c 89 5c 24 58       	mov    %r11,0x58(%rsp)
  410f91:	e8 9a c3 ff ff       	callq  40d330 <httpd_realloc_str>
	httpd_realloc_str( &hc->origfilename, &hc->maxorigfilename, 1 );
  410f96:	4c 8b 5c 24 58       	mov    0x58(%rsp),%r11
  410f9b:	ba 01 00 00 00       	mov    $0x1,%edx
  410fa0:	49 8d be e8 00 00 00 	lea    0xe8(%r14),%rdi
  410fa7:	4c 89 de             	mov    %r11,%rsi
  410faa:	e8 81 c3 ff ff       	callq  40d330 <httpd_realloc_str>
	httpd_realloc_str( &hc->expnfilename, &hc->maxexpnfilename, 0 );
  410faf:	4c 8b 54 24 50       	mov    0x50(%rsp),%r10
  410fb4:	49 8d be f0 00 00 00 	lea    0xf0(%r14),%rdi
  410fbb:	31 d2                	xor    %edx,%edx
  410fbd:	4c 89 d6             	mov    %r10,%rsi
  410fc0:	e8 6b c3 ff ff       	callq  40d330 <httpd_realloc_str>
	httpd_realloc_str( &hc->encodings, &hc->maxencodings, 0 );
  410fc5:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
  410fca:	49 8d be f8 00 00 00 	lea    0xf8(%r14),%rdi
  410fd1:	31 d2                	xor    %edx,%edx
  410fd3:	4c 89 ce             	mov    %r9,%rsi
  410fd6:	e8 55 c3 ff ff       	callq  40d330 <httpd_realloc_str>
	httpd_realloc_str( &hc->pathinfo, &hc->maxpathinfo, 0 );
  410fdb:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
  410fe0:	49 8d be 00 01 00 00 	lea    0x100(%r14),%rdi
  410fe7:	31 d2                	xor    %edx,%edx
  410fe9:	48 89 c6             	mov    %rax,%rsi
  410fec:	e8 3f c3 ff ff       	callq  40d330 <httpd_realloc_str>
	httpd_realloc_str( &hc->query, &hc->maxquery, 0 );
  410ff1:	49 8d be 08 01 00 00 	lea    0x108(%r14),%rdi
  410ff8:	31 d2                	xor    %edx,%edx
  410ffa:	4c 89 ee             	mov    %r13,%rsi
  410ffd:	e8 2e c3 ff ff       	callq  40d330 <httpd_realloc_str>
	httpd_realloc_str( &hc->accept, &hc->maxaccept, 0 );
  411002:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  411007:	49 8d be 20 01 00 00 	lea    0x120(%r14),%rdi
  41100e:	31 d2                	xor    %edx,%edx
  411010:	e8 1b c3 ff ff       	callq  40d330 <httpd_realloc_str>
	httpd_realloc_str( &hc->accepte, &hc->maxaccepte, 0 );
  411015:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  41101a:	49 8d be 28 01 00 00 	lea    0x128(%r14),%rdi
  411021:	31 d2                	xor    %edx,%edx
  411023:	e8 08 c3 ff ff       	callq  40d330 <httpd_realloc_str>
	httpd_realloc_str( &hc->reqhost, &hc->maxreqhost, 0 );
  411028:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
  41102d:	49 8d be 48 01 00 00 	lea    0x148(%r14),%rdi
  411034:	31 d2                	xor    %edx,%edx
  411036:	e8 f5 c2 ff ff       	callq  40d330 <httpd_realloc_str>
	httpd_realloc_str( &hc->hostdir, &hc->maxhostdir, 0 );
  41103b:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  411040:	49 8d be 58 01 00 00 	lea    0x158(%r14),%rdi
  411047:	31 d2                	xor    %edx,%edx
  411049:	e8 e2 c2 ff ff       	callq  40d330 <httpd_realloc_str>
	httpd_realloc_str( &hc->remoteuser, &hc->maxremoteuser, 0 );
  41104e:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
  411053:	49 8d be 68 01 00 00 	lea    0x168(%r14),%rdi
  41105a:	31 d2                	xor    %edx,%edx
  41105c:	4c 89 c6             	mov    %r8,%rsi
  41105f:	e8 cc c2 ff ff       	callq  40d330 <httpd_realloc_str>
	httpd_realloc_str( &hc->response, &hc->maxresponse, 0 );
  411064:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
  411069:	49 8d be 70 01 00 00 	lea    0x170(%r14),%rdi
  411070:	31 d2                	xor    %edx,%edx
  411072:	48 89 ce             	mov    %rcx,%rsi
  411075:	e8 b6 c2 ff ff       	callq  40d330 <httpd_realloc_str>
	hc->initialized = 1;
  41107a:	4c 89 f0             	mov    %r14,%rax
  41107d:	48 c1 e8 03          	shr    $0x3,%rax
  411081:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  411088:	84 c0                	test   %al,%al
  41108a:	74 04                	je     411090 <httpd_get_conn+0xe30>
  41108c:	3c 03                	cmp    $0x3,%al
  41108e:	7e 6b                	jle    4110fb <httpd_get_conn+0xe9b>
  411090:	41 c7 06 01 00 00 00 	movl   $0x1,(%r14)
  411097:	e9 65 f2 ff ff       	jmpq   410301 <httpd_get_conn+0xa1>
    hc->conn_fd = accept( listen_fd, &sa.sa, &sz );
  41109c:	4c 89 ff             	mov    %r15,%rdi
  41109f:	e8 4c 1b ff ff       	callq  402bf0 <__asan_report_store4@plt>
    sz = sizeof(sa);
  4110a4:	48 89 d7             	mov    %rdx,%rdi
  4110a7:	e8 44 1b ff ff       	callq  402bf0 <__asan_report_store4@plt>
    if ( ! hc->initialized )
  4110ac:	4c 89 f7             	mov    %r14,%rdi
  4110af:	e8 1c 1d ff ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( ! sockaddr_check( &sa ) )
  4110b4:	4c 89 ef             	mov    %r13,%rdi
  4110b7:	e8 f4 1e ff ff       	callq  402fb0 <__asan_report_load2@plt>
    (void) memmove( &hc->client_addr, &sa, sockaddr_len( &sa ) );
  4110bc:	4c 89 ef             	mov    %r13,%rdi
  4110bf:	e8 ec 1e ff ff       	callq  402fb0 <__asan_report_load2@plt>
    hc->checked_state = CHST_FIRSTWORD;
  4110c4:	e8 27 1b ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hc->method = METHOD_UNKNOWN;
  4110c9:	e8 22 1b ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hc->status = 0;
  4110ce:	e8 1d 1b ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hc->decodedurl[0] = '\0';
  4110d3:	e8 58 20 ff ff       	callq  403130 <__asan_report_store1@plt>
    hc->origfilename[0] = '\0';
  4110d8:	e8 53 20 ff ff       	callq  403130 <__asan_report_store1@plt>
    hc->expnfilename[0] = '\0';
  4110dd:	e8 4e 20 ff ff       	callq  403130 <__asan_report_store1@plt>
    hc->encodings[0] = '\0';
  4110e2:	e8 49 20 ff ff       	callq  403130 <__asan_report_store1@plt>
    hc->pathinfo[0] = '\0';
  4110e7:	e8 44 20 ff ff       	callq  403130 <__asan_report_store1@plt>
    hc->query[0] = '\0';
  4110ec:	e8 3f 20 ff ff       	callq  403130 <__asan_report_store1@plt>
    hc->accept[0] = '\0';
  4110f1:	e8 3a 20 ff ff       	callq  403130 <__asan_report_store1@plt>
    hc->accepte[0] = '\0';
  4110f6:	e8 35 20 ff ff       	callq  403130 <__asan_report_store1@plt>
	hc->initialized = 1;
  4110fb:	4c 89 f7             	mov    %r14,%rdi
  4110fe:	e8 ed 1a ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hc->reqhost[0] = '\0';
  411103:	e8 28 20 ff ff       	callq  403130 <__asan_report_store1@plt>
    hc->hostdir[0] = '\0';
  411108:	e8 23 20 ff ff       	callq  403130 <__asan_report_store1@plt>
    hc->remoteuser[0] = '\0';
  41110d:	e8 1e 20 ff ff       	callq  403130 <__asan_report_store1@plt>
    hc->response[0] = '\0';
  411112:	e8 19 20 ff ff       	callq  403130 <__asan_report_store1@plt>
    hc->mime_flag = 1;
  411117:	e8 d4 1a ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hc->one_one = 0;
  41111c:	e8 cf 1a ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hc->got_range = 0;
  411121:	e8 ca 1a ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hc->tildemapped = 0;
  411126:	e8 c5 1a ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hc->keep_alive = 0;
  41112b:	e8 c0 1a ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hc->should_linger = 0;
  411130:	e8 bb 1a ff ff       	callq  402bf0 <__asan_report_store4@plt>
	close( hc->conn_fd );
  411135:	4c 89 ff             	mov    %r15,%rdi
  411138:	e8 93 1c ff ff       	callq  402dd0 <__asan_report_load4@plt>
	hc->conn_fd = -1;
  41113d:	4c 89 ff             	mov    %r15,%rdi
  411140:	e8 ab 1a ff ff       	callq  402bf0 <__asan_report_store4@plt>
    {
  411145:	bf 00 01 00 00       	mov    $0x100,%edi
  41114a:	e8 d1 21 ff ff       	callq  403320 <__asan_stack_malloc_2@plt>
  41114f:	48 85 c0             	test   %rax,%rax
  411152:	48 0f 45 d8          	cmovne %rax,%rbx
  411156:	e9 34 f1 ff ff       	jmpq   41028f <httpd_get_conn+0x2f>
  41115b:	66 0f 6f 05 2d 0c 01 	movdqa 0x10c2d(%rip),%xmm0        # 421d90 <_IO_stdin_used+0x2cd0>
  411162:	00 
  411163:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  41116a:	0f 11 85 00 80 ff 7f 	movups %xmm0,0x7fff8000(%rbp)
  411171:	0f 11 85 10 80 ff 7f 	movups %xmm0,0x7fff8010(%rbp)
  411178:	e9 04 fb ff ff       	jmpq   410c81 <httpd_get_conn+0xa21>
    hc->file_address = (char*) 0;
  41117d:	e8 1e 1e ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->protocol = "UNKNOWN";
  411182:	e8 19 1e ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->origfilename[0] = '\0';
  411187:	e8 c4 20 ff ff       	callq  403250 <__asan_report_load8@plt>
    hc->bytes_sent = 0;
  41118c:	e8 0f 1e ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->encodedurl = "";
  411191:	e8 0a 1e ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->decodedurl[0] = '\0';
  411196:	e8 b5 20 ff ff       	callq  403250 <__asan_report_load8@plt>
    hc->expnfilename[0] = '\0';
  41119b:	e8 b0 20 ff ff       	callq  403250 <__asan_report_load8@plt>
	if ( errno == EWOULDBLOCK )
  4111a0:	48 89 c7             	mov    %rax,%rdi
  4111a3:	e8 28 1c ff ff       	callq  402dd0 <__asan_report_load4@plt>
	hc->read_size = 0;
  4111a8:	48 89 f7             	mov    %rsi,%rdi
  4111ab:	e8 f0 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->read_idx = 0;
  4111b0:	e8 eb 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->checked_idx = 0;
  4111b5:	e8 e6 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->range_if = (time_t) -1;
  4111ba:	e8 e1 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->contentlength = -1;
  4111bf:	e8 dc 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->type = "";
  4111c4:	e8 d7 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->hostname = (char*) 0;
  4111c9:	e8 d2 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->responselen = 0;
  4111ce:	e8 cd 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->if_modified_since = (time_t) -1;
  4111d3:	e8 c8 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
	    hc->maxremoteuser = hc->maxresponse = 0;
  4111d8:	48 89 cf             	mov    %rcx,%rdi
  4111db:	e8 c0 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
  4111e0:	4c 89 c7             	mov    %r8,%rdi
  4111e3:	e8 b8 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->accepte[0] = '\0';
  4111e8:	e8 63 20 ff ff       	callq  403250 <__asan_report_load8@plt>
    hc->acceptl = "";
  4111ed:	e8 ae 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
	    hc->maxaccepte = hc->maxreqhost = hc->maxhostdir =
  4111f2:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4111f7:	e8 a4 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
  4111fc:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  411201:	e8 9a 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
  411206:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  41120b:	e8 90 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
	    hc->maxpathinfo = hc->maxquery = hc->maxaccept =
  411210:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  411215:	e8 86 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->first_byte_index = 0;
  41121a:	e8 81 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->last_byte_index = -1;
  41121f:	e8 7c 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->cookie = "";
  411224:	e8 77 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->contenttype = "";
  411229:	e8 72 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->remoteuser[0] = '\0';
  41122e:	e8 1d 20 ff ff       	callq  403250 <__asan_report_load8@plt>
    hc->response[0] = '\0';
  411233:	e8 18 20 ff ff       	callq  403250 <__asan_report_load8@plt>
    hc->useragent = "";
  411238:	e8 63 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->accept[0] = '\0';
  41123d:	e8 0e 20 ff ff       	callq  403250 <__asan_report_load8@plt>
	    hc->maxpathinfo = hc->maxquery = hc->maxaccept =
  411242:	4c 89 ef             	mov    %r13,%rdi
  411245:	e8 56 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
  41124a:	48 89 c7             	mov    %rax,%rdi
  41124d:	e8 4e 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->hdrhost = "";
  411252:	e8 49 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->hostdir[0] = '\0';
  411257:	e8 f4 1f ff ff       	callq  403250 <__asan_report_load8@plt>
    hc->reqhost[0] = '\0';
  41125c:	e8 ef 1f ff ff       	callq  403250 <__asan_report_load8@plt>
    hc->authorization = "";
  411261:	e8 3a 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->query[0] = '\0';
  411266:	e8 e5 1f ff ff       	callq  403250 <__asan_report_load8@plt>
    hc->referer = "";
  41126b:	e8 30 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->encodings[0] = '\0';
  411270:	e8 db 1f ff ff       	callq  403250 <__asan_report_load8@plt>
    hc->pathinfo[0] = '\0';
  411275:	e8 d6 1f ff ff       	callq  403250 <__asan_report_load8@plt>
	    hc->maxorigfilename = hc->maxexpnfilename = hc->maxencodings =
  41127a:	4c 89 cf             	mov    %r9,%rdi
  41127d:	e8 1e 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
  411282:	4c 89 d7             	mov    %r10,%rdi
  411285:	e8 16 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
  41128a:	4c 89 df             	mov    %r11,%rdi
  41128d:	e8 0e 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
	hc->maxdecodedurl =
  411292:	48 89 f7             	mov    %rsi,%rdi
  411295:	e8 06 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->hs = hs;
  41129a:	e8 01 1d ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->bytes_to_send = 0;
  41129f:	e8 fc 1c ff ff       	callq  402fa0 <__asan_report_store8@plt>
  4112a4:	66 90                	xchg   %ax,%ax
  4112a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4112ad:	00 00 00 

00000000004112b0 <httpd_got_request>:
    for ( ; hc->checked_idx < hc->read_idx; ++hc->checked_idx )
  4112b0:	48 8d 87 a8 00 00 00 	lea    0xa8(%rdi),%rax
    {
  4112b7:	48 83 ec 08          	sub    $0x8,%rsp
    for ( ; hc->checked_idx < hc->read_idx; ++hc->checked_idx )
  4112bb:	48 89 c2             	mov    %rax,%rdx
  4112be:	48 c1 ea 03          	shr    $0x3,%rdx
  4112c2:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4112c9:	0f 85 80 03 00 00    	jne    41164f <httpd_got_request+0x39f>
  4112cf:	48 8d 97 a0 00 00 00 	lea    0xa0(%rdi),%rdx
  4112d6:	48 8b 87 a8 00 00 00 	mov    0xa8(%rdi),%rax
  4112dd:	48 89 d1             	mov    %rdx,%rcx
  4112e0:	48 c1 e9 03          	shr    $0x3,%rcx
  4112e4:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  4112eb:	0f 85 6e 03 00 00    	jne    41165f <httpd_got_request+0x3af>
  4112f1:	48 8b b7 a0 00 00 00 	mov    0xa0(%rdi),%rsi
  4112f8:	48 39 c6             	cmp    %rax,%rsi
  4112fb:	0f 86 c7 00 00 00    	jbe    4113c8 <httpd_got_request+0x118>
	c = hc->read_buf[hc->checked_idx];
  411301:	48 8d 97 90 00 00 00 	lea    0x90(%rdi),%rdx
  411308:	48 89 d1             	mov    %rdx,%rcx
  41130b:	48 c1 e9 03          	shr    $0x3,%rcx
  41130f:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  411316:	0f 85 3b 03 00 00    	jne    411657 <httpd_got_request+0x3a7>
  41131c:	48 8b 97 90 00 00 00 	mov    0x90(%rdi),%rdx
	switch ( hc->checked_state )
  411323:	4c 8d 97 b0 00 00 00 	lea    0xb0(%rdi),%r10
    for ( ; hc->checked_idx < hc->read_idx; ++hc->checked_idx )
  41132a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
	switch ( hc->checked_state )
  411330:	4d 89 d1             	mov    %r10,%r9
  411333:	48 01 d0             	add    %rdx,%rax
  411336:	48 01 d6             	add    %rdx,%rsi
  411339:	49 c1 e9 03          	shr    $0x3,%r9
    for ( ; hc->checked_idx < hc->read_idx; ++hc->checked_idx )
  41133d:	49 29 d0             	sub    %rdx,%r8
	c = hc->read_buf[hc->checked_idx];
  411340:	48 89 c2             	mov    %rax,%rdx
  411343:	48 89 c1             	mov    %rax,%rcx
  411346:	48 c1 ea 03          	shr    $0x3,%rdx
  41134a:	83 e1 07             	and    $0x7,%ecx
  41134d:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  411354:	38 ca                	cmp    %cl,%dl
  411356:	7f 08                	jg     411360 <httpd_got_request+0xb0>
  411358:	84 d2                	test   %dl,%dl
  41135a:	0f 85 df 02 00 00    	jne    41163f <httpd_got_request+0x38f>
	switch ( hc->checked_state )
  411360:	41 0f b6 89 00 80 ff 	movzbl 0x7fff8000(%r9),%ecx
  411367:	7f 
	c = hc->read_buf[hc->checked_idx];
  411368:	0f b6 10             	movzbl (%rax),%edx
	switch ( hc->checked_state )
  41136b:	84 c9                	test   %cl,%cl
  41136d:	74 09                	je     411378 <httpd_got_request+0xc8>
  41136f:	80 f9 03             	cmp    $0x3,%cl
  411372:	0f 8e cf 02 00 00    	jle    411647 <httpd_got_request+0x397>
  411378:	83 bf b0 00 00 00 0b 	cmpl   $0xb,0xb0(%rdi)
  41137f:	77 2f                	ja     4113b0 <httpd_got_request+0x100>
  411381:	8b 8f b0 00 00 00    	mov    0xb0(%rdi),%ecx
  411387:	ff 24 cd 00 40 42 00 	jmpq   *0x424000(,%rcx,8)
  41138e:	66 90                	xchg   %ax,%ax
	    switch ( c )
  411390:	80 fa 0a             	cmp    $0xa,%dl
  411393:	0f 84 57 02 00 00    	je     4115f0 <httpd_got_request+0x340>
  411399:	80 fa 0d             	cmp    $0xd,%dl
  41139c:	0f 84 4e 02 00 00    	je     4115f0 <httpd_got_request+0x340>
		hc->checked_state = CHST_LINE;
  4113a2:	c7 87 b0 00 00 00 06 	movl   $0x6,0xb0(%rdi)
  4113a9:	00 00 00 
  4113ac:	0f 1f 40 00          	nopl   0x0(%rax)
    for ( ; hc->checked_idx < hc->read_idx; ++hc->checked_idx )
  4113b0:	49 8d 14 00          	lea    (%r8,%rax,1),%rdx
  4113b4:	48 83 c0 01          	add    $0x1,%rax
  4113b8:	48 89 97 a8 00 00 00 	mov    %rdx,0xa8(%rdi)
  4113bf:	48 39 f0             	cmp    %rsi,%rax
  4113c2:	0f 85 78 ff ff ff    	jne    411340 <httpd_got_request+0x90>
    return GR_NO_REQUEST;
  4113c8:	31 c0                	xor    %eax,%eax
  4113ca:	eb 09                	jmp    4113d5 <httpd_got_request+0x125>
  4113cc:	0f 1f 40 00          	nopl   0x0(%rax)
	    return GR_BAD_REQUEST;
  4113d0:	b8 02 00 00 00       	mov    $0x2,%eax
    }
  4113d5:	48 83 c4 08          	add    $0x8,%rsp
  4113d9:	c3                   	retq   
  4113da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	    switch ( c )
  4113e0:	80 fa 0a             	cmp    $0xa,%dl
  4113e3:	0f 84 07 02 00 00    	je     4115f0 <httpd_got_request+0x340>
  4113e9:	80 fa 0d             	cmp    $0xd,%dl
  4113ec:	75 b4                	jne    4113a2 <httpd_got_request+0xf2>
		hc->checked_state = CHST_CRLFCR;
  4113ee:	c7 87 b0 00 00 00 0a 	movl   $0xa,0xb0(%rdi)
  4113f5:	00 00 00 
		break;
  4113f8:	eb b6                	jmp    4113b0 <httpd_got_request+0x100>
  4113fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	    switch ( c )
  411400:	80 fa 0a             	cmp    $0xa,%dl
  411403:	0f 84 e7 01 00 00    	je     4115f0 <httpd_got_request+0x340>
  411409:	80 fa 0d             	cmp    $0xd,%dl
  41140c:	75 94                	jne    4113a2 <httpd_got_request+0xf2>
		hc->checked_state = CHST_CR;
  41140e:	c7 87 b0 00 00 00 08 	movl   $0x8,0xb0(%rdi)
  411415:	00 00 00 
		break;
  411418:	eb 96                	jmp    4113b0 <httpd_got_request+0x100>
  41141a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	    switch ( c )
  411420:	80 fa 0a             	cmp    $0xa,%dl
  411423:	0f 85 70 ff ff ff    	jne    411399 <httpd_got_request+0xe9>
		hc->checked_state = CHST_CRLF;
  411429:	c7 87 b0 00 00 00 09 	movl   $0x9,0xb0(%rdi)
  411430:	00 00 00 
		break;
  411433:	e9 78 ff ff ff       	jmpq   4113b0 <httpd_got_request+0x100>
  411438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41143f:	00 
	    switch ( c )
  411440:	80 fa 0a             	cmp    $0xa,%dl
  411443:	0f 84 d8 00 00 00    	je     411521 <httpd_got_request+0x271>
  411449:	0f 8e 71 01 00 00    	jle    4115c0 <httpd_got_request+0x310>
  41144f:	80 fa 0d             	cmp    $0xd,%dl
  411452:	0f 84 c9 00 00 00    	je     411521 <httpd_got_request+0x271>
  411458:	80 fa 20             	cmp    $0x20,%dl
  41145b:	0f 84 4f ff ff ff    	je     4113b0 <httpd_got_request+0x100>
		hc->checked_state = CHST_THIRDWORD;
  411461:	c7 87 b0 00 00 00 04 	movl   $0x4,0xb0(%rdi)
  411468:	00 00 00 
		break;
  41146b:	e9 40 ff ff ff       	jmpq   4113b0 <httpd_got_request+0x100>
	    switch ( c )
  411470:	80 fa 0a             	cmp    $0xa,%dl
  411473:	0f 84 77 01 00 00    	je     4115f0 <httpd_got_request+0x340>
  411479:	0f 8e 61 01 00 00    	jle    4115e0 <httpd_got_request+0x330>
  41147f:	80 fa 0d             	cmp    $0xd,%dl
  411482:	0f 84 68 01 00 00    	je     4115f0 <httpd_got_request+0x340>
  411488:	80 fa 20             	cmp    $0x20,%dl
  41148b:	0f 85 1f ff ff ff    	jne    4113b0 <httpd_got_request+0x100>
		hc->checked_state = CHST_SECONDWS;
  411491:	c7 87 b0 00 00 00 03 	movl   $0x3,0xb0(%rdi)
  411498:	00 00 00 
		break;
  41149b:	e9 10 ff ff ff       	jmpq   4113b0 <httpd_got_request+0x100>
	    switch ( c )
  4114a0:	80 fa 0a             	cmp    $0xa,%dl
  4114a3:	74 7c                	je     411521 <httpd_got_request+0x271>
  4114a5:	0f 8e e5 00 00 00    	jle    411590 <httpd_got_request+0x2e0>
  4114ab:	80 fa 0d             	cmp    $0xd,%dl
  4114ae:	74 71                	je     411521 <httpd_got_request+0x271>
  4114b0:	80 fa 20             	cmp    $0x20,%dl
  4114b3:	0f 84 f7 fe ff ff    	je     4113b0 <httpd_got_request+0x100>
		hc->checked_state = CHST_SECONDWORD;
  4114b9:	c7 87 b0 00 00 00 02 	movl   $0x2,0xb0(%rdi)
  4114c0:	00 00 00 
		break;
  4114c3:	e9 e8 fe ff ff       	jmpq   4113b0 <httpd_got_request+0x100>
  4114c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4114cf:	00 
	    switch ( c )
  4114d0:	80 fa 0a             	cmp    $0xa,%dl
  4114d3:	74 4c                	je     411521 <httpd_got_request+0x271>
  4114d5:	0f 8e d5 00 00 00    	jle    4115b0 <httpd_got_request+0x300>
  4114db:	80 fa 0d             	cmp    $0xd,%dl
  4114de:	74 41                	je     411521 <httpd_got_request+0x271>
  4114e0:	80 fa 20             	cmp    $0x20,%dl
  4114e3:	0f 85 c7 fe ff ff    	jne    4113b0 <httpd_got_request+0x100>
		hc->checked_state = CHST_FIRSTWS;
  4114e9:	c7 87 b0 00 00 00 01 	movl   $0x1,0xb0(%rdi)
  4114f0:	00 00 00 
		break;
  4114f3:	e9 b8 fe ff ff       	jmpq   4113b0 <httpd_got_request+0x100>
  4114f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4114ff:	00 
	    switch ( c )
  411500:	80 fa 0a             	cmp    $0xa,%dl
  411503:	0f 84 27 01 00 00    	je     411630 <httpd_got_request+0x380>
  411509:	0f 8e 01 01 00 00    	jle    411610 <httpd_got_request+0x360>
  41150f:	80 fa 0d             	cmp    $0xd,%dl
  411512:	0f 84 f6 fe ff ff    	je     41140e <httpd_got_request+0x15e>
  411518:	80 fa 20             	cmp    $0x20,%dl
  41151b:	0f 84 8f fe ff ff    	je     4113b0 <httpd_got_request+0x100>
		hc->checked_state = CHST_BOGUS;
  411521:	c7 87 b0 00 00 00 0b 	movl   $0xb,0xb0(%rdi)
  411528:	00 00 00 
		return GR_BAD_REQUEST;
  41152b:	b8 02 00 00 00       	mov    $0x2,%eax
    }
  411530:	48 83 c4 08          	add    $0x8,%rsp
  411534:	c3                   	retq   
  411535:	0f 1f 00             	nopl   (%rax)
	    switch ( c )
  411538:	80 fa 0a             	cmp    $0xa,%dl
  41153b:	0f 84 ef 00 00 00    	je     411630 <httpd_got_request+0x380>
  411541:	0f 8e b9 00 00 00    	jle    411600 <httpd_got_request+0x350>
  411547:	80 fa 0d             	cmp    $0xd,%dl
  41154a:	0f 84 be fe ff ff    	je     41140e <httpd_got_request+0x15e>
  411550:	80 fa 20             	cmp    $0x20,%dl
  411553:	0f 85 57 fe ff ff    	jne    4113b0 <httpd_got_request+0x100>
		hc->checked_state = CHST_THIRDWS;
  411559:	c7 87 b0 00 00 00 05 	movl   $0x5,0xb0(%rdi)
  411560:	00 00 00 
		break;
  411563:	e9 48 fe ff ff       	jmpq   4113b0 <httpd_got_request+0x100>
  411568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41156f:	00 
	    switch ( c )
  411570:	80 fa 0a             	cmp    $0xa,%dl
  411573:	0f 84 b7 00 00 00    	je     411630 <httpd_got_request+0x380>
  411579:	80 fa 0d             	cmp    $0xd,%dl
  41157c:	0f 84 8c fe ff ff    	je     41140e <httpd_got_request+0x15e>
  411582:	e9 29 fe ff ff       	jmpq   4113b0 <httpd_got_request+0x100>
  411587:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41158e:	00 00 
  411590:	80 fa 09             	cmp    $0x9,%dl
  411593:	0f 84 17 fe ff ff    	je     4113b0 <httpd_got_request+0x100>
		hc->checked_state = CHST_SECONDWORD;
  411599:	c7 87 b0 00 00 00 02 	movl   $0x2,0xb0(%rdi)
  4115a0:	00 00 00 
		break;
  4115a3:	e9 08 fe ff ff       	jmpq   4113b0 <httpd_got_request+0x100>
  4115a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4115af:	00 
  4115b0:	80 fa 09             	cmp    $0x9,%dl
  4115b3:	0f 84 30 ff ff ff    	je     4114e9 <httpd_got_request+0x239>
  4115b9:	e9 f2 fd ff ff       	jmpq   4113b0 <httpd_got_request+0x100>
  4115be:	66 90                	xchg   %ax,%ax
  4115c0:	80 fa 09             	cmp    $0x9,%dl
  4115c3:	0f 84 e7 fd ff ff    	je     4113b0 <httpd_got_request+0x100>
		hc->checked_state = CHST_THIRDWORD;
  4115c9:	c7 87 b0 00 00 00 04 	movl   $0x4,0xb0(%rdi)
  4115d0:	00 00 00 
		break;
  4115d3:	e9 d8 fd ff ff       	jmpq   4113b0 <httpd_got_request+0x100>
  4115d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4115df:	00 
  4115e0:	80 fa 09             	cmp    $0x9,%dl
  4115e3:	0f 84 a8 fe ff ff    	je     411491 <httpd_got_request+0x1e1>
  4115e9:	e9 c2 fd ff ff       	jmpq   4113b0 <httpd_got_request+0x100>
  4115ee:	66 90                	xchg   %ax,%ax
		return GR_GOT_REQUEST;
  4115f0:	b8 01 00 00 00       	mov    $0x1,%eax
    }
  4115f5:	48 83 c4 08          	add    $0x8,%rsp
  4115f9:	c3                   	retq   
  4115fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  411600:	80 fa 09             	cmp    $0x9,%dl
  411603:	0f 84 50 ff ff ff    	je     411559 <httpd_got_request+0x2a9>
  411609:	e9 a2 fd ff ff       	jmpq   4113b0 <httpd_got_request+0x100>
  41160e:	66 90                	xchg   %ax,%ax
  411610:	80 fa 09             	cmp    $0x9,%dl
  411613:	0f 84 97 fd ff ff    	je     4113b0 <httpd_got_request+0x100>
		hc->checked_state = CHST_BOGUS;
  411619:	c7 87 b0 00 00 00 0b 	movl   $0xb,0xb0(%rdi)
  411620:	00 00 00 
		return GR_BAD_REQUEST;
  411623:	b8 02 00 00 00       	mov    $0x2,%eax
  411628:	e9 03 ff ff ff       	jmpq   411530 <httpd_got_request+0x280>
  41162d:	0f 1f 00             	nopl   (%rax)
		hc->checked_state = CHST_LF;
  411630:	c7 87 b0 00 00 00 07 	movl   $0x7,0xb0(%rdi)
  411637:	00 00 00 
		break;
  41163a:	e9 71 fd ff ff       	jmpq   4113b0 <httpd_got_request+0x100>
	c = hc->read_buf[hc->checked_idx];
  41163f:	48 89 c7             	mov    %rax,%rdi
  411642:	e8 c9 1a ff ff       	callq  403110 <__asan_report_load1@plt>
	switch ( hc->checked_state )
  411647:	4c 89 d7             	mov    %r10,%rdi
  41164a:	e8 81 17 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    for ( ; hc->checked_idx < hc->read_idx; ++hc->checked_idx )
  41164f:	48 89 c7             	mov    %rax,%rdi
  411652:	e8 f9 1b ff ff       	callq  403250 <__asan_report_load8@plt>
	c = hc->read_buf[hc->checked_idx];
  411657:	48 89 d7             	mov    %rdx,%rdi
  41165a:	e8 f1 1b ff ff       	callq  403250 <__asan_report_load8@plt>
    for ( ; hc->checked_idx < hc->read_idx; ++hc->checked_idx )
  41165f:	48 89 d7             	mov    %rdx,%rdi
  411662:	e8 e9 1b ff ff       	callq  403250 <__asan_report_load8@plt>
  411667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41166e:	00 00 

0000000000411670 <httpd_destroy_conn>:
    if ( hc->initialized )
  411670:	48 89 f8             	mov    %rdi,%rax
    {
  411673:	53                   	push   %rbx
  411674:	48 89 fb             	mov    %rdi,%rbx
    if ( hc->initialized )
  411677:	48 c1 e8 03          	shr    $0x3,%rax
  41167b:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  411682:	84 c0                	test   %al,%al
  411684:	74 08                	je     41168e <httpd_destroy_conn+0x1e>
  411686:	3c 03                	cmp    $0x3,%al
  411688:	0f 8e 23 02 00 00    	jle    4118b1 <httpd_destroy_conn+0x241>
  41168e:	8b 03                	mov    (%rbx),%eax
  411690:	85 c0                	test   %eax,%eax
  411692:	75 0c                	jne    4116a0 <httpd_destroy_conn+0x30>
    }
  411694:	5b                   	pop    %rbx
  411695:	c3                   	retq   
  411696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41169d:	00 00 00 
	free( (void*) hc->read_buf );
  4116a0:	48 8d bb 90 00 00 00 	lea    0x90(%rbx),%rdi
  4116a7:	48 89 f8             	mov    %rdi,%rax
  4116aa:	48 c1 e8 03          	shr    $0x3,%rax
  4116ae:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4116b5:	0f 85 3f 02 00 00    	jne    4118fa <httpd_destroy_conn+0x28a>
  4116bb:	48 8b bb 90 00 00 00 	mov    0x90(%rbx),%rdi
  4116c2:	e8 09 16 ff ff       	callq  402cd0 <free@plt>
	free( (void*) hc->decodedurl );
  4116c7:	48 8d bb d8 00 00 00 	lea    0xd8(%rbx),%rdi
  4116ce:	48 89 f8             	mov    %rdi,%rax
  4116d1:	48 c1 e8 03          	shr    $0x3,%rax
  4116d5:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4116dc:	0f 85 f0 01 00 00    	jne    4118d2 <httpd_destroy_conn+0x262>
  4116e2:	48 8b bb d8 00 00 00 	mov    0xd8(%rbx),%rdi
  4116e9:	e8 e2 15 ff ff       	callq  402cd0 <free@plt>
	free( (void*) hc->origfilename );
  4116ee:	48 8d bb e8 00 00 00 	lea    0xe8(%rbx),%rdi
  4116f5:	48 89 f8             	mov    %rdi,%rax
  4116f8:	48 c1 e8 03          	shr    $0x3,%rax
  4116fc:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  411703:	0f 85 ce 01 00 00    	jne    4118d7 <httpd_destroy_conn+0x267>
  411709:	48 8b bb e8 00 00 00 	mov    0xe8(%rbx),%rdi
  411710:	e8 bb 15 ff ff       	callq  402cd0 <free@plt>
	free( (void*) hc->expnfilename );
  411715:	48 8d bb f0 00 00 00 	lea    0xf0(%rbx),%rdi
  41171c:	48 89 f8             	mov    %rdi,%rax
  41171f:	48 c1 e8 03          	shr    $0x3,%rax
  411723:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41172a:	0f 85 8e 01 00 00    	jne    4118be <httpd_destroy_conn+0x24e>
  411730:	48 8b bb f0 00 00 00 	mov    0xf0(%rbx),%rdi
  411737:	e8 94 15 ff ff       	callq  402cd0 <free@plt>
	free( (void*) hc->encodings );
  41173c:	48 8d bb f8 00 00 00 	lea    0xf8(%rbx),%rdi
  411743:	48 89 f8             	mov    %rdi,%rax
  411746:	48 c1 e8 03          	shr    $0x3,%rax
  41174a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  411751:	0f 85 6c 01 00 00    	jne    4118c3 <httpd_destroy_conn+0x253>
  411757:	48 8b bb f8 00 00 00 	mov    0xf8(%rbx),%rdi
  41175e:	e8 6d 15 ff ff       	callq  402cd0 <free@plt>
	free( (void*) hc->pathinfo );
  411763:	48 8d bb 00 01 00 00 	lea    0x100(%rbx),%rdi
  41176a:	48 89 f8             	mov    %rdi,%rax
  41176d:	48 c1 e8 03          	shr    $0x3,%rax
  411771:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  411778:	0f 85 4a 01 00 00    	jne    4118c8 <httpd_destroy_conn+0x258>
  41177e:	48 8b bb 00 01 00 00 	mov    0x100(%rbx),%rdi
  411785:	e8 46 15 ff ff       	callq  402cd0 <free@plt>
	free( (void*) hc->query );
  41178a:	48 8d bb 08 01 00 00 	lea    0x108(%rbx),%rdi
  411791:	48 89 f8             	mov    %rdi,%rax
  411794:	48 c1 e8 03          	shr    $0x3,%rax
  411798:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41179f:	0f 85 28 01 00 00    	jne    4118cd <httpd_destroy_conn+0x25d>
  4117a5:	48 8b bb 08 01 00 00 	mov    0x108(%rbx),%rdi
  4117ac:	e8 1f 15 ff ff       	callq  402cd0 <free@plt>
	free( (void*) hc->accept );
  4117b1:	48 8d bb 20 01 00 00 	lea    0x120(%rbx),%rdi
  4117b8:	48 89 f8             	mov    %rdi,%rax
  4117bb:	48 c1 e8 03          	shr    $0x3,%rax
  4117bf:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4117c6:	0f 85 1a 01 00 00    	jne    4118e6 <httpd_destroy_conn+0x276>
  4117cc:	48 8b bb 20 01 00 00 	mov    0x120(%rbx),%rdi
  4117d3:	e8 f8 14 ff ff       	callq  402cd0 <free@plt>
	free( (void*) hc->accepte );
  4117d8:	48 8d bb 28 01 00 00 	lea    0x128(%rbx),%rdi
  4117df:	48 89 f8             	mov    %rdi,%rax
  4117e2:	48 c1 e8 03          	shr    $0x3,%rax
  4117e6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4117ed:	0f 85 f8 00 00 00    	jne    4118eb <httpd_destroy_conn+0x27b>
  4117f3:	48 8b bb 28 01 00 00 	mov    0x128(%rbx),%rdi
  4117fa:	e8 d1 14 ff ff       	callq  402cd0 <free@plt>
	free( (void*) hc->reqhost );
  4117ff:	48 8d bb 48 01 00 00 	lea    0x148(%rbx),%rdi
  411806:	48 89 f8             	mov    %rdi,%rax
  411809:	48 c1 e8 03          	shr    $0x3,%rax
  41180d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  411814:	0f 85 d6 00 00 00    	jne    4118f0 <httpd_destroy_conn+0x280>
  41181a:	48 8b bb 48 01 00 00 	mov    0x148(%rbx),%rdi
  411821:	e8 aa 14 ff ff       	callq  402cd0 <free@plt>
	free( (void*) hc->hostdir );
  411826:	48 8d bb 58 01 00 00 	lea    0x158(%rbx),%rdi
  41182d:	48 89 f8             	mov    %rdi,%rax
  411830:	48 c1 e8 03          	shr    $0x3,%rax
  411834:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41183b:	0f 85 b4 00 00 00    	jne    4118f5 <httpd_destroy_conn+0x285>
  411841:	48 8b bb 58 01 00 00 	mov    0x158(%rbx),%rdi
  411848:	e8 83 14 ff ff       	callq  402cd0 <free@plt>
	free( (void*) hc->remoteuser );
  41184d:	48 8d bb 68 01 00 00 	lea    0x168(%rbx),%rdi
  411854:	48 89 f8             	mov    %rdi,%rax
  411857:	48 c1 e8 03          	shr    $0x3,%rax
  41185b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  411862:	75 78                	jne    4118dc <httpd_destroy_conn+0x26c>
  411864:	48 8b bb 68 01 00 00 	mov    0x168(%rbx),%rdi
  41186b:	e8 60 14 ff ff       	callq  402cd0 <free@plt>
	free( (void*) hc->response );
  411870:	48 8d bb 70 01 00 00 	lea    0x170(%rbx),%rdi
  411877:	48 89 f8             	mov    %rdi,%rax
  41187a:	48 c1 e8 03          	shr    $0x3,%rax
  41187e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  411885:	75 5a                	jne    4118e1 <httpd_destroy_conn+0x271>
  411887:	48 8b bb 70 01 00 00 	mov    0x170(%rbx),%rdi
  41188e:	e8 3d 14 ff ff       	callq  402cd0 <free@plt>
	hc->initialized = 0;
  411893:	48 89 d8             	mov    %rbx,%rax
  411896:	48 c1 e8 03          	shr    $0x3,%rax
  41189a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4118a1:	84 c0                	test   %al,%al
  4118a3:	74 04                	je     4118a9 <httpd_destroy_conn+0x239>
  4118a5:	3c 03                	cmp    $0x3,%al
  4118a7:	7e 0d                	jle    4118b6 <httpd_destroy_conn+0x246>
  4118a9:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
    }
  4118af:	5b                   	pop    %rbx
  4118b0:	c3                   	retq   
    if ( hc->initialized )
  4118b1:	e8 1a 15 ff ff       	callq  402dd0 <__asan_report_load4@plt>
	hc->initialized = 0;
  4118b6:	48 89 df             	mov    %rbx,%rdi
  4118b9:	e8 32 13 ff ff       	callq  402bf0 <__asan_report_store4@plt>
	free( (void*) hc->expnfilename );
  4118be:	e8 8d 19 ff ff       	callq  403250 <__asan_report_load8@plt>
	free( (void*) hc->encodings );
  4118c3:	e8 88 19 ff ff       	callq  403250 <__asan_report_load8@plt>
	free( (void*) hc->pathinfo );
  4118c8:	e8 83 19 ff ff       	callq  403250 <__asan_report_load8@plt>
	free( (void*) hc->query );
  4118cd:	e8 7e 19 ff ff       	callq  403250 <__asan_report_load8@plt>
	free( (void*) hc->decodedurl );
  4118d2:	e8 79 19 ff ff       	callq  403250 <__asan_report_load8@plt>
	free( (void*) hc->origfilename );
  4118d7:	e8 74 19 ff ff       	callq  403250 <__asan_report_load8@plt>
	free( (void*) hc->remoteuser );
  4118dc:	e8 6f 19 ff ff       	callq  403250 <__asan_report_load8@plt>
	free( (void*) hc->response );
  4118e1:	e8 6a 19 ff ff       	callq  403250 <__asan_report_load8@plt>
	free( (void*) hc->accept );
  4118e6:	e8 65 19 ff ff       	callq  403250 <__asan_report_load8@plt>
	free( (void*) hc->accepte );
  4118eb:	e8 60 19 ff ff       	callq  403250 <__asan_report_load8@plt>
	free( (void*) hc->reqhost );
  4118f0:	e8 5b 19 ff ff       	callq  403250 <__asan_report_load8@plt>
	free( (void*) hc->hostdir );
  4118f5:	e8 56 19 ff ff       	callq  403250 <__asan_report_load8@plt>
	free( (void*) hc->read_buf );
  4118fa:	e8 51 19 ff ff       	callq  403250 <__asan_report_load8@plt>
  4118ff:	90                   	nop

0000000000411900 <httpd_ntoa>:
    if ( getnameinfo( &saP->sa, sockaddr_len( saP ), str, sizeof(str), 0, 0, NI_NUMERICHOST ) != 0 )
  411900:	48 89 f8             	mov    %rdi,%rax
    {
  411903:	53                   	push   %rbx
  411904:	48 89 fb             	mov    %rdi,%rbx
    if ( getnameinfo( &saP->sa, sockaddr_len( saP ), str, sizeof(str), 0, 0, NI_NUMERICHOST ) != 0 )
  411907:	48 c1 e8 03          	shr    $0x3,%rax
  41190b:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  411912:	48 89 f8             	mov    %rdi,%rax
  411915:	83 e0 07             	and    $0x7,%eax
  411918:	83 c0 01             	add    $0x1,%eax
  41191b:	38 d0                	cmp    %dl,%al
  41191d:	7c 08                	jl     411927 <httpd_ntoa+0x27>
  41191f:	84 d2                	test   %dl,%dl
  411921:	0f 85 10 01 00 00    	jne    411a37 <httpd_ntoa+0x137>
  411927:	0f b7 3b             	movzwl (%rbx),%edi
  41192a:	e8 61 a0 ff ff       	callq  40b990 <sockaddr_len.isra.1>
  41192f:	48 83 ec 08          	sub    $0x8,%rsp
  411933:	48 89 df             	mov    %rbx,%rdi
  411936:	45 31 c9             	xor    %r9d,%r9d
  411939:	6a 01                	pushq  $0x1
  41193b:	89 c6                	mov    %eax,%esi
  41193d:	45 31 c0             	xor    %r8d,%r8d
  411940:	b9 c8 00 00 00       	mov    $0xc8,%ecx
  411945:	ba c0 1e 64 00       	mov    $0x641ec0,%edx
  41194a:	e8 21 14 ff ff       	callq  402d70 <getnameinfo@plt>
  41194f:	5e                   	pop    %rsi
  411950:	5f                   	pop    %rdi
  411951:	85 c0                	test   %eax,%eax
  411953:	74 1b                	je     411970 <httpd_ntoa+0x70>
	str[0] = '?';
  411955:	b9 3f 00 00 00       	mov    $0x3f,%ecx
  41195a:	66 89 0d 5f 05 23 00 	mov    %cx,0x23055f(%rip)        # 641ec0 <str.6689>
    }
  411961:	b8 c0 1e 64 00       	mov    $0x641ec0,%eax
  411966:	5b                   	pop    %rbx
  411967:	c3                   	retq   
  411968:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41196f:	00 
    else if ( IN6_IS_ADDR_V4MAPPED( &saP->sa_in6.sin6_addr ) && strncmp( str, "::ffff:", 7 ) == 0 )
  411970:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  411974:	48 89 f8             	mov    %rdi,%rax
  411977:	48 c1 e8 03          	shr    $0x3,%rax
  41197b:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  411982:	48 89 f8             	mov    %rdi,%rax
  411985:	83 e0 07             	and    $0x7,%eax
  411988:	83 c0 03             	add    $0x3,%eax
  41198b:	38 d0                	cmp    %dl,%al
  41198d:	7c 08                	jl     411997 <httpd_ntoa+0x97>
  41198f:	84 d2                	test   %dl,%dl
  411991:	0f 85 aa 00 00 00    	jne    411a41 <httpd_ntoa+0x141>
  411997:	8b 53 08             	mov    0x8(%rbx),%edx
  41199a:	85 d2                	test   %edx,%edx
  41199c:	75 c3                	jne    411961 <httpd_ntoa+0x61>
  41199e:	48 8d 7b 0c          	lea    0xc(%rbx),%rdi
  4119a2:	48 89 f8             	mov    %rdi,%rax
  4119a5:	48 c1 e8 03          	shr    $0x3,%rax
  4119a9:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4119b0:	48 89 f8             	mov    %rdi,%rax
  4119b3:	83 e0 07             	and    $0x7,%eax
  4119b6:	83 c0 03             	add    $0x3,%eax
  4119b9:	38 d0                	cmp    %dl,%al
  4119bb:	7c 04                	jl     4119c1 <httpd_ntoa+0xc1>
  4119bd:	84 d2                	test   %dl,%dl
  4119bf:	75 7b                	jne    411a3c <httpd_ntoa+0x13c>
  4119c1:	8b 43 0c             	mov    0xc(%rbx),%eax
  4119c4:	85 c0                	test   %eax,%eax
  4119c6:	75 99                	jne    411961 <httpd_ntoa+0x61>
  4119c8:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
  4119cc:	48 89 f8             	mov    %rdi,%rax
  4119cf:	48 c1 e8 03          	shr    $0x3,%rax
  4119d3:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4119da:	48 89 f8             	mov    %rdi,%rax
  4119dd:	83 e0 07             	and    $0x7,%eax
  4119e0:	83 c0 03             	add    $0x3,%eax
  4119e3:	38 d0                	cmp    %dl,%al
  4119e5:	7c 04                	jl     4119eb <httpd_ntoa+0xeb>
  4119e7:	84 d2                	test   %dl,%dl
  4119e9:	75 5b                	jne    411a46 <httpd_ntoa+0x146>
  4119eb:	e8 e0 b5 ff ff       	callq  40cfd0 <__bswap_32.constprop.7>
  4119f0:	39 43 10             	cmp    %eax,0x10(%rbx)
  4119f3:	0f 85 68 ff ff ff    	jne    411961 <httpd_ntoa+0x61>
  4119f9:	ba 07 00 00 00       	mov    $0x7,%edx
  4119fe:	be 60 40 42 00       	mov    $0x424060,%esi
  411a03:	bf c0 1e 64 00       	mov    $0x641ec0,%edi
  411a08:	e8 e3 19 ff ff       	callq  4033f0 <strncmp@plt>
  411a0d:	85 c0                	test   %eax,%eax
  411a0f:	0f 85 4c ff ff ff    	jne    411961 <httpd_ntoa+0x61>
	(void) memmove( str, &str[7], strlen (&str[7]) + 1 );
  411a15:	bf c7 1e 64 00       	mov    $0x641ec7,%edi
  411a1a:	e8 61 12 ff ff       	callq  402c80 <strlen@plt>
  411a1f:	be c7 1e 64 00       	mov    $0x641ec7,%esi
  411a24:	bf c0 1e 64 00       	mov    $0x641ec0,%edi
  411a29:	48 8d 50 01          	lea    0x1(%rax),%rdx
  411a2d:	e8 ae 12 ff ff       	callq  402ce0 <memmove@plt>
  411a32:	e9 2a ff ff ff       	jmpq   411961 <httpd_ntoa+0x61>
    if ( getnameinfo( &saP->sa, sockaddr_len( saP ), str, sizeof(str), 0, 0, NI_NUMERICHOST ) != 0 )
  411a37:	e8 74 15 ff ff       	callq  402fb0 <__asan_report_load2@plt>
    else if ( IN6_IS_ADDR_V4MAPPED( &saP->sa_in6.sin6_addr ) && strncmp( str, "::ffff:", 7 ) == 0 )
  411a3c:	e8 8f 13 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  411a41:	e8 8a 13 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  411a46:	e8 85 13 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  411a4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000411a50 <initialize_listen_socket>:
    {
  411a50:	41 57                	push   %r15
  411a52:	41 56                	push   %r14
  411a54:	41 55                	push   %r13
  411a56:	41 54                	push   %r12
  411a58:	49 89 fc             	mov    %rdi,%r12
  411a5b:	55                   	push   %rbp
  411a5c:	53                   	push   %rbx
  411a5d:	48 83 ec 78          	sub    $0x78,%rsp
  411a61:	8b 05 99 f8 22 00    	mov    0x22f899(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  411a67:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
  411a6c:	49 89 ef             	mov    %rbp,%r15
  411a6f:	85 c0                	test   %eax,%eax
  411a71:	0f 85 92 02 00 00    	jne    411d09 <initialize_listen_socket+0x2b9>
  411a77:	49 89 ed             	mov    %rbp,%r13
    if ( ! sockaddr_check( saP ) )
  411a7a:	4c 89 e0             	mov    %r12,%rax
    {
  411a7d:	48 c7 45 00 b3 8a b5 	movq   $0x41b58ab3,0x0(%rbp)
  411a84:	41 
  411a85:	4c 8d 75 60          	lea    0x60(%rbp),%r14
  411a89:	49 c1 ed 03          	shr    $0x3,%r13
    if ( ! sockaddr_check( saP ) )
  411a8d:	48 c1 e8 03          	shr    $0x3,%rax
    {
  411a91:	48 c7 45 08 53 21 42 	movq   $0x422153,0x8(%rbp)
  411a98:	00 
  411a99:	48 c7 45 10 50 1a 41 	movq   $0x411a50,0x10(%rbp)
  411aa0:	00 
  411aa1:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
  411aa8:	f1 f1 f1 f1 
  411aac:	41 c7 85 04 80 ff 7f 	movl   $0xf2f2f204,0x7fff8004(%r13)
  411ab3:	04 f2 f2 f2 
  411ab7:	41 c7 85 08 80 ff 7f 	movl   $0xf3f3f3f3,0x7fff8008(%r13)
  411abe:	f3 f3 f3 f3 
    if ( ! sockaddr_check( saP ) )
  411ac2:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  411ac9:	4c 89 e0             	mov    %r12,%rax
  411acc:	83 e0 07             	and    $0x7,%eax
  411acf:	83 c0 01             	add    $0x1,%eax
  411ad2:	38 d0                	cmp    %dl,%al
  411ad4:	7c 08                	jl     411ade <initialize_listen_socket+0x8e>
  411ad6:	84 d2                	test   %dl,%dl
  411ad8:	0f 85 60 01 00 00    	jne    411c3e <initialize_listen_socket+0x1ee>
  411ade:	41 0f b7 14 24       	movzwl (%r12),%edx
  411ae3:	89 d7                	mov    %edx,%edi
  411ae5:	e8 86 9e ff ff       	callq  40b970 <sockaddr_check.isra.0>
  411aea:	85 c0                	test   %eax,%eax
  411aec:	0f 84 5e 01 00 00    	je     411c50 <initialize_listen_socket+0x200>
    listen_fd = socket( saP->sa.sa_family, SOCK_STREAM, 0 );
  411af2:	0f b7 fa             	movzwl %dx,%edi
  411af5:	be 01 00 00 00       	mov    $0x1,%esi
  411afa:	31 d2                	xor    %edx,%edx
  411afc:	e8 ef 11 ff ff       	callq  402cf0 <socket@plt>
  411b01:	89 c3                	mov    %eax,%ebx
    if ( listen_fd < 0 )
  411b03:	85 c0                	test   %eax,%eax
  411b05:	0f 88 88 01 00 00    	js     411c93 <initialize_listen_socket+0x243>
    (void) fcntl( listen_fd, F_SETFD, 1 );
  411b0b:	89 c7                	mov    %eax,%edi
  411b0d:	ba 01 00 00 00       	mov    $0x1,%edx
  411b12:	be 02 00 00 00       	mov    $0x2,%esi
  411b17:	31 c0                	xor    %eax,%eax
  411b19:	e8 e2 12 ff ff       	callq  402e00 <fcntl@plt>
    on = 1;
  411b1e:	49 8d 4e c0          	lea    -0x40(%r14),%rcx
  411b22:	48 89 c8             	mov    %rcx,%rax
  411b25:	48 c1 e8 03          	shr    $0x3,%rax
  411b29:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  411b30:	84 c0                	test   %al,%al
  411b32:	74 08                	je     411b3c <initialize_listen_socket+0xec>
  411b34:	3c 03                	cmp    $0x3,%al
  411b36:	0f 8e fa 00 00 00    	jle    411c36 <initialize_listen_socket+0x1e6>
    if ( setsockopt(
  411b3c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
  411b42:	ba 02 00 00 00       	mov    $0x2,%edx
  411b47:	be 01 00 00 00       	mov    $0x1,%esi
  411b4c:	89 df                	mov    %ebx,%edi
    on = 1;
  411b4e:	41 c7 46 c0 01 00 00 	movl   $0x1,-0x40(%r14)
  411b55:	00 
    if ( setsockopt(
  411b56:	e8 c5 18 ff ff       	callq  403420 <setsockopt@plt>
  411b5b:	85 c0                	test   %eax,%eax
  411b5d:	0f 88 bd 00 00 00    	js     411c20 <initialize_listen_socket+0x1d0>
    if ( bind( listen_fd, &saP->sa, sockaddr_len( saP ) ) < 0 )
  411b63:	4c 89 e0             	mov    %r12,%rax
  411b66:	48 c1 e8 03          	shr    $0x3,%rax
  411b6a:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  411b71:	4c 89 e0             	mov    %r12,%rax
  411b74:	83 e0 07             	and    $0x7,%eax
  411b77:	83 c0 01             	add    $0x1,%eax
  411b7a:	38 d0                	cmp    %dl,%al
  411b7c:	7c 08                	jl     411b86 <initialize_listen_socket+0x136>
  411b7e:	84 d2                	test   %dl,%dl
  411b80:	0f 85 c0 00 00 00    	jne    411c46 <initialize_listen_socket+0x1f6>
  411b86:	41 0f b7 3c 24       	movzwl (%r12),%edi
  411b8b:	e8 00 9e ff ff       	callq  40b990 <sockaddr_len.isra.1>
  411b90:	4c 89 e6             	mov    %r12,%rsi
  411b93:	89 df                	mov    %ebx,%edi
  411b95:	89 c2                	mov    %eax,%edx
  411b97:	e8 d4 10 ff ff       	callq  402c70 <bind@plt>
  411b9c:	85 c0                	test   %eax,%eax
  411b9e:	0f 88 c2 00 00 00    	js     411c66 <initialize_listen_socket+0x216>
    flags = fcntl( listen_fd, F_GETFL, 0 );
  411ba4:	31 d2                	xor    %edx,%edx
  411ba6:	be 03 00 00 00       	mov    $0x3,%esi
  411bab:	89 df                	mov    %ebx,%edi
  411bad:	31 c0                	xor    %eax,%eax
  411baf:	e8 4c 12 ff ff       	callq  402e00 <fcntl@plt>
  411bb4:	89 c2                	mov    %eax,%edx
    if ( flags == -1 )
  411bb6:	83 f8 ff             	cmp    $0xffffffff,%eax
  411bb9:	0f 84 1c 01 00 00    	je     411cdb <initialize_listen_socket+0x28b>
    if ( fcntl( listen_fd, F_SETFL, flags | O_NDELAY ) < 0 )
  411bbf:	80 ce 08             	or     $0x8,%dh
  411bc2:	31 c0                	xor    %eax,%eax
  411bc4:	be 04 00 00 00       	mov    $0x4,%esi
  411bc9:	89 df                	mov    %ebx,%edi
  411bcb:	e8 30 12 ff ff       	callq  402e00 <fcntl@plt>
  411bd0:	85 c0                	test   %eax,%eax
  411bd2:	0f 88 e1 00 00 00    	js     411cb9 <initialize_listen_socket+0x269>
    if ( listen( listen_fd, LISTEN_BACKLOG ) < 0 )
  411bd8:	be 00 04 00 00       	mov    $0x400,%esi
  411bdd:	89 df                	mov    %ebx,%edi
  411bdf:	e8 6c 14 ff ff       	callq  403050 <listen@plt>
  411be4:	85 c0                	test   %eax,%eax
  411be6:	0f 88 16 01 00 00    	js     411d02 <initialize_listen_socket+0x2b2>
    {
  411bec:	49 39 ef             	cmp    %rbp,%r15
  411bef:	0f 85 2a 01 00 00    	jne    411d1f <initialize_listen_socket+0x2cf>
  411bf5:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
  411bfc:	00 00 00 00 
  411c00:	41 c7 85 08 80 ff 7f 	movl   $0x0,0x7fff8008(%r13)
  411c07:	00 00 00 00 
    }
  411c0b:	48 83 c4 78          	add    $0x78,%rsp
  411c0f:	89 d8                	mov    %ebx,%eax
  411c11:	5b                   	pop    %rbx
  411c12:	5d                   	pop    %rbp
  411c13:	41 5c                	pop    %r12
  411c15:	41 5d                	pop    %r13
  411c17:	41 5e                	pop    %r14
  411c19:	41 5f                	pop    %r15
  411c1b:	c3                   	retq   
  411c1c:	0f 1f 40 00          	nopl   0x0(%rax)
	syslog( LOG_CRIT, "setsockopt SO_REUSEADDR - %m" );
  411c20:	be 40 41 42 00       	mov    $0x424140,%esi
  411c25:	bf 02 00 00 00       	mov    $0x2,%edi
  411c2a:	31 c0                	xor    %eax,%eax
  411c2c:	e8 0f 10 ff ff       	callq  402c40 <syslog@plt>
  411c31:	e9 2d ff ff ff       	jmpq   411b63 <initialize_listen_socket+0x113>
    on = 1;
  411c36:	48 89 cf             	mov    %rcx,%rdi
  411c39:	e8 b2 0f ff ff       	callq  402bf0 <__asan_report_store4@plt>
    if ( ! sockaddr_check( saP ) )
  411c3e:	4c 89 e7             	mov    %r12,%rdi
  411c41:	e8 6a 13 ff ff       	callq  402fb0 <__asan_report_load2@plt>
    if ( bind( listen_fd, &saP->sa, sockaddr_len( saP ) ) < 0 )
  411c46:	4c 89 e7             	mov    %r12,%rdi
  411c49:	e8 62 13 ff ff       	callq  402fb0 <__asan_report_load2@plt>
  411c4e:	66 90                	xchg   %ax,%ax
	syslog( LOG_CRIT, "unknown sockaddr family on listen socket" );
  411c50:	be a0 40 42 00       	mov    $0x4240a0,%esi
  411c55:	bf 02 00 00 00       	mov    $0x2,%edi
	return -1;
  411c5a:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
	syslog( LOG_CRIT, "unknown sockaddr family on listen socket" );
  411c5f:	e8 dc 0f ff ff       	callq  402c40 <syslog@plt>
	return -1;
  411c64:	eb 86                	jmp    411bec <initialize_listen_socket+0x19c>
	syslog(
  411c66:	4c 89 e7             	mov    %r12,%rdi
  411c69:	e8 92 fc ff ff       	callq  411900 <httpd_ntoa>
  411c6e:	be 80 41 42 00       	mov    $0x424180,%esi
  411c73:	bf 02 00 00 00       	mov    $0x2,%edi
  411c78:	48 89 c2             	mov    %rax,%rdx
  411c7b:	31 c0                	xor    %eax,%eax
  411c7d:	e8 be 0f ff ff       	callq  402c40 <syslog@plt>
	(void) close( listen_fd );
  411c82:	89 df                	mov    %ebx,%edi
	return -1;
  411c84:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
	(void) close( listen_fd );
  411c89:	e8 42 18 ff ff       	callq  4034d0 <close@plt>
	return -1;
  411c8e:	e9 59 ff ff ff       	jmpq   411bec <initialize_listen_socket+0x19c>
	syslog( LOG_CRIT, "socket %.80s - %m", httpd_ntoa( saP ) );
  411c93:	4c 89 e7             	mov    %r12,%rdi
	return -1;
  411c96:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
	syslog( LOG_CRIT, "socket %.80s - %m", httpd_ntoa( saP ) );
  411c9b:	e8 60 fc ff ff       	callq  411900 <httpd_ntoa>
  411ca0:	be 00 41 42 00       	mov    $0x424100,%esi
  411ca5:	bf 02 00 00 00       	mov    $0x2,%edi
  411caa:	48 89 c2             	mov    %rax,%rdx
  411cad:	31 c0                	xor    %eax,%eax
  411caf:	e8 8c 0f ff ff       	callq  402c40 <syslog@plt>
	return -1;
  411cb4:	e9 33 ff ff ff       	jmpq   411bec <initialize_listen_socket+0x19c>
	syslog( LOG_CRIT, "fcntl O_NDELAY - %m" );
  411cb9:	be 00 42 42 00       	mov    $0x424200,%esi
	syslog( LOG_CRIT, "listen - %m" );
  411cbe:	bf 02 00 00 00       	mov    $0x2,%edi
  411cc3:	31 c0                	xor    %eax,%eax
  411cc5:	e8 76 0f ff ff       	callq  402c40 <syslog@plt>
	(void) close( listen_fd );
  411cca:	89 df                	mov    %ebx,%edi
	return -1;
  411ccc:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
	(void) close( listen_fd );
  411cd1:	e8 fa 17 ff ff       	callq  4034d0 <close@plt>
	return -1;
  411cd6:	e9 11 ff ff ff       	jmpq   411bec <initialize_listen_socket+0x19c>
  411cdb:	89 44 24 0c          	mov    %eax,0xc(%rsp)
	syslog( LOG_CRIT, "fcntl F_GETFL - %m" );
  411cdf:	be c0 41 42 00       	mov    $0x4241c0,%esi
  411ce4:	bf 02 00 00 00       	mov    $0x2,%edi
  411ce9:	31 c0                	xor    %eax,%eax
  411ceb:	e8 50 0f ff ff       	callq  402c40 <syslog@plt>
	(void) close( listen_fd );
  411cf0:	89 df                	mov    %ebx,%edi
  411cf2:	e8 d9 17 ff ff       	callq  4034d0 <close@plt>
	return -1;
  411cf7:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  411cfb:	89 d3                	mov    %edx,%ebx
  411cfd:	e9 ea fe ff ff       	jmpq   411bec <initialize_listen_socket+0x19c>
	syslog( LOG_CRIT, "listen - %m" );
  411d02:	be 40 42 42 00       	mov    $0x424240,%esi
  411d07:	eb b5                	jmp    411cbe <initialize_listen_socket+0x26e>
    {
  411d09:	bf 60 00 00 00       	mov    $0x60,%edi
  411d0e:	e8 9d 10 ff ff       	callq  402db0 <__asan_stack_malloc_1@plt>
  411d13:	48 85 c0             	test   %rax,%rax
  411d16:	48 0f 45 e8          	cmovne %rax,%rbp
  411d1a:	e9 58 fd ff ff       	jmpq   411a77 <initialize_listen_socket+0x27>
  411d1f:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
  411d26:	f5 f5 f5 
  411d29:	48 c7 45 00 0e 36 e0 	movq   $0x45e0360e,0x0(%rbp)
  411d30:	45 
  411d31:	49 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%r13)
  411d38:	41 c7 85 08 80 ff 7f 	movl   $0xf5f5f5f5,0x7fff8008(%r13)
  411d3f:	f5 f5 f5 f5 
  411d43:	e9 c3 fe ff ff       	jmpq   411c0b <initialize_listen_socket+0x1bb>
  411d48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  411d4f:	00 

0000000000411d50 <httpd_initialize>:
    {
  411d50:	41 57                	push   %r15
  411d52:	41 56                	push   %r14
  411d54:	41 89 ce             	mov    %ecx,%r14d
  411d57:	41 55                	push   %r13
  411d59:	4d 89 c5             	mov    %r8,%r13
  411d5c:	41 54                	push   %r12
  411d5e:	49 89 fc             	mov    %rdi,%r12
    hs = NEW( httpd_server, 1 );
  411d61:	bf 88 00 00 00       	mov    $0x88,%edi
    {
  411d66:	55                   	push   %rbp
  411d67:	48 89 d5             	mov    %rdx,%rbp
  411d6a:	53                   	push   %rbx
  411d6b:	48 89 f3             	mov    %rsi,%rbx
  411d6e:	48 83 ec 18          	sub    $0x18,%rsp
  411d72:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
    hs = NEW( httpd_server, 1 );
  411d77:	e8 34 13 ff ff       	callq  4030b0 <malloc@plt>
  411d7c:	49 89 c7             	mov    %rax,%r15
    if ( hs == (httpd_server*) 0 )
  411d7f:	48 85 c0             	test   %rax,%rax
  411d82:	0f 84 a8 06 00 00    	je     412430 <httpd_initialize+0x6e0>
    if ( hostname != (char*) 0 )
  411d88:	4d 85 e4             	test   %r12,%r12
  411d8b:	0f 84 5f 05 00 00    	je     4122f0 <httpd_initialize+0x5a0>
	hs->binding_hostname = strdup( hostname );
  411d91:	4c 89 e7             	mov    %r12,%rdi
  411d94:	e8 17 0f ff ff       	callq  402cb0 <strdup@plt>
  411d99:	4c 89 fa             	mov    %r15,%rdx
  411d9c:	48 c1 ea 03          	shr    $0x3,%rdx
  411da0:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  411da7:	0f 85 0c 07 00 00    	jne    4124b9 <httpd_initialize+0x769>
  411dad:	49 89 07             	mov    %rax,(%r15)
	if ( hs->binding_hostname == (char*) 0 )
  411db0:	48 85 c0             	test   %rax,%rax
  411db3:	0f 84 a4 06 00 00    	je     41245d <httpd_initialize+0x70d>
	hs->server_hostname = hs->binding_hostname;
  411db9:	49 8d 7f 08          	lea    0x8(%r15),%rdi
  411dbd:	48 89 fa             	mov    %rdi,%rdx
  411dc0:	48 c1 ea 03          	shr    $0x3,%rdx
  411dc4:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  411dcb:	0f 85 f0 06 00 00    	jne    4124c1 <httpd_initialize+0x771>
  411dd1:	49 89 47 08          	mov    %rax,0x8(%r15)
    hs->port = port;
  411dd5:	4d 8d 67 10          	lea    0x10(%r15),%r12
  411dd9:	4c 89 e0             	mov    %r12,%rax
  411ddc:	48 c1 e8 03          	shr    $0x3,%rax
  411de0:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  411de7:	84 c0                	test   %al,%al
  411de9:	74 08                	je     411df3 <httpd_initialize+0xa3>
  411deb:	3c 01                	cmp    $0x1,%al
  411ded:	0f 8e 1d 06 00 00    	jle    412410 <httpd_initialize+0x6c0>
  411df3:	66 45 89 77 10       	mov    %r14w,0x10(%r15)
    if ( cgi_pattern == (char*) 0 )
  411df8:	4d 85 ed             	test   %r13,%r13
  411dfb:	0f 84 7f 05 00 00    	je     412380 <httpd_initialize+0x630>
	if ( cgi_pattern[0] == '/' )
  411e01:	4c 89 e8             	mov    %r13,%rax
  411e04:	4c 89 ea             	mov    %r13,%rdx
  411e07:	48 c1 e8 03          	shr    $0x3,%rax
  411e0b:	83 e2 07             	and    $0x7,%edx
  411e0e:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  411e15:	38 d0                	cmp    %dl,%al
  411e17:	7f 08                	jg     411e21 <httpd_initialize+0xd1>
  411e19:	84 c0                	test   %al,%al
  411e1b:	0f 85 06 06 00 00    	jne    412427 <httpd_initialize+0x6d7>
	    ++cgi_pattern;
  411e21:	31 c0                	xor    %eax,%eax
  411e23:	41 80 7d 00 2f       	cmpb   $0x2f,0x0(%r13)
  411e28:	0f 94 c0             	sete   %al
  411e2b:	49 01 c5             	add    %rax,%r13
	hs->cgi_pattern = strdup( cgi_pattern );
  411e2e:	4c 89 ef             	mov    %r13,%rdi
  411e31:	e8 7a 0e ff ff       	callq  402cb0 <strdup@plt>
  411e36:	49 8d 57 18          	lea    0x18(%r15),%rdx
  411e3a:	48 89 d1             	mov    %rdx,%rcx
  411e3d:	48 89 c7             	mov    %rax,%rdi
  411e40:	48 c1 e9 03          	shr    $0x3,%rcx
  411e44:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  411e4b:	0f 85 75 06 00 00    	jne    4124c6 <httpd_initialize+0x776>
  411e51:	49 89 47 18          	mov    %rax,0x18(%r15)
	if ( hs->cgi_pattern == (char*) 0 )
  411e55:	48 85 c0             	test   %rax,%rax
  411e58:	75 17                	jne    411e71 <httpd_initialize+0x121>
  411e5a:	e9 15 06 00 00       	jmpq   412474 <httpd_initialize+0x724>
  411e5f:	90                   	nop
	    (void) strcpy( cp + 1, cp + 2 );
  411e60:	48 8d 78 01          	lea    0x1(%rax),%rdi
  411e64:	48 8d 70 02          	lea    0x2(%rax),%rsi
  411e68:	e8 a3 10 ff ff       	callq  402f10 <strcpy@plt>
  411e6d:	49 8b 7f 18          	mov    0x18(%r15),%rdi
	while ( ( cp = strstr( hs->cgi_pattern, "|/" ) ) != (char*) 0 )
  411e71:	be 80 43 42 00       	mov    $0x424380,%esi
  411e76:	e8 05 15 ff ff       	callq  403380 <strstr@plt>
  411e7b:	48 85 c0             	test   %rax,%rax
  411e7e:	75 e0                	jne    411e60 <httpd_initialize+0x110>
    hs->cgi_limit = cgi_limit;
  411e80:	49 8d 7f 20          	lea    0x20(%r15),%rdi
  411e84:	48 89 f8             	mov    %rdi,%rax
  411e87:	48 c1 e8 03          	shr    $0x3,%rax
  411e8b:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  411e92:	84 c0                	test   %al,%al
  411e94:	74 08                	je     411e9e <httpd_initialize+0x14e>
  411e96:	3c 03                	cmp    $0x3,%al
  411e98:	0f 8e 84 05 00 00    	jle    412422 <httpd_initialize+0x6d2>
  411e9e:	8b 44 24 04          	mov    0x4(%rsp),%eax
    hs->cgi_count = 0;
  411ea2:	49 8d 7f 24          	lea    0x24(%r15),%rdi
    hs->cgi_limit = cgi_limit;
  411ea6:	41 89 47 20          	mov    %eax,0x20(%r15)
    hs->cgi_count = 0;
  411eaa:	48 89 f8             	mov    %rdi,%rax
  411ead:	48 c1 e8 03          	shr    $0x3,%rax
  411eb1:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  411eb8:	48 89 f8             	mov    %rdi,%rax
  411ebb:	83 e0 07             	and    $0x7,%eax
  411ebe:	83 c0 03             	add    $0x3,%eax
  411ec1:	38 d0                	cmp    %dl,%al
  411ec3:	7c 08                	jl     411ecd <httpd_initialize+0x17d>
  411ec5:	84 d2                	test   %dl,%dl
  411ec7:	0f 85 50 05 00 00    	jne    41241d <httpd_initialize+0x6cd>
  411ecd:	41 c7 47 24 00 00 00 	movl   $0x0,0x24(%r15)
  411ed4:	00 
    hs->charset = strdup( charset );
  411ed5:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
  411eda:	e8 d1 0d ff ff       	callq  402cb0 <strdup@plt>
  411edf:	49 8d 7f 28          	lea    0x28(%r15),%rdi
  411ee3:	48 89 fa             	mov    %rdi,%rdx
  411ee6:	48 c1 ea 03          	shr    $0x3,%rdx
  411eea:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  411ef1:	0f 85 e7 05 00 00    	jne    4124de <httpd_initialize+0x78e>
  411ef7:	49 89 47 28          	mov    %rax,0x28(%r15)
    hs->p3p = strdup( p3p );
  411efb:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
  411f00:	e8 ab 0d ff ff       	callq  402cb0 <strdup@plt>
  411f05:	49 8d 7f 30          	lea    0x30(%r15),%rdi
  411f09:	48 89 fa             	mov    %rdi,%rdx
  411f0c:	48 c1 ea 03          	shr    $0x3,%rdx
  411f10:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  411f17:	0f 85 cb 05 00 00    	jne    4124e8 <httpd_initialize+0x798>
    hs->max_age = max_age;
  411f1d:	49 8d 7f 38          	lea    0x38(%r15),%rdi
    hs->p3p = strdup( p3p );
  411f21:	49 89 47 30          	mov    %rax,0x30(%r15)
    hs->max_age = max_age;
  411f25:	48 89 f8             	mov    %rdi,%rax
  411f28:	48 c1 e8 03          	shr    $0x3,%rax
  411f2c:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  411f33:	84 c0                	test   %al,%al
  411f35:	74 08                	je     411f3f <httpd_initialize+0x1ef>
  411f37:	3c 03                	cmp    $0x3,%al
  411f39:	0f 8e d9 04 00 00    	jle    412418 <httpd_initialize+0x6c8>
  411f3f:	8b 44 24 60          	mov    0x60(%rsp),%eax
    hs->cwd = strdup( cwd );
  411f43:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
    hs->max_age = max_age;
  411f48:	41 89 47 38          	mov    %eax,0x38(%r15)
    hs->cwd = strdup( cwd );
  411f4c:	e8 5f 0d ff ff       	callq  402cb0 <strdup@plt>
  411f51:	49 8d 7f 40          	lea    0x40(%r15),%rdi
  411f55:	48 89 fa             	mov    %rdi,%rdx
  411f58:	48 c1 ea 03          	shr    $0x3,%rdx
  411f5c:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  411f63:	0f 85 7a 05 00 00    	jne    4124e3 <httpd_initialize+0x793>
  411f69:	49 89 47 40          	mov    %rax,0x40(%r15)
    if ( hs->cwd == (char*) 0 )
  411f6d:	48 85 c0             	test   %rax,%rax
  411f70:	0f 84 d0 04 00 00    	je     412446 <httpd_initialize+0x6f6>
    if ( url_pattern == (char*) 0 )
  411f76:	48 83 bc 24 98 00 00 	cmpq   $0x0,0x98(%rsp)
  411f7d:	00 00 
  411f7f:	0f 84 ab 02 00 00    	je     412230 <httpd_initialize+0x4e0>
	hs->url_pattern = strdup( url_pattern );
  411f85:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
  411f8c:	00 
  411f8d:	e8 1e 0d ff ff       	callq  402cb0 <strdup@plt>
  411f92:	49 8d 7f 70          	lea    0x70(%r15),%rdi
  411f96:	48 89 fa             	mov    %rdi,%rdx
  411f99:	48 c1 ea 03          	shr    $0x3,%rdx
  411f9d:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  411fa4:	0f 85 88 05 00 00    	jne    412532 <httpd_initialize+0x7e2>
  411faa:	49 89 47 70          	mov    %rax,0x70(%r15)
	if ( hs->url_pattern == (char*) 0 )
  411fae:	48 85 c0             	test   %rax,%rax
  411fb1:	0f 84 d4 04 00 00    	je     41248b <httpd_initialize+0x73b>
    if ( local_pattern == (char*) 0 )
  411fb7:	48 83 bc 24 a0 00 00 	cmpq   $0x0,0xa0(%rsp)
  411fbe:	00 00 
  411fc0:	0f 84 99 02 00 00    	je     41225f <httpd_initialize+0x50f>
	hs->local_pattern = strdup( local_pattern );
  411fc6:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
  411fcd:	00 
  411fce:	e8 dd 0c ff ff       	callq  402cb0 <strdup@plt>
  411fd3:	49 8d 7f 78          	lea    0x78(%r15),%rdi
  411fd7:	48 89 fa             	mov    %rdi,%rdx
  411fda:	48 c1 ea 03          	shr    $0x3,%rdx
  411fde:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  411fe5:	0f 85 4c 05 00 00    	jne    412537 <httpd_initialize+0x7e7>
  411feb:	49 89 47 78          	mov    %rax,0x78(%r15)
	if ( hs->local_pattern == (char*) 0 )
  411fef:	48 85 c0             	test   %rax,%rax
  411ff2:	0f 84 aa 04 00 00    	je     4124a2 <httpd_initialize+0x752>
    hs->no_log = no_log;
  411ff8:	49 8d 7f 50          	lea    0x50(%r15),%rdi
  411ffc:	48 89 f8             	mov    %rdi,%rax
  411fff:	48 c1 e8 03          	shr    $0x3,%rax
  412003:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41200a:	84 c0                	test   %al,%al
  41200c:	74 08                	je     412016 <httpd_initialize+0x2c6>
  41200e:	3c 03                	cmp    $0x3,%al
  412010:	0f 8e f1 04 00 00    	jle    412507 <httpd_initialize+0x7b7>
  412016:	8b 44 24 70          	mov    0x70(%rsp),%eax
    hs->logfp = (FILE*) 0;
  41201a:	49 8d 7f 58          	lea    0x58(%r15),%rdi
    hs->no_log = no_log;
  41201e:	41 89 47 50          	mov    %eax,0x50(%r15)
    hs->logfp = (FILE*) 0;
  412022:	48 89 f8             	mov    %rdi,%rax
  412025:	48 c1 e8 03          	shr    $0x3,%rax
  412029:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  412030:	0f 85 d6 04 00 00    	jne    41250c <httpd_initialize+0x7bc>
  412036:	49 c7 47 58 00 00 00 	movq   $0x0,0x58(%r15)
  41203d:	00 
    httpd_set_logfp( hs, logfp );
  41203e:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
  412043:	4c 89 ff             	mov    %r15,%rdi
  412046:	e8 95 af ff ff       	callq  40cfe0 <httpd_set_logfp>
    hs->no_symlink_check = no_symlink_check;
  41204b:	49 8d 7f 60          	lea    0x60(%r15),%rdi
  41204f:	48 89 f8             	mov    %rdi,%rax
  412052:	48 c1 e8 03          	shr    $0x3,%rax
  412056:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41205d:	84 c0                	test   %al,%al
  41205f:	74 08                	je     412069 <httpd_initialize+0x319>
  412061:	3c 03                	cmp    $0x3,%al
  412063:	0f 8e a8 04 00 00    	jle    412511 <httpd_initialize+0x7c1>
  412069:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
    hs->vhost = vhost;
  412070:	49 8d 7f 64          	lea    0x64(%r15),%rdi
    hs->no_symlink_check = no_symlink_check;
  412074:	41 89 47 60          	mov    %eax,0x60(%r15)
    hs->vhost = vhost;
  412078:	48 89 f8             	mov    %rdi,%rax
  41207b:	48 c1 e8 03          	shr    $0x3,%rax
  41207f:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  412086:	48 89 f8             	mov    %rdi,%rax
  412089:	83 e0 07             	and    $0x7,%eax
  41208c:	83 c0 03             	add    $0x3,%eax
  41208f:	38 d0                	cmp    %dl,%al
  412091:	7c 08                	jl     41209b <httpd_initialize+0x34b>
  412093:	84 d2                	test   %dl,%dl
  412095:	0f 85 7b 04 00 00    	jne    412516 <httpd_initialize+0x7c6>
  41209b:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
    hs->global_passwd = global_passwd;
  4120a2:	49 8d 7f 68          	lea    0x68(%r15),%rdi
    hs->vhost = vhost;
  4120a6:	41 89 47 64          	mov    %eax,0x64(%r15)
    hs->global_passwd = global_passwd;
  4120aa:	48 89 f8             	mov    %rdi,%rax
  4120ad:	48 c1 e8 03          	shr    $0x3,%rax
  4120b1:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4120b8:	84 c0                	test   %al,%al
  4120ba:	74 08                	je     4120c4 <httpd_initialize+0x374>
  4120bc:	3c 03                	cmp    $0x3,%al
  4120be:	0f 8e 39 04 00 00    	jle    4124fd <httpd_initialize+0x7ad>
  4120c4:	8b 84 24 90 00 00 00 	mov    0x90(%rsp),%eax
    hs->no_empty_referers = no_empty_referers;
  4120cb:	49 8d bf 80 00 00 00 	lea    0x80(%r15),%rdi
    hs->global_passwd = global_passwd;
  4120d2:	41 89 47 68          	mov    %eax,0x68(%r15)
    hs->no_empty_referers = no_empty_referers;
  4120d6:	48 89 f8             	mov    %rdi,%rax
  4120d9:	48 c1 e8 03          	shr    $0x3,%rax
  4120dd:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4120e4:	84 c0                	test   %al,%al
  4120e6:	74 08                	je     4120f0 <httpd_initialize+0x3a0>
  4120e8:	3c 03                	cmp    $0x3,%al
  4120ea:	0f 8e 12 04 00 00    	jle    412502 <httpd_initialize+0x7b2>
  4120f0:	8b 84 24 a8 00 00 00 	mov    0xa8(%rsp),%eax
  4120f7:	41 89 87 80 00 00 00 	mov    %eax,0x80(%r15)
    if ( sa6P == (httpd_sockaddr*) 0 )
  4120fe:	48 85 ed             	test   %rbp,%rbp
  412101:	0f 84 b1 01 00 00    	je     4122b8 <httpd_initialize+0x568>
	hs->listen6_fd = initialize_listen_socket( sa6P );
  412107:	48 89 ef             	mov    %rbp,%rdi
  41210a:	e8 41 f9 ff ff       	callq  411a50 <initialize_listen_socket>
  41210f:	49 8d 7f 4c          	lea    0x4c(%r15),%rdi
  412113:	48 89 fa             	mov    %rdi,%rdx
  412116:	48 c1 ea 03          	shr    $0x3,%rdx
  41211a:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  412121:	48 89 fa             	mov    %rdi,%rdx
  412124:	83 e2 07             	and    $0x7,%edx
  412127:	83 c2 03             	add    $0x3,%edx
  41212a:	38 ca                	cmp    %cl,%dl
  41212c:	7c 08                	jl     412136 <httpd_initialize+0x3e6>
  41212e:	84 c9                	test   %cl,%cl
  412130:	0f 85 2d 04 00 00    	jne    412563 <httpd_initialize+0x813>
  412136:	41 89 47 4c          	mov    %eax,0x4c(%r15)
    if ( sa4P == (httpd_sockaddr*) 0 )
  41213a:	48 85 db             	test   %rbx,%rbx
  41213d:	0f 84 45 01 00 00    	je     412288 <httpd_initialize+0x538>
	hs->listen4_fd = initialize_listen_socket( sa4P );
  412143:	48 89 df             	mov    %rbx,%rdi
  412146:	4d 8d 6f 48          	lea    0x48(%r15),%r13
  41214a:	e8 01 f9 ff ff       	callq  411a50 <initialize_listen_socket>
  41214f:	4c 89 ea             	mov    %r13,%rdx
  412152:	48 c1 ea 03          	shr    $0x3,%rdx
  412156:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41215d:	84 d2                	test   %dl,%dl
  41215f:	74 09                	je     41216a <httpd_initialize+0x41a>
  412161:	80 fa 03             	cmp    $0x3,%dl
  412164:	0f 8e fe 03 00 00    	jle    412568 <httpd_initialize+0x818>
  41216a:	41 89 47 48          	mov    %eax,0x48(%r15)
    if ( hs->listen4_fd == -1 && hs->listen6_fd == -1 )
  41216e:	4c 89 e8             	mov    %r13,%rax
  412171:	48 c1 e8 03          	shr    $0x3,%rax
  412175:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41217c:	0f 85 4c 03 00 00    	jne    4124ce <httpd_initialize+0x77e>
  412182:	49 83 7f 48 ff       	cmpq   $0xffffffffffffffff,0x48(%r15)
  412187:	0f 84 73 02 00 00    	je     412400 <httpd_initialize+0x6b0>
    init_mime();
  41218d:	e8 8e 8b ff ff       	callq  40ad20 <init_mime>
    if ( hs->binding_hostname == (char*) 0 )
  412192:	4c 89 f8             	mov    %r15,%rax
  412195:	48 c1 e8 03          	shr    $0x3,%rax
  412199:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4121a0:	0f 85 30 03 00 00    	jne    4124d6 <httpd_initialize+0x786>
	    (int) hs->port );
  4121a6:	4c 89 e0             	mov    %r12,%rax
  4121a9:	48 c1 e8 03          	shr    $0x3,%rax
    if ( hs->binding_hostname == (char*) 0 )
  4121ad:	49 83 3f 00          	cmpq   $0x0,(%r15)
	    (int) hs->port );
  4121b1:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
    if ( hs->binding_hostname == (char*) 0 )
  4121b8:	0f 84 12 02 00 00    	je     4123d0 <httpd_initialize+0x680>
	    (int) hs->port );
  4121be:	84 c0                	test   %al,%al
  4121c0:	74 08                	je     4121ca <httpd_initialize+0x47a>
  4121c2:	3c 01                	cmp    $0x1,%al
  4121c4:	0f 8e 23 03 00 00    	jle    4124ed <httpd_initialize+0x79d>
	    httpd_ntoa( hs->listen4_fd != -1 ? sa4P : sa6P ),
  4121ca:	4c 89 e8             	mov    %r13,%rax
	syslog(
  4121cd:	45 0f b7 67 10       	movzwl 0x10(%r15),%r12d
	    httpd_ntoa( hs->listen4_fd != -1 ? sa4P : sa6P ),
  4121d2:	48 c1 e8 03          	shr    $0x3,%rax
  4121d6:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4121dd:	84 c0                	test   %al,%al
  4121df:	74 08                	je     4121e9 <httpd_initialize+0x499>
  4121e1:	3c 03                	cmp    $0x3,%al
  4121e3:	0f 8e 0c 03 00 00    	jle    4124f5 <httpd_initialize+0x7a5>
	syslog(
  4121e9:	41 83 7f 48 ff       	cmpl   $0xffffffff,0x48(%r15)
  4121ee:	48 0f 44 dd          	cmove  %rbp,%rbx
  4121f2:	48 89 df             	mov    %rbx,%rdi
  4121f5:	e8 06 f7 ff ff       	callq  411900 <httpd_ntoa>
  4121fa:	45 89 e0             	mov    %r12d,%r8d
  4121fd:	ba c0 44 42 00       	mov    $0x4244c0,%edx
  412202:	be 40 45 42 00       	mov    $0x424540,%esi
  412207:	48 89 c1             	mov    %rax,%rcx
  41220a:	bf 05 00 00 00       	mov    $0x5,%edi
  41220f:	31 c0                	xor    %eax,%eax
  412211:	e8 2a 0a ff ff       	callq  402c40 <syslog@plt>
    }
  412216:	48 83 c4 18          	add    $0x18,%rsp
  41221a:	4c 89 f8             	mov    %r15,%rax
  41221d:	5b                   	pop    %rbx
  41221e:	5d                   	pop    %rbp
  41221f:	41 5c                	pop    %r12
  412221:	41 5d                	pop    %r13
  412223:	41 5e                	pop    %r14
  412225:	41 5f                	pop    %r15
  412227:	c3                   	retq   
  412228:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41222f:	00 
	hs->url_pattern = (char*) 0;
  412230:	49 8d 7f 70          	lea    0x70(%r15),%rdi
  412234:	48 89 f8             	mov    %rdi,%rax
  412237:	48 c1 e8 03          	shr    $0x3,%rax
  41223b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  412242:	0f 85 11 03 00 00    	jne    412559 <httpd_initialize+0x809>
    if ( local_pattern == (char*) 0 )
  412248:	48 83 bc 24 a0 00 00 	cmpq   $0x0,0xa0(%rsp)
  41224f:	00 00 
	hs->url_pattern = (char*) 0;
  412251:	49 c7 47 70 00 00 00 	movq   $0x0,0x70(%r15)
  412258:	00 
    if ( local_pattern == (char*) 0 )
  412259:	0f 85 67 fd ff ff    	jne    411fc6 <httpd_initialize+0x276>
	hs->local_pattern = (char*) 0;
  41225f:	49 8d 7f 78          	lea    0x78(%r15),%rdi
  412263:	48 89 f8             	mov    %rdi,%rax
  412266:	48 c1 e8 03          	shr    $0x3,%rax
  41226a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  412271:	0f 85 e7 02 00 00    	jne    41255e <httpd_initialize+0x80e>
  412277:	49 c7 47 78 00 00 00 	movq   $0x0,0x78(%r15)
  41227e:	00 
  41227f:	e9 74 fd ff ff       	jmpq   411ff8 <httpd_initialize+0x2a8>
  412284:	0f 1f 40 00          	nopl   0x0(%rax)
	hs->listen4_fd = -1;
  412288:	4d 8d 6f 48          	lea    0x48(%r15),%r13
  41228c:	4c 89 e8             	mov    %r13,%rax
  41228f:	48 c1 e8 03          	shr    $0x3,%rax
  412293:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41229a:	84 c0                	test   %al,%al
  41229c:	74 08                	je     4122a6 <httpd_initialize+0x556>
  41229e:	3c 03                	cmp    $0x3,%al
  4122a0:	0f 8e 96 02 00 00    	jle    41253c <httpd_initialize+0x7ec>
  4122a6:	41 c7 47 48 ff ff ff 	movl   $0xffffffff,0x48(%r15)
  4122ad:	ff 
  4122ae:	e9 bb fe ff ff       	jmpq   41216e <httpd_initialize+0x41e>
  4122b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	hs->listen6_fd = -1;
  4122b8:	49 8d 7f 4c          	lea    0x4c(%r15),%rdi
  4122bc:	48 89 f8             	mov    %rdi,%rax
  4122bf:	48 c1 e8 03          	shr    $0x3,%rax
  4122c3:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4122ca:	48 89 f8             	mov    %rdi,%rax
  4122cd:	83 e0 07             	and    $0x7,%eax
  4122d0:	83 c0 03             	add    $0x3,%eax
  4122d3:	38 d0                	cmp    %dl,%al
  4122d5:	7c 08                	jl     4122df <httpd_initialize+0x58f>
  4122d7:	84 d2                	test   %dl,%dl
  4122d9:	0f 85 65 02 00 00    	jne    412544 <httpd_initialize+0x7f4>
  4122df:	41 c7 47 4c ff ff ff 	movl   $0xffffffff,0x4c(%r15)
  4122e6:	ff 
  4122e7:	e9 4e fe ff ff       	jmpq   41213a <httpd_initialize+0x3ea>
  4122ec:	0f 1f 40 00          	nopl   0x0(%rax)
	hs->binding_hostname = (char*) 0;
  4122f0:	48 c1 e8 03          	shr    $0x3,%rax
  4122f4:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4122fb:	0f 85 48 02 00 00    	jne    412549 <httpd_initialize+0x7f9>
	hs->server_hostname = (char*) 0;
  412301:	49 8d 47 08          	lea    0x8(%r15),%rax
	hs->binding_hostname = (char*) 0;
  412305:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
	hs->server_hostname = (char*) 0;
  41230c:	49 89 c4             	mov    %rax,%r12
  41230f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  412314:	49 c1 ec 03          	shr    $0x3,%r12
  412318:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  41231f:	7f 00 
  412321:	0f 85 2a 02 00 00    	jne    412551 <httpd_initialize+0x801>
  412327:	49 c7 47 08 00 00 00 	movq   $0x0,0x8(%r15)
  41232e:	00 
	if ( gethostname( ghnbuf, sizeof(ghnbuf) ) < 0 )
  41232f:	be 00 01 00 00       	mov    $0x100,%esi
  412334:	bf 00 2b 64 00       	mov    $0x642b00,%edi
  412339:	e8 02 0f ff ff       	callq  403240 <gethostname@plt>
  41233e:	85 c0                	test   %eax,%eax
  412340:	78 66                	js     4123a8 <httpd_initialize+0x658>
	if ( hs->server_hostname == (char*) 0 )
  412342:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  412349:	7f 00 
  41234b:	0f 85 ca 01 00 00    	jne    41251b <httpd_initialize+0x7cb>
  412351:	49 83 7f 08 00       	cmpq   $0x0,0x8(%r15)
  412356:	0f 85 79 fa ff ff    	jne    411dd5 <httpd_initialize+0x85>
	    if ( ghnbuf[0] != '\0' )
  41235c:	80 3d 9d 07 23 00 00 	cmpb   $0x0,0x23079d(%rip)        # 642b00 <ghnbuf.5986>
  412363:	0f 84 6c fa ff ff    	je     411dd5 <httpd_initialize+0x85>
		hs->server_hostname = ghnbuf;
  412369:	49 c7 47 08 00 2b 64 	movq   $0x642b00,0x8(%r15)
  412370:	00 
  412371:	e9 5f fa ff ff       	jmpq   411dd5 <httpd_initialize+0x85>
  412376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41237d:	00 00 00 
	hs->cgi_pattern = (char*) 0;
  412380:	49 8d 7f 18          	lea    0x18(%r15),%rdi
  412384:	48 89 f8             	mov    %rdi,%rax
  412387:	48 c1 e8 03          	shr    $0x3,%rax
  41238b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  412392:	0f 85 95 01 00 00    	jne    41252d <httpd_initialize+0x7dd>
  412398:	49 c7 47 18 00 00 00 	movq   $0x0,0x18(%r15)
  41239f:	00 
  4123a0:	e9 db fa ff ff       	jmpq   411e80 <httpd_initialize+0x130>
  4123a5:	0f 1f 00             	nopl   (%rax)
	    ghnbuf[0] = '\0';
  4123a8:	c6 05 51 07 23 00 00 	movb   $0x0,0x230751(%rip)        # 642b00 <ghnbuf.5986>
	if ( hs->server_hostname == (char*) 0 )
  4123af:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  4123b6:	7f 00 
  4123b8:	0f 84 17 fa ff ff    	je     411dd5 <httpd_initialize+0x85>
  4123be:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  4123c3:	e8 88 0e ff ff       	callq  403250 <__asan_report_load8@plt>
  4123c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4123cf:	00 
	    (int) hs->port );
  4123d0:	84 c0                	test   %al,%al
  4123d2:	74 08                	je     4123dc <httpd_initialize+0x68c>
  4123d4:	3c 01                	cmp    $0x1,%al
  4123d6:	0f 8e 49 01 00 00    	jle    412525 <httpd_initialize+0x7d5>
	syslog(
  4123dc:	41 0f b7 4f 10       	movzwl 0x10(%r15),%ecx
  4123e1:	ba c0 44 42 00       	mov    $0x4244c0,%edx
  4123e6:	be 00 45 42 00       	mov    $0x424500,%esi
  4123eb:	31 c0                	xor    %eax,%eax
  4123ed:	bf 05 00 00 00       	mov    $0x5,%edi
  4123f2:	e8 49 08 ff ff       	callq  402c40 <syslog@plt>
  4123f7:	e9 1a fe ff ff       	jmpq   412216 <httpd_initialize+0x4c6>
  4123fc:	0f 1f 40 00          	nopl   0x0(%rax)
	free_httpd_server( hs );
  412400:	4c 89 ff             	mov    %r15,%rdi
	return (httpd_server*) 0;
  412403:	45 31 ff             	xor    %r15d,%r15d
	free_httpd_server( hs );
  412406:	e8 e5 87 ff ff       	callq  40abf0 <free_httpd_server>
	return (httpd_server*) 0;
  41240b:	e9 06 fe ff ff       	jmpq   412216 <httpd_initialize+0x4c6>
    hs->port = port;
  412410:	4c 89 e7             	mov    %r12,%rdi
  412413:	e8 48 0e ff ff       	callq  403260 <__asan_report_store2@plt>
    hs->max_age = max_age;
  412418:	e8 d3 07 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hs->cgi_count = 0;
  41241d:	e8 ce 07 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hs->cgi_limit = cgi_limit;
  412422:	e8 c9 07 ff ff       	callq  402bf0 <__asan_report_store4@plt>
	if ( cgi_pattern[0] == '/' )
  412427:	4c 89 ef             	mov    %r13,%rdi
  41242a:	e8 e1 0c ff ff       	callq  403110 <__asan_report_load1@plt>
  41242f:	90                   	nop
	syslog( LOG_CRIT, "out of memory allocating an httpd_server" );
  412430:	be 80 42 42 00       	mov    $0x424280,%esi
  412435:	bf 02 00 00 00       	mov    $0x2,%edi
  41243a:	31 c0                	xor    %eax,%eax
  41243c:	e8 ff 07 ff ff       	callq  402c40 <syslog@plt>
	return (httpd_server*) 0;
  412441:	e9 d0 fd ff ff       	jmpq   412216 <httpd_initialize+0x4c6>
	syslog( LOG_CRIT, "out of memory copying cwd" );
  412446:	be c0 43 42 00       	mov    $0x4243c0,%esi
  41244b:	bf 02 00 00 00       	mov    $0x2,%edi
	return (httpd_server*) 0;
  412450:	45 31 ff             	xor    %r15d,%r15d
	syslog( LOG_CRIT, "out of memory copying cwd" );
  412453:	e8 e8 07 ff ff       	callq  402c40 <syslog@plt>
	return (httpd_server*) 0;
  412458:	e9 b9 fd ff ff       	jmpq   412216 <httpd_initialize+0x4c6>
	    syslog( LOG_CRIT, "out of memory copying hostname" );
  41245d:	be e0 42 42 00       	mov    $0x4242e0,%esi
  412462:	bf 02 00 00 00       	mov    $0x2,%edi
	    return (httpd_server*) 0;
  412467:	45 31 ff             	xor    %r15d,%r15d
	    syslog( LOG_CRIT, "out of memory copying hostname" );
  41246a:	e8 d1 07 ff ff       	callq  402c40 <syslog@plt>
	    return (httpd_server*) 0;
  41246f:	e9 a2 fd ff ff       	jmpq   412216 <httpd_initialize+0x4c6>
	    syslog( LOG_CRIT, "out of memory copying cgi_pattern" );
  412474:	be 20 43 42 00       	mov    $0x424320,%esi
  412479:	bf 02 00 00 00       	mov    $0x2,%edi
	    return (httpd_server*) 0;
  41247e:	45 31 ff             	xor    %r15d,%r15d
	    syslog( LOG_CRIT, "out of memory copying cgi_pattern" );
  412481:	e8 ba 07 ff ff       	callq  402c40 <syslog@plt>
	    return (httpd_server*) 0;
  412486:	e9 8b fd ff ff       	jmpq   412216 <httpd_initialize+0x4c6>
	    syslog( LOG_CRIT, "out of memory copying url_pattern" );
  41248b:	be 00 44 42 00       	mov    $0x424400,%esi
  412490:	bf 02 00 00 00       	mov    $0x2,%edi
	    return (httpd_server*) 0;
  412495:	45 31 ff             	xor    %r15d,%r15d
	    syslog( LOG_CRIT, "out of memory copying url_pattern" );
  412498:	e8 a3 07 ff ff       	callq  402c40 <syslog@plt>
	    return (httpd_server*) 0;
  41249d:	e9 74 fd ff ff       	jmpq   412216 <httpd_initialize+0x4c6>
	    syslog( LOG_CRIT, "out of memory copying local_pattern" );
  4124a2:	be 60 44 42 00       	mov    $0x424460,%esi
  4124a7:	bf 02 00 00 00       	mov    $0x2,%edi
	    return (httpd_server*) 0;
  4124ac:	45 31 ff             	xor    %r15d,%r15d
	    syslog( LOG_CRIT, "out of memory copying local_pattern" );
  4124af:	e8 8c 07 ff ff       	callq  402c40 <syslog@plt>
	    return (httpd_server*) 0;
  4124b4:	e9 5d fd ff ff       	jmpq   412216 <httpd_initialize+0x4c6>
	hs->binding_hostname = strdup( hostname );
  4124b9:	4c 89 ff             	mov    %r15,%rdi
  4124bc:	e8 df 0a ff ff       	callq  402fa0 <__asan_report_store8@plt>
	hs->server_hostname = hs->binding_hostname;
  4124c1:	e8 da 0a ff ff       	callq  402fa0 <__asan_report_store8@plt>
	hs->cgi_pattern = strdup( cgi_pattern );
  4124c6:	48 89 d7             	mov    %rdx,%rdi
  4124c9:	e8 d2 0a ff ff       	callq  402fa0 <__asan_report_store8@plt>
    if ( hs->listen4_fd == -1 && hs->listen6_fd == -1 )
  4124ce:	4c 89 ef             	mov    %r13,%rdi
  4124d1:	e8 7a 0d ff ff       	callq  403250 <__asan_report_load8@plt>
    if ( hs->binding_hostname == (char*) 0 )
  4124d6:	4c 89 ff             	mov    %r15,%rdi
  4124d9:	e8 72 0d ff ff       	callq  403250 <__asan_report_load8@plt>
    hs->charset = strdup( charset );
  4124de:	e8 bd 0a ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hs->cwd = strdup( cwd );
  4124e3:	e8 b8 0a ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hs->p3p = strdup( p3p );
  4124e8:	e8 b3 0a ff ff       	callq  402fa0 <__asan_report_store8@plt>
	    (int) hs->port );
  4124ed:	4c 89 e7             	mov    %r12,%rdi
  4124f0:	e8 bb 0a ff ff       	callq  402fb0 <__asan_report_load2@plt>
	    httpd_ntoa( hs->listen4_fd != -1 ? sa4P : sa6P ),
  4124f5:	4c 89 ef             	mov    %r13,%rdi
  4124f8:	e8 d3 08 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    hs->global_passwd = global_passwd;
  4124fd:	e8 ee 06 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hs->no_empty_referers = no_empty_referers;
  412502:	e8 e9 06 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hs->no_log = no_log;
  412507:	e8 e4 06 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hs->logfp = (FILE*) 0;
  41250c:	e8 8f 0a ff ff       	callq  402fa0 <__asan_report_store8@plt>
    hs->no_symlink_check = no_symlink_check;
  412511:	e8 da 06 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    hs->vhost = vhost;
  412516:	e8 d5 06 ff ff       	callq  402bf0 <__asan_report_store4@plt>
	if ( hs->server_hostname == (char*) 0 )
  41251b:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  412520:	e8 2b 0d ff ff       	callq  403250 <__asan_report_load8@plt>
	    (int) hs->port );
  412525:	4c 89 e7             	mov    %r12,%rdi
  412528:	e8 83 0a ff ff       	callq  402fb0 <__asan_report_load2@plt>
	hs->cgi_pattern = (char*) 0;
  41252d:	e8 6e 0a ff ff       	callq  402fa0 <__asan_report_store8@plt>
	hs->url_pattern = strdup( url_pattern );
  412532:	e8 69 0a ff ff       	callq  402fa0 <__asan_report_store8@plt>
	hs->local_pattern = strdup( local_pattern );
  412537:	e8 64 0a ff ff       	callq  402fa0 <__asan_report_store8@plt>
	hs->listen4_fd = -1;
  41253c:	4c 89 ef             	mov    %r13,%rdi
  41253f:	e8 ac 06 ff ff       	callq  402bf0 <__asan_report_store4@plt>
	hs->listen6_fd = -1;
  412544:	e8 a7 06 ff ff       	callq  402bf0 <__asan_report_store4@plt>
	hs->binding_hostname = (char*) 0;
  412549:	4c 89 ff             	mov    %r15,%rdi
  41254c:	e8 4f 0a ff ff       	callq  402fa0 <__asan_report_store8@plt>
	hs->server_hostname = (char*) 0;
  412551:	48 89 c7             	mov    %rax,%rdi
  412554:	e8 47 0a ff ff       	callq  402fa0 <__asan_report_store8@plt>
	hs->url_pattern = (char*) 0;
  412559:	e8 42 0a ff ff       	callq  402fa0 <__asan_report_store8@plt>
	hs->local_pattern = (char*) 0;
  41255e:	e8 3d 0a ff ff       	callq  402fa0 <__asan_report_store8@plt>
	hs->listen6_fd = initialize_listen_socket( sa6P );
  412563:	e8 88 06 ff ff       	callq  402bf0 <__asan_report_store4@plt>
	hs->listen4_fd = initialize_listen_socket( sa4P );
  412568:	4c 89 ef             	mov    %r13,%rdi
  41256b:	e8 80 06 ff ff       	callq  402bf0 <__asan_report_store4@plt>

0000000000412570 <vhost_map>:
    {
  412570:	41 57                	push   %r15
  412572:	41 56                	push   %r14
  412574:	41 55                	push   %r13
  412576:	41 54                	push   %r12
  412578:	55                   	push   %rbp
  412579:	53                   	push   %rbx
  41257a:	48 89 fb             	mov    %rdi,%rbx
  41257d:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
  412584:	8b 15 76 ed 22 00    	mov    0x22ed76(%rip),%edx        # 641300 <__asan_option_detect_stack_use_after_return>
  41258a:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
  41258f:	85 d2                	test   %edx,%edx
  412591:	0f 85 79 05 00 00    	jne    412b10 <vhost_map+0x5a0>
    if ( hc->reqhost[0] != '\0' )
  412597:	48 8d bb 48 01 00 00 	lea    0x148(%rbx),%rdi
    {
  41259e:	49 89 ec             	mov    %rbp,%r12
  4125a1:	48 c7 45 00 b3 8a b5 	movq   $0x41b58ab3,0x0(%rbp)
  4125a8:	41 
  4125a9:	48 8d 8d 00 01 00 00 	lea    0x100(%rbp),%rcx
    if ( hc->reqhost[0] != '\0' )
  4125b0:	48 89 f8             	mov    %rdi,%rax
    {
  4125b3:	49 c1 ec 03          	shr    $0x3,%r12
  4125b7:	48 c7 45 08 3a 21 42 	movq   $0x42213a,0x8(%rbp)
  4125be:	00 
    if ( hc->reqhost[0] != '\0' )
  4125bf:	48 c1 e8 03          	shr    $0x3,%rax
    {
  4125c3:	48 c7 45 10 70 25 41 	movq   $0x412570,0x10(%rbp)
  4125ca:	00 
  4125cb:	41 c7 84 24 00 80 ff 	movl   $0xf1f1f1f1,0x7fff8000(%r12)
  4125d2:	7f f1 f1 f1 f1 
  4125d7:	41 c7 84 24 04 80 ff 	movl   $0xf2f2f204,0x7fff8004(%r12)
  4125de:	7f 04 f2 f2 f2 
  4125e3:	41 c7 84 24 08 80 ff 	movl   $0xf2f2f2f2,0x7fff8008(%r12)
  4125ea:	7f f2 f2 f2 f2 
  4125ef:	41 c7 84 24 1c 80 ff 	movl   $0xf3f3f3f3,0x7fff801c(%r12)
  4125f6:	7f f3 f3 f3 f3 
    if ( hc->reqhost[0] != '\0' )
  4125fb:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  412602:	0f 85 03 05 00 00    	jne    412b0b <vhost_map+0x59b>
  412608:	4c 8b ab 48 01 00 00 	mov    0x148(%rbx),%r13
  41260f:	4c 89 e8             	mov    %r13,%rax
  412612:	4c 89 ea             	mov    %r13,%rdx
  412615:	48 c1 e8 03          	shr    $0x3,%rax
  412619:	83 e2 07             	and    $0x7,%edx
  41261c:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  412623:	38 d0                	cmp    %dl,%al
  412625:	7f 08                	jg     41262f <vhost_map+0xbf>
  412627:	84 c0                	test   %al,%al
  412629:	0f 85 88 04 00 00    	jne    412ab7 <vhost_map+0x547>
  41262f:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
  412634:	0f 84 de 01 00 00    	je     412818 <vhost_map+0x2a8>
	hc->hostname = hc->reqhost;
  41263a:	48 8d 83 00 02 00 00 	lea    0x200(%rbx),%rax
  412641:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  412646:	48 c1 e8 03          	shr    $0x3,%rax
  41264a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  412651:	0f 85 0d 05 00 00    	jne    412b64 <vhost_map+0x5f4>
    for ( cp1 = hc->hostname; *cp1 != '\0'; ++cp1 )
  412657:	4c 89 e8             	mov    %r13,%rax
  41265a:	4c 89 ea             	mov    %r13,%rdx
	hc->hostname = httpd_ntoa( &sa );
  41265d:	4c 89 ab 00 02 00 00 	mov    %r13,0x200(%rbx)
    for ( cp1 = hc->hostname; *cp1 != '\0'; ++cp1 )
  412664:	48 c1 e8 03          	shr    $0x3,%rax
  412668:	83 e2 07             	and    $0x7,%edx
  41266b:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  412672:	38 d0                	cmp    %dl,%al
  412674:	7f 08                	jg     41267e <vhost_map+0x10e>
  412676:	84 c0                	test   %al,%al
  412678:	0f 85 31 04 00 00    	jne    412aaf <vhost_map+0x53f>
  41267e:	41 0f b6 55 00       	movzbl 0x0(%r13),%edx
  412683:	84 d2                	test   %dl,%dl
  412685:	0f 84 05 01 00 00    	je     412790 <vhost_map+0x220>
  41268b:	88 54 24 08          	mov    %dl,0x8(%rsp)
	if ( isupper( *cp1 ) )
  41268f:	e8 6c 09 ff ff       	callq  403000 <__ctype_b_loc@plt>
  412694:	48 0f be 54 24 08    	movsbq 0x8(%rsp),%rdx
  41269a:	49 89 c7             	mov    %rax,%r15
  41269d:	49 89 c6             	mov    %rax,%r14
  4126a0:	49 c1 ef 03          	shr    $0x3,%r15
  4126a4:	0f 1f 40 00          	nopl   0x0(%rax)
  4126a8:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  4126af:	00 
  4126b0:	0f 85 38 04 00 00    	jne    412aee <vhost_map+0x57e>
  4126b6:	49 8b 06             	mov    (%r14),%rax
  4126b9:	48 8d 3c 50          	lea    (%rax,%rdx,2),%rdi
  4126bd:	48 89 f8             	mov    %rdi,%rax
  4126c0:	48 c1 e8 03          	shr    $0x3,%rax
  4126c4:	44 0f b6 80 00 80 ff 	movzbl 0x7fff8000(%rax),%r8d
  4126cb:	7f 
  4126cc:	48 89 f8             	mov    %rdi,%rax
  4126cf:	83 e0 07             	and    $0x7,%eax
  4126d2:	83 c0 01             	add    $0x1,%eax
  4126d5:	44 38 c0             	cmp    %r8b,%al
  4126d8:	7c 09                	jl     4126e3 <vhost_map+0x173>
  4126da:	45 84 c0             	test   %r8b,%r8b
  4126dd:	0f 85 fe 03 00 00    	jne    412ae1 <vhost_map+0x571>
  4126e3:	0f b7 07             	movzwl (%rdi),%eax
  4126e6:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  4126eb:	f6 c4 01             	test   $0x1,%ah
  4126ee:	74 6f                	je     41275f <vhost_map+0x1ef>
	    *cp1 = tolower( *cp1 );
  4126f0:	e8 9b 05 ff ff       	callq  402c90 <__ctype_tolower_loc@plt>
  4126f5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  4126fa:	48 89 c7             	mov    %rax,%rdi
  4126fd:	48 c1 ef 03          	shr    $0x3,%rdi
  412701:	80 bf 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdi)
  412708:	0f 85 ed 03 00 00    	jne    412afb <vhost_map+0x58b>
  41270e:	48 8b 00             	mov    (%rax),%rax
  412711:	48 8d 3c 90          	lea    (%rax,%rdx,4),%rdi
  412715:	48 89 f8             	mov    %rdi,%rax
  412718:	48 c1 e8 03          	shr    $0x3,%rax
  41271c:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  412723:	48 89 f8             	mov    %rdi,%rax
  412726:	83 e0 07             	and    $0x7,%eax
  412729:	83 c0 03             	add    $0x3,%eax
  41272c:	38 d0                	cmp    %dl,%al
  41272e:	7c 08                	jl     412738 <vhost_map+0x1c8>
  412730:	84 d2                	test   %dl,%dl
  412732:	0f 85 be 03 00 00    	jne    412af6 <vhost_map+0x586>
  412738:	4c 89 e8             	mov    %r13,%rax
  41273b:	8b 17                	mov    (%rdi),%edx
  41273d:	4c 89 ef             	mov    %r13,%rdi
  412740:	48 c1 e8 03          	shr    $0x3,%rax
  412744:	83 e7 07             	and    $0x7,%edi
  412747:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41274e:	40 38 f8             	cmp    %dil,%al
  412751:	7f 08                	jg     41275b <vhost_map+0x1eb>
  412753:	84 c0                	test   %al,%al
  412755:	0f 85 a8 03 00 00    	jne    412b03 <vhost_map+0x593>
  41275b:	41 88 55 00          	mov    %dl,0x0(%r13)
    for ( cp1 = hc->hostname; *cp1 != '\0'; ++cp1 )
  41275f:	49 83 c5 01          	add    $0x1,%r13
  412763:	4c 89 e8             	mov    %r13,%rax
  412766:	4c 89 ea             	mov    %r13,%rdx
  412769:	48 c1 e8 03          	shr    $0x3,%rax
  41276d:	83 e2 07             	and    $0x7,%edx
  412770:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  412777:	38 d0                	cmp    %dl,%al
  412779:	7f 08                	jg     412783 <vhost_map+0x213>
  41277b:	84 c0                	test   %al,%al
  41277d:	0f 85 63 03 00 00    	jne    412ae6 <vhost_map+0x576>
  412783:	49 0f be 55 00       	movsbq 0x0(%r13),%rdx
  412788:	84 d2                	test   %dl,%dl
  41278a:	0f 85 18 ff ff ff    	jne    4126a8 <vhost_map+0x138>
    if ( hc->tildemapped )
  412790:	48 8d bb 14 02 00 00 	lea    0x214(%rbx),%rdi
  412797:	48 89 f8             	mov    %rdi,%rax
  41279a:	48 c1 e8 03          	shr    $0x3,%rax
  41279e:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4127a5:	48 89 f8             	mov    %rdi,%rax
  4127a8:	83 e0 07             	and    $0x7,%eax
  4127ab:	83 c0 03             	add    $0x3,%eax
  4127ae:	38 d0                	cmp    %dl,%al
  4127b0:	7c 08                	jl     4127ba <vhost_map+0x24a>
  4127b2:	84 d2                	test   %dl,%dl
  4127b4:	0f 85 05 03 00 00    	jne    412abf <vhost_map+0x54f>
  4127ba:	8b 83 14 02 00 00    	mov    0x214(%rbx),%eax
	return 1;
  4127c0:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    if ( hc->tildemapped )
  4127c6:	85 c0                	test   %eax,%eax
  4127c8:	0f 84 c2 00 00 00    	je     412890 <vhost_map+0x320>
    {
  4127ce:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  4127d3:	48 39 e8             	cmp    %rbp,%rax
  4127d6:	0f 85 4a 03 00 00    	jne    412b26 <vhost_map+0x5b6>
  4127dc:	49 c7 84 24 00 80 ff 	movq   $0x0,0x7fff8000(%r12)
  4127e3:	7f 00 00 00 00 
  4127e8:	41 c7 84 24 08 80 ff 	movl   $0x0,0x7fff8008(%r12)
  4127ef:	7f 00 00 00 00 
  4127f4:	41 c7 84 24 1c 80 ff 	movl   $0x0,0x7fff801c(%r12)
  4127fb:	7f 00 00 00 00 
    }
  412800:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
  412807:	44 89 e8             	mov    %r13d,%eax
  41280a:	5b                   	pop    %rbx
  41280b:	5d                   	pop    %rbp
  41280c:	41 5c                	pop    %r12
  41280e:	41 5d                	pop    %r13
  412810:	41 5e                	pop    %r14
  412812:	41 5f                	pop    %r15
  412814:	c3                   	retq   
  412815:	0f 1f 00             	nopl   (%rax)
    else if ( hc->hdrhost[0] != '\0' )
  412818:	48 8d bb 50 01 00 00 	lea    0x150(%rbx),%rdi
  41281f:	48 89 f8             	mov    %rdi,%rax
  412822:	48 c1 e8 03          	shr    $0x3,%rax
  412826:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41282d:	0f 85 3b 03 00 00    	jne    412b6e <vhost_map+0x5fe>
  412833:	4c 8b ab 50 01 00 00 	mov    0x150(%rbx),%r13
  41283a:	4c 89 e8             	mov    %r13,%rax
  41283d:	4c 89 ea             	mov    %r13,%rdx
  412840:	48 c1 e8 03          	shr    $0x3,%rax
  412844:	83 e2 07             	and    $0x7,%edx
  412847:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41284e:	38 d0                	cmp    %dl,%al
  412850:	7f 08                	jg     41285a <vhost_map+0x2ea>
  412852:	84 c0                	test   %al,%al
  412854:	0f 85 02 03 00 00    	jne    412b5c <vhost_map+0x5ec>
  41285a:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
  41285f:	0f 84 b3 01 00 00    	je     412a18 <vhost_map+0x4a8>
	hc->hostname = hc->hdrhost;
  412865:	48 8d 83 00 02 00 00 	lea    0x200(%rbx),%rax
  41286c:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  412871:	48 c1 e8 03          	shr    $0x3,%rax
  412875:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41287c:	0f 84 d5 fd ff ff    	je     412657 <vhost_map+0xe7>
  412882:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  412887:	e8 14 07 ff ff       	callq  402fa0 <__asan_report_store8@plt>
  41288c:	0f 1f 40 00          	nopl   0x0(%rax)
    httpd_realloc_str( &hc->hostdir, &hc->maxhostdir, strlen( hc->hostname ) );
  412890:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
  412895:	48 c1 e9 03          	shr    $0x3,%rcx
  412899:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  4128a0:	0f 85 cd 02 00 00    	jne    412b73 <vhost_map+0x603>
  4128a6:	48 8b bb 00 02 00 00 	mov    0x200(%rbx),%rdi
  4128ad:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
  4128b2:	e8 c9 03 ff ff       	callq  402c80 <strlen@plt>
  4128b7:	48 8d 8b 58 01 00 00 	lea    0x158(%rbx),%rcx
  4128be:	48 8d b3 c0 01 00 00 	lea    0x1c0(%rbx),%rsi
  4128c5:	48 89 cf             	mov    %rcx,%rdi
  4128c8:	48 89 c2             	mov    %rax,%rdx
  4128cb:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  4128d0:	e8 5b aa ff ff       	callq  40d330 <httpd_realloc_str>
    (void) strcpy( hc->hostdir, hc->hostname );
  4128d5:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  4128da:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  4128e1:	0f 85 66 02 00 00    	jne    412b4d <vhost_map+0x5dd>
  4128e7:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
  4128ec:	48 8b b3 00 02 00 00 	mov    0x200(%rbx),%rsi
  4128f3:	49 c1 ef 03          	shr    $0x3,%r15
  4128f7:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  4128fe:	00 
  4128ff:	0f 85 80 02 00 00    	jne    412b85 <vhost_map+0x615>
  412905:	48 8b bb 58 01 00 00 	mov    0x158(%rbx),%rdi
  41290c:	e8 ff 05 ff ff       	callq  402f10 <strcpy@plt>
    len = strlen( hc->expnfilename );
  412911:	48 8d 83 f0 00 00 00 	lea    0xf0(%rbx),%rax
  412918:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41291d:	48 c1 e8 03          	shr    $0x3,%rax
  412921:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  412928:	49 89 c6             	mov    %rax,%r14
  41292b:	0f 85 5e 02 00 00    	jne    412b8f <vhost_map+0x61f>
  412931:	48 8b bb f0 00 00 00 	mov    0xf0(%rbx),%rdi
  412938:	e8 43 03 ff ff       	callq  402c80 <strlen@plt>
    httpd_realloc_str( &tempfilename, &maxtempfilename, len );
  41293d:	be 80 2a 64 00       	mov    $0x642a80,%esi
  412942:	bf c0 2a 64 00       	mov    $0x642ac0,%edi
  412947:	48 98                	cltq   
  412949:	48 89 c2             	mov    %rax,%rdx
  41294c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  412951:	e8 da a9 ff ff       	callq  40d330 <httpd_realloc_str>
    (void) strcpy( tempfilename, hc->expnfilename );
  412956:	41 80 be 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r14)
  41295d:	00 
  41295e:	0f 85 35 02 00 00    	jne    412b99 <vhost_map+0x629>
  412964:	48 8b b3 f0 00 00 00 	mov    0xf0(%rbx),%rsi
  41296b:	48 8b 3d 4e 01 23 00 	mov    0x23014e(%rip),%rdi        # 642ac0 <tempfilename.6224>
  412972:	e8 99 05 ff ff       	callq  402f10 <strcpy@plt>
	strlen( hc->hostdir ) + 1 + len );
  412977:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  41297e:	00 
  41297f:	0f 85 1e 02 00 00    	jne    412ba3 <vhost_map+0x633>
  412985:	48 8b bb 58 01 00 00 	mov    0x158(%rbx),%rdi
  41298c:	e8 ef 02 ff ff       	callq  402c80 <strlen@plt>
    httpd_realloc_str(
  412991:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  412996:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41299b:	48 8d b3 88 01 00 00 	lea    0x188(%rbx),%rsi
  4129a2:	48 8d 54 01 01       	lea    0x1(%rcx,%rax,1),%rdx
  4129a7:	e8 84 a9 ff ff       	callq  40d330 <httpd_realloc_str>
    (void) strcpy( hc->expnfilename, hc->hostdir );
  4129ac:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  4129b3:	00 
  4129b4:	0f 85 f3 01 00 00    	jne    412bad <vhost_map+0x63d>
  4129ba:	41 80 be 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r14)
  4129c1:	00 
  4129c2:	48 8b b3 58 01 00 00 	mov    0x158(%rbx),%rsi
  4129c9:	0f 85 e8 01 00 00    	jne    412bb7 <vhost_map+0x647>
  4129cf:	48 8b bb f0 00 00 00 	mov    0xf0(%rbx),%rdi
  4129d6:	e8 35 05 ff ff       	callq  402f10 <strcpy@plt>
    (void) strcat( hc->expnfilename, "/" );
  4129db:	4c 8b bb f0 00 00 00 	mov    0xf0(%rbx),%r15
  4129e2:	4c 89 ff             	mov    %r15,%rdi
  4129e5:	e8 96 02 ff ff       	callq  402c80 <strlen@plt>
  4129ea:	ba 02 00 00 00       	mov    $0x2,%edx
  4129ef:	be e0 45 42 00       	mov    $0x4245e0,%esi
  4129f4:	49 8d 3c 07          	lea    (%r15,%rax,1),%rdi
  4129f8:	e8 43 07 ff ff       	callq  403140 <memcpy@plt>
    (void) strcat( hc->expnfilename, tempfilename );
  4129fd:	48 8b bb f0 00 00 00 	mov    0xf0(%rbx),%rdi
  412a04:	48 8b 35 b5 00 23 00 	mov    0x2300b5(%rip),%rsi        # 642ac0 <tempfilename.6224>
  412a0b:	e8 b0 0a ff ff       	callq  4034c0 <strcat@plt>
    return 1;
  412a10:	e9 b9 fd ff ff       	jmpq   4127ce <vhost_map+0x25e>
  412a15:	0f 1f 00             	nopl   (%rax)
	sz = sizeof(sa);
  412a18:	48 8d 91 20 ff ff ff 	lea    -0xe0(%rcx),%rdx
  412a1f:	48 89 d0             	mov    %rdx,%rax
  412a22:	48 c1 e8 03          	shr    $0x3,%rax
  412a26:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  412a2d:	84 c0                	test   %al,%al
  412a2f:	74 08                	je     412a39 <vhost_map+0x4c9>
  412a31:	3c 03                	cmp    $0x3,%al
  412a33:	0f 8e 44 01 00 00    	jle    412b7d <vhost_map+0x60d>
	if ( getsockname( hc->conn_fd, &sa.sa, &sz ) < 0 )
  412a39:	48 8d bb c0 02 00 00 	lea    0x2c0(%rbx),%rdi
	sz = sizeof(sa);
  412a40:	c7 81 20 ff ff ff 80 	movl   $0x80,-0xe0(%rcx)
  412a47:	00 00 00 
	if ( getsockname( hc->conn_fd, &sa.sa, &sz ) < 0 )
  412a4a:	48 89 f8             	mov    %rdi,%rax
  412a4d:	48 c1 e8 03          	shr    $0x3,%rax
  412a51:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  412a58:	84 c0                	test   %al,%al
  412a5a:	74 08                	je     412a64 <vhost_map+0x4f4>
  412a5c:	3c 03                	cmp    $0x3,%al
  412a5e:	0f 8e f3 00 00 00    	jle    412b57 <vhost_map+0x5e7>
  412a64:	4c 8d a9 60 ff ff ff 	lea    -0xa0(%rcx),%r13
  412a6b:	8b bb c0 02 00 00    	mov    0x2c0(%rbx),%edi
  412a71:	4c 89 ee             	mov    %r13,%rsi
  412a74:	e8 77 05 ff ff       	callq  402ff0 <getsockname@plt>
  412a79:	85 c0                	test   %eax,%eax
  412a7b:	78 4b                	js     412ac8 <vhost_map+0x558>
	hc->hostname = httpd_ntoa( &sa );
  412a7d:	4c 89 ef             	mov    %r13,%rdi
  412a80:	e8 7b ee ff ff       	callq  411900 <httpd_ntoa>
  412a85:	49 89 c5             	mov    %rax,%r13
  412a88:	48 8d 83 00 02 00 00 	lea    0x200(%rbx),%rax
  412a8f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  412a94:	48 c1 e8 03          	shr    $0x3,%rax
  412a98:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  412a9f:	0f 84 b2 fb ff ff    	je     412657 <vhost_map+0xe7>
  412aa5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  412aaa:	e8 f1 04 ff ff       	callq  402fa0 <__asan_report_store8@plt>
    for ( cp1 = hc->hostname; *cp1 != '\0'; ++cp1 )
  412aaf:	4c 89 ef             	mov    %r13,%rdi
  412ab2:	e8 59 06 ff ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->reqhost[0] != '\0' )
  412ab7:	4c 89 ef             	mov    %r13,%rdi
  412aba:	e8 51 06 ff ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->tildemapped )
  412abf:	e8 0c 03 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  412ac4:	0f 1f 40 00          	nopl   0x0(%rax)
	    syslog( LOG_ERR, "getsockname - %m" );
  412ac8:	be a0 45 42 00       	mov    $0x4245a0,%esi
  412acd:	bf 03 00 00 00       	mov    $0x3,%edi
  412ad2:	31 c0                	xor    %eax,%eax
	    return 0;
  412ad4:	45 31 ed             	xor    %r13d,%r13d
	    syslog( LOG_ERR, "getsockname - %m" );
  412ad7:	e8 64 01 ff ff       	callq  402c40 <syslog@plt>
	    return 0;
  412adc:	e9 ed fc ff ff       	jmpq   4127ce <vhost_map+0x25e>
	if ( isupper( *cp1 ) )
  412ae1:	e8 ca 04 ff ff       	callq  402fb0 <__asan_report_load2@plt>
    for ( cp1 = hc->hostname; *cp1 != '\0'; ++cp1 )
  412ae6:	4c 89 ef             	mov    %r13,%rdi
  412ae9:	e8 22 06 ff ff       	callq  403110 <__asan_report_load1@plt>
	if ( isupper( *cp1 ) )
  412aee:	4c 89 f7             	mov    %r14,%rdi
  412af1:	e8 5a 07 ff ff       	callq  403250 <__asan_report_load8@plt>
	    *cp1 = tolower( *cp1 );
  412af6:	e8 d5 02 ff ff       	callq  402dd0 <__asan_report_load4@plt>
  412afb:	48 89 c7             	mov    %rax,%rdi
  412afe:	e8 4d 07 ff ff       	callq  403250 <__asan_report_load8@plt>
  412b03:	4c 89 ef             	mov    %r13,%rdi
  412b06:	e8 25 06 ff ff       	callq  403130 <__asan_report_store1@plt>
    if ( hc->reqhost[0] != '\0' )
  412b0b:	e8 40 07 ff ff       	callq  403250 <__asan_report_load8@plt>
    {
  412b10:	bf 00 01 00 00       	mov    $0x100,%edi
  412b15:	e8 06 08 ff ff       	callq  403320 <__asan_stack_malloc_2@plt>
  412b1a:	48 85 c0             	test   %rax,%rax
  412b1d:	48 0f 45 e8          	cmovne %rax,%rbp
  412b21:	e9 71 fa ff ff       	jmpq   412597 <vhost_map+0x27>
  412b26:	66 0f 6f 05 62 f2 00 	movdqa 0xf262(%rip),%xmm0        # 421d90 <_IO_stdin_used+0x2cd0>
  412b2d:	00 
  412b2e:	48 c7 45 00 0e 36 e0 	movq   $0x45e0360e,0x0(%rbp)
  412b35:	45 
  412b36:	41 0f 11 84 24 00 80 	movups %xmm0,0x7fff8000(%r12)
  412b3d:	ff 7f 
  412b3f:	41 0f 11 84 24 10 80 	movups %xmm0,0x7fff8010(%r12)
  412b46:	ff 7f 
  412b48:	e9 b3 fc ff ff       	jmpq   412800 <vhost_map+0x290>
    (void) strcpy( hc->hostdir, hc->hostname );
  412b4d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  412b52:	e8 f9 06 ff ff       	callq  403250 <__asan_report_load8@plt>
	if ( getsockname( hc->conn_fd, &sa.sa, &sz ) < 0 )
  412b57:	e8 74 02 ff ff       	callq  402dd0 <__asan_report_load4@plt>
    else if ( hc->hdrhost[0] != '\0' )
  412b5c:	4c 89 ef             	mov    %r13,%rdi
  412b5f:	e8 ac 05 ff ff       	callq  403110 <__asan_report_load1@plt>
	hc->hostname = hc->reqhost;
  412b64:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  412b69:	e8 32 04 ff ff       	callq  402fa0 <__asan_report_store8@plt>
    else if ( hc->hdrhost[0] != '\0' )
  412b6e:	e8 dd 06 ff ff       	callq  403250 <__asan_report_load8@plt>
    httpd_realloc_str( &hc->hostdir, &hc->maxhostdir, strlen( hc->hostname ) );
  412b73:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  412b78:	e8 d3 06 ff ff       	callq  403250 <__asan_report_load8@plt>
	sz = sizeof(sa);
  412b7d:	48 89 d7             	mov    %rdx,%rdi
  412b80:	e8 6b 00 ff ff       	callq  402bf0 <__asan_report_store4@plt>
    (void) strcpy( hc->hostdir, hc->hostname );
  412b85:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  412b8a:	e8 c1 06 ff ff       	callq  403250 <__asan_report_load8@plt>
    len = strlen( hc->expnfilename );
  412b8f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  412b94:	e8 b7 06 ff ff       	callq  403250 <__asan_report_load8@plt>
    (void) strcpy( tempfilename, hc->expnfilename );
  412b99:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  412b9e:	e8 ad 06 ff ff       	callq  403250 <__asan_report_load8@plt>
	strlen( hc->hostdir ) + 1 + len );
  412ba3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  412ba8:	e8 a3 06 ff ff       	callq  403250 <__asan_report_load8@plt>
    (void) strcpy( hc->expnfilename, hc->hostdir );
  412bad:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  412bb2:	e8 99 06 ff ff       	callq  403250 <__asan_report_load8@plt>
  412bb7:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  412bbc:	e8 8f 06 ff ff       	callq  403250 <__asan_report_load8@plt>
  412bc1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  412bc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  412bcd:	00 00 00 

0000000000412bd0 <httpd_parse_request>:
    {
  412bd0:	41 57                	push   %r15
  412bd2:	41 56                	push   %r14
  412bd4:	41 55                	push   %r13
  412bd6:	41 54                	push   %r12
  412bd8:	55                   	push   %rbp
  412bd9:	53                   	push   %rbx
  412bda:	48 89 fb             	mov    %rdi,%rbx
  412bdd:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  412be4:	44 8b 05 15 e7 22 00 	mov    0x22e715(%rip),%r8d        # 641300 <__asan_option_detect_stack_use_after_return>
  412beb:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
  412bf0:	45 85 c0             	test   %r8d,%r8d
  412bf3:	0f 85 82 17 00 00    	jne    41437b <httpd_parse_request+0x17ab>
  412bf9:	48 8d 45 60          	lea    0x60(%rbp),%rax
    hc->checked_idx = 0;	/* reset */
  412bfd:	48 8d bb a8 00 00 00 	lea    0xa8(%rbx),%rdi
    {
  412c04:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  412c09:	48 89 e8             	mov    %rbp,%rax
  412c0c:	48 c1 e8 03          	shr    $0x3,%rax
  412c10:	48 c7 45 00 b3 8a b5 	movq   $0x41b58ab3,0x0(%rbp)
  412c17:	41 
  412c18:	48 c7 45 08 60 21 42 	movq   $0x422160,0x8(%rbp)
  412c1f:	00 
  412c20:	48 c7 45 10 d0 2b 41 	movq   $0x412bd0,0x10(%rbp)
  412c27:	00 
  412c28:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  412c2d:	c7 80 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rax)
  412c34:	f1 f1 f1 
  412c37:	c7 80 04 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff8004(%rax)
  412c3e:	f2 f2 f2 
  412c41:	c7 80 08 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8008(%rax)
  412c48:	f3 f3 f3 
    hc->checked_idx = 0;	/* reset */
  412c4b:	48 89 f8             	mov    %rdi,%rax
  412c4e:	48 c1 e8 03          	shr    $0x3,%rax
  412c52:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  412c59:	0f 85 8d 17 00 00    	jne    4143ec <httpd_parse_request+0x181c>
  412c5f:	48 c7 83 a8 00 00 00 	movq   $0x0,0xa8(%rbx)
  412c66:	00 00 00 00 
    method_str = bufgets( hc );
  412c6a:	48 89 df             	mov    %rbx,%rdi
  412c6d:	e8 9e 7d ff ff       	callq  40aa10 <bufgets>
    url = strpbrk( method_str, " \t\012\015" );
  412c72:	be 60 46 42 00       	mov    $0x424660,%esi
  412c77:	48 89 c7             	mov    %rax,%rdi
    method_str = bufgets( hc );
  412c7a:	49 89 c5             	mov    %rax,%r13
    url = strpbrk( method_str, " \t\012\015" );
  412c7d:	e8 ce 00 ff ff       	callq  402d50 <strpbrk@plt>
    if ( url == (char*) 0 )
  412c82:	48 85 c0             	test   %rax,%rax
  412c85:	0f 84 06 0c 00 00    	je     413891 <httpd_parse_request+0xcc1>
    *url++ = '\0';
  412c8b:	48 89 c2             	mov    %rax,%rdx
  412c8e:	48 89 c1             	mov    %rax,%rcx
  412c91:	4c 8d 60 01          	lea    0x1(%rax),%r12
  412c95:	48 c1 ea 03          	shr    $0x3,%rdx
  412c99:	83 e1 07             	and    $0x7,%ecx
  412c9c:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  412ca3:	38 ca                	cmp    %cl,%dl
  412ca5:	7f 08                	jg     412caf <httpd_parse_request+0xdf>
  412ca7:	84 d2                	test   %dl,%dl
  412ca9:	0f 85 60 13 00 00    	jne    41400f <httpd_parse_request+0x143f>
  412caf:	c6 00 00             	movb   $0x0,(%rax)
    url += strspn( url, " \t\012\015" );
  412cb2:	4c 89 e7             	mov    %r12,%rdi
  412cb5:	be 60 46 42 00       	mov    $0x424660,%esi
  412cba:	e8 21 08 ff ff       	callq  4034e0 <strspn@plt>
    protocol = strpbrk( url, " \t\012\015" );
  412cbf:	be 60 46 42 00       	mov    $0x424660,%esi
    url += strspn( url, " \t\012\015" );
  412cc4:	49 01 c4             	add    %rax,%r12
    protocol = strpbrk( url, " \t\012\015" );
  412cc7:	4c 89 e7             	mov    %r12,%rdi
  412cca:	e8 81 00 ff ff       	callq  402d50 <strpbrk@plt>
    if ( protocol == (char*) 0 )
  412ccf:	48 85 c0             	test   %rax,%rax
  412cd2:	0f 84 80 0f 00 00    	je     413c58 <httpd_parse_request+0x1088>
	*protocol++ = '\0';
  412cd8:	48 89 c2             	mov    %rax,%rdx
  412cdb:	48 89 c1             	mov    %rax,%rcx
  412cde:	4c 8d 70 01          	lea    0x1(%rax),%r14
  412ce2:	48 c1 ea 03          	shr    $0x3,%rdx
  412ce6:	83 e1 07             	and    $0x7,%ecx
  412ce9:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  412cf0:	38 ca                	cmp    %cl,%dl
  412cf2:	7f 08                	jg     412cfc <httpd_parse_request+0x12c>
  412cf4:	84 d2                	test   %dl,%dl
  412cf6:	0f 85 83 18 00 00    	jne    41457f <httpd_parse_request+0x19af>
  412cfc:	c6 00 00             	movb   $0x0,(%rax)
	protocol += strspn( protocol, " \t\012\015" );
  412cff:	4c 89 f7             	mov    %r14,%rdi
  412d02:	be 60 46 42 00       	mov    $0x424660,%esi
  412d07:	e8 d4 07 ff ff       	callq  4034e0 <strspn@plt>
  412d0c:	49 01 c6             	add    %rax,%r14
	if ( *protocol != '\0' )
  412d0f:	4c 89 f0             	mov    %r14,%rax
  412d12:	4c 89 f2             	mov    %r14,%rdx
  412d15:	48 c1 e8 03          	shr    $0x3,%rax
  412d19:	83 e2 07             	and    $0x7,%edx
  412d1c:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  412d23:	38 d0                	cmp    %dl,%al
  412d25:	7f 08                	jg     412d2f <httpd_parse_request+0x15f>
  412d27:	84 c0                	test   %al,%al
  412d29:	0f 85 48 18 00 00    	jne    414577 <httpd_parse_request+0x19a7>
  412d2f:	41 80 3e 00          	cmpb   $0x0,(%r14)
  412d33:	74 7b                	je     412db0 <httpd_parse_request+0x1e0>
	    eol = strpbrk( protocol, " \t\012\015" );
  412d35:	be 60 46 42 00       	mov    $0x424660,%esi
  412d3a:	4c 89 f7             	mov    %r14,%rdi
  412d3d:	e8 0e 00 ff ff       	callq  402d50 <strpbrk@plt>
	    if ( eol != (char*) 0 )
  412d42:	48 85 c0             	test   %rax,%rax
  412d45:	74 23                	je     412d6a <httpd_parse_request+0x19a>
		*eol = '\0';
  412d47:	48 89 c2             	mov    %rax,%rdx
  412d4a:	48 89 c1             	mov    %rax,%rcx
  412d4d:	48 c1 ea 03          	shr    $0x3,%rdx
  412d51:	83 e1 07             	and    $0x7,%ecx
  412d54:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  412d5b:	38 ca                	cmp    %cl,%dl
  412d5d:	7f 08                	jg     412d67 <httpd_parse_request+0x197>
  412d5f:	84 d2                	test   %dl,%dl
  412d61:	0f 85 b5 18 00 00    	jne    41461c <httpd_parse_request+0x1a4c>
  412d67:	c6 00 00             	movb   $0x0,(%rax)
	    if ( strcasecmp( protocol, "HTTP/1.0" ) != 0 )
  412d6a:	be a0 46 42 00       	mov    $0x4246a0,%esi
  412d6f:	4c 89 f7             	mov    %r14,%rdi
  412d72:	e8 19 03 ff ff       	callq  403090 <strcasecmp@plt>
  412d77:	85 c0                	test   %eax,%eax
  412d79:	74 35                	je     412db0 <httpd_parse_request+0x1e0>
		hc->one_one = 1;
  412d7b:	48 8d bb 0c 02 00 00 	lea    0x20c(%rbx),%rdi
  412d82:	48 89 f8             	mov    %rdi,%rax
  412d85:	48 c1 e8 03          	shr    $0x3,%rax
  412d89:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  412d90:	48 89 f8             	mov    %rdi,%rax
  412d93:	83 e0 07             	and    $0x7,%eax
  412d96:	83 c0 03             	add    $0x3,%eax
  412d99:	38 d0                	cmp    %dl,%al
  412d9b:	7c 08                	jl     412da5 <httpd_parse_request+0x1d5>
  412d9d:	84 d2                	test   %dl,%dl
  412d9f:	0f 85 a8 18 00 00    	jne    41464d <httpd_parse_request+0x1a7d>
  412da5:	c7 83 0c 02 00 00 01 	movl   $0x1,0x20c(%rbx)
  412dac:	00 00 00 
  412daf:	90                   	nop
    hc->protocol = protocol;
  412db0:	48 8d bb e0 00 00 00 	lea    0xe0(%rbx),%rdi
  412db7:	48 89 f8             	mov    %rdi,%rax
  412dba:	48 c1 e8 03          	shr    $0x3,%rax
  412dbe:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  412dc5:	0f 85 c6 15 00 00    	jne    414391 <httpd_parse_request+0x17c1>
  412dcb:	4c 89 b3 e0 00 00 00 	mov    %r14,0xe0(%rbx)
    if ( strncasecmp( url, "http://", 7 ) == 0 )
  412dd2:	ba 07 00 00 00       	mov    $0x7,%edx
  412dd7:	be e0 46 42 00       	mov    $0x4246e0,%esi
  412ddc:	4c 89 e7             	mov    %r12,%rdi
  412ddf:	e8 4c fe fe ff       	callq  402c30 <strncasecmp@plt>
  412de4:	85 c0                	test   %eax,%eax
  412de6:	0f 84 54 08 00 00    	je     413640 <httpd_parse_request+0xa70>
    if ( *url != '/' )
  412dec:	4c 89 e0             	mov    %r12,%rax
  412def:	4c 89 e2             	mov    %r12,%rdx
  412df2:	48 c1 e8 03          	shr    $0x3,%rax
  412df6:	83 e2 07             	and    $0x7,%edx
  412df9:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  412e00:	38 d0                	cmp    %dl,%al
  412e02:	7f 08                	jg     412e0c <httpd_parse_request+0x23c>
  412e04:	84 c0                	test   %al,%al
  412e06:	0f 85 a7 17 00 00    	jne    4145b3 <httpd_parse_request+0x19e3>
  412e0c:	41 80 3c 24 2f       	cmpb   $0x2f,(%r12)
  412e11:	0f 85 7a 0a 00 00    	jne    413891 <httpd_parse_request+0xcc1>
    if ( strcasecmp( method_str, httpd_method_str( METHOD_GET ) ) == 0 )
  412e17:	bf 01 00 00 00       	mov    $0x1,%edi
  412e1c:	e8 ff d3 ff ff       	callq  410220 <httpd_method_str>
  412e21:	4c 89 ef             	mov    %r13,%rdi
  412e24:	48 89 c6             	mov    %rax,%rsi
  412e27:	e8 64 02 ff ff       	callq  403090 <strcasecmp@plt>
  412e2c:	85 c0                	test   %eax,%eax
  412e2e:	0f 85 ac 0b 00 00    	jne    4139e0 <httpd_parse_request+0xe10>
	hc->method = METHOD_GET;
  412e34:	48 8d bb b4 00 00 00 	lea    0xb4(%rbx),%rdi
  412e3b:	48 89 f8             	mov    %rdi,%rax
  412e3e:	48 c1 e8 03          	shr    $0x3,%rax
  412e42:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  412e49:	48 89 f8             	mov    %rdi,%rax
  412e4c:	83 e0 07             	and    $0x7,%eax
  412e4f:	83 c0 03             	add    $0x3,%eax
  412e52:	38 d0                	cmp    %dl,%al
  412e54:	7c 08                	jl     412e5e <httpd_parse_request+0x28e>
  412e56:	84 d2                	test   %dl,%dl
  412e58:	0f 85 d1 16 00 00    	jne    41452f <httpd_parse_request+0x195f>
  412e5e:	c7 83 b4 00 00 00 01 	movl   $0x1,0xb4(%rbx)
  412e65:	00 00 00 
    hc->encodedurl = url;
  412e68:	48 8d 83 d0 00 00 00 	lea    0xd0(%rbx),%rax
  412e6f:	49 89 c6             	mov    %rax,%r14
  412e72:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  412e77:	49 c1 ee 03          	shr    $0x3,%r14
  412e7b:	41 80 be 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r14)
  412e82:	00 
  412e83:	0f 85 a8 14 00 00    	jne    414331 <httpd_parse_request+0x1761>
  412e89:	4c 89 a3 d0 00 00 00 	mov    %r12,0xd0(%rbx)
    httpd_realloc_str(
  412e90:	4c 89 e7             	mov    %r12,%rdi
  412e93:	4c 8d ab d8 00 00 00 	lea    0xd8(%rbx),%r13
  412e9a:	e8 e1 fd fe ff       	callq  402c80 <strlen@plt>
  412e9f:	48 8d b3 78 01 00 00 	lea    0x178(%rbx),%rsi
  412ea6:	4c 89 ef             	mov    %r13,%rdi
  412ea9:	48 89 c2             	mov    %rax,%rdx
  412eac:	e8 7f a4 ff ff       	callq  40d330 <httpd_realloc_str>
    strdecode( hc->decodedurl, hc->encodedurl );
  412eb1:	41 80 be 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r14)
  412eb8:	00 
  412eb9:	0f 85 27 16 00 00    	jne    4144e6 <httpd_parse_request+0x1916>
  412ebf:	4d 89 ec             	mov    %r13,%r12
  412ec2:	48 8b b3 d0 00 00 00 	mov    0xd0(%rbx),%rsi
  412ec9:	49 c1 ec 03          	shr    $0x3,%r12
  412ecd:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  412ed4:	7f 00 
  412ed6:	0f 85 fa 15 00 00    	jne    4144d6 <httpd_parse_request+0x1906>
  412edc:	48 8b bb d8 00 00 00 	mov    0xd8(%rbx),%rdi
  412ee3:	e8 98 81 ff ff       	callq  40b080 <strdecode>
	&hc->origfilename, &hc->maxorigfilename, strlen( hc->decodedurl ) );
  412ee8:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  412eef:	7f 00 
  412ef1:	0f 85 e7 15 00 00    	jne    4144de <httpd_parse_request+0x190e>
    httpd_realloc_str(
  412ef7:	48 8b bb d8 00 00 00 	mov    0xd8(%rbx),%rdi
  412efe:	4c 8d bb e8 00 00 00 	lea    0xe8(%rbx),%r15
  412f05:	e8 76 fd fe ff       	callq  402c80 <strlen@plt>
  412f0a:	48 8d b3 80 01 00 00 	lea    0x180(%rbx),%rsi
  412f11:	4c 89 ff             	mov    %r15,%rdi
  412f14:	48 89 c2             	mov    %rax,%rdx
  412f17:	e8 14 a4 ff ff       	callq  40d330 <httpd_realloc_str>
    (void) strcpy( hc->origfilename, &hc->decodedurl[1] );
  412f1c:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  412f23:	7f 00 
  412f25:	0f 85 6c 15 00 00    	jne    414497 <httpd_parse_request+0x18c7>
  412f2b:	48 8b 83 d8 00 00 00 	mov    0xd8(%rbx),%rax
  412f32:	48 8d 70 01          	lea    0x1(%rax),%rsi
  412f36:	4c 89 f8             	mov    %r15,%rax
  412f39:	48 c1 e8 03          	shr    $0x3,%rax
  412f3d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  412f44:	0f 85 55 15 00 00    	jne    41449f <httpd_parse_request+0x18cf>
  412f4a:	48 8b bb e8 00 00 00 	mov    0xe8(%rbx),%rdi
  412f51:	e8 ba ff fe ff       	callq  402f10 <strcpy@plt>
    if ( hc->origfilename[0] == '\0' )
  412f56:	48 8b bb e8 00 00 00 	mov    0xe8(%rbx),%rdi
  412f5d:	48 89 f8             	mov    %rdi,%rax
  412f60:	48 89 fa             	mov    %rdi,%rdx
  412f63:	48 c1 e8 03          	shr    $0x3,%rax
  412f67:	83 e2 07             	and    $0x7,%edx
  412f6a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  412f71:	38 d0                	cmp    %dl,%al
  412f73:	7f 08                	jg     412f7d <httpd_parse_request+0x3ad>
  412f75:	84 c0                	test   %al,%al
  412f77:	0f 85 2e 14 00 00    	jne    4143ab <httpd_parse_request+0x17db>
  412f7d:	80 3f 00             	cmpb   $0x0,(%rdi)
  412f80:	0f 84 4a 0c 00 00    	je     413bd0 <httpd_parse_request+0x1000>
    cp = strchr( hc->encodedurl, '?' );
  412f86:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  412f8b:	48 c1 e8 03          	shr    $0x3,%rax
  412f8f:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  412f96:	0f 85 14 14 00 00    	jne    4143b0 <httpd_parse_request+0x17e0>
  412f9c:	48 8b bb d0 00 00 00 	mov    0xd0(%rbx),%rdi
  412fa3:	be 3f 00 00 00       	mov    $0x3f,%esi
  412fa8:	e8 13 04 ff ff       	callq  4033c0 <strchr@plt>
    if ( cp != (char*) 0 )
  412fad:	48 85 c0             	test   %rax,%rax
  412fb0:	0f 84 98 00 00 00    	je     41304e <httpd_parse_request+0x47e>
	++cp;
  412fb6:	4c 8d 60 01          	lea    0x1(%rax),%r12
	httpd_realloc_str( &hc->query, &hc->maxquery, strlen( cp ) );
  412fba:	4c 8d ab 08 01 00 00 	lea    0x108(%rbx),%r13
  412fc1:	4c 89 e7             	mov    %r12,%rdi
  412fc4:	e8 b7 fc fe ff       	callq  402c80 <strlen@plt>
  412fc9:	48 8d b3 a0 01 00 00 	lea    0x1a0(%rbx),%rsi
  412fd0:	4c 89 ef             	mov    %r13,%rdi
  412fd3:	48 89 c2             	mov    %rax,%rdx
  412fd6:	e8 55 a3 ff ff       	callq  40d330 <httpd_realloc_str>
	(void) strcpy( hc->query, cp );
  412fdb:	4c 89 e8             	mov    %r13,%rax
  412fde:	48 c1 e8 03          	shr    $0x3,%rax
  412fe2:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  412fe9:	0f 85 7b 16 00 00    	jne    41466a <httpd_parse_request+0x1a9a>
  412fef:	48 8b bb 08 01 00 00 	mov    0x108(%rbx),%rdi
  412ff6:	4c 89 e6             	mov    %r12,%rsi
  412ff9:	e8 12 ff fe ff       	callq  402f10 <strcpy@plt>
	cp = strchr( hc->origfilename, '?' );
  412ffe:	4c 89 f8             	mov    %r15,%rax
  413001:	48 c1 e8 03          	shr    $0x3,%rax
  413005:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41300c:	0f 85 60 16 00 00    	jne    414672 <httpd_parse_request+0x1aa2>
  413012:	4c 8b a3 e8 00 00 00 	mov    0xe8(%rbx),%r12
  413019:	be 3f 00 00 00       	mov    $0x3f,%esi
  41301e:	4c 89 e7             	mov    %r12,%rdi
  413021:	e8 9a 03 ff ff       	callq  4033c0 <strchr@plt>
	if ( cp != (char*) 0 )
  413026:	48 85 c0             	test   %rax,%rax
  413029:	74 2a                	je     413055 <httpd_parse_request+0x485>
	    *cp = '\0';
  41302b:	48 89 c2             	mov    %rax,%rdx
  41302e:	48 89 c1             	mov    %rax,%rcx
  413031:	48 c1 ea 03          	shr    $0x3,%rdx
  413035:	83 e1 07             	and    $0x7,%ecx
  413038:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41303f:	38 ca                	cmp    %cl,%dl
  413041:	7f 08                	jg     41304b <httpd_parse_request+0x47b>
  413043:	84 d2                	test   %dl,%dl
  413045:	0f 85 07 16 00 00    	jne    414652 <httpd_parse_request+0x1a82>
  41304b:	c6 00 00             	movb   $0x0,(%rax)
  41304e:	4c 8b a3 e8 00 00 00 	mov    0xe8(%rbx),%r12
    de_dotdot( hc->origfilename );
  413055:	4c 89 e7             	mov    %r12,%rdi
  413058:	e8 33 82 ff ff       	callq  40b290 <de_dotdot>
    if ( hc->origfilename[0] == '/' ||
  41305d:	4c 89 f8             	mov    %r15,%rax
  413060:	48 c1 e8 03          	shr    $0x3,%rax
  413064:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41306b:	0f 85 49 13 00 00    	jne    4143ba <httpd_parse_request+0x17ea>
  413071:	48 8b 83 e8 00 00 00 	mov    0xe8(%rbx),%rax
  413078:	48 89 c2             	mov    %rax,%rdx
  41307b:	48 89 c1             	mov    %rax,%rcx
  41307e:	48 c1 ea 03          	shr    $0x3,%rdx
  413082:	83 e1 07             	and    $0x7,%ecx
  413085:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41308c:	38 ca                	cmp    %cl,%dl
  41308e:	7f 08                	jg     413098 <httpd_parse_request+0x4c8>
  413090:	84 d2                	test   %dl,%dl
  413092:	0f 85 2a 13 00 00    	jne    4143c2 <httpd_parse_request+0x17f2>
  413098:	0f b6 10             	movzbl (%rax),%edx
  41309b:	80 fa 2f             	cmp    $0x2f,%dl
  41309e:	0f 84 ed 07 00 00    	je     413891 <httpd_parse_request+0xcc1>
  4130a4:	80 fa 2e             	cmp    $0x2e,%dl
  4130a7:	0f 84 b3 0a 00 00    	je     413b60 <httpd_parse_request+0xf90>
    if ( hc->mime_flag )
  4130ad:	48 8d bb 08 02 00 00 	lea    0x208(%rbx),%rdi
  4130b4:	48 89 f8             	mov    %rdi,%rax
  4130b7:	48 c1 e8 03          	shr    $0x3,%rax
  4130bb:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4130c2:	84 c0                	test   %al,%al
  4130c4:	74 08                	je     4130ce <httpd_parse_request+0x4fe>
  4130c6:	3c 03                	cmp    $0x3,%al
  4130c8:	0f 8e fc 12 00 00    	jle    4143ca <httpd_parse_request+0x17fa>
  4130ce:	8b b3 08 02 00 00    	mov    0x208(%rbx),%esi
  4130d4:	85 f6                	test   %esi,%esi
  4130d6:	0f 84 d4 00 00 00    	je     4131b0 <httpd_parse_request+0x5e0>
		    hc->keep_alive = 1;
  4130dc:	48 8d 83 28 02 00 00 	lea    0x228(%rbx),%rax
		hc->authorization = cp;
  4130e3:	4c 8d b3 60 01 00 00 	lea    0x160(%rbx),%r14
		    hc->keep_alive = 1;
  4130ea:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  4130ef:	48 c1 e8 03          	shr    $0x3,%rax
  4130f3:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
		hc->authorization = cp;
  4130f8:	4c 89 f0             	mov    %r14,%rax
  4130fb:	48 c1 e8 03          	shr    $0x3,%rax
  4130ff:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  413104:	0f 1f 40 00          	nopl   0x0(%rax)
	while ( ( buf = bufgets( hc ) ) != (char*) 0 )
  413108:	48 89 df             	mov    %rbx,%rdi
  41310b:	e8 00 79 ff ff       	callq  40aa10 <bufgets>
  413110:	49 89 c4             	mov    %rax,%r12
  413113:	48 85 c0             	test   %rax,%rax
  413116:	0f 84 94 00 00 00    	je     4131b0 <httpd_parse_request+0x5e0>
	    if ( buf[0] == '\0' )
  41311c:	4c 89 e0             	mov    %r12,%rax
  41311f:	4c 89 e2             	mov    %r12,%rdx
  413122:	48 c1 e8 03          	shr    $0x3,%rax
  413126:	83 e2 07             	and    $0x7,%edx
  413129:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  413130:	38 d0                	cmp    %dl,%al
  413132:	7f 08                	jg     41313c <httpd_parse_request+0x56c>
  413134:	84 c0                	test   %al,%al
  413136:	0f 85 f3 0f 00 00    	jne    41412f <httpd_parse_request+0x155f>
  41313c:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
  413141:	74 6d                	je     4131b0 <httpd_parse_request+0x5e0>
	    if ( strncasecmp( buf, "Referer:", 8 ) == 0 )
  413143:	ba 08 00 00 00       	mov    $0x8,%edx
  413148:	be e0 47 42 00       	mov    $0x4247e0,%esi
  41314d:	4c 89 e7             	mov    %r12,%rdi
  413150:	e8 db fa fe ff       	callq  402c30 <strncasecmp@plt>
  413155:	85 c0                	test   %eax,%eax
  413157:	0f 85 13 06 00 00    	jne    413770 <httpd_parse_request+0xba0>
		cp = &buf[8];
  41315d:	49 83 c4 08          	add    $0x8,%r12
		cp += strspn( cp, " \t" );
  413161:	be 20 48 42 00       	mov    $0x424820,%esi
  413166:	4c 89 e7             	mov    %r12,%rdi
  413169:	e8 72 03 ff ff       	callq  4034e0 <strspn@plt>
		hc->referer = cp;
  41316e:	48 8d bb 10 01 00 00 	lea    0x110(%rbx),%rdi
		cp += strspn( cp, " \t" );
  413175:	49 01 c4             	add    %rax,%r12
		hc->referer = cp;
  413178:	48 89 f8             	mov    %rdi,%rax
  41317b:	48 c1 e8 03          	shr    $0x3,%rax
  41317f:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  413186:	0f 85 53 11 00 00    	jne    4142df <httpd_parse_request+0x170f>
  41318c:	4c 89 a3 10 01 00 00 	mov    %r12,0x110(%rbx)
	while ( ( buf = bufgets( hc ) ) != (char*) 0 )
  413193:	48 89 df             	mov    %rbx,%rdi
  413196:	e8 75 78 ff ff       	callq  40aa10 <bufgets>
  41319b:	49 89 c4             	mov    %rax,%r12
  41319e:	48 85 c0             	test   %rax,%rax
  4131a1:	0f 85 75 ff ff ff    	jne    41311c <httpd_parse_request+0x54c>
  4131a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4131ae:	00 00 
    if ( hc->one_one )
  4131b0:	48 8d bb 0c 02 00 00 	lea    0x20c(%rbx),%rdi
  4131b7:	48 89 f8             	mov    %rdi,%rax
  4131ba:	48 c1 e8 03          	shr    $0x3,%rax
  4131be:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4131c5:	48 89 f8             	mov    %rdi,%rax
  4131c8:	83 e0 07             	and    $0x7,%eax
  4131cb:	83 c0 03             	add    $0x3,%eax
  4131ce:	38 d0                	cmp    %dl,%al
  4131d0:	7c 08                	jl     4131da <httpd_parse_request+0x60a>
  4131d2:	84 d2                	test   %dl,%dl
  4131d4:	0f 85 cc 11 00 00    	jne    4143a6 <httpd_parse_request+0x17d6>
  4131da:	8b 8b 0c 02 00 00    	mov    0x20c(%rbx),%ecx
  4131e0:	85 c9                	test   %ecx,%ecx
  4131e2:	0f 84 f1 00 00 00    	je     4132d9 <httpd_parse_request+0x709>
	if ( hc->reqhost[0] == '\0' && hc->hdrhost[0] == '\0' )
  4131e8:	48 8d bb 48 01 00 00 	lea    0x148(%rbx),%rdi
  4131ef:	48 89 f8             	mov    %rdi,%rax
  4131f2:	48 c1 e8 03          	shr    $0x3,%rax
  4131f6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4131fd:	0f 85 39 13 00 00    	jne    41453c <httpd_parse_request+0x196c>
  413203:	48 8b bb 48 01 00 00 	mov    0x148(%rbx),%rdi
  41320a:	48 89 f8             	mov    %rdi,%rax
  41320d:	48 89 fa             	mov    %rdi,%rdx
  413210:	48 c1 e8 03          	shr    $0x3,%rax
  413214:	83 e2 07             	and    $0x7,%edx
  413217:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41321e:	38 d0                	cmp    %dl,%al
  413220:	7f 08                	jg     41322a <httpd_parse_request+0x65a>
  413222:	84 c0                	test   %al,%al
  413224:	0f 85 26 13 00 00    	jne    414550 <httpd_parse_request+0x1980>
  41322a:	80 3f 00             	cmpb   $0x0,(%rdi)
  41322d:	75 4b                	jne    41327a <httpd_parse_request+0x6aa>
  41322f:	48 8d bb 50 01 00 00 	lea    0x150(%rbx),%rdi
  413236:	48 89 f8             	mov    %rdi,%rax
  413239:	48 c1 e8 03          	shr    $0x3,%rax
  41323d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  413244:	0f 85 0b 13 00 00    	jne    414555 <httpd_parse_request+0x1985>
  41324a:	48 8b bb 50 01 00 00 	mov    0x150(%rbx),%rdi
  413251:	48 89 f8             	mov    %rdi,%rax
  413254:	48 89 fa             	mov    %rdi,%rdx
  413257:	48 c1 e8 03          	shr    $0x3,%rax
  41325b:	83 e2 07             	and    $0x7,%edx
  41325e:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  413265:	38 d0                	cmp    %dl,%al
  413267:	7f 08                	jg     413271 <httpd_parse_request+0x6a1>
  413269:	84 c0                	test   %al,%al
  41326b:	0f 85 c2 13 00 00    	jne    414633 <httpd_parse_request+0x1a63>
  413271:	80 3f 00             	cmpb   $0x0,(%rdi)
  413274:	0f 84 17 06 00 00    	je     413891 <httpd_parse_request+0xcc1>
	if ( hc->keep_alive )
  41327a:	48 8d bb 28 02 00 00 	lea    0x228(%rbx),%rdi
  413281:	48 89 f8             	mov    %rdi,%rax
  413284:	48 c1 e8 03          	shr    $0x3,%rax
  413288:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41328f:	84 c0                	test   %al,%al
  413291:	74 08                	je     41329b <httpd_parse_request+0x6cb>
  413293:	3c 03                	cmp    $0x3,%al
  413295:	0f 8e b0 12 00 00    	jle    41454b <httpd_parse_request+0x197b>
  41329b:	8b 93 28 02 00 00    	mov    0x228(%rbx),%edx
  4132a1:	85 d2                	test   %edx,%edx
  4132a3:	74 34                	je     4132d9 <httpd_parse_request+0x709>
	    hc->should_linger = 1;
  4132a5:	48 8d bb 2c 02 00 00 	lea    0x22c(%rbx),%rdi
  4132ac:	48 89 f8             	mov    %rdi,%rax
  4132af:	48 c1 e8 03          	shr    $0x3,%rax
  4132b3:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4132ba:	48 89 f8             	mov    %rdi,%rax
  4132bd:	83 e0 07             	and    $0x7,%eax
  4132c0:	83 c0 03             	add    $0x3,%eax
  4132c3:	38 d0                	cmp    %dl,%al
  4132c5:	7c 08                	jl     4132cf <httpd_parse_request+0x6ff>
  4132c7:	84 d2                	test   %dl,%dl
  4132c9:	0f 85 5f 13 00 00    	jne    41462e <httpd_parse_request+0x1a5e>
  4132cf:	c7 83 2c 02 00 00 01 	movl   $0x1,0x22c(%rbx)
  4132d6:	00 00 00 
	&hc->expnfilename, &hc->maxexpnfilename, strlen( hc->origfilename ) );
  4132d9:	4d 89 fd             	mov    %r15,%r13
  4132dc:	49 c1 ed 03          	shr    $0x3,%r13
  4132e0:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  4132e7:	00 
  4132e8:	0f 85 85 10 00 00    	jne    414373 <httpd_parse_request+0x17a3>
    httpd_realloc_str(
  4132ee:	48 8b bb e8 00 00 00 	mov    0xe8(%rbx),%rdi
  4132f5:	4c 8d b3 88 01 00 00 	lea    0x188(%rbx),%r14
  4132fc:	4c 8d a3 f0 00 00 00 	lea    0xf0(%rbx),%r12
  413303:	e8 78 f9 fe ff       	callq  402c80 <strlen@plt>
  413308:	4c 89 f6             	mov    %r14,%rsi
  41330b:	4c 89 e7             	mov    %r12,%rdi
  41330e:	48 89 c2             	mov    %rax,%rdx
  413311:	e8 1a a0 ff ff       	callq  40d330 <httpd_realloc_str>
    (void) strcpy( hc->expnfilename, hc->origfilename );
  413316:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  41331d:	00 
  41331e:	0f 85 b3 10 00 00    	jne    4143d7 <httpd_parse_request+0x1807>
  413324:	4c 89 e0             	mov    %r12,%rax
  413327:	48 8b b3 e8 00 00 00 	mov    0xe8(%rbx),%rsi
  41332e:	48 c1 e8 03          	shr    $0x3,%rax
  413332:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  413339:	0f 85 a0 10 00 00    	jne    4143df <httpd_parse_request+0x180f>
  41333f:	48 8b bb f0 00 00 00 	mov    0xf0(%rbx),%rdi
  413346:	e8 c5 fb fe ff       	callq  402f10 <strcpy@plt>
    if ( hc->hs->vhost )
  41334b:	48 8d 43 08          	lea    0x8(%rbx),%rax
  41334f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  413354:	48 c1 e8 03          	shr    $0x3,%rax
  413358:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41335f:	0f 85 62 11 00 00    	jne    4144c7 <httpd_parse_request+0x18f7>
  413365:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  413369:	48 8d 7a 64          	lea    0x64(%rdx),%rdi
  41336d:	48 89 f8             	mov    %rdi,%rax
  413370:	48 c1 e8 03          	shr    $0x3,%rax
  413374:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  41337b:	48 89 f8             	mov    %rdi,%rax
  41337e:	83 e0 07             	and    $0x7,%eax
  413381:	83 c0 03             	add    $0x3,%eax
  413384:	38 c8                	cmp    %cl,%al
  413386:	7c 08                	jl     413390 <httpd_parse_request+0x7c0>
  413388:	84 c9                	test   %cl,%cl
  41338a:	0f 85 41 11 00 00    	jne    4144d1 <httpd_parse_request+0x1901>
  413390:	8b 42 64             	mov    0x64(%rdx),%eax
  413393:	85 c0                	test   %eax,%eax
  413395:	74 2a                	je     4133c1 <httpd_parse_request+0x7f1>
	if ( ! vhost_map( hc ) )
  413397:	48 89 df             	mov    %rbx,%rdi
  41339a:	e8 d1 f1 ff ff       	callq  412570 <vhost_map>
  41339f:	85 c0                	test   %eax,%eax
  4133a1:	0f 84 9d 0e 00 00    	je     414244 <httpd_parse_request+0x1674>
  4133a7:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  4133ac:	48 c1 e8 03          	shr    $0x3,%rax
  4133b0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4133b7:	0f 85 84 11 00 00    	jne    414541 <httpd_parse_request+0x1971>
  4133bd:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    cp = expand_symlinks( hc->expnfilename, &pi, hc->hs->no_symlink_check, hc->tildemapped );
  4133c1:	48 8d bb 14 02 00 00 	lea    0x214(%rbx),%rdi
  4133c8:	48 89 f8             	mov    %rdi,%rax
  4133cb:	48 c1 e8 03          	shr    $0x3,%rax
  4133cf:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  4133d6:	48 89 f8             	mov    %rdi,%rax
  4133d9:	83 e0 07             	and    $0x7,%eax
  4133dc:	83 c0 03             	add    $0x3,%eax
  4133df:	38 c8                	cmp    %cl,%al
  4133e1:	7c 08                	jl     4133eb <httpd_parse_request+0x81b>
  4133e3:	84 c9                	test   %cl,%cl
  4133e5:	0f 85 06 10 00 00    	jne    4143f1 <httpd_parse_request+0x1821>
  4133eb:	48 8d 7a 60          	lea    0x60(%rdx),%rdi
  4133ef:	8b 8b 14 02 00 00    	mov    0x214(%rbx),%ecx
  4133f5:	48 89 f8             	mov    %rdi,%rax
  4133f8:	48 c1 e8 03          	shr    $0x3,%rax
  4133fc:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  413403:	84 c0                	test   %al,%al
  413405:	74 08                	je     41340f <httpd_parse_request+0x83f>
  413407:	3c 03                	cmp    $0x3,%al
  413409:	0f 8e d5 0e 00 00    	jle    4142e4 <httpd_parse_request+0x1714>
  41340f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  413414:	8b 52 60             	mov    0x60(%rdx),%edx
  413417:	48 8b bb f0 00 00 00 	mov    0xf0(%rbx),%rdi
  41341e:	4c 8d 68 c0          	lea    -0x40(%rax),%r13
  413422:	4c 89 ee             	mov    %r13,%rsi
  413425:	e8 26 af ff ff       	callq  40e350 <expand_symlinks>
    if ( cp == (char*) 0 )
  41342a:	48 85 c0             	test   %rax,%rax
  41342d:	0f 84 04 0d 00 00    	je     414137 <httpd_parse_request+0x1567>
    httpd_realloc_str( &hc->expnfilename, &hc->maxexpnfilename, strlen( cp ) );
  413433:	48 89 c7             	mov    %rax,%rdi
  413436:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  41343b:	e8 40 f8 fe ff       	callq  402c80 <strlen@plt>
  413440:	4c 89 f6             	mov    %r14,%rsi
  413443:	4c 89 e7             	mov    %r12,%rdi
  413446:	48 89 c2             	mov    %rax,%rdx
  413449:	e8 e2 9e ff ff       	callq  40d330 <httpd_realloc_str>
    (void) strcpy( hc->expnfilename, cp );
  41344e:	4c 89 e0             	mov    %r12,%rax
  413451:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  413456:	48 c1 e8 03          	shr    $0x3,%rax
  41345a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  413461:	0f 85 68 0f 00 00    	jne    4143cf <httpd_parse_request+0x17ff>
  413467:	48 8b bb f0 00 00 00 	mov    0xf0(%rbx),%rdi
  41346e:	48 89 ce             	mov    %rcx,%rsi
  413471:	e8 9a fa fe ff       	callq  402f10 <strcpy@plt>
    httpd_realloc_str( &hc->pathinfo, &hc->maxpathinfo, strlen( pi ) );
  413476:	4c 89 e9             	mov    %r13,%rcx
  413479:	48 c1 e9 03          	shr    $0x3,%rcx
  41347d:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  413484:	0f 85 1d 10 00 00    	jne    4144a7 <httpd_parse_request+0x18d7>
  41348a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  41348f:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
  413494:	4c 8d b3 00 01 00 00 	lea    0x100(%rbx),%r14
  41349b:	48 8b 78 c0          	mov    -0x40(%rax),%rdi
  41349f:	e8 dc f7 fe ff       	callq  402c80 <strlen@plt>
  4134a4:	48 8d b3 98 01 00 00 	lea    0x198(%rbx),%rsi
  4134ab:	4c 89 f7             	mov    %r14,%rdi
  4134ae:	48 89 c2             	mov    %rax,%rdx
  4134b1:	e8 7a 9e ff ff       	callq  40d330 <httpd_realloc_str>
    (void) strcpy( hc->pathinfo, pi );
  4134b6:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4134bb:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  4134c2:	0f 85 e7 0f 00 00    	jne    4144af <httpd_parse_request+0x18df>
  4134c8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4134cd:	48 8b 70 c0          	mov    -0x40(%rax),%rsi
  4134d1:	4c 89 f0             	mov    %r14,%rax
  4134d4:	48 c1 e8 03          	shr    $0x3,%rax
  4134d8:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4134df:	0f 85 d2 0f 00 00    	jne    4144b7 <httpd_parse_request+0x18e7>
  4134e5:	48 8b bb 00 01 00 00 	mov    0x100(%rbx),%rdi
  4134ec:	e8 1f fa fe ff       	callq  402f10 <strcpy@plt>
    if ( hc->pathinfo[0] != '\0' )
  4134f1:	48 8b b3 00 01 00 00 	mov    0x100(%rbx),%rsi
  4134f8:	48 89 f0             	mov    %rsi,%rax
  4134fb:	48 89 f2             	mov    %rsi,%rdx
  4134fe:	48 c1 e8 03          	shr    $0x3,%rax
  413502:	83 e2 07             	and    $0x7,%edx
  413505:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41350c:	38 d0                	cmp    %dl,%al
  41350e:	7f 08                	jg     413518 <httpd_parse_request+0x948>
  413510:	84 c0                	test   %al,%al
  413512:	0f 85 a7 0f 00 00    	jne    4144bf <httpd_parse_request+0x18ef>
  413518:	80 3e 00             	cmpb   $0x0,(%rsi)
  41351b:	0f 84 8f 00 00 00    	je     4135b0 <httpd_parse_request+0x9e0>
	i = strlen( hc->origfilename ) - strlen( hc->pathinfo );
  413521:	4c 89 f8             	mov    %r15,%rax
  413524:	48 c1 e8 03          	shr    $0x3,%rax
  413528:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41352f:	0f 85 25 11 00 00    	jne    41465a <httpd_parse_request+0x1a8a>
  413535:	4c 8b b3 e8 00 00 00 	mov    0xe8(%rbx),%r14
  41353c:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  413541:	4c 89 f7             	mov    %r14,%rdi
  413544:	e8 37 f7 fe ff       	callq  402c80 <strlen@plt>
  413549:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  41354e:	49 89 c5             	mov    %rax,%r13
  413551:	48 89 f7             	mov    %rsi,%rdi
  413554:	e8 27 f7 fe ff       	callq  402c80 <strlen@plt>
	if ( strcmp( &hc->origfilename[i], hc->pathinfo ) == 0 )
  413559:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
	i = strlen( hc->origfilename ) - strlen( hc->pathinfo );
  41355e:	41 29 c5             	sub    %eax,%r13d
	if ( strcmp( &hc->origfilename[i], hc->pathinfo ) == 0 )
  413561:	49 63 d5             	movslq %r13d,%rdx
  413564:	49 8d 3c 16          	lea    (%r14,%rdx,1),%rdi
  413568:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
  41356d:	e8 ce f8 fe ff       	callq  402e40 <strcmp@plt>
  413572:	85 c0                	test   %eax,%eax
  413574:	75 3a                	jne    4135b0 <httpd_parse_request+0x9e0>
	    if ( i == 0 ) hc->origfilename[0] = '\0';
  413576:	45 85 ed             	test   %r13d,%r13d
  413579:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
  41357e:	0f 85 9c 09 00 00    	jne    413f20 <httpd_parse_request+0x1350>
  413584:	4c 89 f0             	mov    %r14,%rax
  413587:	4c 89 f2             	mov    %r14,%rdx
  41358a:	48 c1 e8 03          	shr    $0x3,%rax
  41358e:	83 e2 07             	and    $0x7,%edx
  413591:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  413598:	38 d0                	cmp    %dl,%al
  41359a:	7f 08                	jg     4135a4 <httpd_parse_request+0x9d4>
  41359c:	84 c0                	test   %al,%al
  41359e:	0f 85 61 10 00 00    	jne    414605 <httpd_parse_request+0x1a35>
  4135a4:	41 c6 06 00          	movb   $0x0,(%r14)
  4135a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4135af:	00 
    if ( hc->expnfilename[0] == '/' )
  4135b0:	4c 89 e0             	mov    %r12,%rax
  4135b3:	48 c1 e8 03          	shr    $0x3,%rax
  4135b7:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4135be:	0f 85 d2 0d 00 00    	jne    414396 <httpd_parse_request+0x17c6>
  4135c4:	4c 8b ab f0 00 00 00 	mov    0xf0(%rbx),%r13
  4135cb:	4c 89 e8             	mov    %r13,%rax
  4135ce:	4c 89 ea             	mov    %r13,%rdx
  4135d1:	48 c1 e8 03          	shr    $0x3,%rax
  4135d5:	83 e2 07             	and    $0x7,%edx
  4135d8:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4135df:	38 d0                	cmp    %dl,%al
  4135e1:	7f 08                	jg     4135eb <httpd_parse_request+0xa1b>
  4135e3:	84 c0                	test   %al,%al
  4135e5:	0f 85 b3 0d 00 00    	jne    41439e <httpd_parse_request+0x17ce>
    return 0;
  4135eb:	45 31 e4             	xor    %r12d,%r12d
    if ( hc->expnfilename[0] == '/' )
  4135ee:	41 80 7d 00 2f       	cmpb   $0x2f,0x0(%r13)
  4135f3:	0f 84 ef 05 00 00    	je     413be8 <httpd_parse_request+0x1018>
    {
  4135f9:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
  4135fe:	48 39 e8             	cmp    %rbp,%rax
  413601:	0f 85 32 0d 00 00    	jne    414339 <httpd_parse_request+0x1769>
  413607:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  41360c:	48 c7 80 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rax)
  413613:	00 00 00 00 
  413617:	c7 80 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rax)
  41361e:	00 00 00 
    }
  413621:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
  413628:	44 89 e0             	mov    %r12d,%eax
  41362b:	5b                   	pop    %rbx
  41362c:	5d                   	pop    %rbp
  41362d:	41 5c                	pop    %r12
  41362f:	41 5d                	pop    %r13
  413631:	41 5e                	pop    %r14
  413633:	41 5f                	pop    %r15
  413635:	c3                   	retq   
  413636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41363d:	00 00 00 
	if ( ! hc->one_one )
  413640:	48 8d bb 0c 02 00 00 	lea    0x20c(%rbx),%rdi
  413647:	48 89 f8             	mov    %rdi,%rax
  41364a:	48 c1 e8 03          	shr    $0x3,%rax
  41364e:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  413655:	48 89 f8             	mov    %rdi,%rax
  413658:	83 e0 07             	and    $0x7,%eax
  41365b:	83 c0 03             	add    $0x3,%eax
  41365e:	38 d0                	cmp    %dl,%al
  413660:	7c 08                	jl     41366a <httpd_parse_request+0xa9a>
  413662:	84 d2                	test   %dl,%dl
  413664:	0f 85 f0 0e 00 00    	jne    41455a <httpd_parse_request+0x198a>
  41366a:	8b bb 0c 02 00 00    	mov    0x20c(%rbx),%edi
  413670:	85 ff                	test   %edi,%edi
  413672:	0f 84 19 02 00 00    	je     413891 <httpd_parse_request+0xcc1>
	reqhost = url + 7;
  413678:	4d 8d 74 24 07       	lea    0x7(%r12),%r14
	url = strchr( reqhost, '/' );
  41367d:	be 2f 00 00 00       	mov    $0x2f,%esi
  413682:	4c 89 f7             	mov    %r14,%rdi
  413685:	e8 36 fd fe ff       	callq  4033c0 <strchr@plt>
  41368a:	49 89 c7             	mov    %rax,%r15
	if ( url == (char*) 0 )
  41368d:	48 85 c0             	test   %rax,%rax
  413690:	0f 84 fb 01 00 00    	je     413891 <httpd_parse_request+0xcc1>
	*url = '\0';
  413696:	48 c1 e8 03          	shr    $0x3,%rax
  41369a:	4c 89 fa             	mov    %r15,%rdx
  41369d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4136a4:	83 e2 07             	and    $0x7,%edx
  4136a7:	38 d0                	cmp    %dl,%al
  4136a9:	7f 08                	jg     4136b3 <httpd_parse_request+0xae3>
  4136ab:	84 c0                	test   %al,%al
  4136ad:	0f 85 ac 0e 00 00    	jne    41455f <httpd_parse_request+0x198f>
  4136b3:	41 c6 07 00          	movb   $0x0,(%r15)
	if ( strchr( reqhost, '/' ) != (char*) 0 || reqhost[0] == '.' )
  4136b7:	be 2f 00 00 00       	mov    $0x2f,%esi
  4136bc:	4c 89 f7             	mov    %r14,%rdi
  4136bf:	e8 fc fc fe ff       	callq  4033c0 <strchr@plt>
  4136c4:	48 85 c0             	test   %rax,%rax
  4136c7:	0f 85 c4 01 00 00    	jne    413891 <httpd_parse_request+0xcc1>
  4136cd:	4c 89 f0             	mov    %r14,%rax
  4136d0:	4c 89 f2             	mov    %r14,%rdx
  4136d3:	48 c1 e8 03          	shr    $0x3,%rax
  4136d7:	83 e2 07             	and    $0x7,%edx
  4136da:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4136e1:	38 d0                	cmp    %dl,%al
  4136e3:	7f 08                	jg     4136ed <httpd_parse_request+0xb1d>
  4136e5:	84 c0                	test   %al,%al
  4136e7:	0f 85 7a 0e 00 00    	jne    414567 <httpd_parse_request+0x1997>
  4136ed:	41 80 7c 24 07 2e    	cmpb   $0x2e,0x7(%r12)
  4136f3:	0f 84 98 01 00 00    	je     413891 <httpd_parse_request+0xcc1>
	httpd_realloc_str( &hc->reqhost, &hc->maxreqhost, strlen( reqhost ) );
  4136f9:	4c 89 f7             	mov    %r14,%rdi
  4136fc:	4c 8d a3 48 01 00 00 	lea    0x148(%rbx),%r12
  413703:	e8 78 f5 fe ff       	callq  402c80 <strlen@plt>
  413708:	48 8d b3 b8 01 00 00 	lea    0x1b8(%rbx),%rsi
  41370f:	4c 89 e7             	mov    %r12,%rdi
  413712:	48 89 c2             	mov    %rax,%rdx
  413715:	e8 16 9c ff ff       	callq  40d330 <httpd_realloc_str>
	(void) strcpy( hc->reqhost, reqhost );
  41371a:	4c 89 e0             	mov    %r12,%rax
  41371d:	48 c1 e8 03          	shr    $0x3,%rax
  413721:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  413728:	0f 85 41 0e 00 00    	jne    41456f <httpd_parse_request+0x199f>
  41372e:	48 8b bb 48 01 00 00 	mov    0x148(%rbx),%rdi
  413735:	4c 89 f6             	mov    %r14,%rsi
  413738:	e8 d3 f7 fe ff       	callq  402f10 <strcpy@plt>
	*url = '/';
  41373d:	4c 89 f8             	mov    %r15,%rax
  413740:	4c 89 fa             	mov    %r15,%rdx
  413743:	48 c1 e8 03          	shr    $0x3,%rax
  413747:	83 e2 07             	and    $0x7,%edx
  41374a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  413751:	38 d0                	cmp    %dl,%al
  413753:	7f 08                	jg     41375d <httpd_parse_request+0xb8d>
  413755:	84 c0                	test   %al,%al
  413757:	0f 85 05 0f 00 00    	jne    414662 <httpd_parse_request+0x1a92>
  41375d:	41 c6 07 2f          	movb   $0x2f,(%r15)
  413761:	4d 89 fc             	mov    %r15,%r12
  413764:	e9 ae f6 ff ff       	jmpq   412e17 <httpd_parse_request+0x247>
  413769:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    else if ( strncasecmp( buf, "User-Agent:", 11 ) == 0 )
  413770:	ba 0b 00 00 00       	mov    $0xb,%edx
  413775:	be 60 48 42 00       	mov    $0x424860,%esi
  41377a:	4c 89 e7             	mov    %r12,%rdi
  41377d:	e8 ae f4 fe ff       	callq  402c30 <strncasecmp@plt>
  413782:	85 c0                	test   %eax,%eax
  413784:	75 42                	jne    4137c8 <httpd_parse_request+0xbf8>
		cp = &buf[11];
  413786:	49 83 c4 0b          	add    $0xb,%r12
		cp += strspn( cp, " \t" );
  41378a:	be 20 48 42 00       	mov    $0x424820,%esi
  41378f:	4c 89 e7             	mov    %r12,%rdi
  413792:	e8 49 fd fe ff       	callq  4034e0 <strspn@plt>
		hc->useragent = cp;
  413797:	48 8d bb 18 01 00 00 	lea    0x118(%rbx),%rdi
		cp += strspn( cp, " \t" );
  41379e:	49 01 c4             	add    %rax,%r12
		hc->useragent = cp;
  4137a1:	48 89 f8             	mov    %rdi,%rax
  4137a4:	48 c1 e8 03          	shr    $0x3,%rax
  4137a8:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4137af:	0f 85 32 0c 00 00    	jne    4143e7 <httpd_parse_request+0x1817>
  4137b5:	4c 89 a3 18 01 00 00 	mov    %r12,0x118(%rbx)
  4137bc:	e9 47 f9 ff ff       	jmpq   413108 <httpd_parse_request+0x538>
  4137c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    else if ( strncasecmp( buf, "Host:", 5 ) == 0 )
  4137c8:	ba 05 00 00 00       	mov    $0x5,%edx
  4137cd:	be a0 48 42 00       	mov    $0x4248a0,%esi
  4137d2:	4c 89 e7             	mov    %r12,%rdi
  4137d5:	e8 56 f4 fe ff       	callq  402c30 <strncasecmp@plt>
  4137da:	85 c0                	test   %eax,%eax
  4137dc:	0f 85 de 00 00 00    	jne    4138c0 <httpd_parse_request+0xcf0>
		cp = &buf[5];
  4137e2:	49 83 c4 05          	add    $0x5,%r12
		cp += strspn( cp, " \t" );
  4137e6:	be 20 48 42 00       	mov    $0x424820,%esi
  4137eb:	4c 89 e7             	mov    %r12,%rdi
  4137ee:	e8 ed fc fe ff       	callq  4034e0 <strspn@plt>
		hc->hdrhost = cp;
  4137f3:	48 8d bb 50 01 00 00 	lea    0x150(%rbx),%rdi
		cp += strspn( cp, " \t" );
  4137fa:	49 01 c4             	add    %rax,%r12
		hc->hdrhost = cp;
  4137fd:	48 89 f8             	mov    %rdi,%rax
  413800:	48 c1 e8 03          	shr    $0x3,%rax
  413804:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41380b:	0f 85 55 0b 00 00    	jne    414366 <httpd_parse_request+0x1796>
  413811:	4c 89 a3 50 01 00 00 	mov    %r12,0x150(%rbx)
		cp = strchr( hc->hdrhost, ':' );
  413818:	be 3a 00 00 00       	mov    $0x3a,%esi
  41381d:	4c 89 e7             	mov    %r12,%rdi
  413820:	e8 9b fb fe ff       	callq  4033c0 <strchr@plt>
		if ( cp != (char*) 0 )
  413825:	48 85 c0             	test   %rax,%rax
  413828:	74 2a                	je     413854 <httpd_parse_request+0xc84>
		    *cp = '\0';
  41382a:	48 89 c2             	mov    %rax,%rdx
  41382d:	48 89 c1             	mov    %rax,%rcx
  413830:	48 c1 ea 03          	shr    $0x3,%rdx
  413834:	83 e1 07             	and    $0x7,%ecx
  413837:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41383e:	38 ca                	cmp    %cl,%dl
  413840:	7f 08                	jg     41384a <httpd_parse_request+0xc7a>
  413842:	84 d2                	test   %dl,%dl
  413844:	0f 85 ea 0c 00 00    	jne    414534 <httpd_parse_request+0x1964>
  41384a:	c6 00 00             	movb   $0x0,(%rax)
  41384d:	4c 8b a3 50 01 00 00 	mov    0x150(%rbx),%r12
		if ( strchr( hc->hdrhost, '/' ) != (char*) 0 || hc->hdrhost[0] == '.' )
  413854:	be 2f 00 00 00       	mov    $0x2f,%esi
  413859:	4c 89 e7             	mov    %r12,%rdi
  41385c:	e8 5f fb fe ff       	callq  4033c0 <strchr@plt>
  413861:	48 85 c0             	test   %rax,%rax
  413864:	75 2b                	jne    413891 <httpd_parse_request+0xcc1>
  413866:	4c 89 e0             	mov    %r12,%rax
  413869:	4c 89 e2             	mov    %r12,%rdx
  41386c:	48 c1 e8 03          	shr    $0x3,%rax
  413870:	83 e2 07             	and    $0x7,%edx
  413873:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41387a:	38 d0                	cmp    %dl,%al
  41387c:	7f 08                	jg     413886 <httpd_parse_request+0xcb6>
  41387e:	84 c0                	test   %al,%al
  413880:	0f 85 e5 0a 00 00    	jne    41436b <httpd_parse_request+0x179b>
  413886:	41 80 3c 24 2e       	cmpb   $0x2e,(%r12)
  41388b:	0f 85 77 f8 ff ff    	jne    413108 <httpd_parse_request+0x538>
	    httpd_send_err( hc, 400, httpd_err400title, "", httpd_err400form, "" );
  413891:	41 b9 60 38 42 00    	mov    $0x423860,%r9d
  413897:	4c 8b 05 c2 27 22 00 	mov    0x2227c2(%rip),%r8        # 636060 <httpd_err400form>
  41389e:	be 90 01 00 00       	mov    $0x190,%esi
  4138a3:	48 89 df             	mov    %rbx,%rdi
  4138a6:	48 8b 15 f3 27 22 00 	mov    0x2227f3(%rip),%rdx        # 6360a0 <httpd_err400title>
  4138ad:	4c 89 c9             	mov    %r9,%rcx
	    return -1;
  4138b0:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
	    httpd_send_err( hc, 400, httpd_err400title, "", httpd_err400form, "" );
  4138b6:	e8 05 c6 ff ff       	callq  40fec0 <httpd_send_err>
	    return -1;
  4138bb:	e9 39 fd ff ff       	jmpq   4135f9 <httpd_parse_request+0xa29>
	    else if ( strncasecmp( buf, "Accept:", 7 ) == 0 )
  4138c0:	ba 07 00 00 00       	mov    $0x7,%edx
  4138c5:	be e0 48 42 00       	mov    $0x4248e0,%esi
  4138ca:	4c 89 e7             	mov    %r12,%rdi
  4138cd:	e8 5e f3 fe ff       	callq  402c30 <strncasecmp@plt>
  4138d2:	85 c0                	test   %eax,%eax
  4138d4:	0f 85 66 01 00 00    	jne    413a40 <httpd_parse_request+0xe70>
		cp = &buf[7];
  4138da:	49 83 c4 07          	add    $0x7,%r12
		cp += strspn( cp, " \t" );
  4138de:	be 20 48 42 00       	mov    $0x424820,%esi
		if ( hc->accept[0] != '\0' )
  4138e3:	4c 8d ab 20 01 00 00 	lea    0x120(%rbx),%r13
		cp += strspn( cp, " \t" );
  4138ea:	4c 89 e7             	mov    %r12,%rdi
  4138ed:	e8 ee fb fe ff       	callq  4034e0 <strspn@plt>
  4138f2:	49 01 c4             	add    %rax,%r12
		if ( hc->accept[0] != '\0' )
  4138f5:	4c 89 e8             	mov    %r13,%rax
  4138f8:	48 c1 e8 03          	shr    $0x3,%rax
  4138fc:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  413903:	0f 85 8d 0c 00 00    	jne    414596 <httpd_parse_request+0x19c6>
  413909:	48 8b bb 20 01 00 00 	mov    0x120(%rbx),%rdi
  413910:	48 89 f8             	mov    %rdi,%rax
  413913:	48 89 fa             	mov    %rdi,%rdx
  413916:	48 c1 e8 03          	shr    $0x3,%rax
  41391a:	83 e2 07             	and    $0x7,%edx
  41391d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  413924:	38 d0                	cmp    %dl,%al
  413926:	7f 08                	jg     413930 <httpd_parse_request+0xd60>
  413928:	84 c0                	test   %al,%al
  41392a:	0f 85 6e 0c 00 00    	jne    41459e <httpd_parse_request+0x19ce>
  413930:	80 3f 00             	cmpb   $0x0,(%rdi)
  413933:	0f 84 37 06 00 00    	je     413f70 <httpd_parse_request+0x13a0>
		    if ( strlen( hc->accept ) > 5000 )
  413939:	e8 42 f3 fe ff       	callq  402c80 <strlen@plt>
  41393e:	48 3d 88 13 00 00    	cmp    $0x1388,%rax
  413944:	0f 87 46 06 00 00    	ja     413f90 <httpd_parse_request+0x13c0>
			strlen( hc->accept ) + 2 + strlen( cp ) );
  41394a:	4c 89 e7             	mov    %r12,%rdi
  41394d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  413952:	e8 29 f3 fe ff       	callq  402c80 <strlen@plt>
		    httpd_realloc_str(
  413957:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
  41395c:	48 8d b3 a8 01 00 00 	lea    0x1a8(%rbx),%rsi
  413963:	4c 89 ef             	mov    %r13,%rdi
  413966:	48 8d 54 02 02       	lea    0x2(%rdx,%rax,1),%rdx
  41396b:	e8 c0 99 ff ff       	callq  40d330 <httpd_realloc_str>
		    (void) strcat( hc->accept, ", " );
  413970:	4c 89 e8             	mov    %r13,%rax
  413973:	48 c1 e8 03          	shr    $0x3,%rax
  413977:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41397e:	0f 85 1f 0c 00 00    	jne    4145a3 <httpd_parse_request+0x19d3>
  413984:	48 8b 93 20 01 00 00 	mov    0x120(%rbx),%rdx
  41398b:	48 89 d7             	mov    %rdx,%rdi
  41398e:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
  413993:	e8 e8 f2 fe ff       	callq  402c80 <strlen@plt>
  413998:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
  41399d:	be 60 49 42 00       	mov    $0x424960,%esi
  4139a2:	48 8d 3c 02          	lea    (%rdx,%rax,1),%rdi
  4139a6:	ba 03 00 00 00       	mov    $0x3,%edx
  4139ab:	e8 90 f7 fe ff       	callq  403140 <memcpy@plt>
		(void) strcat( hc->accept, cp );
  4139b0:	4c 89 e8             	mov    %r13,%rax
  4139b3:	48 c1 e8 03          	shr    $0x3,%rax
  4139b7:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4139be:	0f 85 e7 0b 00 00    	jne    4145ab <httpd_parse_request+0x19db>
  4139c4:	48 8b bb 20 01 00 00 	mov    0x120(%rbx),%rdi
  4139cb:	4c 89 e6             	mov    %r12,%rsi
  4139ce:	e8 ed fa fe ff       	callq  4034c0 <strcat@plt>
  4139d3:	e9 30 f7 ff ff       	jmpq   413108 <httpd_parse_request+0x538>
  4139d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4139df:	00 
    else if ( strcasecmp( method_str, httpd_method_str( METHOD_HEAD ) ) == 0 )
  4139e0:	bf 02 00 00 00       	mov    $0x2,%edi
  4139e5:	e8 36 c8 ff ff       	callq  410220 <httpd_method_str>
  4139ea:	4c 89 ef             	mov    %r13,%rdi
  4139ed:	48 89 c6             	mov    %rax,%rsi
  4139f0:	e8 9b f6 fe ff       	callq  403090 <strcasecmp@plt>
  4139f5:	85 c0                	test   %eax,%eax
  4139f7:	0f 85 93 02 00 00    	jne    413c90 <httpd_parse_request+0x10c0>
	hc->method = METHOD_HEAD;
  4139fd:	48 8d bb b4 00 00 00 	lea    0xb4(%rbx),%rdi
  413a04:	48 89 f8             	mov    %rdi,%rax
  413a07:	48 c1 e8 03          	shr    $0x3,%rax
  413a0b:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  413a12:	48 89 f8             	mov    %rdi,%rax
  413a15:	83 e0 07             	and    $0x7,%eax
  413a18:	83 c0 03             	add    $0x3,%eax
  413a1b:	38 d0                	cmp    %dl,%al
  413a1d:	7c 08                	jl     413a27 <httpd_parse_request+0xe57>
  413a1f:	84 d2                	test   %dl,%dl
  413a21:	0f 85 fd 0b 00 00    	jne    414624 <httpd_parse_request+0x1a54>
  413a27:	c7 83 b4 00 00 00 02 	movl   $0x2,0xb4(%rbx)
  413a2e:	00 00 00 
  413a31:	e9 32 f4 ff ff       	jmpq   412e68 <httpd_parse_request+0x298>
  413a36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  413a3d:	00 00 00 
	    else if ( strncasecmp( buf, "Accept-Encoding:", 16 ) == 0 )
  413a40:	ba 10 00 00 00       	mov    $0x10,%edx
  413a45:	be a0 49 42 00       	mov    $0x4249a0,%esi
  413a4a:	4c 89 e7             	mov    %r12,%rdi
  413a4d:	e8 de f1 fe ff       	callq  402c30 <strncasecmp@plt>
  413a52:	85 c0                	test   %eax,%eax
  413a54:	0f 85 96 02 00 00    	jne    413cf0 <httpd_parse_request+0x1120>
		cp = &buf[16];
  413a5a:	49 83 c4 10          	add    $0x10,%r12
		cp += strspn( cp, " \t" );
  413a5e:	be 20 48 42 00       	mov    $0x424820,%esi
		if ( hc->accepte[0] != '\0' )
  413a63:	4c 8d ab 28 01 00 00 	lea    0x128(%rbx),%r13
		cp += strspn( cp, " \t" );
  413a6a:	4c 89 e7             	mov    %r12,%rdi
  413a6d:	e8 6e fa fe ff       	callq  4034e0 <strspn@plt>
  413a72:	49 01 c4             	add    %rax,%r12
		if ( hc->accepte[0] != '\0' )
  413a75:	4c 89 e8             	mov    %r13,%rax
  413a78:	48 c1 e8 03          	shr    $0x3,%rax
  413a7c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  413a83:	0f 85 f1 0b 00 00    	jne    41467a <httpd_parse_request+0x1aaa>
  413a89:	48 8b bb 28 01 00 00 	mov    0x128(%rbx),%rdi
  413a90:	48 89 f8             	mov    %rdi,%rax
  413a93:	48 89 fa             	mov    %rdi,%rdx
  413a96:	48 c1 e8 03          	shr    $0x3,%rax
  413a9a:	83 e2 07             	and    $0x7,%edx
  413a9d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  413aa4:	38 d0                	cmp    %dl,%al
  413aa6:	7f 08                	jg     413ab0 <httpd_parse_request+0xee0>
  413aa8:	84 c0                	test   %al,%al
  413aaa:	0f 85 46 0b 00 00    	jne    4145f6 <httpd_parse_request+0x1a26>
  413ab0:	80 3f 00             	cmpb   $0x0,(%rdi)
  413ab3:	0f 84 94 04 00 00    	je     413f4d <httpd_parse_request+0x137d>
		    if ( strlen( hc->accepte ) > 5000 )
  413ab9:	e8 c2 f1 fe ff       	callq  402c80 <strlen@plt>
  413abe:	48 3d 88 13 00 00    	cmp    $0x1388,%rax
  413ac4:	0f 87 e8 04 00 00    	ja     413fb2 <httpd_parse_request+0x13e2>
			strlen( hc->accepte ) + 2 + strlen( cp ) );
  413aca:	4c 89 e7             	mov    %r12,%rdi
  413acd:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  413ad2:	e8 a9 f1 fe ff       	callq  402c80 <strlen@plt>
		    httpd_realloc_str(
  413ad7:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
  413adc:	48 8d b3 b0 01 00 00 	lea    0x1b0(%rbx),%rsi
  413ae3:	4c 89 ef             	mov    %r13,%rdi
  413ae6:	48 8d 54 02 02       	lea    0x2(%rdx,%rax,1),%rdx
  413aeb:	e8 40 98 ff ff       	callq  40d330 <httpd_realloc_str>
		    (void) strcat( hc->accepte, ", " );
  413af0:	4c 89 e8             	mov    %r13,%rax
  413af3:	48 c1 e8 03          	shr    $0x3,%rax
  413af7:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  413afe:	0f 85 3c 0b 00 00    	jne    414640 <httpd_parse_request+0x1a70>
  413b04:	48 8b 93 28 01 00 00 	mov    0x128(%rbx),%rdx
  413b0b:	48 89 d7             	mov    %rdx,%rdi
  413b0e:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
  413b13:	e8 68 f1 fe ff       	callq  402c80 <strlen@plt>
  413b18:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
  413b1d:	be 60 49 42 00       	mov    $0x424960,%esi
  413b22:	48 8d 3c 02          	lea    (%rdx,%rax,1),%rdi
  413b26:	ba 03 00 00 00       	mov    $0x3,%edx
  413b2b:	e8 10 f6 fe ff       	callq  403140 <memcpy@plt>
		(void) strcpy( hc->accepte, cp );
  413b30:	4c 89 e8             	mov    %r13,%rax
  413b33:	48 c1 e8 03          	shr    $0x3,%rax
  413b37:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  413b3e:	0f 85 f4 0a 00 00    	jne    414638 <httpd_parse_request+0x1a68>
  413b44:	48 8b bb 28 01 00 00 	mov    0x128(%rbx),%rdi
  413b4b:	4c 89 e6             	mov    %r12,%rsi
  413b4e:	e8 bd f3 fe ff       	callq  402f10 <strcpy@plt>
  413b53:	e9 b0 f5 ff ff       	jmpq   413108 <httpd_parse_request+0x538>
  413b58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  413b5f:	00 
	 ( hc->origfilename[0] == '.' && hc->origfilename[1] == '.' &&
  413b60:	48 8d 78 01          	lea    0x1(%rax),%rdi
  413b64:	48 89 fa             	mov    %rdi,%rdx
  413b67:	48 89 f9             	mov    %rdi,%rcx
  413b6a:	48 c1 ea 03          	shr    $0x3,%rdx
  413b6e:	83 e1 07             	and    $0x7,%ecx
  413b71:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  413b78:	38 ca                	cmp    %cl,%dl
  413b7a:	7f 08                	jg     413b84 <httpd_parse_request+0xfb4>
  413b7c:	84 d2                	test   %dl,%dl
  413b7e:	0f 85 c4 0a 00 00    	jne    414648 <httpd_parse_request+0x1a78>
  413b84:	80 78 01 2e          	cmpb   $0x2e,0x1(%rax)
  413b88:	0f 85 1f f5 ff ff    	jne    4130ad <httpd_parse_request+0x4dd>
	   ( hc->origfilename[2] == '\0' || hc->origfilename[2] == '/' ) ) )
  413b8e:	48 8d 78 02          	lea    0x2(%rax),%rdi
  413b92:	48 89 fa             	mov    %rdi,%rdx
  413b95:	48 89 f9             	mov    %rdi,%rcx
  413b98:	48 c1 ea 03          	shr    $0x3,%rdx
  413b9c:	83 e1 07             	and    $0x7,%ecx
  413b9f:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  413ba6:	38 ca                	cmp    %cl,%dl
  413ba8:	7f 08                	jg     413bb2 <httpd_parse_request+0xfe2>
  413baa:	84 d2                	test   %dl,%dl
  413bac:	0f 85 4e 0a 00 00    	jne    414600 <httpd_parse_request+0x1a30>
  413bb2:	0f b6 40 02          	movzbl 0x2(%rax),%eax
	 ( hc->origfilename[0] == '.' && hc->origfilename[1] == '.' &&
  413bb6:	84 c0                	test   %al,%al
  413bb8:	0f 84 d3 fc ff ff    	je     413891 <httpd_parse_request+0xcc1>
  413bbe:	3c 2f                	cmp    $0x2f,%al
  413bc0:	0f 85 e7 f4 ff ff    	jne    4130ad <httpd_parse_request+0x4dd>
  413bc6:	e9 c6 fc ff ff       	jmpq   413891 <httpd_parse_request+0xcc1>
  413bcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	(void) strcpy( hc->origfilename, "." );
  413bd0:	ba 02 00 00 00       	mov    $0x2,%edx
  413bd5:	be c0 3a 42 00       	mov    $0x423ac0,%esi
  413bda:	e8 61 f5 fe ff       	callq  403140 <memcpy@plt>
  413bdf:	e9 a2 f3 ff ff       	jmpq   412f86 <httpd_parse_request+0x3b6>
  413be4:	0f 1f 40 00          	nopl   0x0(%rax)
		 hc->expnfilename, hc->hs->cwd, strlen( hc->hs->cwd ) ) == 0 )
  413be8:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  413bed:	48 c1 e8 03          	shr    $0x3,%rax
  413bf1:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  413bf8:	0f 85 89 09 00 00    	jne    414587 <httpd_parse_request+0x19b7>
  413bfe:	48 8b 43 08          	mov    0x8(%rbx),%rax
  413c02:	48 8d 78 40          	lea    0x40(%rax),%rdi
  413c06:	48 89 fa             	mov    %rdi,%rdx
  413c09:	48 c1 ea 03          	shr    $0x3,%rdx
  413c0d:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  413c14:	0f 85 77 09 00 00    	jne    414591 <httpd_parse_request+0x19c1>
  413c1a:	4c 8b 60 40          	mov    0x40(%rax),%r12
	if ( strncmp(
  413c1e:	4c 89 e7             	mov    %r12,%rdi
  413c21:	e8 5a f0 fe ff       	callq  402c80 <strlen@plt>
  413c26:	4c 89 e6             	mov    %r12,%rsi
  413c29:	4c 89 ef             	mov    %r13,%rdi
  413c2c:	48 89 c2             	mov    %rax,%rdx
  413c2f:	49 89 c6             	mov    %rax,%r14
  413c32:	e8 b9 f7 fe ff       	callq  4033f0 <strncmp@plt>
  413c37:	41 89 c4             	mov    %eax,%r12d
  413c3a:	85 c0                	test   %eax,%eax
  413c3c:	0f 85 85 05 00 00    	jne    4141c7 <httpd_parse_request+0x15f7>
		hc->expnfilename, &hc->expnfilename[strlen( hc->hs->cwd )] );
  413c42:	4b 8d 74 35 00       	lea    0x0(%r13,%r14,1),%rsi
	    (void) strcpy(
  413c47:	4c 89 ef             	mov    %r13,%rdi
  413c4a:	e8 c1 f2 fe ff       	callq  402f10 <strcpy@plt>
  413c4f:	e9 a5 f9 ff ff       	jmpq   4135f9 <httpd_parse_request+0xa29>
  413c54:	0f 1f 40 00          	nopl   0x0(%rax)
	hc->mime_flag = 0;
  413c58:	48 8d bb 08 02 00 00 	lea    0x208(%rbx),%rdi
  413c5f:	48 89 f8             	mov    %rdi,%rax
  413c62:	48 c1 e8 03          	shr    $0x3,%rax
  413c66:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  413c6d:	84 c0                	test   %al,%al
  413c6f:	74 08                	je     413c79 <httpd_parse_request+0x10a9>
  413c71:	3c 03                	cmp    $0x3,%al
  413c73:	0f 8e b0 09 00 00    	jle    414629 <httpd_parse_request+0x1a59>
  413c79:	c7 83 08 02 00 00 00 	movl   $0x0,0x208(%rbx)
  413c80:	00 00 00 
	protocol = "HTTP/0.9";
  413c83:	41 be 20 46 42 00    	mov    $0x424620,%r14d
  413c89:	e9 22 f1 ff ff       	jmpq   412db0 <httpd_parse_request+0x1e0>
  413c8e:	66 90                	xchg   %ax,%ax
    else if ( strcasecmp( method_str, httpd_method_str( METHOD_POST ) ) == 0 )
  413c90:	bf 03 00 00 00       	mov    $0x3,%edi
  413c95:	e8 86 c5 ff ff       	callq  410220 <httpd_method_str>
  413c9a:	4c 89 ef             	mov    %r13,%rdi
  413c9d:	48 89 c6             	mov    %rax,%rsi
  413ca0:	e8 eb f3 fe ff       	callq  403090 <strcasecmp@plt>
  413ca5:	85 c0                	test   %eax,%eax
  413ca7:	0f 85 bb 05 00 00    	jne    414268 <httpd_parse_request+0x1698>
	hc->method = METHOD_POST;
  413cad:	48 8d bb b4 00 00 00 	lea    0xb4(%rbx),%rdi
  413cb4:	48 89 f8             	mov    %rdi,%rax
  413cb7:	48 c1 e8 03          	shr    $0x3,%rax
  413cbb:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  413cc2:	48 89 f8             	mov    %rdi,%rax
  413cc5:	83 e0 07             	and    $0x7,%eax
  413cc8:	83 c0 03             	add    $0x3,%eax
  413ccb:	38 d0                	cmp    %dl,%al
  413ccd:	7c 08                	jl     413cd7 <httpd_parse_request+0x1107>
  413ccf:	84 d2                	test   %dl,%dl
  413cd1:	0f 85 40 09 00 00    	jne    414617 <httpd_parse_request+0x1a47>
  413cd7:	c7 83 b4 00 00 00 03 	movl   $0x3,0xb4(%rbx)
  413cde:	00 00 00 
  413ce1:	e9 82 f1 ff ff       	jmpq   412e68 <httpd_parse_request+0x298>
  413ce6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  413ced:	00 00 00 
	    else if ( strncasecmp( buf, "Accept-Language:", 16 ) == 0 )
  413cf0:	ba 10 00 00 00       	mov    $0x10,%edx
  413cf5:	be 40 4a 42 00       	mov    $0x424a40,%esi
  413cfa:	4c 89 e7             	mov    %r12,%rdi
  413cfd:	e8 2e ef fe ff       	callq  402c30 <strncasecmp@plt>
  413d02:	85 c0                	test   %eax,%eax
  413d04:	75 42                	jne    413d48 <httpd_parse_request+0x1178>
		cp = &buf[16];
  413d06:	49 83 c4 10          	add    $0x10,%r12
		cp += strspn( cp, " \t" );
  413d0a:	be 20 48 42 00       	mov    $0x424820,%esi
  413d0f:	4c 89 e7             	mov    %r12,%rdi
  413d12:	e8 c9 f7 fe ff       	callq  4034e0 <strspn@plt>
		hc->acceptl = cp;
  413d17:	48 8d bb 30 01 00 00 	lea    0x130(%rbx),%rdi
		cp += strspn( cp, " \t" );
  413d1e:	49 01 c4             	add    %rax,%r12
		hc->acceptl = cp;
  413d21:	48 89 f8             	mov    %rdi,%rax
  413d24:	48 c1 e8 03          	shr    $0x3,%rax
  413d28:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  413d2f:	0f 85 dd 08 00 00    	jne    414612 <httpd_parse_request+0x1a42>
  413d35:	4c 89 a3 30 01 00 00 	mov    %r12,0x130(%rbx)
  413d3c:	e9 c7 f3 ff ff       	jmpq   413108 <httpd_parse_request+0x538>
  413d41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    else if ( strncasecmp( buf, "If-Modified-Since:", 18 ) == 0 )
  413d48:	ba 12 00 00 00       	mov    $0x12,%edx
  413d4d:	be 80 4a 42 00       	mov    $0x424a80,%esi
  413d52:	4c 89 e7             	mov    %r12,%rdi
  413d55:	e8 d6 ee fe ff       	callq  402c30 <strncasecmp@plt>
  413d5a:	85 c0                	test   %eax,%eax
  413d5c:	0f 84 be 02 00 00    	je     414020 <httpd_parse_request+0x1450>
	    else if ( strncasecmp( buf, "Cookie:", 7 ) == 0 )
  413d62:	ba 07 00 00 00       	mov    $0x7,%edx
  413d67:	be 00 4b 42 00       	mov    $0x424b00,%esi
  413d6c:	4c 89 e7             	mov    %r12,%rdi
  413d6f:	e8 bc ee fe ff       	callq  402c30 <strncasecmp@plt>
  413d74:	85 c0                	test   %eax,%eax
  413d76:	0f 84 58 02 00 00    	je     413fd4 <httpd_parse_request+0x1404>
	    else if ( strncasecmp( buf, "Range:", 6 ) == 0 )
  413d7c:	ba 06 00 00 00       	mov    $0x6,%edx
  413d81:	be 40 4b 42 00       	mov    $0x424b40,%esi
  413d86:	4c 89 e7             	mov    %r12,%rdi
  413d89:	e8 a2 ee fe ff       	callq  402c30 <strncasecmp@plt>
  413d8e:	85 c0                	test   %eax,%eax
  413d90:	0f 85 db 02 00 00    	jne    414071 <httpd_parse_request+0x14a1>
		if ( strchr( buf, ',' ) == (char*) 0 )
  413d96:	be 2c 00 00 00       	mov    $0x2c,%esi
  413d9b:	4c 89 e7             	mov    %r12,%rdi
  413d9e:	e8 1d f6 fe ff       	callq  4033c0 <strchr@plt>
  413da3:	48 85 c0             	test   %rax,%rax
  413da6:	0f 85 5c f3 ff ff    	jne    413108 <httpd_parse_request+0x538>
		    cp = strpbrk( buf, "=" );
  413dac:	be 3d 00 00 00       	mov    $0x3d,%esi
  413db1:	4c 89 e7             	mov    %r12,%rdi
  413db4:	e8 07 f6 fe ff       	callq  4033c0 <strchr@plt>
		    if ( cp != (char*) 0 )
  413db9:	48 85 c0             	test   %rax,%rax
  413dbc:	0f 84 46 f3 ff ff    	je     413108 <httpd_parse_request+0x538>
			cp_dash = strchr( cp + 1, '-' );
  413dc2:	4c 8d 68 01          	lea    0x1(%rax),%r13
  413dc6:	be 2d 00 00 00       	mov    $0x2d,%esi
  413dcb:	4c 89 ef             	mov    %r13,%rdi
  413dce:	e8 ed f5 fe ff       	callq  4033c0 <strchr@plt>
  413dd3:	49 89 c4             	mov    %rax,%r12
			if ( cp_dash != (char*) 0 && cp_dash != cp + 1 )
  413dd6:	48 85 c0             	test   %rax,%rax
  413dd9:	0f 84 29 f3 ff ff    	je     413108 <httpd_parse_request+0x538>
  413ddf:	49 39 c5             	cmp    %rax,%r13
  413de2:	0f 84 20 f3 ff ff    	je     413108 <httpd_parse_request+0x538>
			    *cp_dash = '\0';
  413de8:	48 c1 e8 03          	shr    $0x3,%rax
  413dec:	4c 89 e2             	mov    %r12,%rdx
  413def:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  413df6:	83 e2 07             	and    $0x7,%edx
  413df9:	38 d0                	cmp    %dl,%al
  413dfb:	7f 08                	jg     413e05 <httpd_parse_request+0x1235>
  413dfd:	84 c0                	test   %al,%al
  413dff:	0f 85 cb 07 00 00    	jne    4145d0 <httpd_parse_request+0x1a00>
			    hc->got_range = 1;
  413e05:	48 8d bb 10 02 00 00 	lea    0x210(%rbx),%rdi
			    *cp_dash = '\0';
  413e0c:	41 c6 04 24 00       	movb   $0x0,(%r12)
			    hc->got_range = 1;
  413e11:	48 89 f8             	mov    %rdi,%rax
  413e14:	48 c1 e8 03          	shr    $0x3,%rax
  413e18:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  413e1f:	84 c0                	test   %al,%al
  413e21:	74 08                	je     413e2b <httpd_parse_request+0x125b>
  413e23:	3c 03                	cmp    $0x3,%al
  413e25:	0f 8e ad 07 00 00    	jle    4145d8 <httpd_parse_request+0x1a08>
  413e2b:	c7 83 10 02 00 00 01 	movl   $0x1,0x210(%rbx)
  413e32:	00 00 00 
			    hc->first_byte_index = atoll( cp + 1 );
  413e35:	4c 89 ef             	mov    %r13,%rdi
  413e38:	e8 03 f5 fe ff       	callq  403340 <atoll@plt>
				hc->first_byte_index = 0;
  413e3d:	48 8d bb 18 02 00 00 	lea    0x218(%rbx),%rdi
			    if ( hc->first_byte_index < 0 )
  413e44:	48 85 c0             	test   %rax,%rax
  413e47:	0f 88 c0 04 00 00    	js     41430d <httpd_parse_request+0x173d>
			    hc->first_byte_index = atoll( cp + 1 );
  413e4d:	48 89 fa             	mov    %rdi,%rdx
  413e50:	48 c1 ea 03          	shr    $0x3,%rdx
  413e54:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  413e5b:	0f 85 62 07 00 00    	jne    4145c3 <httpd_parse_request+0x19f3>
  413e61:	48 89 83 18 02 00 00 	mov    %rax,0x218(%rbx)
			    if ( isdigit( (int) cp_dash[1] ) )
  413e68:	e8 93 f1 fe ff       	callq  403000 <__ctype_b_loc@plt>
  413e6d:	48 89 c2             	mov    %rax,%rdx
  413e70:	48 c1 ea 03          	shr    $0x3,%rdx
  413e74:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  413e7b:	0f 85 3a 07 00 00    	jne    4145bb <httpd_parse_request+0x19eb>
  413e81:	49 8d 7c 24 01       	lea    0x1(%r12),%rdi
  413e86:	48 8b 10             	mov    (%rax),%rdx
  413e89:	48 89 f8             	mov    %rdi,%rax
  413e8c:	48 89 f9             	mov    %rdi,%rcx
  413e8f:	48 c1 e8 03          	shr    $0x3,%rax
  413e93:	83 e1 07             	and    $0x7,%ecx
  413e96:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  413e9d:	38 c8                	cmp    %cl,%al
  413e9f:	7f 08                	jg     413ea9 <httpd_parse_request+0x12d9>
  413ea1:	84 c0                	test   %al,%al
  413ea3:	0f 85 39 07 00 00    	jne    4145e2 <httpd_parse_request+0x1a12>
  413ea9:	49 0f be 44 24 01    	movsbq 0x1(%r12),%rax
  413eaf:	48 8d 04 42          	lea    (%rdx,%rax,2),%rax
  413eb3:	48 89 c2             	mov    %rax,%rdx
  413eb6:	48 c1 ea 03          	shr    $0x3,%rdx
  413eba:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  413ec1:	48 89 c2             	mov    %rax,%rdx
  413ec4:	83 e2 07             	and    $0x7,%edx
  413ec7:	83 c2 01             	add    $0x1,%edx
  413eca:	38 ca                	cmp    %cl,%dl
  413ecc:	7c 08                	jl     413ed6 <httpd_parse_request+0x1306>
  413ece:	84 c9                	test   %cl,%cl
  413ed0:	0f 85 f2 06 00 00    	jne    4145c8 <httpd_parse_request+0x19f8>
  413ed6:	0f b7 00             	movzwl (%rax),%eax
  413ed9:	f6 c4 08             	test   $0x8,%ah
  413edc:	0f 84 26 f2 ff ff    	je     413108 <httpd_parse_request+0x538>
				hc->last_byte_index = atoll( cp_dash + 1 );
  413ee2:	e8 59 f4 fe ff       	callq  403340 <atoll@plt>
				    hc->last_byte_index = -1;
  413ee7:	48 8d bb 20 02 00 00 	lea    0x220(%rbx),%rdi
				if ( hc->last_byte_index < 0 )
  413eee:	48 85 c0             	test   %rax,%rax
  413ef1:	0f 88 f2 03 00 00    	js     4142e9 <httpd_parse_request+0x1719>
				hc->last_byte_index = atoll( cp_dash + 1 );
  413ef7:	48 89 fa             	mov    %rdi,%rdx
  413efa:	48 c1 ea 03          	shr    $0x3,%rdx
  413efe:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  413f05:	0f 85 e5 05 00 00    	jne    4144f0 <httpd_parse_request+0x1920>
  413f0b:	48 89 83 20 02 00 00 	mov    %rax,0x220(%rbx)
  413f12:	e9 f1 f1 ff ff       	jmpq   413108 <httpd_parse_request+0x538>
  413f17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  413f1e:	00 00 
	    else hc->origfilename[i - 1] = '\0';
  413f20:	49 8d 7c 16 ff       	lea    -0x1(%r14,%rdx,1),%rdi
  413f25:	48 89 f8             	mov    %rdi,%rax
  413f28:	48 89 fa             	mov    %rdi,%rdx
  413f2b:	48 c1 e8 03          	shr    $0x3,%rax
  413f2f:	83 e2 07             	and    $0x7,%edx
  413f32:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  413f39:	38 d0                	cmp    %dl,%al
  413f3b:	7f 08                	jg     413f45 <httpd_parse_request+0x1375>
  413f3d:	84 c0                	test   %al,%al
  413f3f:	0f 85 c8 06 00 00    	jne    41460d <httpd_parse_request+0x1a3d>
  413f45:	c6 07 00             	movb   $0x0,(%rdi)
  413f48:	e9 63 f6 ff ff       	jmpq   4135b0 <httpd_parse_request+0x9e0>
		    httpd_realloc_str(
  413f4d:	4c 89 e7             	mov    %r12,%rdi
  413f50:	e8 2b ed fe ff       	callq  402c80 <strlen@plt>
  413f55:	48 8d b3 b0 01 00 00 	lea    0x1b0(%rbx),%rsi
  413f5c:	4c 89 ef             	mov    %r13,%rdi
  413f5f:	48 89 c2             	mov    %rax,%rdx
  413f62:	e8 c9 93 ff ff       	callq  40d330 <httpd_realloc_str>
  413f67:	e9 c4 fb ff ff       	jmpq   413b30 <httpd_parse_request+0xf60>
  413f6c:	0f 1f 40 00          	nopl   0x0(%rax)
		    httpd_realloc_str(
  413f70:	4c 89 e7             	mov    %r12,%rdi
  413f73:	e8 08 ed fe ff       	callq  402c80 <strlen@plt>
  413f78:	48 8d b3 a8 01 00 00 	lea    0x1a8(%rbx),%rsi
  413f7f:	4c 89 ef             	mov    %r13,%rdi
  413f82:	48 89 c2             	mov    %rax,%rdx
  413f85:	e8 a6 93 ff ff       	callq  40d330 <httpd_realloc_str>
  413f8a:	e9 21 fa ff ff       	jmpq   4139b0 <httpd_parse_request+0xde0>
  413f8f:	90                   	nop
			syslog(
  413f90:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
  413f94:	e8 67 d9 ff ff       	callq  411900 <httpd_ntoa>
  413f99:	be 20 49 42 00       	mov    $0x424920,%esi
  413f9e:	bf 03 00 00 00       	mov    $0x3,%edi
  413fa3:	48 89 c2             	mov    %rax,%rdx
  413fa6:	31 c0                	xor    %eax,%eax
  413fa8:	e8 93 ec fe ff       	callq  402c40 <syslog@plt>
			continue;
  413fad:	e9 56 f1 ff ff       	jmpq   413108 <httpd_parse_request+0x538>
			syslog(
  413fb2:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
  413fb6:	e8 45 d9 ff ff       	callq  411900 <httpd_ntoa>
  413fbb:	be e0 49 42 00       	mov    $0x4249e0,%esi
  413fc0:	bf 03 00 00 00       	mov    $0x3,%edi
  413fc5:	48 89 c2             	mov    %rax,%rdx
  413fc8:	31 c0                	xor    %eax,%eax
  413fca:	e8 71 ec fe ff       	callq  402c40 <syslog@plt>
			continue;
  413fcf:	e9 34 f1 ff ff       	jmpq   413108 <httpd_parse_request+0x538>
		cp = &buf[7];
  413fd4:	49 83 c4 07          	add    $0x7,%r12
		cp += strspn( cp, " \t" );
  413fd8:	be 20 48 42 00       	mov    $0x424820,%esi
  413fdd:	4c 89 e7             	mov    %r12,%rdi
  413fe0:	e8 fb f4 fe ff       	callq  4034e0 <strspn@plt>
		hc->cookie = cp;
  413fe5:	48 8d bb 38 01 00 00 	lea    0x138(%rbx),%rdi
		cp += strspn( cp, " \t" );
  413fec:	49 01 c4             	add    %rax,%r12
		hc->cookie = cp;
  413fef:	48 89 f8             	mov    %rdi,%rax
  413ff2:	48 c1 e8 03          	shr    $0x3,%rax
  413ff6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  413ffd:	0f 85 f8 05 00 00    	jne    4145fb <httpd_parse_request+0x1a2b>
  414003:	4c 89 a3 38 01 00 00 	mov    %r12,0x138(%rbx)
  41400a:	e9 f9 f0 ff ff       	jmpq   413108 <httpd_parse_request+0x538>
    *url++ = '\0';
  41400f:	48 89 c7             	mov    %rax,%rdi
  414012:	e8 19 f1 fe ff       	callq  403130 <__asan_report_store1@plt>
  414017:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41401e:	00 00 
		cp = &buf[18];
  414020:	49 83 c4 12          	add    $0x12,%r12
		hc->if_modified_since = tdate_parse( cp );
  414024:	4c 89 e7             	mov    %r12,%rdi
  414027:	e8 04 97 00 00       	callq  41d730 <tdate_parse>
  41402c:	48 8d bb e0 01 00 00 	lea    0x1e0(%rbx),%rdi
  414033:	48 89 fa             	mov    %rdi,%rdx
  414036:	48 c1 ea 03          	shr    $0x3,%rdx
  41403a:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  414041:	0f 85 96 05 00 00    	jne    4145dd <httpd_parse_request+0x1a0d>
  414047:	48 89 83 e0 01 00 00 	mov    %rax,0x1e0(%rbx)
		if ( hc->if_modified_since == (time_t) -1 )
  41404e:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  414052:	0f 85 b0 f0 ff ff    	jne    413108 <httpd_parse_request+0x538>
		    syslog( LOG_DEBUG, "unparsable time: %.80s", cp );
  414058:	4c 89 e2             	mov    %r12,%rdx
  41405b:	be c0 4a 42 00       	mov    $0x424ac0,%esi
  414060:	bf 07 00 00 00       	mov    $0x7,%edi
  414065:	31 c0                	xor    %eax,%eax
  414067:	e8 d4 eb fe ff       	callq  402c40 <syslog@plt>
  41406c:	e9 97 f0 ff ff       	jmpq   413108 <httpd_parse_request+0x538>
	    else if ( strncasecmp( buf, "Range-If:", 9 ) == 0 ||
  414071:	ba 09 00 00 00       	mov    $0x9,%edx
  414076:	be 80 4b 42 00       	mov    $0x424b80,%esi
  41407b:	4c 89 e7             	mov    %r12,%rdi
  41407e:	e8 ad eb fe ff       	callq  402c30 <strncasecmp@plt>
  414083:	85 c0                	test   %eax,%eax
  414085:	74 6b                	je     4140f2 <httpd_parse_request+0x1522>
		      strncasecmp( buf, "If-Range:", 9 ) == 0 )
  414087:	ba 09 00 00 00       	mov    $0x9,%edx
  41408c:	be c0 4b 42 00       	mov    $0x424bc0,%esi
  414091:	4c 89 e7             	mov    %r12,%rdi
  414094:	e8 97 eb fe ff       	callq  402c30 <strncasecmp@plt>
	    else if ( strncasecmp( buf, "Range-If:", 9 ) == 0 ||
  414099:	85 c0                	test   %eax,%eax
  41409b:	74 55                	je     4140f2 <httpd_parse_request+0x1522>
	    else if ( strncasecmp( buf, "Content-Type:", 13 ) == 0 )
  41409d:	ba 0d 00 00 00       	mov    $0xd,%edx
  4140a2:	be 00 4c 42 00       	mov    $0x424c00,%esi
  4140a7:	4c 89 e7             	mov    %r12,%rdi
  4140aa:	e8 81 eb fe ff       	callq  402c30 <strncasecmp@plt>
  4140af:	85 c0                	test   %eax,%eax
  4140b1:	0f 85 c5 00 00 00    	jne    41417c <httpd_parse_request+0x15ac>
		cp = &buf[13];
  4140b7:	49 83 c4 0d          	add    $0xd,%r12
		cp += strspn( cp, " \t" );
  4140bb:	be 20 48 42 00       	mov    $0x424820,%esi
  4140c0:	4c 89 e7             	mov    %r12,%rdi
  4140c3:	e8 18 f4 fe ff       	callq  4034e0 <strspn@plt>
		hc->contenttype = cp;
  4140c8:	48 8d bb 40 01 00 00 	lea    0x140(%rbx),%rdi
		cp += strspn( cp, " \t" );
  4140cf:	49 01 c4             	add    %rax,%r12
		hc->contenttype = cp;
  4140d2:	48 89 f8             	mov    %rdi,%rax
  4140d5:	48 c1 e8 03          	shr    $0x3,%rax
  4140d9:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4140e0:	0f 85 3a 04 00 00    	jne    414520 <httpd_parse_request+0x1950>
  4140e6:	4c 89 a3 40 01 00 00 	mov    %r12,0x140(%rbx)
  4140ed:	e9 16 f0 ff ff       	jmpq   413108 <httpd_parse_request+0x538>
		cp = &buf[9];
  4140f2:	49 83 c4 09          	add    $0x9,%r12
		hc->range_if = tdate_parse( cp );
  4140f6:	4c 89 e7             	mov    %r12,%rdi
  4140f9:	e8 32 96 00 00       	callq  41d730 <tdate_parse>
  4140fe:	48 8d bb e8 01 00 00 	lea    0x1e8(%rbx),%rdi
  414105:	48 89 fa             	mov    %rdi,%rdx
  414108:	48 c1 ea 03          	shr    $0x3,%rdx
  41410c:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  414113:	0f 85 d3 04 00 00    	jne    4145ec <httpd_parse_request+0x1a1c>
  414119:	48 89 83 e8 01 00 00 	mov    %rax,0x1e8(%rbx)
		if ( hc->range_if == (time_t) -1 )
  414120:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  414124:	0f 85 de ef ff ff    	jne    413108 <httpd_parse_request+0x538>
  41412a:	e9 29 ff ff ff       	jmpq   414058 <httpd_parse_request+0x1488>
	    if ( buf[0] == '\0' )
  41412f:	4c 89 e7             	mov    %r12,%rdi
  414132:	e8 d9 ef fe ff       	callq  403110 <__asan_report_load1@plt>
	httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  414137:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  41413c:	48 c1 e8 03          	shr    $0x3,%rax
  414140:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  414147:	0f 85 d8 03 00 00    	jne    414525 <httpd_parse_request+0x1955>
  41414d:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  414154:	41 b8 80 4d 42 00    	mov    $0x424d80,%r8d
  41415a:	b9 60 38 42 00       	mov    $0x423860,%ecx
  41415f:	48 89 df             	mov    %rbx,%rdi
  414162:	ba 00 4e 42 00       	mov    $0x424e00,%edx
  414167:	be f4 01 00 00       	mov    $0x1f4,%esi
	return -1;
  41416c:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
	httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  414172:	e8 49 bd ff ff       	callq  40fec0 <httpd_send_err>
	return -1;
  414177:	e9 7d f4 ff ff       	jmpq   4135f9 <httpd_parse_request+0xa29>
	    else if ( strncasecmp( buf, "Content-Length:", 15 ) == 0 )
  41417c:	ba 0f 00 00 00       	mov    $0xf,%edx
  414181:	be 40 4c 42 00       	mov    $0x424c40,%esi
  414186:	4c 89 e7             	mov    %r12,%rdi
  414189:	e8 a2 ea fe ff       	callq  402c30 <strncasecmp@plt>
  41418e:	85 c0                	test   %eax,%eax
  414190:	0f 85 fd 00 00 00    	jne    414293 <httpd_parse_request+0x16c3>
		cp = &buf[15];
  414196:	49 8d 7c 24 0f       	lea    0xf(%r12),%rdi
		hc->contentlength = atol( cp );
  41419b:	e8 c0 f1 fe ff       	callq  403360 <atol@plt>
  4141a0:	48 8d bb f0 01 00 00 	lea    0x1f0(%rbx),%rdi
  4141a7:	48 89 fa             	mov    %rdi,%rdx
  4141aa:	48 c1 ea 03          	shr    $0x3,%rdx
  4141ae:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4141b5:	0f 85 36 04 00 00    	jne    4145f1 <httpd_parse_request+0x1a21>
  4141bb:	48 89 83 f0 01 00 00 	mov    %rax,0x1f0(%rbx)
  4141c2:	e9 41 ef ff ff       	jmpq   413108 <httpd_parse_request+0x538>
	    syslog(
  4141c7:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
  4141cc:	49 c1 ec 03          	shr    $0x3,%r12
  4141d0:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  4141d7:	7f 00 
  4141d9:	0f 85 28 03 00 00    	jne    414507 <httpd_parse_request+0x1937>
  4141df:	4c 8b ab d0 00 00 00 	mov    0xd0(%rbx),%r13
  4141e6:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
  4141ea:	e8 11 d7 ff ff       	callq  411900 <httpd_ntoa>
  4141ef:	be 40 4e 42 00       	mov    $0x424e40,%esi
  4141f4:	bf 05 00 00 00       	mov    $0x5,%edi
  4141f9:	48 89 c2             	mov    %rax,%rdx
  4141fc:	4c 89 e9             	mov    %r13,%rcx
  4141ff:	31 c0                	xor    %eax,%eax
  414201:	e8 3a ea fe ff       	callq  402c40 <syslog@plt>
	    httpd_send_err(
  414206:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  41420d:	7f 00 
  41420f:	0f 85 e8 02 00 00    	jne    4144fd <httpd_parse_request+0x192d>
  414215:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  41421c:	41 b8 a0 4e 42 00    	mov    $0x424ea0,%r8d
  414222:	b9 60 38 42 00       	mov    $0x423860,%ecx
  414227:	48 89 df             	mov    %rbx,%rdi
  41422a:	ba 20 4f 42 00       	mov    $0x424f20,%edx
  41422f:	be 93 01 00 00       	mov    $0x193,%esi
	    return -1;
  414234:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
	    httpd_send_err(
  41423a:	e8 81 bc ff ff       	callq  40fec0 <httpd_send_err>
	    return -1;
  41423f:	e9 b5 f3 ff ff       	jmpq   4135f9 <httpd_parse_request+0xa29>
	    httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  414244:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  414249:	48 c1 e8 03          	shr    $0x3,%rax
  41424d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  414254:	0f 84 f3 fe ff ff    	je     41414d <httpd_parse_request+0x157d>
  41425a:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41425f:	e8 ec ef fe ff       	callq  403250 <__asan_report_load8@plt>
  414264:	0f 1f 40 00          	nopl   0x0(%rax)
	httpd_send_err( hc, 501, err501title, "", err501form, method_str );
  414268:	4d 89 e9             	mov    %r13,%r9
  41426b:	b9 60 38 42 00       	mov    $0x423860,%ecx
  414270:	ba a0 47 42 00       	mov    $0x4247a0,%edx
  414275:	48 89 df             	mov    %rbx,%rdi
  414278:	41 b8 20 47 42 00    	mov    $0x424720,%r8d
  41427e:	be f5 01 00 00       	mov    $0x1f5,%esi
	return -1;
  414283:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
	httpd_send_err( hc, 501, err501title, "", err501form, method_str );
  414289:	e8 32 bc ff ff       	callq  40fec0 <httpd_send_err>
	return -1;
  41428e:	e9 66 f3 ff ff       	jmpq   4135f9 <httpd_parse_request+0xa29>
	    else if ( strncasecmp( buf, "Authorization:", 14 ) == 0 )
  414293:	ba 0e 00 00 00       	mov    $0xe,%edx
  414298:	be 80 4c 42 00       	mov    $0x424c80,%esi
  41429d:	4c 89 e7             	mov    %r12,%rdi
  4142a0:	e8 8b e9 fe ff       	callq  402c30 <strncasecmp@plt>
  4142a5:	85 c0                	test   %eax,%eax
  4142a7:	0f 85 49 01 00 00    	jne    4143f6 <httpd_parse_request+0x1826>
		cp = &buf[14];
  4142ad:	49 83 c4 0e          	add    $0xe,%r12
		cp += strspn( cp, " \t" );
  4142b1:	be 20 48 42 00       	mov    $0x424820,%esi
  4142b6:	4c 89 e7             	mov    %r12,%rdi
  4142b9:	e8 22 f2 fe ff       	callq  4034e0 <strspn@plt>
  4142be:	49 01 c4             	add    %rax,%r12
		hc->authorization = cp;
  4142c1:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4142c6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4142cd:	0f 85 22 02 00 00    	jne    4144f5 <httpd_parse_request+0x1925>
  4142d3:	4c 89 a3 60 01 00 00 	mov    %r12,0x160(%rbx)
  4142da:	e9 29 ee ff ff       	jmpq   413108 <httpd_parse_request+0x538>
		hc->referer = cp;
  4142df:	e8 bc ec fe ff       	callq  402fa0 <__asan_report_store8@plt>
    cp = expand_symlinks( hc->expnfilename, &pi, hc->hs->no_symlink_check, hc->tildemapped );
  4142e4:	e8 e7 ea fe ff       	callq  402dd0 <__asan_report_load4@plt>
				    hc->last_byte_index = -1;
  4142e9:	48 89 f8             	mov    %rdi,%rax
  4142ec:	48 c1 e8 03          	shr    $0x3,%rax
  4142f0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4142f7:	0f 85 ea 02 00 00    	jne    4145e7 <httpd_parse_request+0x1a17>
  4142fd:	48 c7 83 20 02 00 00 	movq   $0xffffffffffffffff,0x220(%rbx)
  414304:	ff ff ff ff 
  414308:	e9 fb ed ff ff       	jmpq   413108 <httpd_parse_request+0x538>
				hc->first_byte_index = 0;
  41430d:	48 89 f8             	mov    %rdi,%rax
  414310:	48 c1 e8 03          	shr    $0x3,%rax
  414314:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41431b:	0f 85 fa 01 00 00    	jne    41451b <httpd_parse_request+0x194b>
  414321:	48 c7 83 18 02 00 00 	movq   $0x0,0x218(%rbx)
  414328:	00 00 00 00 
  41432c:	e9 37 fb ff ff       	jmpq   413e68 <httpd_parse_request+0x1298>
    hc->encodedurl = url;
  414331:	48 89 c7             	mov    %rax,%rdi
  414334:	e8 67 ec fe ff       	callq  402fa0 <__asan_report_store8@plt>
    {
  414339:	48 c7 45 00 0e 36 e0 	movq   $0x45e0360e,0x0(%rbp)
  414340:	45 
  414341:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  414346:	48 b9 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rcx
  41434d:	f5 f5 f5 
  414350:	48 89 88 00 80 ff 7f 	mov    %rcx,0x7fff8000(%rax)
  414357:	c7 80 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rax)
  41435e:	f5 f5 f5 
  414361:	e9 bb f2 ff ff       	jmpq   413621 <httpd_parse_request+0xa51>
		hc->hdrhost = cp;
  414366:	e8 35 ec fe ff       	callq  402fa0 <__asan_report_store8@plt>
		if ( strchr( hc->hdrhost, '/' ) != (char*) 0 || hc->hdrhost[0] == '.' )
  41436b:	4c 89 e7             	mov    %r12,%rdi
  41436e:	e8 9d ed fe ff       	callq  403110 <__asan_report_load1@plt>
	&hc->expnfilename, &hc->maxexpnfilename, strlen( hc->origfilename ) );
  414373:	4c 89 ff             	mov    %r15,%rdi
  414376:	e8 d5 ee fe ff       	callq  403250 <__asan_report_load8@plt>
    {
  41437b:	bf 60 00 00 00       	mov    $0x60,%edi
  414380:	e8 2b ea fe ff       	callq  402db0 <__asan_stack_malloc_1@plt>
  414385:	48 85 c0             	test   %rax,%rax
  414388:	48 0f 45 e8          	cmovne %rax,%rbp
  41438c:	e9 68 e8 ff ff       	jmpq   412bf9 <httpd_parse_request+0x29>
    hc->protocol = protocol;
  414391:	e8 0a ec fe ff       	callq  402fa0 <__asan_report_store8@plt>
    if ( hc->expnfilename[0] == '/' )
  414396:	4c 89 e7             	mov    %r12,%rdi
  414399:	e8 b2 ee fe ff       	callq  403250 <__asan_report_load8@plt>
  41439e:	4c 89 ef             	mov    %r13,%rdi
  4143a1:	e8 6a ed fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->one_one )
  4143a6:	e8 25 ea fe ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( hc->origfilename[0] == '\0' )
  4143ab:	e8 60 ed fe ff       	callq  403110 <__asan_report_load1@plt>
    cp = strchr( hc->encodedurl, '?' );
  4143b0:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4143b5:	e8 96 ee fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->origfilename[0] == '/' ||
  4143ba:	4c 89 ff             	mov    %r15,%rdi
  4143bd:	e8 8e ee fe ff       	callq  403250 <__asan_report_load8@plt>
  4143c2:	48 89 c7             	mov    %rax,%rdi
  4143c5:	e8 46 ed fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->mime_flag )
  4143ca:	e8 01 ea fe ff       	callq  402dd0 <__asan_report_load4@plt>
    (void) strcpy( hc->expnfilename, cp );
  4143cf:	4c 89 e7             	mov    %r12,%rdi
  4143d2:	e8 79 ee fe ff       	callq  403250 <__asan_report_load8@plt>
    (void) strcpy( hc->expnfilename, hc->origfilename );
  4143d7:	4c 89 ff             	mov    %r15,%rdi
  4143da:	e8 71 ee fe ff       	callq  403250 <__asan_report_load8@plt>
  4143df:	4c 89 e7             	mov    %r12,%rdi
  4143e2:	e8 69 ee fe ff       	callq  403250 <__asan_report_load8@plt>
		hc->useragent = cp;
  4143e7:	e8 b4 eb fe ff       	callq  402fa0 <__asan_report_store8@plt>
    hc->checked_idx = 0;	/* reset */
  4143ec:	e8 af eb fe ff       	callq  402fa0 <__asan_report_store8@plt>
    cp = expand_symlinks( hc->expnfilename, &pi, hc->hs->no_symlink_check, hc->tildemapped );
  4143f1:	e8 da e9 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	    else if ( strncasecmp( buf, "Connection:", 11 ) == 0 )
  4143f6:	ba 0b 00 00 00       	mov    $0xb,%edx
  4143fb:	be c0 4c 42 00       	mov    $0x424cc0,%esi
  414400:	4c 89 e7             	mov    %r12,%rdi
  414403:	e8 28 e8 fe ff       	callq  402c30 <strncasecmp@plt>
  414408:	85 c0                	test   %eax,%eax
  41440a:	75 4e                	jne    41445a <httpd_parse_request+0x188a>
		cp = &buf[11];
  41440c:	49 83 c4 0b          	add    $0xb,%r12
		cp += strspn( cp, " \t" );
  414410:	be 20 48 42 00       	mov    $0x424820,%esi
  414415:	4c 89 e7             	mov    %r12,%rdi
  414418:	e8 c3 f0 fe ff       	callq  4034e0 <strspn@plt>
		if ( strcasecmp( cp, "keep-alive" ) == 0 )
  41441d:	be 00 4d 42 00       	mov    $0x424d00,%esi
		cp += strspn( cp, " \t" );
  414422:	49 8d 3c 04          	lea    (%r12,%rax,1),%rdi
		if ( strcasecmp( cp, "keep-alive" ) == 0 )
  414426:	e8 65 ec fe ff       	callq  403090 <strcasecmp@plt>
  41442b:	85 c0                	test   %eax,%eax
  41442d:	0f 85 d5 ec ff ff    	jne    413108 <httpd_parse_request+0x538>
		    hc->keep_alive = 1;
  414433:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  414438:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41443f:	84 c0                	test   %al,%al
  414441:	74 08                	je     41444b <httpd_parse_request+0x187b>
  414443:	3c 03                	cmp    $0x3,%al
  414445:	0f 8e c6 00 00 00    	jle    414511 <httpd_parse_request+0x1941>
  41444b:	c7 83 28 02 00 00 01 	movl   $0x1,0x228(%rbx)
  414452:	00 00 00 
  414455:	e9 ae ec ff ff       	jmpq   413108 <httpd_parse_request+0x538>
	    else if ( strncasecmp( buf, "X-Forwarded-For:", 16 ) == 0 )
  41445a:	ba 10 00 00 00       	mov    $0x10,%edx
  41445f:	be 40 4d 42 00       	mov    $0x424d40,%esi
  414464:	4c 89 e7             	mov    %r12,%rdi
  414467:	e8 c4 e7 fe ff       	callq  402c30 <strncasecmp@plt>
  41446c:	85 c0                	test   %eax,%eax
  41446e:	0f 85 94 ec ff ff    	jne    413108 <httpd_parse_request+0x538>
		cp = &buf[16];
  414474:	49 83 c4 10          	add    $0x10,%r12
		cp += strspn( cp, " \t" );
  414478:	be 20 48 42 00       	mov    $0x424820,%esi
  41447d:	4c 89 e7             	mov    %r12,%rdi
  414480:	e8 5b f0 fe ff       	callq  4034e0 <strspn@plt>
		inet_aton( cp, &(hc->client_addr.sa_in.sin_addr) );
  414485:	48 8d 73 14          	lea    0x14(%rbx),%rsi
		cp += strspn( cp, " \t" );
  414489:	49 8d 3c 04          	lea    (%r12,%rax,1),%rdi
		inet_aton( cp, &(hc->client_addr.sa_in.sin_addr) );
  41448d:	e8 8e e9 fe ff       	callq  402e20 <inet_aton@plt>
  414492:	e9 71 ec ff ff       	jmpq   413108 <httpd_parse_request+0x538>
    (void) strcpy( hc->origfilename, &hc->decodedurl[1] );
  414497:	4c 89 ef             	mov    %r13,%rdi
  41449a:	e8 b1 ed fe ff       	callq  403250 <__asan_report_load8@plt>
  41449f:	4c 89 ff             	mov    %r15,%rdi
  4144a2:	e8 a9 ed fe ff       	callq  403250 <__asan_report_load8@plt>
    httpd_realloc_str( &hc->pathinfo, &hc->maxpathinfo, strlen( pi ) );
  4144a7:	4c 89 ef             	mov    %r13,%rdi
  4144aa:	e8 a1 ed fe ff       	callq  403250 <__asan_report_load8@plt>
    (void) strcpy( hc->pathinfo, pi );
  4144af:	4c 89 ef             	mov    %r13,%rdi
  4144b2:	e8 99 ed fe ff       	callq  403250 <__asan_report_load8@plt>
  4144b7:	4c 89 f7             	mov    %r14,%rdi
  4144ba:	e8 91 ed fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->pathinfo[0] != '\0' )
  4144bf:	48 89 f7             	mov    %rsi,%rdi
  4144c2:	e8 49 ec fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->hs->vhost )
  4144c7:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4144cc:	e8 7f ed fe ff       	callq  403250 <__asan_report_load8@plt>
  4144d1:	e8 fa e8 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    strdecode( hc->decodedurl, hc->encodedurl );
  4144d6:	4c 89 ef             	mov    %r13,%rdi
  4144d9:	e8 72 ed fe ff       	callq  403250 <__asan_report_load8@plt>
	&hc->origfilename, &hc->maxorigfilename, strlen( hc->decodedurl ) );
  4144de:	4c 89 ef             	mov    %r13,%rdi
  4144e1:	e8 6a ed fe ff       	callq  403250 <__asan_report_load8@plt>
    strdecode( hc->decodedurl, hc->encodedurl );
  4144e6:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4144eb:	e8 60 ed fe ff       	callq  403250 <__asan_report_load8@plt>
				hc->last_byte_index = atoll( cp_dash + 1 );
  4144f0:	e8 ab ea fe ff       	callq  402fa0 <__asan_report_store8@plt>
		hc->authorization = cp;
  4144f5:	4c 89 f7             	mov    %r14,%rdi
  4144f8:	e8 a3 ea fe ff       	callq  402fa0 <__asan_report_store8@plt>
	    httpd_send_err(
  4144fd:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  414502:	e8 49 ed fe ff       	callq  403250 <__asan_report_load8@plt>
	    syslog(
  414507:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41450c:	e8 3f ed fe ff       	callq  403250 <__asan_report_load8@plt>
		    hc->keep_alive = 1;
  414511:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  414516:	e8 d5 e6 fe ff       	callq  402bf0 <__asan_report_store4@plt>
				hc->first_byte_index = 0;
  41451b:	e8 80 ea fe ff       	callq  402fa0 <__asan_report_store8@plt>
		hc->contenttype = cp;
  414520:	e8 7b ea fe ff       	callq  402fa0 <__asan_report_store8@plt>
	httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  414525:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41452a:	e8 21 ed fe ff       	callq  403250 <__asan_report_load8@plt>
	hc->method = METHOD_GET;
  41452f:	e8 bc e6 fe ff       	callq  402bf0 <__asan_report_store4@plt>
		    *cp = '\0';
  414534:	48 89 c7             	mov    %rax,%rdi
  414537:	e8 f4 eb fe ff       	callq  403130 <__asan_report_store1@plt>
	if ( hc->reqhost[0] == '\0' && hc->hdrhost[0] == '\0' )
  41453c:	e8 0f ed fe ff       	callq  403250 <__asan_report_load8@plt>
  414541:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  414546:	e8 05 ed fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( hc->keep_alive )
  41454b:	e8 80 e8 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( hc->reqhost[0] == '\0' && hc->hdrhost[0] == '\0' )
  414550:	e8 bb eb fe ff       	callq  403110 <__asan_report_load1@plt>
  414555:	e8 f6 ec fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( ! hc->one_one )
  41455a:	e8 71 e8 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	*url = '\0';
  41455f:	4c 89 ff             	mov    %r15,%rdi
  414562:	e8 c9 eb fe ff       	callq  403130 <__asan_report_store1@plt>
	if ( strchr( reqhost, '/' ) != (char*) 0 || reqhost[0] == '.' )
  414567:	4c 89 f7             	mov    %r14,%rdi
  41456a:	e8 a1 eb fe ff       	callq  403110 <__asan_report_load1@plt>
	(void) strcpy( hc->reqhost, reqhost );
  41456f:	4c 89 e7             	mov    %r12,%rdi
  414572:	e8 d9 ec fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( *protocol != '\0' )
  414577:	4c 89 f7             	mov    %r14,%rdi
  41457a:	e8 91 eb fe ff       	callq  403110 <__asan_report_load1@plt>
	*protocol++ = '\0';
  41457f:	48 89 c7             	mov    %rax,%rdi
  414582:	e8 a9 eb fe ff       	callq  403130 <__asan_report_store1@plt>
		 hc->expnfilename, hc->hs->cwd, strlen( hc->hs->cwd ) ) == 0 )
  414587:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  41458c:	e8 bf ec fe ff       	callq  403250 <__asan_report_load8@plt>
  414591:	e8 ba ec fe ff       	callq  403250 <__asan_report_load8@plt>
		if ( hc->accept[0] != '\0' )
  414596:	4c 89 ef             	mov    %r13,%rdi
  414599:	e8 b2 ec fe ff       	callq  403250 <__asan_report_load8@plt>
  41459e:	e8 6d eb fe ff       	callq  403110 <__asan_report_load1@plt>
		    (void) strcat( hc->accept, ", " );
  4145a3:	4c 89 ef             	mov    %r13,%rdi
  4145a6:	e8 a5 ec fe ff       	callq  403250 <__asan_report_load8@plt>
		(void) strcat( hc->accept, cp );
  4145ab:	4c 89 ef             	mov    %r13,%rdi
  4145ae:	e8 9d ec fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( *url != '/' )
  4145b3:	4c 89 e7             	mov    %r12,%rdi
  4145b6:	e8 55 eb fe ff       	callq  403110 <__asan_report_load1@plt>
			    if ( isdigit( (int) cp_dash[1] ) )
  4145bb:	48 89 c7             	mov    %rax,%rdi
  4145be:	e8 8d ec fe ff       	callq  403250 <__asan_report_load8@plt>
			    hc->first_byte_index = atoll( cp + 1 );
  4145c3:	e8 d8 e9 fe ff       	callq  402fa0 <__asan_report_store8@plt>
			    if ( isdigit( (int) cp_dash[1] ) )
  4145c8:	48 89 c7             	mov    %rax,%rdi
  4145cb:	e8 e0 e9 fe ff       	callq  402fb0 <__asan_report_load2@plt>
			    *cp_dash = '\0';
  4145d0:	4c 89 e7             	mov    %r12,%rdi
  4145d3:	e8 58 eb fe ff       	callq  403130 <__asan_report_store1@plt>
			    hc->got_range = 1;
  4145d8:	e8 13 e6 fe ff       	callq  402bf0 <__asan_report_store4@plt>
		hc->if_modified_since = tdate_parse( cp );
  4145dd:	e8 be e9 fe ff       	callq  402fa0 <__asan_report_store8@plt>
			    if ( isdigit( (int) cp_dash[1] ) )
  4145e2:	e8 29 eb fe ff       	callq  403110 <__asan_report_load1@plt>
				    hc->last_byte_index = -1;
  4145e7:	e8 b4 e9 fe ff       	callq  402fa0 <__asan_report_store8@plt>
		hc->range_if = tdate_parse( cp );
  4145ec:	e8 af e9 fe ff       	callq  402fa0 <__asan_report_store8@plt>
		hc->contentlength = atol( cp );
  4145f1:	e8 aa e9 fe ff       	callq  402fa0 <__asan_report_store8@plt>
		if ( hc->accepte[0] != '\0' )
  4145f6:	e8 15 eb fe ff       	callq  403110 <__asan_report_load1@plt>
		hc->cookie = cp;
  4145fb:	e8 a0 e9 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	   ( hc->origfilename[2] == '\0' || hc->origfilename[2] == '/' ) ) )
  414600:	e8 0b eb fe ff       	callq  403110 <__asan_report_load1@plt>
	    if ( i == 0 ) hc->origfilename[0] = '\0';
  414605:	4c 89 f7             	mov    %r14,%rdi
  414608:	e8 23 eb fe ff       	callq  403130 <__asan_report_store1@plt>
	    else hc->origfilename[i - 1] = '\0';
  41460d:	e8 1e eb fe ff       	callq  403130 <__asan_report_store1@plt>
		hc->acceptl = cp;
  414612:	e8 89 e9 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	hc->method = METHOD_POST;
  414617:	e8 d4 e5 fe ff       	callq  402bf0 <__asan_report_store4@plt>
		*eol = '\0';
  41461c:	48 89 c7             	mov    %rax,%rdi
  41461f:	e8 0c eb fe ff       	callq  403130 <__asan_report_store1@plt>
	hc->method = METHOD_HEAD;
  414624:	e8 c7 e5 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	hc->mime_flag = 0;
  414629:	e8 c2 e5 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	    hc->should_linger = 1;
  41462e:	e8 bd e5 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	if ( hc->reqhost[0] == '\0' && hc->hdrhost[0] == '\0' )
  414633:	e8 d8 ea fe ff       	callq  403110 <__asan_report_load1@plt>
		(void) strcpy( hc->accepte, cp );
  414638:	4c 89 ef             	mov    %r13,%rdi
  41463b:	e8 10 ec fe ff       	callq  403250 <__asan_report_load8@plt>
		    (void) strcat( hc->accepte, ", " );
  414640:	4c 89 ef             	mov    %r13,%rdi
  414643:	e8 08 ec fe ff       	callq  403250 <__asan_report_load8@plt>
	 ( hc->origfilename[0] == '.' && hc->origfilename[1] == '.' &&
  414648:	e8 c3 ea fe ff       	callq  403110 <__asan_report_load1@plt>
		hc->one_one = 1;
  41464d:	e8 9e e5 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	    *cp = '\0';
  414652:	48 89 c7             	mov    %rax,%rdi
  414655:	e8 d6 ea fe ff       	callq  403130 <__asan_report_store1@plt>
	i = strlen( hc->origfilename ) - strlen( hc->pathinfo );
  41465a:	4c 89 ff             	mov    %r15,%rdi
  41465d:	e8 ee eb fe ff       	callq  403250 <__asan_report_load8@plt>
	*url = '/';
  414662:	4c 89 ff             	mov    %r15,%rdi
  414665:	e8 c6 ea fe ff       	callq  403130 <__asan_report_store1@plt>
	(void) strcpy( hc->query, cp );
  41466a:	4c 89 ef             	mov    %r13,%rdi
  41466d:	e8 de eb fe ff       	callq  403250 <__asan_report_load8@plt>
	cp = strchr( hc->origfilename, '?' );
  414672:	4c 89 ff             	mov    %r15,%rdi
  414675:	e8 d6 eb fe ff       	callq  403250 <__asan_report_load8@plt>
		if ( hc->accepte[0] != '\0' )
  41467a:	4c 89 ef             	mov    %r13,%rdi
  41467d:	e8 ce eb fe ff       	callq  403250 <__asan_report_load8@plt>
  414682:	0f 1f 40 00          	nopl   0x0(%rax)
  414686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41468d:	00 00 00 

0000000000414690 <make_log_entry>:
    {
  414690:	41 57                	push   %r15
  414692:	41 56                	push   %r14
  414694:	49 89 f6             	mov    %rsi,%r14
  414697:	41 55                	push   %r13
  414699:	49 89 fd             	mov    %rdi,%r13
  41469c:	41 54                	push   %r12
  41469e:	55                   	push   %rbp
  41469f:	53                   	push   %rbx
  4146a0:	48 81 ec a8 03 00 00 	sub    $0x3a8,%rsp
  4146a7:	8b 35 53 cc 22 00    	mov    0x22cc53(%rip),%esi        # 641300 <__asan_option_detect_stack_use_after_return>
  4146ad:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
  4146b2:	85 f6                	test   %esi,%esi
  4146b4:	0f 85 b1 07 00 00    	jne    414e6b <make_log_entry+0x7db>
  4146ba:	49 89 df             	mov    %rbx,%r15
    if ( hc->hs->no_log )
  4146bd:	49 8d 45 08          	lea    0x8(%r13),%rax
    {
  4146c1:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
  4146c8:	4c 8d a3 60 03 00 00 	lea    0x360(%rbx),%r12
  4146cf:	49 c1 ef 03          	shr    $0x3,%r15
  4146d3:	48 c7 43 08 38 c8 42 	movq   $0x42c838,0x8(%rbx)
  4146da:	00 
  4146db:	48 c7 43 10 90 46 41 	movq   $0x414690,0x10(%rbx)
  4146e2:	00 
  4146e3:	41 c7 87 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r15)
  4146ea:	f1 f1 f1 f1 
  4146ee:	41 c7 87 04 80 ff 7f 	movl   $0xf2f2f200,0x7fff8004(%r15)
  4146f5:	00 f2 f2 f2 
  4146f9:	41 c7 87 08 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8008(%r15)
  414700:	f2 f2 f2 f2 
  414704:	41 c7 87 10 80 ff 7f 	movl   $0xf2f2f200,0x7fff8010(%r15)
  41470b:	00 f2 f2 f2 
  41470f:	41 c7 87 14 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8014(%r15)
  414716:	f2 f2 f2 f2 
  41471a:	41 c7 87 24 80 ff 7f 	movl   $0xf2f2f204,0x7fff8024(%r15)
  414721:	04 f2 f2 f2 
  414725:	41 c7 87 28 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8028(%r15)
  41472c:	f2 f2 f2 f2 
  414730:	41 c7 87 38 80 ff 7f 	movl   $0xf2f2f204,0x7fff8038(%r15)
  414737:	04 f2 f2 f2 
  41473b:	41 c7 87 3c 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff803c(%r15)
  414742:	f2 f2 f2 f2 
  414746:	41 c7 87 64 80 ff 7f 	movl   $0xf2010000,0x7fff8064(%r15)
  41474d:	00 00 01 f2 
  414751:	41 c7 87 68 80 ff 7f 	movl   $0xf3f3f3f3,0x7fff8068(%r15)
  414758:	f3 f3 f3 f3 
    if ( hc->hs->no_log )
  41475c:	48 89 04 24          	mov    %rax,(%rsp)
  414760:	48 c1 e8 03          	shr    $0x3,%rax
  414764:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41476b:	0f 85 f1 06 00 00    	jne    414e62 <make_log_entry+0x7d2>
  414771:	49 8b 45 08          	mov    0x8(%r13),%rax
  414775:	48 8d 78 50          	lea    0x50(%rax),%rdi
  414779:	48 89 fa             	mov    %rdi,%rdx
  41477c:	48 c1 ea 03          	shr    $0x3,%rdx
  414780:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  414787:	84 d2                	test   %dl,%dl
  414789:	74 09                	je     414794 <make_log_entry+0x104>
  41478b:	80 fa 03             	cmp    $0x3,%dl
  41478e:	0f 8e 5c 06 00 00    	jle    414df0 <make_log_entry+0x760>
  414794:	8b 48 50             	mov    0x50(%rax),%ecx
  414797:	85 c9                	test   %ecx,%ecx
  414799:	0f 85 5d 04 00 00    	jne    414bfc <make_log_entry+0x56c>
    if ( hc->remoteuser[0] != '\0' )
  41479f:	49 8d bd 68 01 00 00 	lea    0x168(%r13),%rdi
  4147a6:	48 89 fa             	mov    %rdi,%rdx
  4147a9:	48 c1 ea 03          	shr    $0x3,%rdx
  4147ad:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4147b4:	0f 85 14 07 00 00    	jne    414ece <make_log_entry+0x83e>
  4147ba:	49 8b ad 68 01 00 00 	mov    0x168(%r13),%rbp
  4147c1:	48 89 ea             	mov    %rbp,%rdx
  4147c4:	48 89 e9             	mov    %rbp,%rcx
  4147c7:	48 c1 ea 03          	shr    $0x3,%rdx
  4147cb:	83 e1 07             	and    $0x7,%ecx
  4147ce:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  4147d5:	38 ca                	cmp    %cl,%dl
  4147d7:	7f 08                	jg     4147e1 <make_log_entry+0x151>
  4147d9:	84 d2                	test   %dl,%dl
  4147db:	0f 85 19 06 00 00    	jne    414dfa <make_log_entry+0x76a>
	ru = "-";
  4147e1:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
  4147e5:	ba 60 4f 42 00       	mov    $0x424f60,%edx
    if ( hc->hs->vhost && ! hc->tildemapped )
  4147ea:	48 8d 78 64          	lea    0x64(%rax),%rdi
	ru = "-";
  4147ee:	48 0f 44 ea          	cmove  %rdx,%rbp
    if ( hc->hs->vhost && ! hc->tildemapped )
  4147f2:	48 89 fa             	mov    %rdi,%rdx
  4147f5:	48 c1 ea 03          	shr    $0x3,%rdx
  4147f9:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  414800:	48 89 fa             	mov    %rdi,%rdx
  414803:	83 e2 07             	and    $0x7,%edx
  414806:	83 c2 03             	add    $0x3,%edx
  414809:	38 ca                	cmp    %cl,%dl
  41480b:	7c 08                	jl     414815 <make_log_entry+0x185>
  41480d:	84 c9                	test   %cl,%cl
  41480f:	0f 85 e0 05 00 00    	jne    414df5 <make_log_entry+0x765>
  414815:	49 8d bd d0 00 00 00 	lea    0xd0(%r13),%rdi
  41481c:	8b 50 64             	mov    0x64(%rax),%edx
  41481f:	48 89 f9             	mov    %rdi,%rcx
  414822:	48 c1 e9 03          	shr    $0x3,%rcx
  414826:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41482d:	0f 85 4e 06 00 00    	jne    414e81 <make_log_entry+0x7f1>
  414833:	4d 8b 85 d0 00 00 00 	mov    0xd0(%r13),%r8
  41483a:	85 d2                	test   %edx,%edx
  41483c:	0f 84 86 00 00 00    	je     4148c8 <make_log_entry+0x238>
  414842:	49 8d bd 14 02 00 00 	lea    0x214(%r13),%rdi
  414849:	48 89 fa             	mov    %rdi,%rdx
  41484c:	48 c1 ea 03          	shr    $0x3,%rdx
  414850:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  414857:	48 89 fa             	mov    %rdi,%rdx
  41485a:	83 e2 07             	and    $0x7,%edx
  41485d:	83 c2 03             	add    $0x3,%edx
  414860:	38 ca                	cmp    %cl,%dl
  414862:	7c 08                	jl     41486c <make_log_entry+0x1dc>
  414864:	84 c9                	test   %cl,%cl
  414866:	0f 85 79 06 00 00    	jne    414ee5 <make_log_entry+0x855>
  41486c:	41 8b 95 14 02 00 00 	mov    0x214(%r13),%edx
  414873:	85 d2                	test   %edx,%edx
  414875:	75 51                	jne    4148c8 <make_log_entry+0x238>
	    hc->hostname == (char*) 0 ? hc->hs->server_hostname : hc->hostname,
  414877:	49 8d bd 00 02 00 00 	lea    0x200(%r13),%rdi
  41487e:	48 89 fa             	mov    %rdi,%rdx
  414881:	48 c1 ea 03          	shr    $0x3,%rdx
  414885:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41488c:	0f 85 58 06 00 00    	jne    414eea <make_log_entry+0x85a>
  414892:	49 8b 8d 00 02 00 00 	mov    0x200(%r13),%rcx
	(void) my_snprintf( url, sizeof(url),
  414899:	48 85 c9             	test   %rcx,%rcx
  41489c:	0f 84 de 03 00 00    	je     414c80 <make_log_entry+0x5f0>
  4148a2:	49 8d 84 24 a0 fe ff 	lea    -0x160(%r12),%rax
  4148a9:	ff 
  4148aa:	ba a0 4f 42 00       	mov    $0x424fa0,%edx
  4148af:	be 31 01 00 00       	mov    $0x131,%esi
  4148b4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4148b9:	48 89 c7             	mov    %rax,%rdi
  4148bc:	31 c0                	xor    %eax,%eax
  4148be:	e8 4d 66 ff ff       	callq  40af10 <my_snprintf>
  4148c3:	eb 27                	jmp    4148ec <make_log_entry+0x25c>
  4148c5:	0f 1f 00             	nopl   (%rax)
	(void) my_snprintf( url, sizeof(url),
  4148c8:	49 8d 84 24 a0 fe ff 	lea    -0x160(%r12),%rax
  4148cf:	ff 
  4148d0:	4c 89 c1             	mov    %r8,%rcx
  4148d3:	ba e0 4f 42 00       	mov    $0x424fe0,%edx
  4148d8:	be 31 01 00 00       	mov    $0x131,%esi
  4148dd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4148e2:	48 89 c7             	mov    %rax,%rdi
  4148e5:	31 c0                	xor    %eax,%eax
  4148e7:	e8 24 66 ff ff       	callq  40af10 <my_snprintf>
    if ( hc->bytes_sent >= 0 )
  4148ec:	49 8d bd c8 00 00 00 	lea    0xc8(%r13),%rdi
  4148f3:	48 89 f8             	mov    %rdi,%rax
  4148f6:	48 c1 e8 03          	shr    $0x3,%rax
  4148fa:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  414901:	0f 85 b9 05 00 00    	jne    414ec0 <make_log_entry+0x830>
  414907:	49 8b 8d c8 00 00 00 	mov    0xc8(%r13),%rcx
	(void) my_snprintf(
  41490e:	49 8d 84 24 00 fd ff 	lea    -0x300(%r12),%rax
  414915:	ff 
  414916:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    if ( hc->bytes_sent >= 0 )
  41491b:	48 85 c9             	test   %rcx,%rcx
  41491e:	0f 88 3c 03 00 00    	js     414c60 <make_log_entry+0x5d0>
	(void) my_snprintf(
  414924:	48 89 c7             	mov    %rax,%rdi
  414927:	ba 20 50 42 00       	mov    $0x425020,%edx
  41492c:	be 28 00 00 00       	mov    $0x28,%esi
  414931:	31 c0                	xor    %eax,%eax
  414933:	e8 d8 65 ff ff       	callq  40af10 <my_snprintf>
    if ( hc->hs->logfp != (FILE*) 0 )
  414938:	48 8b 04 24          	mov    (%rsp),%rax
  41493c:	48 c1 e8 03          	shr    $0x3,%rax
  414940:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  414947:	0f 85 78 05 00 00    	jne    414ec5 <make_log_entry+0x835>
  41494d:	49 8b 45 08          	mov    0x8(%r13),%rax
  414951:	48 8d 78 58          	lea    0x58(%rax),%rdi
  414955:	48 89 fa             	mov    %rdi,%rdx
  414958:	48 c1 ea 03          	shr    $0x3,%rdx
  41495c:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  414963:	0f 85 6a 05 00 00    	jne    414ed3 <make_log_entry+0x843>
  414969:	49 8d 75 10          	lea    0x10(%r13),%rsi
  41496d:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  414972:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
  414977:	0f 84 2b 03 00 00    	je     414ca8 <make_log_entry+0x618>
	if ( nowP != (struct timeval*) 0 )
  41497d:	4d 85 f6             	test   %r14,%r14
  414980:	0f 84 42 04 00 00    	je     414dc8 <make_log_entry+0x738>
	    now = nowP->tv_sec;
  414986:	4c 89 f0             	mov    %r14,%rax
  414989:	48 c1 e8 03          	shr    $0x3,%rax
  41498d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  414994:	0f 85 3e 05 00 00    	jne    414ed8 <make_log_entry+0x848>
  41499a:	49 8d bc 24 c0 fc ff 	lea    -0x340(%r12),%rdi
  4149a1:	ff 
  4149a2:	49 8b 06             	mov    (%r14),%rax
  4149a5:	48 89 fa             	mov    %rdi,%rdx
  4149a8:	48 c1 ea 03          	shr    $0x3,%rdx
  4149ac:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4149b3:	0f 85 27 05 00 00    	jne    414ee0 <make_log_entry+0x850>
	    now = time( (time_t*) 0 );
  4149b9:	49 89 84 24 c0 fc ff 	mov    %rax,-0x340(%r12)
  4149c0:	ff 
	(void) strftime( date_nozone, sizeof(date_nozone), cernfmt_nozone, t );
  4149c1:	4d 8d b4 24 60 fd ff 	lea    -0x2a0(%r12),%r14
  4149c8:	ff 
	t = localtime( &now );
  4149c9:	e8 92 e7 fe ff       	callq  403160 <localtime@plt>
	(void) strftime( date_nozone, sizeof(date_nozone), cernfmt_nozone, t );
  4149ce:	4c 89 f7             	mov    %r14,%rdi
  4149d1:	ba 60 50 42 00       	mov    $0x425060,%edx
  4149d6:	be 64 00 00 00       	mov    $0x64,%esi
  4149db:	48 89 c1             	mov    %rax,%rcx
  4149de:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  4149e3:	e8 a8 e4 fe ff       	callq  402e90 <strftime@plt>
	zone = t->tm_gmtoff / 60L;
  4149e8:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
  4149ed:	49 8d 78 28          	lea    0x28(%r8),%rdi
  4149f1:	48 89 f8             	mov    %rdi,%rax
  4149f4:	48 c1 e8 03          	shr    $0x3,%rax
  4149f8:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4149ff:	0f 85 b1 04 00 00    	jne    414eb6 <make_log_entry+0x826>
  414a05:	48 ba 89 88 88 88 88 	movabs $0x8888888888888889,%rdx
  414a0c:	88 88 88 
  414a0f:	49 8b 48 28          	mov    0x28(%r8),%rcx
  414a13:	41 b8 2b 00 00 00    	mov    $0x2b,%r8d
  414a19:	48 89 c8             	mov    %rcx,%rax
  414a1c:	48 f7 ea             	imul   %rdx
  414a1f:	48 01 ca             	add    %rcx,%rdx
  414a22:	48 c1 f9 3f          	sar    $0x3f,%rcx
  414a26:	48 c1 fa 05          	sar    $0x5,%rdx
  414a2a:	48 29 ca             	sub    %rcx,%rdx
  414a2d:	89 d1                	mov    %edx,%ecx
	if ( zone >= 0 )
  414a2f:	85 d2                	test   %edx,%edx
  414a31:	79 08                	jns    414a3b <make_log_entry+0x3ab>
	    zone = -zone;
  414a33:	f7 d9                	neg    %ecx
  414a35:	41 b8 2d 00 00 00    	mov    $0x2d,%r8d
	zone = ( zone / 60 ) * 100 + zone % 60;
  414a3b:	89 c8                	mov    %ecx,%eax
  414a3d:	ba 89 88 88 88       	mov    $0x88888889,%edx
	(void) my_snprintf( date, sizeof(date),
  414a42:	be 64 00 00 00       	mov    $0x64,%esi
	zone = ( zone / 60 ) * 100 + zone % 60;
  414a47:	f7 e2                	mul    %edx
	(void) my_snprintf( date, sizeof(date),
  414a49:	49 8d 84 24 00 fe ff 	lea    -0x200(%r12),%rax
  414a50:	ff 
  414a51:	48 89 c7             	mov    %rax,%rdi
  414a54:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  414a59:	31 c0                	xor    %eax,%eax
	zone = ( zone / 60 ) * 100 + zone % 60;
  414a5b:	c1 ea 05             	shr    $0x5,%edx
  414a5e:	6b d2 28             	imul   $0x28,%edx,%edx
	(void) my_snprintf( date, sizeof(date),
  414a61:	44 8d 0c 0a          	lea    (%rdx,%rcx,1),%r9d
  414a65:	4c 89 f1             	mov    %r14,%rcx
  414a68:	ba a0 50 42 00       	mov    $0x4250a0,%edx
  414a6d:	e8 9e 64 ff ff       	callq  40af10 <my_snprintf>
	(void) fprintf( hc->hs->logfp,
  414a72:	49 8d bd 18 01 00 00 	lea    0x118(%r13),%rdi
  414a79:	48 89 f8             	mov    %rdi,%rax
  414a7c:	48 c1 e8 03          	shr    $0x3,%rax
  414a80:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  414a87:	0f 85 2e 04 00 00    	jne    414ebb <make_log_entry+0x82b>
  414a8d:	49 8d bd 10 01 00 00 	lea    0x110(%r13),%rdi
  414a94:	49 8b b5 18 01 00 00 	mov    0x118(%r13),%rsi
  414a9b:	48 89 f8             	mov    %rdi,%rax
  414a9e:	48 c1 e8 03          	shr    $0x3,%rax
  414aa2:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  414aa9:	0f 85 d7 03 00 00    	jne    414e86 <make_log_entry+0x7f6>
  414aaf:	49 8d bd b8 00 00 00 	lea    0xb8(%r13),%rdi
  414ab6:	49 8b 95 10 01 00 00 	mov    0x110(%r13),%rdx
  414abd:	48 89 f8             	mov    %rdi,%rax
  414ac0:	48 c1 e8 03          	shr    $0x3,%rax
  414ac4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  414acb:	84 c0                	test   %al,%al
  414acd:	74 08                	je     414ad7 <make_log_entry+0x447>
  414acf:	3c 03                	cmp    $0x3,%al
  414ad1:	0f 8e b4 03 00 00    	jle    414e8b <make_log_entry+0x7fb>
  414ad7:	49 8d bd e0 00 00 00 	lea    0xe0(%r13),%rdi
  414ade:	45 8b 8d b8 00 00 00 	mov    0xb8(%r13),%r9d
  414ae5:	48 89 f8             	mov    %rdi,%rax
  414ae8:	48 c1 e8 03          	shr    $0x3,%rax
  414aec:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  414af3:	0f 85 97 03 00 00    	jne    414e90 <make_log_entry+0x800>
  414af9:	49 8d bd b4 00 00 00 	lea    0xb4(%r13),%rdi
  414b00:	4d 8b b5 e0 00 00 00 	mov    0xe0(%r13),%r14
  414b07:	48 89 f8             	mov    %rdi,%rax
  414b0a:	48 c1 e8 03          	shr    $0x3,%rax
  414b0e:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  414b15:	48 89 f8             	mov    %rdi,%rax
  414b18:	83 e0 07             	and    $0x7,%eax
  414b1b:	83 c0 03             	add    $0x3,%eax
  414b1e:	38 c8                	cmp    %cl,%al
  414b20:	7c 08                	jl     414b2a <make_log_entry+0x49a>
  414b22:	84 c9                	test   %cl,%cl
  414b24:	0f 85 6b 03 00 00    	jne    414e95 <make_log_entry+0x805>
  414b2a:	41 8b bd b4 00 00 00 	mov    0xb4(%r13),%edi
  414b31:	44 89 4c 24 3c       	mov    %r9d,0x3c(%rsp)
  414b36:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  414b3b:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
  414b40:	e8 db b6 ff ff       	callq  410220 <httpd_method_str>
  414b45:	49 8d 7d 10          	lea    0x10(%r13),%rdi
  414b49:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  414b4e:	e8 ad cd ff ff       	callq  411900 <httpd_ntoa>
  414b53:	4c 8b 24 24          	mov    (%rsp),%r12
  414b57:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  414b5c:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
  414b61:	44 8b 4c 24 3c       	mov    0x3c(%rsp),%r9d
  414b66:	49 c1 ec 03          	shr    $0x3,%r12
  414b6a:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  414b71:	7f 00 
  414b73:	0f 85 21 03 00 00    	jne    414e9a <make_log_entry+0x80a>
  414b79:	49 8b 4d 08          	mov    0x8(%r13),%rcx
  414b7d:	48 8d 79 58          	lea    0x58(%rcx),%rdi
  414b81:	49 89 f8             	mov    %rdi,%r8
  414b84:	49 c1 e8 03          	shr    $0x3,%r8
  414b88:	41 80 b8 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r8)
  414b8f:	00 
  414b90:	0f 85 0d 03 00 00    	jne    414ea3 <make_log_entry+0x813>
  414b96:	48 8b 79 58          	mov    0x58(%rcx),%rdi
  414b9a:	56                   	push   %rsi
  414b9b:	48 89 e9             	mov    %rbp,%rcx
  414b9e:	be e0 50 42 00       	mov    $0x4250e0,%esi
  414ba3:	52                   	push   %rdx
  414ba4:	48 89 c2             	mov    %rax,%rdx
  414ba7:	31 c0                	xor    %eax,%eax
  414ba9:	ff 74 24 20          	pushq  0x20(%rsp)
  414bad:	41 51                	push   %r9
  414baf:	41 56                	push   %r14
  414bb1:	ff 74 24 30          	pushq  0x30(%rsp)
  414bb5:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
  414bba:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
  414bbf:	e8 6c e1 fe ff       	callq  402d30 <fprintf@plt>
	(void) fflush( hc->hs->logfp );
  414bc4:	48 83 c4 30          	add    $0x30,%rsp
  414bc8:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  414bcf:	7f 00 
  414bd1:	0f 85 d1 02 00 00    	jne    414ea8 <make_log_entry+0x818>
  414bd7:	49 8b 45 08          	mov    0x8(%r13),%rax
  414bdb:	48 8d 78 58          	lea    0x58(%rax),%rdi
  414bdf:	48 89 fa             	mov    %rdi,%rdx
  414be2:	48 c1 ea 03          	shr    $0x3,%rdx
  414be6:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  414bed:	0f 85 be 02 00 00    	jne    414eb1 <make_log_entry+0x821>
  414bf3:	48 8b 78 58          	mov    0x58(%rax),%rdi
  414bf7:	e8 e4 e2 fe ff       	callq  402ee0 <fflush@plt>
    {
  414bfc:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
  414c01:	48 39 d8             	cmp    %rbx,%rax
  414c04:	0f 85 f8 01 00 00    	jne    414e02 <make_log_entry+0x772>
  414c0a:	49 c7 87 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r15)
  414c11:	00 00 00 00 
  414c15:	41 c7 87 08 80 ff 7f 	movl   $0x0,0x7fff8008(%r15)
  414c1c:	00 00 00 00 
  414c20:	49 c7 87 10 80 ff 7f 	movq   $0x0,0x7fff8010(%r15)
  414c27:	00 00 00 00 
  414c2b:	49 c7 87 24 80 ff 7f 	movq   $0x0,0x7fff8024(%r15)
  414c32:	00 00 00 00 
  414c36:	49 c7 87 38 80 ff 7f 	movq   $0x0,0x7fff8038(%r15)
  414c3d:	00 00 00 00 
  414c41:	49 c7 87 64 80 ff 7f 	movq   $0x0,0x7fff8064(%r15)
  414c48:	00 00 00 00 
    }
  414c4c:	48 81 c4 a8 03 00 00 	add    $0x3a8,%rsp
  414c53:	5b                   	pop    %rbx
  414c54:	5d                   	pop    %rbp
  414c55:	41 5c                	pop    %r12
  414c57:	41 5d                	pop    %r13
  414c59:	41 5e                	pop    %r14
  414c5b:	41 5f                	pop    %r15
  414c5d:	c3                   	retq   
  414c5e:	66 90                	xchg   %ax,%ax
	(void) strcpy( bytes, "-" );
  414c60:	ba 02 00 00 00       	mov    $0x2,%edx
  414c65:	be 60 4f 42 00       	mov    $0x424f60,%esi
  414c6a:	48 89 c7             	mov    %rax,%rdi
  414c6d:	e8 ce e4 fe ff       	callq  403140 <memcpy@plt>
  414c72:	e9 c1 fc ff ff       	jmpq   414938 <make_log_entry+0x2a8>
  414c77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  414c7e:	00 00 
	(void) my_snprintf( url, sizeof(url),
  414c80:	48 8d 78 08          	lea    0x8(%rax),%rdi
  414c84:	48 89 fa             	mov    %rdi,%rdx
  414c87:	48 c1 ea 03          	shr    $0x3,%rdx
  414c8b:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  414c92:	0f 85 70 02 00 00    	jne    414f08 <make_log_entry+0x878>
  414c98:	48 8b 48 08          	mov    0x8(%rax),%rcx
  414c9c:	e9 01 fc ff ff       	jmpq   4148a2 <make_log_entry+0x212>
  414ca1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	syslog( LOG_INFO,
  414ca8:	49 8d bd 18 01 00 00 	lea    0x118(%r13),%rdi
  414caf:	48 89 f8             	mov    %rdi,%rax
  414cb2:	48 c1 e8 03          	shr    $0x3,%rax
  414cb6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  414cbd:	0f 85 31 02 00 00    	jne    414ef4 <make_log_entry+0x864>
  414cc3:	49 8d bd 10 01 00 00 	lea    0x110(%r13),%rdi
  414cca:	49 8b b5 18 01 00 00 	mov    0x118(%r13),%rsi
  414cd1:	48 89 f8             	mov    %rdi,%rax
  414cd4:	48 c1 e8 03          	shr    $0x3,%rax
  414cd8:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  414cdf:	0f 85 0a 02 00 00    	jne    414eef <make_log_entry+0x85f>
  414ce5:	49 8d bd b8 00 00 00 	lea    0xb8(%r13),%rdi
  414cec:	4d 8b a5 10 01 00 00 	mov    0x110(%r13),%r12
  414cf3:	48 89 f8             	mov    %rdi,%rax
  414cf6:	48 c1 e8 03          	shr    $0x3,%rax
  414cfa:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  414d01:	84 c0                	test   %al,%al
  414d03:	74 08                	je     414d0d <make_log_entry+0x67d>
  414d05:	3c 03                	cmp    $0x3,%al
  414d07:	0f 8e f6 01 00 00    	jle    414f03 <make_log_entry+0x873>
  414d0d:	49 8d bd e0 00 00 00 	lea    0xe0(%r13),%rdi
  414d14:	45 8b b5 b8 00 00 00 	mov    0xb8(%r13),%r14d
  414d1b:	48 89 f8             	mov    %rdi,%rax
  414d1e:	48 c1 e8 03          	shr    $0x3,%rax
  414d22:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  414d29:	0f 85 cf 01 00 00    	jne    414efe <make_log_entry+0x86e>
  414d2f:	49 8d bd b4 00 00 00 	lea    0xb4(%r13),%rdi
  414d36:	49 8b 8d e0 00 00 00 	mov    0xe0(%r13),%rcx
  414d3d:	48 89 f8             	mov    %rdi,%rax
  414d40:	48 c1 e8 03          	shr    $0x3,%rax
  414d44:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  414d4b:	48 89 f8             	mov    %rdi,%rax
  414d4e:	83 e0 07             	and    $0x7,%eax
  414d51:	83 c0 03             	add    $0x3,%eax
  414d54:	38 d0                	cmp    %dl,%al
  414d56:	7c 08                	jl     414d60 <make_log_entry+0x6d0>
  414d58:	84 d2                	test   %dl,%dl
  414d5a:	0f 85 99 01 00 00    	jne    414ef9 <make_log_entry+0x869>
  414d60:	41 8b bd b4 00 00 00 	mov    0xb4(%r13),%edi
  414d67:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
  414d6c:	48 89 34 24          	mov    %rsi,(%rsp)
  414d70:	e8 ab b4 ff ff       	callq  410220 <httpd_method_str>
  414d75:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  414d7a:	49 89 c5             	mov    %rax,%r13
  414d7d:	e8 7e cb ff ff       	callq  411900 <httpd_ntoa>
  414d82:	48 83 ec 08          	sub    $0x8,%rsp
  414d86:	4d 89 e8             	mov    %r13,%r8
  414d89:	bf 06 00 00 00       	mov    $0x6,%edi
  414d8e:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  414d93:	48 89 c2             	mov    %rax,%rdx
  414d96:	31 c0                	xor    %eax,%eax
  414d98:	56                   	push   %rsi
  414d99:	be 60 51 42 00       	mov    $0x425160,%esi
  414d9e:	41 54                	push   %r12
  414da0:	ff 74 24 28          	pushq  0x28(%rsp)
  414da4:	41 56                	push   %r14
  414da6:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
  414dab:	51                   	push   %rcx
  414dac:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
  414db1:	48 89 e9             	mov    %rbp,%rcx
  414db4:	e8 87 de fe ff       	callq  402c40 <syslog@plt>
  414db9:	48 83 c4 30          	add    $0x30,%rsp
  414dbd:	e9 3a fe ff ff       	jmpq   414bfc <make_log_entry+0x56c>
  414dc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	    now = time( (time_t*) 0 );
  414dc8:	31 ff                	xor    %edi,%edi
  414dca:	e8 a1 e1 fe ff       	callq  402f70 <time@plt>
  414dcf:	49 8d bc 24 c0 fc ff 	lea    -0x340(%r12),%rdi
  414dd6:	ff 
  414dd7:	48 89 fa             	mov    %rdi,%rdx
  414dda:	48 c1 ea 03          	shr    $0x3,%rdx
  414dde:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  414de5:	0f 84 ce fb ff ff    	je     4149b9 <make_log_entry+0x329>
  414deb:	e8 b0 e1 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    if ( hc->hs->no_log )
  414df0:	e8 db df fe ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( hc->hs->vhost && ! hc->tildemapped )
  414df5:	e8 d6 df fe ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( hc->remoteuser[0] != '\0' )
  414dfa:	48 89 ef             	mov    %rbp,%rdi
  414dfd:	e8 0e e3 fe ff       	callq  403110 <__asan_report_load1@plt>
    {
  414e02:	66 0f 6f 05 86 cf 00 	movdqa 0xcf86(%rip),%xmm0        # 421d90 <_IO_stdin_used+0x2cd0>
  414e09:	00 
  414e0a:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  414e11:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
  414e18:	f5 f5 f5 
  414e1b:	49 89 87 60 80 ff 7f 	mov    %rax,0x7fff8060(%r15)
  414e22:	41 0f 11 87 00 80 ff 	movups %xmm0,0x7fff8000(%r15)
  414e29:	7f 
  414e2a:	41 0f 11 87 10 80 ff 	movups %xmm0,0x7fff8010(%r15)
  414e31:	7f 
  414e32:	41 0f 11 87 20 80 ff 	movups %xmm0,0x7fff8020(%r15)
  414e39:	7f 
  414e3a:	41 0f 11 87 30 80 ff 	movups %xmm0,0x7fff8030(%r15)
  414e41:	7f 
  414e42:	41 0f 11 87 40 80 ff 	movups %xmm0,0x7fff8040(%r15)
  414e49:	7f 
  414e4a:	41 0f 11 87 50 80 ff 	movups %xmm0,0x7fff8050(%r15)
  414e51:	7f 
  414e52:	41 c7 87 68 80 ff 7f 	movl   $0xf5f5f5f5,0x7fff8068(%r15)
  414e59:	f5 f5 f5 f5 
  414e5d:	e9 ea fd ff ff       	jmpq   414c4c <make_log_entry+0x5bc>
    if ( hc->hs->no_log )
  414e62:	48 8b 3c 24          	mov    (%rsp),%rdi
  414e66:	e8 e5 e3 fe ff       	callq  403250 <__asan_report_load8@plt>
    {
  414e6b:	bf 60 03 00 00       	mov    $0x360,%edi
  414e70:	e8 0b e2 fe ff       	callq  403080 <__asan_stack_malloc_4@plt>
  414e75:	48 85 c0             	test   %rax,%rax
  414e78:	48 0f 45 d8          	cmovne %rax,%rbx
  414e7c:	e9 39 f8 ff ff       	jmpq   4146ba <make_log_entry+0x2a>
  414e81:	e8 ca e3 fe ff       	callq  403250 <__asan_report_load8@plt>
	(void) fprintf( hc->hs->logfp,
  414e86:	e8 c5 e3 fe ff       	callq  403250 <__asan_report_load8@plt>
  414e8b:	e8 40 df fe ff       	callq  402dd0 <__asan_report_load4@plt>
  414e90:	e8 bb e3 fe ff       	callq  403250 <__asan_report_load8@plt>
  414e95:	e8 36 df fe ff       	callq  402dd0 <__asan_report_load4@plt>
  414e9a:	48 8b 3c 24          	mov    (%rsp),%rdi
  414e9e:	e8 ad e3 fe ff       	callq  403250 <__asan_report_load8@plt>
  414ea3:	e8 a8 e3 fe ff       	callq  403250 <__asan_report_load8@plt>
	(void) fflush( hc->hs->logfp );
  414ea8:	48 8b 3c 24          	mov    (%rsp),%rdi
  414eac:	e8 9f e3 fe ff       	callq  403250 <__asan_report_load8@plt>
  414eb1:	e8 9a e3 fe ff       	callq  403250 <__asan_report_load8@plt>
	zone = t->tm_gmtoff / 60L;
  414eb6:	e8 95 e3 fe ff       	callq  403250 <__asan_report_load8@plt>
	(void) fprintf( hc->hs->logfp,
  414ebb:	e8 90 e3 fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->bytes_sent >= 0 )
  414ec0:	e8 8b e3 fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->hs->logfp != (FILE*) 0 )
  414ec5:	48 8b 3c 24          	mov    (%rsp),%rdi
  414ec9:	e8 82 e3 fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->remoteuser[0] != '\0' )
  414ece:	e8 7d e3 fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->hs->logfp != (FILE*) 0 )
  414ed3:	e8 78 e3 fe ff       	callq  403250 <__asan_report_load8@plt>
	    now = nowP->tv_sec;
  414ed8:	4c 89 f7             	mov    %r14,%rdi
  414edb:	e8 70 e3 fe ff       	callq  403250 <__asan_report_load8@plt>
  414ee0:	e8 bb e0 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    if ( hc->hs->vhost && ! hc->tildemapped )
  414ee5:	e8 e6 de fe ff       	callq  402dd0 <__asan_report_load4@plt>
	    hc->hostname == (char*) 0 ? hc->hs->server_hostname : hc->hostname,
  414eea:	e8 61 e3 fe ff       	callq  403250 <__asan_report_load8@plt>
	syslog( LOG_INFO,
  414eef:	e8 5c e3 fe ff       	callq  403250 <__asan_report_load8@plt>
  414ef4:	e8 57 e3 fe ff       	callq  403250 <__asan_report_load8@plt>
  414ef9:	e8 d2 de fe ff       	callq  402dd0 <__asan_report_load4@plt>
  414efe:	e8 4d e3 fe ff       	callq  403250 <__asan_report_load8@plt>
  414f03:	e8 c8 de fe ff       	callq  402dd0 <__asan_report_load4@plt>
	(void) my_snprintf( url, sizeof(url),
  414f08:	e8 43 e3 fe ff       	callq  403250 <__asan_report_load8@plt>
  414f0d:	0f 1f 00             	nopl   (%rax)

0000000000414f10 <httpd_close_conn>:
    {
  414f10:	41 55                	push   %r13
  414f12:	41 54                	push   %r12
  414f14:	49 89 f4             	mov    %rsi,%r12
  414f17:	55                   	push   %rbp
  414f18:	53                   	push   %rbx
  414f19:	48 89 fb             	mov    %rdi,%rbx
    if ( hc->file_address != (char*) 0 )
  414f1c:	4c 8d ab c8 02 00 00 	lea    0x2c8(%rbx),%r13
  414f23:	4c 89 ed             	mov    %r13,%rbp
    {
  414f26:	48 83 ec 08          	sub    $0x8,%rsp
    if ( hc->file_address != (char*) 0 )
  414f2a:	48 c1 ed 03          	shr    $0x3,%rbp
    make_log_entry( hc, nowP );
  414f2e:	e8 5d f7 ff ff       	callq  414690 <make_log_entry>
    if ( hc->file_address != (char*) 0 )
  414f33:	80 bd 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rbp)
  414f3a:	0f 85 a0 00 00 00    	jne    414fe0 <httpd_close_conn+0xd0>
  414f40:	48 8b bb c8 02 00 00 	mov    0x2c8(%rbx),%rdi
  414f47:	48 85 ff             	test   %rdi,%rdi
  414f4a:	74 27                	je     414f73 <httpd_close_conn+0x63>
	mmc_unmap( hc->file_address, &(hc->sb), nowP );
  414f4c:	48 8d b3 30 02 00 00 	lea    0x230(%rbx),%rsi
  414f53:	4c 89 e2             	mov    %r12,%rdx
  414f56:	e8 95 68 00 00       	callq  41b7f0 <mmc_unmap>
	hc->file_address = (char*) 0;
  414f5b:	80 bd 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rbp)
  414f62:	0f 85 80 00 00 00    	jne    414fe8 <httpd_close_conn+0xd8>
  414f68:	48 c7 83 c8 02 00 00 	movq   $0x0,0x2c8(%rbx)
  414f6f:	00 00 00 00 
    if ( hc->conn_fd >= 0 )
  414f73:	48 8d ab c0 02 00 00 	lea    0x2c0(%rbx),%rbp
  414f7a:	48 89 e8             	mov    %rbp,%rax
  414f7d:	48 c1 e8 03          	shr    $0x3,%rax
  414f81:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  414f88:	84 c0                	test   %al,%al
  414f8a:	74 04                	je     414f90 <httpd_close_conn+0x80>
  414f8c:	3c 03                	cmp    $0x3,%al
  414f8e:	7e 48                	jle    414fd8 <httpd_close_conn+0xc8>
  414f90:	8b bb c0 02 00 00    	mov    0x2c0(%rbx),%edi
  414f96:	85 ff                	test   %edi,%edi
  414f98:	79 0e                	jns    414fa8 <httpd_close_conn+0x98>
    }
  414f9a:	48 83 c4 08          	add    $0x8,%rsp
  414f9e:	5b                   	pop    %rbx
  414f9f:	5d                   	pop    %rbp
  414fa0:	41 5c                	pop    %r12
  414fa2:	41 5d                	pop    %r13
  414fa4:	c3                   	retq   
  414fa5:	0f 1f 00             	nopl   (%rax)
	(void) close( hc->conn_fd );
  414fa8:	e8 23 e5 fe ff       	callq  4034d0 <close@plt>
	hc->conn_fd = -1;
  414fad:	48 89 e8             	mov    %rbp,%rax
  414fb0:	48 c1 e8 03          	shr    $0x3,%rax
  414fb4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  414fbb:	84 c0                	test   %al,%al
  414fbd:	74 04                	je     414fc3 <httpd_close_conn+0xb3>
  414fbf:	3c 03                	cmp    $0x3,%al
  414fc1:	7e 2d                	jle    414ff0 <httpd_close_conn+0xe0>
  414fc3:	c7 83 c0 02 00 00 ff 	movl   $0xffffffff,0x2c0(%rbx)
  414fca:	ff ff ff 
    }
  414fcd:	48 83 c4 08          	add    $0x8,%rsp
  414fd1:	5b                   	pop    %rbx
  414fd2:	5d                   	pop    %rbp
  414fd3:	41 5c                	pop    %r12
  414fd5:	41 5d                	pop    %r13
  414fd7:	c3                   	retq   
    if ( hc->conn_fd >= 0 )
  414fd8:	48 89 ef             	mov    %rbp,%rdi
  414fdb:	e8 f0 dd fe ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( hc->file_address != (char*) 0 )
  414fe0:	4c 89 ef             	mov    %r13,%rdi
  414fe3:	e8 68 e2 fe ff       	callq  403250 <__asan_report_load8@plt>
	hc->file_address = (char*) 0;
  414fe8:	4c 89 ef             	mov    %r13,%rdi
  414feb:	e8 b0 df fe ff       	callq  402fa0 <__asan_report_store8@plt>
	hc->conn_fd = -1;
  414ff0:	48 89 ef             	mov    %rbp,%rdi
  414ff3:	e8 f8 db fe ff       	callq  402bf0 <__asan_report_store4@plt>
  414ff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  414fff:	00 

0000000000415000 <auth_check2>:
    {
  415000:	41 57                	push   %r15
  415002:	49 89 ff             	mov    %rdi,%r15
  415005:	41 56                	push   %r14
  415007:	41 55                	push   %r13
  415009:	41 54                	push   %r12
  41500b:	55                   	push   %rbp
  41500c:	53                   	push   %rbx
  41500d:	48 81 ec 58 05 00 00 	sub    $0x558,%rsp
  415014:	8b 05 e6 c2 22 00    	mov    0x22c2e6(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  41501a:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
  41501f:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
  415024:	85 c0                	test   %eax,%eax
  415026:	0f 85 05 06 00 00    	jne    415631 <auth_check2+0x631>
  41502c:	4c 89 e3             	mov    %r12,%rbx
  41502f:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
  415036:	41 
  415037:	4d 8d ac 24 20 05 00 	lea    0x520(%r12),%r13
  41503e:	00 
  41503f:	49 c7 44 24 08 88 c8 	movq   $0x42c888,0x8(%r12)
  415046:	42 00 
  415048:	48 c1 eb 03          	shr    $0x3,%rbx
  41504c:	49 c7 44 24 10 00 50 	movq   $0x415000,0x10(%r12)
  415053:	41 00 
	&authpath, &maxauthpath, strlen( dirname ) + 1 + sizeof(AUTH_FILE) );
  415055:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
    {
  41505a:	c7 83 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbx)
  415061:	f1 f1 f1 
  415064:	c7 83 14 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8014(%rbx)
  41506b:	00 f2 f2 
	&authpath, &maxauthpath, strlen( dirname ) + 1 + sizeof(AUTH_FILE) );
  41506e:	4c 89 f7             	mov    %r14,%rdi
    {
  415071:	c7 83 18 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8018(%rbx)
  415078:	f2 f2 f2 
  41507b:	c7 83 58 80 ff 7f 00 	movl   $0xf2040000,0x7fff8058(%rbx)
  415082:	00 04 f2 
  415085:	c7 83 5c 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff805c(%rbx)
  41508c:	f2 f2 f2 
  41508f:	c7 83 9c 80 ff 7f 00 	movl   $0xf2040000,0x7fff809c(%rbx)
  415096:	00 04 f2 
  415099:	c7 83 a0 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff80a0(%rbx)
  4150a0:	f3 f3 f3 
	&authpath, &maxauthpath, strlen( dirname ) + 1 + sizeof(AUTH_FILE) );
  4150a3:	e8 d8 db fe ff       	callq  402c80 <strlen@plt>
    httpd_realloc_str(
  4150a8:	be c0 24 64 00       	mov    $0x6424c0,%esi
  4150ad:	bf 00 25 64 00       	mov    $0x642500,%edi
  4150b2:	48 8d 50 0b          	lea    0xb(%rax),%rdx
  4150b6:	e8 75 82 ff ff       	callq  40d330 <httpd_realloc_str>
    (void) my_snprintf( authpath, maxauthpath, "%s/%s", dirname, AUTH_FILE );
  4150bb:	31 c0                	xor    %eax,%eax
  4150bd:	41 b8 c0 51 42 00    	mov    $0x4251c0,%r8d
  4150c3:	4c 89 f1             	mov    %r14,%rcx
  4150c6:	48 8b 35 f3 d3 22 00 	mov    0x22d3f3(%rip),%rsi        # 6424c0 <maxauthpath.6164>
  4150cd:	48 8b 3d 2c d4 22 00 	mov    0x22d42c(%rip),%rdi        # 642500 <authpath.6163>
  4150d4:	ba 00 52 42 00       	mov    $0x425200,%edx
  4150d9:	e8 32 5e ff ff       	callq  40af10 <my_snprintf>
    if ( stat( authpath, &sb ) < 0 )
  4150de:	48 8b 3d 1b d4 22 00 	mov    0x22d41b(%rip),%rdi        # 642500 <authpath.6163>
  4150e5:	49 8d 74 24 20       	lea    0x20(%r12),%rsi
  4150ea:	e8 91 9f 00 00       	callq  41f080 <__stat>
  4150ef:	85 c0                	test   %eax,%eax
  4150f1:	0f 88 e9 03 00 00    	js     4154e0 <auth_check2+0x4e0>
    if ( hc->authorization[0] == '\0' ||
  4150f7:	49 8d bf 60 01 00 00 	lea    0x160(%r15),%rdi
  4150fe:	48 89 f8             	mov    %rdi,%rax
  415101:	48 c1 e8 03          	shr    $0x3,%rax
  415105:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41510c:	0f 85 35 05 00 00    	jne    415647 <auth_check2+0x647>
  415112:	49 8b af 60 01 00 00 	mov    0x160(%r15),%rbp
  415119:	48 89 e8             	mov    %rbp,%rax
  41511c:	48 89 ea             	mov    %rbp,%rdx
  41511f:	48 c1 e8 03          	shr    $0x3,%rax
  415123:	83 e2 07             	and    $0x7,%edx
  415126:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41512d:	38 d0                	cmp    %dl,%al
  41512f:	7f 08                	jg     415139 <auth_check2+0x139>
  415131:	84 c0                	test   %al,%al
  415133:	0f 85 63 04 00 00    	jne    41559c <auth_check2+0x59c>
  415139:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
  41513d:	74 16                	je     415155 <auth_check2+0x155>
	 strncmp( hc->authorization, "Basic ", 6 ) != 0 )
  41513f:	ba 06 00 00 00       	mov    $0x6,%edx
  415144:	be 40 52 42 00       	mov    $0x425240,%esi
  415149:	48 89 ef             	mov    %rbp,%rdi
  41514c:	e8 9f e2 fe ff       	callq  4033f0 <strncmp@plt>
    if ( hc->authorization[0] == '\0' ||
  415151:	85 c0                	test   %eax,%eax
  415153:	74 63                	je     4151b8 <auth_check2+0x1b8>
    send_authenticate( hc, dirname );
  415155:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  41515a:	4c 89 ff             	mov    %r15,%rdi
  41515d:	e8 ae af ff ff       	callq  410110 <send_authenticate>
    return -1;
  415162:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    {
  415167:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  41516c:	4c 39 e0             	cmp    %r12,%rax
  41516f:	0f 85 d7 04 00 00    	jne    41564c <auth_check2+0x64c>
  415175:	c7 83 00 80 ff 7f 00 	movl   $0x0,0x7fff8000(%rbx)
  41517c:	00 00 00 
  41517f:	48 c7 83 14 80 ff 7f 	movq   $0x0,0x7fff8014(%rbx)
  415186:	00 00 00 00 
  41518a:	48 c7 83 58 80 ff 7f 	movq   $0x0,0x7fff8058(%rbx)
  415191:	00 00 00 00 
  415195:	48 c7 83 9c 80 ff 7f 	movq   $0x0,0x7fff809c(%rbx)
  41519c:	00 00 00 00 
    }
  4151a0:	48 81 c4 58 05 00 00 	add    $0x558,%rsp
  4151a7:	89 e8                	mov    %ebp,%eax
  4151a9:	5b                   	pop    %rbx
  4151aa:	5d                   	pop    %rbp
  4151ab:	41 5c                	pop    %r12
  4151ad:	41 5d                	pop    %r13
  4151af:	41 5e                	pop    %r14
  4151b1:	41 5f                	pop    %r15
  4151b3:	c3                   	retq   
  4151b4:	0f 1f 40 00          	nopl   0x0(%rax)
    l = b64_decode(
  4151b8:	4d 8d b5 c0 fb ff ff 	lea    -0x440(%r13),%r14
	&(hc->authorization[6]), (unsigned char*) authinfo,
  4151bf:	48 8d 7d 06          	lea    0x6(%rbp),%rdi
    l = b64_decode(
  4151c3:	4c 89 f6             	mov    %r14,%rsi
  4151c6:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
  4151cb:	e8 f0 69 ff ff       	callq  40bbc0 <b64_decode.constprop.5>
    authinfo[l] = '\0';
  4151d0:	48 98                	cltq   
  4151d2:	49 8d 3c 06          	lea    (%r14,%rax,1),%rdi
  4151d6:	48 89 fa             	mov    %rdi,%rdx
  4151d9:	48 89 f9             	mov    %rdi,%rcx
  4151dc:	48 c1 ea 03          	shr    $0x3,%rdx
  4151e0:	83 e1 07             	and    $0x7,%ecx
  4151e3:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  4151ea:	38 ca                	cmp    %cl,%dl
  4151ec:	7f 08                	jg     4151f6 <auth_check2+0x1f6>
  4151ee:	84 d2                	test   %dl,%dl
  4151f0:	0f 85 b6 03 00 00    	jne    4155ac <auth_check2+0x5ac>
    authpass = strchr( authinfo, ':' );
  4151f6:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  4151fb:	be 3a 00 00 00       	mov    $0x3a,%esi
    authinfo[l] = '\0';
  415200:	41 c6 84 05 c0 fb ff 	movb   $0x0,-0x440(%r13,%rax,1)
  415207:	ff 00 
    authpass = strchr( authinfo, ':' );
  415209:	e8 b2 e1 fe ff       	callq  4033c0 <strchr@plt>
    if ( authpass == (char*) 0 )
  41520e:	48 85 c0             	test   %rax,%rax
  415211:	0f 84 3e ff ff ff    	je     415155 <auth_check2+0x155>
    *authpass++ = '\0';
  415217:	48 89 c2             	mov    %rax,%rdx
  41521a:	48 89 c1             	mov    %rax,%rcx
  41521d:	48 8d 70 01          	lea    0x1(%rax),%rsi
  415221:	48 c1 ea 03          	shr    $0x3,%rdx
  415225:	83 e1 07             	and    $0x7,%ecx
  415228:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
  41522d:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  415234:	38 ca                	cmp    %cl,%dl
  415236:	7f 08                	jg     415240 <auth_check2+0x240>
  415238:	84 d2                	test   %dl,%dl
  41523a:	0f 85 64 03 00 00    	jne    4155a4 <auth_check2+0x5a4>
  415240:	c6 00 00             	movb   $0x0,(%rax)
    colon = strchr( authpass, ':' );
  415243:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  415248:	be 3a 00 00 00       	mov    $0x3a,%esi
  41524d:	e8 6e e1 fe ff       	callq  4033c0 <strchr@plt>
    if ( colon != (char*) 0 )
  415252:	48 85 c0             	test   %rax,%rax
  415255:	74 23                	je     41527a <auth_check2+0x27a>
	*colon = '\0';
  415257:	48 89 c2             	mov    %rax,%rdx
  41525a:	48 89 c1             	mov    %rax,%rcx
  41525d:	48 c1 ea 03          	shr    $0x3,%rdx
  415261:	83 e1 07             	and    $0x7,%ecx
  415264:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41526b:	38 ca                	cmp    %cl,%dl
  41526d:	7f 08                	jg     415277 <auth_check2+0x277>
  41526f:	84 d2                	test   %dl,%dl
  415271:	0f 85 f7 03 00 00    	jne    41566e <auth_check2+0x66e>
  415277:	c6 00 00             	movb   $0x0,(%rax)
    if ( maxprevauthpath != 0 &&
  41527a:	48 83 3d fe d1 22 00 	cmpq   $0x0,0x22d1fe(%rip)        # 642480 <maxprevauthpath.6174>
  415281:	00 
  415282:	48 8b 2d 77 d2 22 00 	mov    0x22d277(%rip),%rbp        # 642500 <authpath.6163>
  415289:	74 42                	je     4152cd <auth_check2+0x2cd>
	 strcmp( authpath, prevauthpath ) == 0 &&
  41528b:	48 8b 35 ae d1 22 00 	mov    0x22d1ae(%rip),%rsi        # 642440 <prevauthpath.6173>
  415292:	48 89 ef             	mov    %rbp,%rdi
  415295:	e8 a6 db fe ff       	callq  402e40 <strcmp@plt>
    if ( maxprevauthpath != 0 &&
  41529a:	85 c0                	test   %eax,%eax
  41529c:	75 2f                	jne    4152cd <auth_check2+0x2cd>
	 sb.st_mtime == prevmtime &&
  41529e:	49 8d bd 58 fb ff ff 	lea    -0x4a8(%r13),%rdi
  4152a5:	48 89 f8             	mov    %rdi,%rax
  4152a8:	48 c1 e8 03          	shr    $0x3,%rax
  4152ac:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4152b3:	0f 85 ca 03 00 00    	jne    415683 <auth_check2+0x683>
	 strcmp( authpath, prevauthpath ) == 0 &&
  4152b9:	48 8b 05 40 d1 22 00 	mov    0x22d140(%rip),%rax        # 642400 <prevmtime.6175>
  4152c0:	49 39 85 58 fb ff ff 	cmp    %rax,-0x4a8(%r13)
  4152c7:	0f 84 33 02 00 00    	je     415500 <auth_check2+0x500>
    fp = fopen( authpath, "r" );
  4152cd:	48 89 ef             	mov    %rbp,%rdi
  4152d0:	be e0 37 42 00       	mov    $0x4237e0,%esi
  4152d5:	49 8d ad e0 fd ff ff 	lea    -0x220(%r13),%rbp
  4152dc:	e8 1f dc fe ff       	callq  402f00 <fopen@plt>
  4152e1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    if ( fp == (FILE*) 0 )
  4152e6:	48 85 c0             	test   %rax,%rax
  4152e9:	0f 84 c9 02 00 00    	je     4155b8 <auth_check2+0x5b8>
  4152ef:	90                   	nop
    while ( fgets( line, sizeof(line), fp ) != (char*) 0 )
  4152f0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  4152f5:	be f4 01 00 00       	mov    $0x1f4,%esi
  4152fa:	48 89 ef             	mov    %rbp,%rdi
  4152fd:	e8 9e df fe ff       	callq  4032a0 <fgets@plt>
  415302:	48 85 c0             	test   %rax,%rax
  415305:	0f 84 e5 01 00 00    	je     4154f0 <auth_check2+0x4f0>
	l = strlen( line );
  41530b:	48 89 ef             	mov    %rbp,%rdi
  41530e:	e8 6d d9 fe ff       	callq  402c80 <strlen@plt>
	if ( line[l - 1] == '\n' )
  415313:	83 e8 01             	sub    $0x1,%eax
  415316:	48 98                	cltq   
  415318:	48 8d 7c 05 00       	lea    0x0(%rbp,%rax,1),%rdi
  41531d:	48 89 fa             	mov    %rdi,%rdx
  415320:	48 89 f9             	mov    %rdi,%rcx
  415323:	48 c1 ea 03          	shr    $0x3,%rdx
  415327:	83 e1 07             	and    $0x7,%ecx
  41532a:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  415331:	38 ca                	cmp    %cl,%dl
  415333:	7f 08                	jg     41533d <auth_check2+0x33d>
  415335:	84 d2                	test   %dl,%dl
  415337:	0f 85 e7 02 00 00    	jne    415624 <auth_check2+0x624>
  41533d:	41 80 bc 05 e0 fd ff 	cmpb   $0xa,-0x220(%r13,%rax,1)
  415344:	ff 0a 
  415346:	75 09                	jne    415351 <auth_check2+0x351>
	    line[l - 1] = '\0';
  415348:	41 c6 84 05 e0 fd ff 	movb   $0x0,-0x220(%r13,%rax,1)
  41534f:	ff 00 
	cryp = strchr( line, ':' );
  415351:	be 3a 00 00 00       	mov    $0x3a,%esi
  415356:	48 89 ef             	mov    %rbp,%rdi
  415359:	e8 62 e0 fe ff       	callq  4033c0 <strchr@plt>
  41535e:	49 89 c6             	mov    %rax,%r14
	if ( cryp == (char*) 0 )
  415361:	48 85 c0             	test   %rax,%rax
  415364:	74 8a                	je     4152f0 <auth_check2+0x2f0>
	*cryp++ = '\0';
  415366:	48 c1 e8 03          	shr    $0x3,%rax
  41536a:	4c 89 f1             	mov    %r14,%rcx
  41536d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  415374:	83 e1 07             	and    $0x7,%ecx
  415377:	38 c8                	cmp    %cl,%al
  415379:	7f 08                	jg     415383 <auth_check2+0x383>
  41537b:	84 c0                	test   %al,%al
  41537d:	0f 85 a6 02 00 00    	jne    415629 <auth_check2+0x629>
  415383:	41 c6 06 00          	movb   $0x0,(%r14)
	if ( strcmp( line, authinfo ) == 0 )
  415387:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
  41538c:	48 89 ef             	mov    %rbp,%rdi
  41538f:	e8 ac da fe ff       	callq  402e40 <strcmp@plt>
  415394:	85 c0                	test   %eax,%eax
  415396:	0f 85 54 ff ff ff    	jne    4152f0 <auth_check2+0x2f0>
	    (void) fclose( fp );
  41539c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
	*cryp++ = '\0';
  4153a1:	49 83 c6 01          	add    $0x1,%r14
  4153a5:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
	    (void) fclose( fp );
  4153aa:	e8 61 df fe ff       	callq  403310 <fclose@plt>
	    crypt_result = crypt( authpass, cryp );
  4153af:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  4153b4:	4c 89 f6             	mov    %r14,%rsi
  4153b7:	e8 14 dd fe ff       	callq  4030d0 <crypt@plt>
	    if ( ! crypt_result )
  4153bc:	48 85 c0             	test   %rax,%rax
  4153bf:	0f 84 9d fd ff ff    	je     415162 <auth_check2+0x162>
	    if ( strcmp( crypt_result, cryp ) == 0 )
  4153c5:	4c 89 f6             	mov    %r14,%rsi
  4153c8:	48 89 c7             	mov    %rax,%rdi
  4153cb:	e8 70 da fe ff       	callq  402e40 <strcmp@plt>
  4153d0:	85 c0                	test   %eax,%eax
  4153d2:	0f 85 7d fd ff ff    	jne    415155 <auth_check2+0x155>
		httpd_realloc_str(
  4153d8:	48 89 ef             	mov    %rbp,%rdi
  4153db:	4d 8d b7 68 01 00 00 	lea    0x168(%r15),%r14
  4153e2:	e8 99 d8 fe ff       	callq  402c80 <strlen@plt>
  4153e7:	49 8d b7 c8 01 00 00 	lea    0x1c8(%r15),%rsi
  4153ee:	4c 89 f7             	mov    %r14,%rdi
  4153f1:	48 89 c2             	mov    %rax,%rdx
  4153f4:	e8 37 7f ff ff       	callq  40d330 <httpd_realloc_str>
		(void) strcpy( hc->remoteuser, line );
  4153f9:	4c 89 f0             	mov    %r14,%rax
  4153fc:	48 c1 e8 03          	shr    $0x3,%rax
  415400:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415407:	0f 85 6e 02 00 00    	jne    41567b <auth_check2+0x67b>
  41540d:	49 8b bf 68 01 00 00 	mov    0x168(%r15),%rdi
  415414:	48 89 ee             	mov    %rbp,%rsi
  415417:	e8 f4 da fe ff       	callq  402f10 <strcpy@plt>
		httpd_realloc_str(
  41541c:	48 8b 3d dd d0 22 00 	mov    0x22d0dd(%rip),%rdi        # 642500 <authpath.6163>
  415423:	e8 58 d8 fe ff       	callq  402c80 <strlen@plt>
  415428:	be 80 24 64 00       	mov    $0x642480,%esi
  41542d:	bf 40 24 64 00       	mov    $0x642440,%edi
  415432:	48 89 c2             	mov    %rax,%rdx
  415435:	e8 f6 7e ff ff       	callq  40d330 <httpd_realloc_str>
		(void) strcpy( prevauthpath, authpath );
  41543a:	48 8b 3d ff cf 22 00 	mov    0x22cfff(%rip),%rdi        # 642440 <prevauthpath.6173>
  415441:	48 8b 35 b8 d0 22 00 	mov    0x22d0b8(%rip),%rsi        # 642500 <authpath.6163>
  415448:	e8 c3 da fe ff       	callq  402f10 <strcpy@plt>
		prevmtime = sb.st_mtime;
  41544d:	49 8d bd 58 fb ff ff 	lea    -0x4a8(%r13),%rdi
  415454:	48 89 f8             	mov    %rdi,%rax
  415457:	48 c1 e8 03          	shr    $0x3,%rax
  41545b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415462:	0f 85 0e 02 00 00    	jne    415676 <auth_check2+0x676>
		httpd_realloc_str(
  415468:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
		prevmtime = sb.st_mtime;
  41546d:	49 8b 85 58 fb ff ff 	mov    -0x4a8(%r13),%rax
		return 1;
  415474:	bd 01 00 00 00       	mov    $0x1,%ebp
		httpd_realloc_str(
  415479:	4c 89 ff             	mov    %r15,%rdi
		prevmtime = sb.st_mtime;
  41547c:	48 89 05 7d cf 22 00 	mov    %rax,0x22cf7d(%rip)        # 642400 <prevmtime.6175>
		httpd_realloc_str(
  415483:	e8 f8 d7 fe ff       	callq  402c80 <strlen@plt>
  415488:	be 40 23 64 00       	mov    $0x642340,%esi
  41548d:	bf c0 23 64 00       	mov    $0x6423c0,%edi
  415492:	48 89 c2             	mov    %rax,%rdx
  415495:	e8 96 7e ff ff       	callq  40d330 <httpd_realloc_str>
		(void) strcpy( prevuser, authinfo );
  41549a:	48 8b 3d 1f cf 22 00 	mov    0x22cf1f(%rip),%rdi        # 6423c0 <prevuser.6176>
  4154a1:	4c 89 fe             	mov    %r15,%rsi
  4154a4:	e8 67 da fe ff       	callq  402f10 <strcpy@plt>
		httpd_realloc_str( &prevcryp, &maxprevcryp, strlen( cryp ) );
  4154a9:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
  4154ae:	4c 89 ff             	mov    %r15,%rdi
  4154b1:	e8 ca d7 fe ff       	callq  402c80 <strlen@plt>
  4154b6:	be 00 23 64 00       	mov    $0x642300,%esi
  4154bb:	bf 80 23 64 00       	mov    $0x642380,%edi
  4154c0:	48 89 c2             	mov    %rax,%rdx
  4154c3:	e8 68 7e ff ff       	callq  40d330 <httpd_realloc_str>
		(void) strcpy( prevcryp, cryp );
  4154c8:	48 8b 3d b1 ce 22 00 	mov    0x22ceb1(%rip),%rdi        # 642380 <prevcryp.6178>
  4154cf:	4c 89 fe             	mov    %r15,%rsi
  4154d2:	e8 39 da fe ff       	callq  402f10 <strcpy@plt>
		return 1;
  4154d7:	e9 8b fc ff ff       	jmpq   415167 <auth_check2+0x167>
  4154dc:	0f 1f 40 00          	nopl   0x0(%rax)
	return 0;
  4154e0:	31 ed                	xor    %ebp,%ebp
  4154e2:	e9 80 fc ff ff       	jmpq   415167 <auth_check2+0x167>
  4154e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4154ee:	00 00 
    (void) fclose( fp );
  4154f0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  4154f5:	e8 16 de fe ff       	callq  403310 <fclose@plt>
  4154fa:	e9 56 fc ff ff       	jmpq   415155 <auth_check2+0x155>
  4154ff:	90                   	nop
	 strcmp( authinfo, prevuser ) == 0 )
  415500:	48 8b 35 b9 ce 22 00 	mov    0x22ceb9(%rip),%rsi        # 6423c0 <prevuser.6176>
  415507:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41550c:	e8 2f d9 fe ff       	callq  402e40 <strcmp@plt>
	 sb.st_mtime == prevmtime &&
  415511:	85 c0                	test   %eax,%eax
  415513:	0f 85 b4 fd ff ff    	jne    4152cd <auth_check2+0x2cd>
	crypt_result = crypt( authpass, prevcryp );
  415519:	48 8b 35 60 ce 22 00 	mov    0x22ce60(%rip),%rsi        # 642380 <prevcryp.6178>
  415520:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  415525:	e8 a6 db fe ff       	callq  4030d0 <crypt@plt>
	if ( ! crypt_result )
  41552a:	48 85 c0             	test   %rax,%rax
  41552d:	0f 84 2f fc ff ff    	je     415162 <auth_check2+0x162>
	if ( strcmp( crypt_result, prevcryp ) == 0 )
  415533:	48 8b 35 46 ce 22 00 	mov    0x22ce46(%rip),%rsi        # 642380 <prevcryp.6178>
  41553a:	48 89 c7             	mov    %rax,%rdi
  41553d:	e8 fe d8 fe ff       	callq  402e40 <strcmp@plt>
  415542:	85 c0                	test   %eax,%eax
  415544:	0f 85 0b fc ff ff    	jne    415155 <auth_check2+0x155>
	    httpd_realloc_str(
  41554a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41554f:	49 8d af 68 01 00 00 	lea    0x168(%r15),%rbp
  415556:	e8 25 d7 fe ff       	callq  402c80 <strlen@plt>
  41555b:	49 8d b7 c8 01 00 00 	lea    0x1c8(%r15),%rsi
  415562:	48 89 ef             	mov    %rbp,%rdi
  415565:	48 89 c2             	mov    %rax,%rdx
  415568:	e8 c3 7d ff ff       	callq  40d330 <httpd_realloc_str>
	    (void) strcpy( hc->remoteuser, authinfo );
  41556d:	48 89 e8             	mov    %rbp,%rax
  415570:	48 c1 e8 03          	shr    $0x3,%rax
  415574:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41557b:	0f 85 07 01 00 00    	jne    415688 <auth_check2+0x688>
  415581:	49 8b bf 68 01 00 00 	mov    0x168(%r15),%rdi
  415588:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
	    return 1;
  41558d:	bd 01 00 00 00       	mov    $0x1,%ebp
	    (void) strcpy( hc->remoteuser, authinfo );
  415592:	e8 79 d9 fe ff       	callq  402f10 <strcpy@plt>
	    return 1;
  415597:	e9 cb fb ff ff       	jmpq   415167 <auth_check2+0x167>
    if ( hc->authorization[0] == '\0' ||
  41559c:	48 89 ef             	mov    %rbp,%rdi
  41559f:	e8 6c db fe ff       	callq  403110 <__asan_report_load1@plt>
    *authpass++ = '\0';
  4155a4:	48 89 c7             	mov    %rax,%rdi
  4155a7:	e8 84 db fe ff       	callq  403130 <__asan_report_store1@plt>
    authinfo[l] = '\0';
  4155ac:	e8 7f db fe ff       	callq  403130 <__asan_report_store1@plt>
  4155b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	syslog(
  4155b8:	48 8b 2d 41 cf 22 00 	mov    0x22cf41(%rip),%rbp        # 642500 <authpath.6163>
  4155bf:	49 8d 7f 10          	lea    0x10(%r15),%rdi
  4155c3:	e8 38 c3 ff ff       	callq  411900 <httpd_ntoa>
  4155c8:	bf 03 00 00 00       	mov    $0x3,%edi
  4155cd:	be 80 52 42 00       	mov    $0x425280,%esi
  4155d2:	48 89 c2             	mov    %rax,%rdx
  4155d5:	48 89 e9             	mov    %rbp,%rcx
  4155d8:	31 c0                	xor    %eax,%eax
  4155da:	e8 61 d6 fe ff       	callq  402c40 <syslog@plt>
	httpd_send_err(
  4155df:	49 8d bf d0 00 00 00 	lea    0xd0(%r15),%rdi
  4155e6:	48 89 f8             	mov    %rdi,%rax
  4155e9:	48 c1 e8 03          	shr    $0x3,%rax
  4155ed:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4155f4:	75 73                	jne    415669 <auth_check2+0x669>
  4155f6:	4d 8b 8f d0 00 00 00 	mov    0xd0(%r15),%r9
  4155fd:	41 b8 e0 52 42 00    	mov    $0x4252e0,%r8d
  415603:	b9 60 38 42 00       	mov    $0x423860,%ecx
  415608:	4c 89 ff             	mov    %r15,%rdi
  41560b:	ba 20 4f 42 00       	mov    $0x424f20,%edx
  415610:	be 93 01 00 00       	mov    $0x193,%esi
	return -1;
  415615:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
	httpd_send_err(
  41561a:	e8 a1 a8 ff ff       	callq  40fec0 <httpd_send_err>
	return -1;
  41561f:	e9 43 fb ff ff       	jmpq   415167 <auth_check2+0x167>
	if ( line[l - 1] == '\n' )
  415624:	e8 e7 da fe ff       	callq  403110 <__asan_report_load1@plt>
	*cryp++ = '\0';
  415629:	4c 89 f7             	mov    %r14,%rdi
  41562c:	e8 ff da fe ff       	callq  403130 <__asan_report_store1@plt>
    {
  415631:	bf 20 05 00 00       	mov    $0x520,%edi
  415636:	e8 95 db fe ff       	callq  4031d0 <__asan_stack_malloc_5@plt>
  41563b:	48 85 c0             	test   %rax,%rax
  41563e:	4c 0f 45 e0          	cmovne %rax,%r12
  415642:	e9 e5 f9 ff ff       	jmpq   41502c <auth_check2+0x2c>
    if ( hc->authorization[0] == '\0' ||
  415647:	e8 04 dc fe ff       	callq  403250 <__asan_report_load8@plt>
    {
  41564c:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
  415653:	45 
  415654:	48 89 c2             	mov    %rax,%rdx
  415657:	be 20 05 00 00       	mov    $0x520,%esi
  41565c:	4c 89 e7             	mov    %r12,%rdi
  41565f:	e8 4c dc fe ff       	callq  4032b0 <__asan_stack_free_5@plt>
  415664:	e9 37 fb ff ff       	jmpq   4151a0 <auth_check2+0x1a0>
	httpd_send_err(
  415669:	e8 e2 db fe ff       	callq  403250 <__asan_report_load8@plt>
	*colon = '\0';
  41566e:	48 89 c7             	mov    %rax,%rdi
  415671:	e8 ba da fe ff       	callq  403130 <__asan_report_store1@plt>
		prevmtime = sb.st_mtime;
  415676:	e8 d5 db fe ff       	callq  403250 <__asan_report_load8@plt>
		(void) strcpy( hc->remoteuser, line );
  41567b:	4c 89 f7             	mov    %r14,%rdi
  41567e:	e8 cd db fe ff       	callq  403250 <__asan_report_load8@plt>
	 sb.st_mtime == prevmtime &&
  415683:	e8 c8 db fe ff       	callq  403250 <__asan_report_load8@plt>
	    (void) strcpy( hc->remoteuser, authinfo );
  415688:	48 89 ef             	mov    %rbp,%rdi
  41568b:	e8 c0 db fe ff       	callq  403250 <__asan_report_load8@plt>

0000000000415690 <auth_check>:
    {
  415690:	55                   	push   %rbp
  415691:	53                   	push   %rbx
  415692:	48 89 fb             	mov    %rdi,%rbx
    if ( hc->hs->global_passwd )
  415695:	48 83 c7 08          	add    $0x8,%rdi
  415699:	48 89 f8             	mov    %rdi,%rax
  41569c:	48 c1 e8 03          	shr    $0x3,%rax
    {
  4156a0:	48 83 ec 08          	sub    $0x8,%rsp
    if ( hc->hs->global_passwd )
  4156a4:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4156ab:	0f 85 e0 00 00 00    	jne    415791 <auth_check+0x101>
  4156b1:	48 8b 43 08          	mov    0x8(%rbx),%rax
  4156b5:	48 89 f5             	mov    %rsi,%rbp
  4156b8:	48 8d 78 68          	lea    0x68(%rax),%rdi
  4156bc:	48 89 fa             	mov    %rdi,%rdx
  4156bf:	48 c1 ea 03          	shr    $0x3,%rdx
  4156c3:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  4156ca:	84 d2                	test   %dl,%dl
  4156cc:	74 09                	je     4156d7 <auth_check+0x47>
  4156ce:	80 fa 03             	cmp    $0x3,%dl
  4156d1:	0f 8e a8 00 00 00    	jle    41577f <auth_check+0xef>
  4156d7:	8b 50 68             	mov    0x68(%rax),%edx
  4156da:	85 d2                	test   %edx,%edx
  4156dc:	0f 84 80 00 00 00    	je     415762 <auth_check+0xd2>
	if ( hc->hs->vhost && hc->hostdir[0] != '\0' )
  4156e2:	48 8d 78 64          	lea    0x64(%rax),%rdi
  4156e6:	48 89 fa             	mov    %rdi,%rdx
  4156e9:	48 c1 ea 03          	shr    $0x3,%rdx
  4156ed:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  4156f4:	48 89 fa             	mov    %rdi,%rdx
  4156f7:	83 e2 07             	and    $0x7,%edx
  4156fa:	83 c2 03             	add    $0x3,%edx
  4156fd:	38 ca                	cmp    %cl,%dl
  4156ff:	7c 04                	jl     415705 <auth_check+0x75>
  415701:	84 c9                	test   %cl,%cl
  415703:	75 7f                	jne    415784 <auth_check+0xf4>
  415705:	8b 40 64             	mov    0x64(%rax),%eax
  415708:	85 c0                	test   %eax,%eax
  41570a:	74 3f                	je     41574b <auth_check+0xbb>
  41570c:	48 8d bb 58 01 00 00 	lea    0x158(%rbx),%rdi
  415713:	48 89 f8             	mov    %rdi,%rax
  415716:	48 c1 e8 03          	shr    $0x3,%rax
  41571a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415721:	75 73                	jne    415796 <auth_check+0x106>
  415723:	48 8b b3 58 01 00 00 	mov    0x158(%rbx),%rsi
  41572a:	48 89 f0             	mov    %rsi,%rax
  41572d:	48 89 f2             	mov    %rsi,%rdx
  415730:	48 c1 e8 03          	shr    $0x3,%rax
  415734:	83 e2 07             	and    $0x7,%edx
  415737:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41573e:	38 d0                	cmp    %dl,%al
  415740:	7f 04                	jg     415746 <auth_check+0xb6>
  415742:	84 c0                	test   %al,%al
  415744:	75 43                	jne    415789 <auth_check+0xf9>
  415746:	80 3e 00             	cmpb   $0x0,(%rsi)
  415749:	75 05                	jne    415750 <auth_check+0xc0>
	    topdir = ".";
  41574b:	be c0 3a 42 00       	mov    $0x423ac0,%esi
	switch ( auth_check2( hc, topdir ) )
  415750:	48 89 df             	mov    %rbx,%rdi
  415753:	e8 a8 f8 ff ff       	callq  415000 <auth_check2>
  415758:	83 f8 ff             	cmp    $0xffffffff,%eax
  41575b:	74 1b                	je     415778 <auth_check+0xe8>
  41575d:	83 f8 01             	cmp    $0x1,%eax
  415760:	74 16                	je     415778 <auth_check+0xe8>
    }
  415762:	48 83 c4 08          	add    $0x8,%rsp
    return auth_check2( hc, dirname );
  415766:	48 89 ee             	mov    %rbp,%rsi
  415769:	48 89 df             	mov    %rbx,%rdi
    }
  41576c:	5b                   	pop    %rbx
  41576d:	5d                   	pop    %rbp
    return auth_check2( hc, dirname );
  41576e:	e9 8d f8 ff ff       	jmpq   415000 <auth_check2>
  415773:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    }
  415778:	48 83 c4 08          	add    $0x8,%rsp
  41577c:	5b                   	pop    %rbx
  41577d:	5d                   	pop    %rbp
  41577e:	c3                   	retq   
    if ( hc->hs->global_passwd )
  41577f:	e8 4c d6 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( hc->hs->vhost && hc->hostdir[0] != '\0' )
  415784:	e8 47 d6 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  415789:	48 89 f7             	mov    %rsi,%rdi
  41578c:	e8 7f d9 fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->hs->global_passwd )
  415791:	e8 ba da fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( hc->hs->vhost && hc->hostdir[0] != '\0' )
  415796:	e8 b5 da fe ff       	callq  403250 <__asan_report_load8@plt>
  41579b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004157a0 <check_referer>:
    {
  4157a0:	41 57                	push   %r15
  4157a2:	41 56                	push   %r14
  4157a4:	41 55                	push   %r13
    if ( hc->hs->url_pattern == (char*) 0 )
  4157a6:	4c 8d 6f 08          	lea    0x8(%rdi),%r13
    {
  4157aa:	41 54                	push   %r12
    if ( hc->hs->url_pattern == (char*) 0 )
  4157ac:	4d 89 ec             	mov    %r13,%r12
    {
  4157af:	55                   	push   %rbp
    if ( hc->hs->url_pattern == (char*) 0 )
  4157b0:	49 c1 ec 03          	shr    $0x3,%r12
    {
  4157b4:	53                   	push   %rbx
  4157b5:	48 83 ec 18          	sub    $0x18,%rsp
    if ( hc->hs->url_pattern == (char*) 0 )
  4157b9:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  4157c0:	7f 00 
  4157c2:	0f 85 ae 01 00 00    	jne    415976 <check_referer+0x1d6>
  4157c8:	48 8b 47 08          	mov    0x8(%rdi),%rax
  4157cc:	48 89 fb             	mov    %rdi,%rbx
  4157cf:	48 8d 78 70          	lea    0x70(%rax),%rdi
  4157d3:	48 89 fa             	mov    %rdi,%rdx
  4157d6:	48 c1 ea 03          	shr    $0x3,%rdx
  4157da:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4157e1:	0f 85 8a 01 00 00    	jne    415971 <check_referer+0x1d1>
  4157e7:	48 83 78 70 00       	cmpq   $0x0,0x70(%rax)
  4157ec:	0f 84 3e 01 00 00    	je     415930 <check_referer+0x190>
    r = really_check_referer( hc );
  4157f2:	48 89 df             	mov    %rbx,%rdi
  4157f5:	e8 c6 9a ff ff       	callq  40f2c0 <really_check_referer>
  4157fa:	89 c5                	mov    %eax,%ebp
    if ( ! r )
  4157fc:	85 c0                	test   %eax,%eax
  4157fe:	0f 85 11 01 00 00    	jne    415915 <check_referer+0x175>
	if ( hc->hs->vhost && hc->hostname != (char*) 0 )
  415804:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  41580b:	7f 00 
  41580d:	0f 85 73 01 00 00    	jne    415986 <check_referer+0x1e6>
  415813:	48 8b 43 08          	mov    0x8(%rbx),%rax
  415817:	48 8d 78 64          	lea    0x64(%rax),%rdi
  41581b:	48 89 fa             	mov    %rdi,%rdx
  41581e:	48 c1 ea 03          	shr    $0x3,%rdx
  415822:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  415829:	48 89 fa             	mov    %rdi,%rdx
  41582c:	83 e2 07             	and    $0x7,%edx
  41582f:	83 c2 03             	add    $0x3,%edx
  415832:	38 ca                	cmp    %cl,%dl
  415834:	7c 08                	jl     41583e <check_referer+0x9e>
  415836:	84 c9                	test   %cl,%cl
  415838:	0f 85 2e 01 00 00    	jne    41596c <check_referer+0x1cc>
  41583e:	8b 50 64             	mov    0x64(%rax),%edx
  415841:	85 d2                	test   %edx,%edx
  415843:	0f 85 f7 00 00 00    	jne    415940 <check_referer+0x1a0>
	    cp = hc->hs->server_hostname;
  415849:	48 8d 78 08          	lea    0x8(%rax),%rdi
  41584d:	48 89 fa             	mov    %rdi,%rdx
  415850:	48 c1 ea 03          	shr    $0x3,%rdx
  415854:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41585b:	0f 85 3f 01 00 00    	jne    4159a0 <check_referer+0x200>
  415861:	4c 8b 60 08          	mov    0x8(%rax),%r12
	    cp = "";
  415865:	b8 60 38 42 00       	mov    $0x423860,%eax
  41586a:	4d 85 e4             	test   %r12,%r12
  41586d:	4c 0f 44 e0          	cmove  %rax,%r12
	syslog(
  415871:	48 8d bb 10 01 00 00 	lea    0x110(%rbx),%rdi
  415878:	48 89 f8             	mov    %rdi,%rax
  41587b:	48 c1 e8 03          	shr    $0x3,%rax
  41587f:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415886:	0f 85 02 01 00 00    	jne    41598e <check_referer+0x1ee>
  41588c:	4c 8d b3 d0 00 00 00 	lea    0xd0(%rbx),%r14
  415893:	4c 8b 8b 10 01 00 00 	mov    0x110(%rbx),%r9
  41589a:	4d 89 f5             	mov    %r14,%r13
  41589d:	49 c1 ed 03          	shr    $0x3,%r13
  4158a1:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  4158a8:	00 
  4158a9:	0f 85 e4 00 00 00    	jne    415993 <check_referer+0x1f3>
  4158af:	4c 8b bb d0 00 00 00 	mov    0xd0(%rbx),%r15
  4158b6:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
  4158ba:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
  4158bf:	e8 3c c0 ff ff       	callq  411900 <httpd_ntoa>
  4158c4:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
  4158c9:	4c 89 e1             	mov    %r12,%rcx
  4158cc:	be 80 53 42 00       	mov    $0x425380,%esi
  4158d1:	48 89 c2             	mov    %rax,%rdx
  4158d4:	4d 89 f8             	mov    %r15,%r8
  4158d7:	31 c0                	xor    %eax,%eax
  4158d9:	bf 06 00 00 00       	mov    $0x6,%edi
  4158de:	e8 5d d3 fe ff       	callq  402c40 <syslog@plt>
	httpd_send_err(
  4158e3:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  4158ea:	00 
  4158eb:	0f 85 8d 00 00 00    	jne    41597e <check_referer+0x1de>
  4158f1:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  4158f8:	41 b8 e0 53 42 00    	mov    $0x4253e0,%r8d
  4158fe:	b9 60 38 42 00       	mov    $0x423860,%ecx
  415903:	48 89 df             	mov    %rbx,%rdi
  415906:	ba 20 4f 42 00       	mov    $0x424f20,%edx
  41590b:	be 93 01 00 00       	mov    $0x193,%esi
  415910:	e8 ab a5 ff ff       	callq  40fec0 <httpd_send_err>
    }
  415915:	48 83 c4 18          	add    $0x18,%rsp
  415919:	89 e8                	mov    %ebp,%eax
  41591b:	5b                   	pop    %rbx
  41591c:	5d                   	pop    %rbp
  41591d:	41 5c                	pop    %r12
  41591f:	41 5d                	pop    %r13
  415921:	41 5e                	pop    %r14
  415923:	41 5f                	pop    %r15
  415925:	c3                   	retq   
  415926:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41592d:	00 00 00 
	return 1;
  415930:	bd 01 00 00 00       	mov    $0x1,%ebp
  415935:	eb de                	jmp    415915 <check_referer+0x175>
  415937:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41593e:	00 00 
	if ( hc->hs->vhost && hc->hostname != (char*) 0 )
  415940:	48 8d bb 00 02 00 00 	lea    0x200(%rbx),%rdi
  415947:	48 89 fa             	mov    %rdi,%rdx
  41594a:	48 c1 ea 03          	shr    $0x3,%rdx
  41594e:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  415955:	75 44                	jne    41599b <check_referer+0x1fb>
  415957:	4c 8b a3 00 02 00 00 	mov    0x200(%rbx),%r12
  41595e:	4d 85 e4             	test   %r12,%r12
  415961:	0f 85 0a ff ff ff    	jne    415871 <check_referer+0xd1>
  415967:	e9 dd fe ff ff       	jmpq   415849 <check_referer+0xa9>
  41596c:	e8 5f d4 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( hc->hs->url_pattern == (char*) 0 )
  415971:	e8 da d8 fe ff       	callq  403250 <__asan_report_load8@plt>
  415976:	4c 89 ef             	mov    %r13,%rdi
  415979:	e8 d2 d8 fe ff       	callq  403250 <__asan_report_load8@plt>
	httpd_send_err(
  41597e:	4c 89 f7             	mov    %r14,%rdi
  415981:	e8 ca d8 fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( hc->hs->vhost && hc->hostname != (char*) 0 )
  415986:	4c 89 ef             	mov    %r13,%rdi
  415989:	e8 c2 d8 fe ff       	callq  403250 <__asan_report_load8@plt>
	syslog(
  41598e:	e8 bd d8 fe ff       	callq  403250 <__asan_report_load8@plt>
  415993:	4c 89 f7             	mov    %r14,%rdi
  415996:	e8 b5 d8 fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( hc->hs->vhost && hc->hostname != (char*) 0 )
  41599b:	e8 b0 d8 fe ff       	callq  403250 <__asan_report_load8@plt>
	    cp = hc->hs->server_hostname;
  4159a0:	e8 ab d8 fe ff       	callq  403250 <__asan_report_load8@plt>
  4159a5:	90                   	nop
  4159a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4159ad:	00 00 00 

00000000004159b0 <make_envp>:
    {
  4159b0:	41 57                	push   %r15
  4159b2:	49 89 ff             	mov    %rdi,%r15
  4159b5:	41 56                	push   %r14
  4159b7:	41 55                	push   %r13
  4159b9:	41 54                	push   %r12
  4159bb:	55                   	push   %rbp
  4159bc:	53                   	push   %rbx
  4159bd:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
  4159c4:	8b 0d 36 b9 22 00    	mov    0x22b936(%rip),%ecx        # 641300 <__asan_option_detect_stack_use_after_return>
  4159ca:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
  4159cf:	85 c9                	test   %ecx,%ecx
  4159d1:	0f 85 00 0d 00 00    	jne    4166d7 <make_envp+0xd27>
  4159d7:	49 89 dd             	mov    %rbx,%r13
  4159da:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    envp[envn++] = build_env( "PATH=%s", CGI_PATH );
  4159e1:	be 60 54 42 00       	mov    $0x425460,%esi
  4159e6:	bf c0 54 42 00       	mov    $0x4254c0,%edi
    {
  4159eb:	49 c1 ed 03          	shr    $0x3,%r13
  4159ef:	48 c7 43 08 6d 21 42 	movq   $0x42216d,0x8(%rbx)
  4159f6:	00 
  4159f7:	4c 8d a3 40 01 00 00 	lea    0x140(%rbx),%r12
  4159fe:	48 c7 43 10 b0 59 41 	movq   $0x4159b0,0x10(%rbx)
  415a05:	00 
  415a06:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
  415a0d:	f1 f1 f1 f1 
  415a11:	41 c7 85 24 80 ff 7f 	movl   $0xf3f3f3f3,0x7fff8024(%r13)
  415a18:	f3 f3 f3 f3 
    envp[envn++] = build_env( "PATH=%s", CGI_PATH );
  415a1c:	e8 9f 9d ff ff       	callq  40f7c0 <build_env>
    envp[envn++] = build_env( "SERVER_SOFTWARE=%s", SERVER_SOFTWARE );
  415a21:	be c0 44 42 00       	mov    $0x4244c0,%esi
  415a26:	bf 00 55 42 00       	mov    $0x425500,%edi
    envp[envn++] = build_env( "PATH=%s", CGI_PATH );
  415a2b:	48 89 05 0e c6 22 00 	mov    %rax,0x22c60e(%rip)        # 642040 <envp.6544>
    envp[envn++] = build_env( "SERVER_SOFTWARE=%s", SERVER_SOFTWARE );
  415a32:	e8 89 9d ff ff       	callq  40f7c0 <build_env>
  415a37:	48 89 05 0a c6 22 00 	mov    %rax,0x22c60a(%rip)        # 642048 <envp.6544+0x8>
    if ( hc->hs->vhost && hc->hostname != (char*) 0 )
  415a3e:	49 8d 47 08          	lea    0x8(%r15),%rax
  415a42:	48 89 04 24          	mov    %rax,(%rsp)
  415a46:	48 c1 e8 03          	shr    $0x3,%rax
  415a4a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415a51:	0f 85 06 0d 00 00    	jne    41675d <make_envp+0xdad>
  415a57:	49 8b 47 08          	mov    0x8(%r15),%rax
  415a5b:	48 8d 78 64          	lea    0x64(%rax),%rdi
  415a5f:	48 89 fa             	mov    %rdi,%rdx
  415a62:	48 c1 ea 03          	shr    $0x3,%rdx
  415a66:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  415a6d:	48 89 fa             	mov    %rdi,%rdx
  415a70:	83 e2 07             	and    $0x7,%edx
  415a73:	83 c2 03             	add    $0x3,%edx
  415a76:	38 ca                	cmp    %cl,%dl
  415a78:	7c 08                	jl     415a82 <make_envp+0xd2>
  415a7a:	84 c9                	test   %cl,%cl
  415a7c:	0f 85 da 0b 00 00    	jne    41665c <make_envp+0xcac>
  415a82:	8b 50 64             	mov    0x64(%rax),%edx
  415a85:	85 d2                	test   %edx,%edx
  415a87:	0f 84 63 07 00 00    	je     4161f0 <make_envp+0x840>
  415a8d:	49 8d bf 00 02 00 00 	lea    0x200(%r15),%rdi
  415a94:	48 89 fa             	mov    %rdi,%rdx
  415a97:	48 c1 ea 03          	shr    $0x3,%rdx
  415a9b:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  415aa2:	0f 85 1b 0c 00 00    	jne    4166c3 <make_envp+0xd13>
  415aa8:	49 8b b7 00 02 00 00 	mov    0x200(%r15),%rsi
  415aaf:	48 85 f6             	test   %rsi,%rsi
  415ab2:	0f 84 38 07 00 00    	je     4161f0 <make_envp+0x840>
	envp[envn++] = build_env( "SERVER_NAME=%s", cp );
  415ab8:	bf 40 55 42 00       	mov    $0x425540,%edi
  415abd:	bd 03 00 00 00       	mov    $0x3,%ebp
  415ac2:	e8 f9 9c ff ff       	callq  40f7c0 <build_env>
  415ac7:	48 89 05 82 c5 22 00 	mov    %rax,0x22c582(%rip)        # 642050 <envp.6544+0x10>
    envp[envn++] = "GATEWAY_INTERFACE=CGI/1.1";
  415ace:	48 63 c5             	movslq %ebp,%rax
  415ad1:	44 8d 75 01          	lea    0x1(%rbp),%r14d
  415ad5:	48 8d 3c c5 40 20 64 	lea    0x642040(,%rax,8),%rdi
  415adc:	00 
  415add:	48 89 fa             	mov    %rdi,%rdx
  415ae0:	48 c1 ea 03          	shr    $0x3,%rdx
  415ae4:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  415aeb:	0f 85 8e 0c 00 00    	jne    41677f <make_envp+0xdcf>
    envp[envn++] = build_env("SERVER_PROTOCOL=%s", hc->protocol);
  415af1:	49 8d bf e0 00 00 00 	lea    0xe0(%r15),%rdi
    envp[envn++] = "GATEWAY_INTERFACE=CGI/1.1";
  415af8:	48 c7 04 c5 40 20 64 	movq   $0x425580,0x642040(,%rax,8)
  415aff:	00 80 55 42 00 
    envp[envn++] = build_env("SERVER_PROTOCOL=%s", hc->protocol);
  415b04:	48 89 f8             	mov    %rdi,%rax
  415b07:	48 c1 e8 03          	shr    $0x3,%rax
  415b0b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415b12:	0f 85 62 0c 00 00    	jne    41677a <make_envp+0xdca>
  415b18:	49 8b b7 e0 00 00 00 	mov    0xe0(%r15),%rsi
  415b1f:	8d 45 02             	lea    0x2(%rbp),%eax
  415b22:	bf c0 55 42 00       	mov    $0x4255c0,%edi
  415b27:	4d 63 f6             	movslq %r14d,%r14
  415b2a:	89 44 24 08          	mov    %eax,0x8(%rsp)
  415b2e:	e8 8d 9c ff ff       	callq  40f7c0 <build_env>
  415b33:	4a 8d 3c f5 40 20 64 	lea    0x642040(,%r14,8),%rdi
  415b3a:	00 
  415b3b:	48 89 fa             	mov    %rdi,%rdx
  415b3e:	48 c1 ea 03          	shr    $0x3,%rdx
  415b42:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  415b49:	0f 85 79 0b 00 00    	jne    4166c8 <make_envp+0xd18>
  415b4f:	4a 89 04 f5 40 20 64 	mov    %rax,0x642040(,%r14,8)
  415b56:	00 
    (void) my_snprintf( buf, sizeof(buf), "%d", (int) hc->hs->port );
  415b57:	48 8b 04 24          	mov    (%rsp),%rax
  415b5b:	48 c1 e8 03          	shr    $0x3,%rax
  415b5f:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415b66:	0f 85 25 0c 00 00    	jne    416791 <make_envp+0xde1>
  415b6c:	49 8b 47 08          	mov    0x8(%r15),%rax
  415b70:	48 8d 78 10          	lea    0x10(%rax),%rdi
  415b74:	48 89 fa             	mov    %rdi,%rdx
  415b77:	48 c1 ea 03          	shr    $0x3,%rdx
  415b7b:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  415b82:	84 d2                	test   %dl,%dl
  415b84:	74 09                	je     415b8f <make_envp+0x1df>
  415b86:	80 ea 01             	sub    $0x1,%dl
  415b89:	0f 8e c8 0a 00 00    	jle    416657 <make_envp+0xca7>
  415b8f:	0f b7 48 10          	movzwl 0x10(%rax),%ecx
  415b93:	49 81 ec 20 01 00 00 	sub    $0x120,%r12
  415b9a:	ba 00 56 42 00       	mov    $0x425600,%edx
  415b9f:	31 c0                	xor    %eax,%eax
  415ba1:	be 00 01 00 00       	mov    $0x100,%esi
  415ba6:	4c 89 e7             	mov    %r12,%rdi
  415ba9:	e8 62 53 ff ff       	callq  40af10 <my_snprintf>
    envp[envn++] = build_env( "SERVER_PORT=%s", buf );
  415bae:	8d 45 03             	lea    0x3(%rbp),%eax
  415bb1:	bf 40 56 42 00       	mov    $0x425640,%edi
  415bb6:	4c 89 e6             	mov    %r12,%rsi
  415bb9:	89 44 24 14          	mov    %eax,0x14(%rsp)
  415bbd:	e8 fe 9b ff ff       	callq  40f7c0 <build_env>
  415bc2:	48 63 54 24 08       	movslq 0x8(%rsp),%rdx
  415bc7:	48 8d 3c d5 40 20 64 	lea    0x642040(,%rdx,8),%rdi
  415bce:	00 
  415bcf:	48 89 f9             	mov    %rdi,%rcx
  415bd2:	48 c1 e9 03          	shr    $0x3,%rcx
  415bd6:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  415bdd:	0f 85 92 0b 00 00    	jne    416775 <make_envp+0xdc5>
    envp[envn++] = build_env(
  415be3:	49 8d bf b4 00 00 00 	lea    0xb4(%r15),%rdi
    envp[envn++] = build_env( "SERVER_PORT=%s", buf );
  415bea:	48 89 04 d5 40 20 64 	mov    %rax,0x642040(,%rdx,8)
  415bf1:	00 
    envp[envn++] = build_env(
  415bf2:	48 89 f8             	mov    %rdi,%rax
  415bf5:	48 c1 e8 03          	shr    $0x3,%rax
  415bf9:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  415c00:	48 89 f8             	mov    %rdi,%rax
  415c03:	83 e0 07             	and    $0x7,%eax
  415c06:	83 c0 03             	add    $0x3,%eax
  415c09:	38 d0                	cmp    %dl,%al
  415c0b:	7c 08                	jl     415c15 <make_envp+0x265>
  415c0d:	84 d2                	test   %dl,%dl
  415c0f:	0f 85 a9 0a 00 00    	jne    4166be <make_envp+0xd0e>
  415c15:	41 8b bf b4 00 00 00 	mov    0xb4(%r15),%edi
  415c1c:	44 8d 75 04          	lea    0x4(%rbp),%r14d
  415c20:	e8 fb a5 ff ff       	callq  410220 <httpd_method_str>
  415c25:	bf 80 56 42 00       	mov    $0x425680,%edi
  415c2a:	48 89 c6             	mov    %rax,%rsi
  415c2d:	e8 8e 9b ff ff       	callq  40f7c0 <build_env>
  415c32:	48 63 54 24 14       	movslq 0x14(%rsp),%rdx
  415c37:	48 8d 3c d5 40 20 64 	lea    0x642040(,%rdx,8),%rdi
  415c3e:	00 
  415c3f:	48 89 f9             	mov    %rdi,%rcx
  415c42:	48 c1 e9 03          	shr    $0x3,%rcx
  415c46:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  415c4d:	0f 85 39 0b 00 00    	jne    41678c <make_envp+0xddc>
  415c53:	48 89 04 d5 40 20 64 	mov    %rax,0x642040(,%rdx,8)
  415c5a:	00 
    if ( hc->pathinfo[0] != '\0' )
  415c5b:	49 8d 97 00 01 00 00 	lea    0x100(%r15),%rdx
  415c62:	48 89 d0             	mov    %rdx,%rax
  415c65:	48 c1 e8 03          	shr    $0x3,%rax
  415c69:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415c70:	0f 85 0e 0b 00 00    	jne    416784 <make_envp+0xdd4>
  415c76:	49 8b b7 00 01 00 00 	mov    0x100(%r15),%rsi
  415c7d:	48 89 f0             	mov    %rsi,%rax
  415c80:	48 89 f1             	mov    %rsi,%rcx
  415c83:	48 c1 e8 03          	shr    $0x3,%rax
  415c87:	83 e1 07             	and    $0x7,%ecx
  415c8a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  415c91:	38 c8                	cmp    %cl,%al
  415c93:	7f 08                	jg     415c9d <make_envp+0x2ed>
  415c95:	84 c0                	test   %al,%al
  415c97:	0f 85 19 0a 00 00    	jne    4166b6 <make_envp+0xd06>
  415c9d:	80 3e 00             	cmpb   $0x0,(%rsi)
  415ca0:	0f 85 c9 05 00 00    	jne    41626f <make_envp+0x8bf>
	"SCRIPT_NAME=/%s", strcmp( hc->origfilename, "." ) == 0 ?
  415ca6:	49 8d bf e8 00 00 00 	lea    0xe8(%r15),%rdi
  415cad:	48 89 f8             	mov    %rdi,%rax
  415cb0:	48 c1 e8 03          	shr    $0x3,%rax
  415cb4:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415cbb:	0f 85 66 0a 00 00    	jne    416727 <make_envp+0xd77>
  415cc1:	49 8b 97 e8 00 00 00 	mov    0xe8(%r15),%rdx
  415cc8:	be c0 3a 42 00       	mov    $0x423ac0,%esi
    envp[envn++] = build_env(
  415ccd:	41 8d 6e 01          	lea    0x1(%r14),%ebp
	"SCRIPT_NAME=/%s", strcmp( hc->origfilename, "." ) == 0 ?
  415cd1:	48 89 d7             	mov    %rdx,%rdi
  415cd4:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  415cd9:	e8 62 d1 fe ff       	callq  402e40 <strcmp@plt>
    envp[envn++] = build_env(
  415cde:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  415ce3:	bf 80 57 42 00       	mov    $0x425780,%edi
  415ce8:	85 c0                	test   %eax,%eax
  415cea:	b8 60 38 42 00       	mov    $0x423860,%eax
  415cef:	48 0f 44 d0          	cmove  %rax,%rdx
  415cf3:	48 89 d6             	mov    %rdx,%rsi
  415cf6:	e8 c5 9a ff ff       	callq  40f7c0 <build_env>
  415cfb:	49 63 d6             	movslq %r14d,%rdx
  415cfe:	48 8d 3c d5 40 20 64 	lea    0x642040(,%rdx,8),%rdi
  415d05:	00 
  415d06:	48 89 f9             	mov    %rdi,%rcx
  415d09:	48 c1 e9 03          	shr    $0x3,%rcx
  415d0d:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  415d14:	0f 85 17 0a 00 00    	jne    416731 <make_envp+0xd81>
    if ( hc->query[0] != '\0')
  415d1a:	49 8d bf 08 01 00 00 	lea    0x108(%r15),%rdi
    envp[envn++] = build_env(
  415d21:	48 89 04 d5 40 20 64 	mov    %rax,0x642040(,%rdx,8)
  415d28:	00 
    if ( hc->query[0] != '\0')
  415d29:	48 89 f8             	mov    %rdi,%rax
  415d2c:	48 c1 e8 03          	shr    $0x3,%rax
  415d30:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415d37:	0f 85 ef 09 00 00    	jne    41672c <make_envp+0xd7c>
  415d3d:	49 8b b7 08 01 00 00 	mov    0x108(%r15),%rsi
  415d44:	48 89 f0             	mov    %rsi,%rax
  415d47:	48 89 f2             	mov    %rsi,%rdx
  415d4a:	48 c1 e8 03          	shr    $0x3,%rax
  415d4e:	83 e2 07             	and    $0x7,%edx
  415d51:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  415d58:	38 d0                	cmp    %dl,%al
  415d5a:	7f 08                	jg     415d64 <make_envp+0x3b4>
  415d5c:	84 c0                	test   %al,%al
  415d5e:	0f 85 4a 09 00 00    	jne    4166ae <make_envp+0xcfe>
  415d64:	80 3e 00             	cmpb   $0x0,(%rsi)
  415d67:	0f 85 38 07 00 00    	jne    4164a5 <make_envp+0xaf5>
    envp[envn++] = build_env(
  415d6d:	49 8d 7f 10          	lea    0x10(%r15),%rdi
  415d71:	44 8d 75 01          	lea    0x1(%rbp),%r14d
  415d75:	e8 86 bb ff ff       	callq  411900 <httpd_ntoa>
  415d7a:	bf 00 58 42 00       	mov    $0x425800,%edi
  415d7f:	48 89 c6             	mov    %rax,%rsi
  415d82:	e8 39 9a ff ff       	callq  40f7c0 <build_env>
  415d87:	48 63 d5             	movslq %ebp,%rdx
  415d8a:	48 8d 3c d5 40 20 64 	lea    0x642040(,%rdx,8),%rdi
  415d91:	00 
  415d92:	48 89 f9             	mov    %rdi,%rcx
  415d95:	48 c1 e9 03          	shr    $0x3,%rcx
  415d99:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  415da0:	0f 85 ca 09 00 00    	jne    416770 <make_envp+0xdc0>
    if ( hc->referer[0] != '\0' )
  415da6:	49 8d bf 10 01 00 00 	lea    0x110(%r15),%rdi
    envp[envn++] = build_env(
  415dad:	48 89 04 d5 40 20 64 	mov    %rax,0x642040(,%rdx,8)
  415db4:	00 
    if ( hc->referer[0] != '\0' )
  415db5:	48 89 f8             	mov    %rdi,%rax
  415db8:	48 c1 e8 03          	shr    $0x3,%rax
  415dbc:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415dc3:	0f 85 a2 09 00 00    	jne    41676b <make_envp+0xdbb>
  415dc9:	49 8b b7 10 01 00 00 	mov    0x110(%r15),%rsi
  415dd0:	48 89 f0             	mov    %rsi,%rax
  415dd3:	48 89 f2             	mov    %rsi,%rdx
  415dd6:	48 c1 e8 03          	shr    $0x3,%rax
  415dda:	83 e2 07             	and    $0x7,%edx
  415ddd:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  415de4:	38 d0                	cmp    %dl,%al
  415de6:	7f 08                	jg     415df0 <make_envp+0x440>
  415de8:	84 c0                	test   %al,%al
  415dea:	0f 85 b6 08 00 00    	jne    4166a6 <make_envp+0xcf6>
  415df0:	80 3e 00             	cmpb   $0x0,(%rsi)
  415df3:	0f 85 70 06 00 00    	jne    416469 <make_envp+0xab9>
    if ( hc->useragent[0] != '\0' )
  415df9:	49 8d bf 18 01 00 00 	lea    0x118(%r15),%rdi
  415e00:	48 89 f8             	mov    %rdi,%rax
  415e03:	48 c1 e8 03          	shr    $0x3,%rax
  415e07:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415e0e:	0f 85 22 09 00 00    	jne    416736 <make_envp+0xd86>
  415e14:	49 8b b7 18 01 00 00 	mov    0x118(%r15),%rsi
  415e1b:	48 89 f0             	mov    %rsi,%rax
  415e1e:	48 89 f2             	mov    %rsi,%rdx
  415e21:	48 c1 e8 03          	shr    $0x3,%rax
  415e25:	83 e2 07             	and    $0x7,%edx
  415e28:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  415e2f:	38 d0                	cmp    %dl,%al
  415e31:	7f 08                	jg     415e3b <make_envp+0x48b>
  415e33:	84 c0                	test   %al,%al
  415e35:	0f 85 63 08 00 00    	jne    41669e <make_envp+0xcee>
  415e3b:	80 3e 00             	cmpb   $0x0,(%rsi)
  415e3e:	41 8d 6e 01          	lea    0x1(%r14),%ebp
  415e42:	0f 85 9a 06 00 00    	jne    4164e2 <make_envp+0xb32>
    if ( hc->accept[0] != '\0' )
  415e48:	49 8d bf 20 01 00 00 	lea    0x120(%r15),%rdi
  415e4f:	48 89 f8             	mov    %rdi,%rax
  415e52:	48 c1 e8 03          	shr    $0x3,%rax
  415e56:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415e5d:	0f 85 e2 08 00 00    	jne    416745 <make_envp+0xd95>
  415e63:	49 8b b7 20 01 00 00 	mov    0x120(%r15),%rsi
  415e6a:	48 89 f0             	mov    %rsi,%rax
  415e6d:	48 89 f2             	mov    %rsi,%rdx
  415e70:	48 c1 e8 03          	shr    $0x3,%rax
  415e74:	83 e2 07             	and    $0x7,%edx
  415e77:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  415e7e:	38 d0                	cmp    %dl,%al
  415e80:	7f 08                	jg     415e8a <make_envp+0x4da>
  415e82:	84 c0                	test   %al,%al
  415e84:	0f 85 0c 08 00 00    	jne    416696 <make_envp+0xce6>
  415e8a:	80 3e 00             	cmpb   $0x0,(%rsi)
  415e8d:	0f 85 8e 06 00 00    	jne    416521 <make_envp+0xb71>
    if ( hc->accepte[0] != '\0' )
  415e93:	49 8d bf 28 01 00 00 	lea    0x128(%r15),%rdi
  415e9a:	48 89 f8             	mov    %rdi,%rax
  415e9d:	48 c1 e8 03          	shr    $0x3,%rax
  415ea1:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415ea8:	0f 85 f6 08 00 00    	jne    4167a4 <make_envp+0xdf4>
  415eae:	49 8b b7 28 01 00 00 	mov    0x128(%r15),%rsi
  415eb5:	48 89 f0             	mov    %rsi,%rax
  415eb8:	48 89 f2             	mov    %rsi,%rdx
  415ebb:	48 c1 e8 03          	shr    $0x3,%rax
  415ebf:	83 e2 07             	and    $0x7,%edx
  415ec2:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  415ec9:	38 d0                	cmp    %dl,%al
  415ecb:	7f 08                	jg     415ed5 <make_envp+0x525>
  415ecd:	84 c0                	test   %al,%al
  415ecf:	0f 85 b9 07 00 00    	jne    41668e <make_envp+0xcde>
  415ed5:	80 3e 00             	cmpb   $0x0,(%rsi)
  415ed8:	0f 85 33 07 00 00    	jne    416611 <make_envp+0xc61>
    if ( hc->acceptl[0] != '\0' )
  415ede:	49 8d bf 30 01 00 00 	lea    0x130(%r15),%rdi
  415ee5:	48 89 f8             	mov    %rdi,%rax
  415ee8:	48 c1 e8 03          	shr    $0x3,%rax
  415eec:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415ef3:	0f 85 a1 08 00 00    	jne    41679a <make_envp+0xdea>
  415ef9:	49 8b b7 30 01 00 00 	mov    0x130(%r15),%rsi
  415f00:	48 89 f0             	mov    %rsi,%rax
  415f03:	48 89 f2             	mov    %rsi,%rdx
  415f06:	48 c1 e8 03          	shr    $0x3,%rax
  415f0a:	83 e2 07             	and    $0x7,%edx
  415f0d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  415f14:	38 d0                	cmp    %dl,%al
  415f16:	7f 08                	jg     415f20 <make_envp+0x570>
  415f18:	84 c0                	test   %al,%al
  415f1a:	0f 85 66 07 00 00    	jne    416686 <make_envp+0xcd6>
  415f20:	80 3e 00             	cmpb   $0x0,(%rsi)
  415f23:	0f 85 ac 06 00 00    	jne    4165d5 <make_envp+0xc25>
    if ( hc->cookie[0] != '\0' )
  415f29:	49 8d bf 38 01 00 00 	lea    0x138(%r15),%rdi
  415f30:	48 89 f8             	mov    %rdi,%rax
  415f33:	48 c1 e8 03          	shr    $0x3,%rax
  415f37:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415f3e:	0f 85 5b 08 00 00    	jne    41679f <make_envp+0xdef>
  415f44:	49 8b b7 38 01 00 00 	mov    0x138(%r15),%rsi
  415f4b:	48 89 f0             	mov    %rsi,%rax
  415f4e:	48 89 f2             	mov    %rsi,%rdx
  415f51:	48 c1 e8 03          	shr    $0x3,%rax
  415f55:	83 e2 07             	and    $0x7,%edx
  415f58:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  415f5f:	38 d0                	cmp    %dl,%al
  415f61:	7f 08                	jg     415f6b <make_envp+0x5bb>
  415f63:	84 c0                	test   %al,%al
  415f65:	0f 85 13 07 00 00    	jne    41667e <make_envp+0xcce>
  415f6b:	80 3e 00             	cmpb   $0x0,(%rsi)
  415f6e:	0f 85 e9 05 00 00    	jne    41655d <make_envp+0xbad>
    if ( hc->contenttype[0] != '\0' )
  415f74:	49 8d bf 40 01 00 00 	lea    0x140(%r15),%rdi
  415f7b:	48 89 f8             	mov    %rdi,%rax
  415f7e:	48 c1 e8 03          	shr    $0x3,%rax
  415f82:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415f89:	0f 85 ac 07 00 00    	jne    41673b <make_envp+0xd8b>
  415f8f:	49 8b b7 40 01 00 00 	mov    0x140(%r15),%rsi
  415f96:	48 89 f0             	mov    %rsi,%rax
  415f99:	48 89 f2             	mov    %rsi,%rdx
  415f9c:	48 c1 e8 03          	shr    $0x3,%rax
  415fa0:	83 e2 07             	and    $0x7,%edx
  415fa3:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  415faa:	38 d0                	cmp    %dl,%al
  415fac:	7f 08                	jg     415fb6 <make_envp+0x606>
  415fae:	84 c0                	test   %al,%al
  415fb0:	0f 85 c0 06 00 00    	jne    416676 <make_envp+0xcc6>
  415fb6:	80 3e 00             	cmpb   $0x0,(%rsi)
  415fb9:	0f 85 da 05 00 00    	jne    416599 <make_envp+0xbe9>
    if ( hc->hdrhost[0] != '\0' )
  415fbf:	49 8d bf 50 01 00 00 	lea    0x150(%r15),%rdi
  415fc6:	48 89 f8             	mov    %rdi,%rax
  415fc9:	48 c1 e8 03          	shr    $0x3,%rax
  415fcd:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  415fd4:	0f 85 f3 06 00 00    	jne    4166cd <make_envp+0xd1d>
  415fda:	49 8b b7 50 01 00 00 	mov    0x150(%r15),%rsi
  415fe1:	48 89 f0             	mov    %rsi,%rax
  415fe4:	48 89 f2             	mov    %rsi,%rdx
  415fe7:	48 c1 e8 03          	shr    $0x3,%rax
  415feb:	83 e2 07             	and    $0x7,%edx
  415fee:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  415ff5:	38 d0                	cmp    %dl,%al
  415ff7:	7f 08                	jg     416001 <make_envp+0x651>
  415ff9:	84 c0                	test   %al,%al
  415ffb:	0f 85 6d 06 00 00    	jne    41666e <make_envp+0xcbe>
  416001:	80 3e 00             	cmpb   $0x0,(%rsi)
  416004:	0f 85 e2 03 00 00    	jne    4163ec <make_envp+0xa3c>
    if ( hc->contentlength != -1 )
  41600a:	49 8d bf f0 01 00 00 	lea    0x1f0(%r15),%rdi
  416011:	48 89 f8             	mov    %rdi,%rax
  416014:	48 c1 e8 03          	shr    $0x3,%rax
  416018:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41601f:	0f 85 ad 06 00 00    	jne    4166d2 <make_envp+0xd22>
  416025:	49 8b 8f f0 01 00 00 	mov    0x1f0(%r15),%rcx
  41602c:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
  416030:	0f 85 e9 01 00 00    	jne    41621f <make_envp+0x86f>
    if ( hc->remoteuser[0] != '\0' )
  416036:	49 8d bf 68 01 00 00 	lea    0x168(%r15),%rdi
  41603d:	48 89 f8             	mov    %rdi,%rax
  416040:	48 c1 e8 03          	shr    $0x3,%rax
  416044:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41604b:	0f 85 d1 06 00 00    	jne    416722 <make_envp+0xd72>
  416051:	49 8b b7 68 01 00 00 	mov    0x168(%r15),%rsi
  416058:	48 89 f0             	mov    %rsi,%rax
  41605b:	48 89 f2             	mov    %rsi,%rdx
  41605e:	48 c1 e8 03          	shr    $0x3,%rax
  416062:	83 e2 07             	and    $0x7,%edx
  416065:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41606c:	38 d0                	cmp    %dl,%al
  41606e:	7f 08                	jg     416078 <make_envp+0x6c8>
  416070:	84 c0                	test   %al,%al
  416072:	0f 85 ee 05 00 00    	jne    416666 <make_envp+0xcb6>
  416078:	80 3e 00             	cmpb   $0x0,(%rsi)
  41607b:	41 8d 6e 01          	lea    0x1(%r14),%ebp
  41607f:	0f 85 28 03 00 00    	jne    4163ad <make_envp+0x9fd>
    if ( hc->authorization[0] != '\0' )
  416085:	49 8d bf 60 01 00 00 	lea    0x160(%r15),%rdi
  41608c:	48 89 f8             	mov    %rdi,%rax
  41608f:	48 c1 e8 03          	shr    $0x3,%rax
  416093:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41609a:	0f 85 c6 06 00 00    	jne    416766 <make_envp+0xdb6>
  4160a0:	49 8b bf 60 01 00 00 	mov    0x160(%r15),%rdi
  4160a7:	48 89 f8             	mov    %rdi,%rax
  4160aa:	48 89 fa             	mov    %rdi,%rdx
  4160ad:	48 c1 e8 03          	shr    $0x3,%rax
  4160b1:	83 e2 07             	and    $0x7,%edx
  4160b4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4160bb:	38 d0                	cmp    %dl,%al
  4160bd:	7f 08                	jg     4160c7 <make_envp+0x717>
  4160bf:	84 c0                	test   %al,%al
  4160c1:	0f 85 9a 05 00 00    	jne    416661 <make_envp+0xcb1>
  4160c7:	80 3f 00             	cmpb   $0x0,(%rdi)
  4160ca:	0f 85 58 03 00 00    	jne    416428 <make_envp+0xa78>
    if ( getenv( "TZ" ) != (char*) 0 )
  4160d0:	bf 80 5b 42 00       	mov    $0x425b80,%edi
  4160d5:	e8 16 d0 fe ff       	callq  4030f0 <getenv@plt>
  4160da:	48 85 c0             	test   %rax,%rax
  4160dd:	74 41                	je     416120 <make_envp+0x770>
	envp[envn++] = build_env( "TZ=%s", getenv( "TZ" ) );
  4160df:	bf 80 5b 42 00       	mov    $0x425b80,%edi
  4160e4:	4d 63 f6             	movslq %r14d,%r14
  4160e7:	e8 04 d0 fe ff       	callq  4030f0 <getenv@plt>
  4160ec:	bf c0 5b 42 00       	mov    $0x425bc0,%edi
  4160f1:	48 89 c6             	mov    %rax,%rsi
  4160f4:	e8 c7 96 ff ff       	callq  40f7c0 <build_env>
  4160f9:	4a 8d 3c f5 40 20 64 	lea    0x642040(,%r14,8),%rdi
  416100:	00 
  416101:	48 89 fa             	mov    %rdi,%rdx
  416104:	48 c1 ea 03          	shr    $0x3,%rdx
  416108:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41610f:	0f 85 99 06 00 00    	jne    4167ae <make_envp+0xdfe>
  416115:	4a 89 04 f5 40 20 64 	mov    %rax,0x642040(,%r14,8)
  41611c:	00 
  41611d:	41 89 ee             	mov    %ebp,%r14d
    envp[envn++] = build_env( "CGI_PATTERN=%s", hc->hs->cgi_pattern );
  416120:	48 8b 04 24          	mov    (%rsp),%rax
  416124:	48 c1 e8 03          	shr    $0x3,%rax
  416128:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41612f:	0f 85 1f 06 00 00    	jne    416754 <make_envp+0xda4>
  416135:	49 8b 47 08          	mov    0x8(%r15),%rax
  416139:	48 8d 78 18          	lea    0x18(%rax),%rdi
  41613d:	48 89 fa             	mov    %rdi,%rdx
  416140:	48 c1 ea 03          	shr    $0x3,%rdx
  416144:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41614b:	0f 85 fe 05 00 00    	jne    41674f <make_envp+0xd9f>
  416151:	48 8b 70 18          	mov    0x18(%rax),%rsi
  416155:	bf 00 5c 42 00       	mov    $0x425c00,%edi
  41615a:	41 8d 6e 01          	lea    0x1(%r14),%ebp
  41615e:	4d 63 f6             	movslq %r14d,%r14
  416161:	e8 5a 96 ff ff       	callq  40f7c0 <build_env>
  416166:	4a 8d 3c f5 40 20 64 	lea    0x642040(,%r14,8),%rdi
  41616d:	00 
  41616e:	48 89 fa             	mov    %rdi,%rdx
  416171:	48 c1 ea 03          	shr    $0x3,%rdx
  416175:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41617c:	0f 85 c8 05 00 00    	jne    41674a <make_envp+0xd9a>
  416182:	4a 89 04 f5 40 20 64 	mov    %rax,0x642040(,%r14,8)
  416189:	00 
    envp[envn] = (char*) 0;
  41618a:	48 63 c5             	movslq %ebp,%rax
  41618d:	48 8d 3c c5 40 20 64 	lea    0x642040(,%rax,8),%rdi
  416194:	00 
  416195:	48 89 fa             	mov    %rdi,%rdx
  416198:	48 c1 ea 03          	shr    $0x3,%rdx
  41619c:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4161a3:	0f 85 97 05 00 00    	jne    416740 <make_envp+0xd90>
  4161a9:	48 c7 04 c5 40 20 64 	movq   $0x0,0x642040(,%rax,8)
  4161b0:	00 00 00 00 00 
    {
  4161b5:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  4161ba:	48 39 d8             	cmp    %rbx,%rax
  4161bd:	0f 85 2a 05 00 00    	jne    4166ed <make_envp+0xd3d>
  4161c3:	41 c7 85 00 80 ff 7f 	movl   $0x0,0x7fff8000(%r13)
  4161ca:	00 00 00 00 
  4161ce:	41 c7 85 24 80 ff 7f 	movl   $0x0,0x7fff8024(%r13)
  4161d5:	00 00 00 00 
    }
  4161d9:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
  4161e0:	b8 40 20 64 00       	mov    $0x642040,%eax
  4161e5:	5b                   	pop    %rbx
  4161e6:	5d                   	pop    %rbp
  4161e7:	41 5c                	pop    %r12
  4161e9:	41 5d                	pop    %r13
  4161eb:	41 5e                	pop    %r14
  4161ed:	41 5f                	pop    %r15
  4161ef:	c3                   	retq   
	cp = hc->hs->server_hostname;
  4161f0:	48 8d 78 08          	lea    0x8(%rax),%rdi
  4161f4:	48 89 fa             	mov    %rdi,%rdx
  4161f7:	48 c1 ea 03          	shr    $0x3,%rdx
  4161fb:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  416202:	0f 85 a1 05 00 00    	jne    4167a9 <make_envp+0xdf9>
  416208:	48 8b 70 08          	mov    0x8(%rax),%rsi
    envp[envn++] = build_env( "SERVER_SOFTWARE=%s", SERVER_SOFTWARE );
  41620c:	bd 02 00 00 00       	mov    $0x2,%ebp
    if ( cp != (char*) 0 )
  416211:	48 85 f6             	test   %rsi,%rsi
  416214:	0f 84 b4 f8 ff ff    	je     415ace <make_envp+0x11e>
  41621a:	e9 99 f8 ff ff       	jmpq   415ab8 <make_envp+0x108>
	(void) my_snprintf(
  41621f:	ba 40 5a 42 00       	mov    $0x425a40,%edx
  416224:	be 00 01 00 00       	mov    $0x100,%esi
  416229:	4c 89 e7             	mov    %r12,%rdi
  41622c:	31 c0                	xor    %eax,%eax
  41622e:	e8 dd 4c ff ff       	callq  40af10 <my_snprintf>
	envp[envn++] = build_env( "CONTENT_LENGTH=%s", buf );
  416233:	4d 63 f6             	movslq %r14d,%r14
  416236:	bf 80 5a 42 00       	mov    $0x425a80,%edi
  41623b:	4c 89 e6             	mov    %r12,%rsi
  41623e:	e8 7d 95 ff ff       	callq  40f7c0 <build_env>
  416243:	4a 8d 3c f5 40 20 64 	lea    0x642040(,%r14,8),%rdi
  41624a:	00 
  41624b:	48 89 fa             	mov    %rdi,%rdx
  41624e:	48 c1 ea 03          	shr    $0x3,%rdx
  416252:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  416259:	0f 85 63 05 00 00    	jne    4167c2 <make_envp+0xe12>
  41625f:	4a 89 04 f5 40 20 64 	mov    %rax,0x642040(,%r14,8)
  416266:	00 
  416267:	41 89 ee             	mov    %ebp,%r14d
  41626a:	e9 c7 fd ff ff       	jmpq   416036 <make_envp+0x686>
	envp[envn++] = build_env( "PATH_INFO=/%s", hc->pathinfo );
  41626f:	8d 45 05             	lea    0x5(%rbp),%eax
  416272:	bf c0 56 42 00       	mov    $0x4256c0,%edi
  416277:	4d 63 f6             	movslq %r14d,%r14
  41627a:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  41627f:	89 44 24 14          	mov    %eax,0x14(%rsp)
  416283:	e8 38 95 ff ff       	callq  40f7c0 <build_env>
  416288:	4a 8d 3c f5 40 20 64 	lea    0x642040(,%r14,8),%rdi
  41628f:	00 
  416290:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  416295:	48 89 f9             	mov    %rdi,%rcx
  416298:	48 c1 e9 03          	shr    $0x3,%rcx
  41629c:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  4162a3:	0f 85 28 05 00 00    	jne    4167d1 <make_envp+0xe21>
  4162a9:	4a 89 04 f5 40 20 64 	mov    %rax,0x642040(,%r14,8)
  4162b0:	00 
	l = strlen( hc->hs->cwd ) + strlen( hc->pathinfo ) + 1;
  4162b1:	48 8b 04 24          	mov    (%rsp),%rax
  4162b5:	48 c1 e8 03          	shr    $0x3,%rax
  4162b9:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4162c0:	0f 85 10 05 00 00    	jne    4167d6 <make_envp+0xe26>
  4162c6:	49 8b 47 08          	mov    0x8(%r15),%rax
  4162ca:	48 8d 78 40          	lea    0x40(%rax),%rdi
  4162ce:	48 89 f9             	mov    %rdi,%rcx
  4162d1:	48 c1 e9 03          	shr    $0x3,%rcx
  4162d5:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  4162dc:	0f 85 fd 04 00 00    	jne    4167df <make_envp+0xe2f>
  4162e2:	4c 8b 70 40          	mov    0x40(%rax),%r14
  4162e6:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  4162eb:	4c 89 f7             	mov    %r14,%rdi
  4162ee:	e8 8d c9 fe ff       	callq  402c80 <strlen@plt>
  4162f3:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  4162f8:	48 89 c1             	mov    %rax,%rcx
  4162fb:	48 89 d0             	mov    %rdx,%rax
  4162fe:	48 c1 e8 03          	shr    $0x3,%rax
  416302:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  416309:	0f 85 d5 04 00 00    	jne    4167e4 <make_envp+0xe34>
  41630f:	4d 8b 87 00 01 00 00 	mov    0x100(%r15),%r8
  416316:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  41631b:	4c 89 c7             	mov    %r8,%rdi
  41631e:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
  416323:	e8 58 c9 fe ff       	callq  402c80 <strlen@plt>
  416328:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  41632d:	48 8d 74 01 01       	lea    0x1(%rcx,%rax,1),%rsi
	cp2 = NEW( char, l );
  416332:	48 89 f7             	mov    %rsi,%rdi
  416335:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  41633a:	e8 71 cd fe ff       	callq  4030b0 <malloc@plt>
	if ( cp2 != (char*) 0 )
  41633f:	48 85 c0             	test   %rax,%rax
  416342:	0f 84 05 03 00 00    	je     41664d <make_envp+0xc9d>
	    (void) my_snprintf( cp2, l, "%s%s", hc->hs->cwd, hc->pathinfo );
  416348:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  41634d:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
  416352:	4c 89 f1             	mov    %r14,%rcx
  416355:	48 89 c7             	mov    %rax,%rdi
  416358:	ba 00 57 42 00       	mov    $0x425700,%edx
  41635d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  416362:	31 c0                	xor    %eax,%eax
	    envp[envn++] = build_env( "PATH_TRANSLATED=%s", cp2 );
  416364:	44 8d 75 06          	lea    0x6(%rbp),%r14d
	    (void) my_snprintf( cp2, l, "%s%s", hc->hs->cwd, hc->pathinfo );
  416368:	e8 a3 4b ff ff       	callq  40af10 <my_snprintf>
	    envp[envn++] = build_env( "PATH_TRANSLATED=%s", cp2 );
  41636d:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
  416372:	bf 40 57 42 00       	mov    $0x425740,%edi
  416377:	4c 89 d6             	mov    %r10,%rsi
  41637a:	e8 41 94 ff ff       	callq  40f7c0 <build_env>
  41637f:	48 63 54 24 14       	movslq 0x14(%rsp),%rdx
  416384:	48 8d 3c d5 40 20 64 	lea    0x642040(,%rdx,8),%rdi
  41638b:	00 
  41638c:	48 89 f9             	mov    %rdi,%rcx
  41638f:	48 c1 e9 03          	shr    $0x3,%rcx
  416393:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41639a:	0f 85 6a 04 00 00    	jne    41680a <make_envp+0xe5a>
  4163a0:	48 89 04 d5 40 20 64 	mov    %rax,0x642040(,%rdx,8)
  4163a7:	00 
  4163a8:	e9 f9 f8 ff ff       	jmpq   415ca6 <make_envp+0x2f6>
	envp[envn++] = build_env( "REMOTE_USER=%s", hc->remoteuser );
  4163ad:	bf c0 5a 42 00       	mov    $0x425ac0,%edi
  4163b2:	e8 09 94 ff ff       	callq  40f7c0 <build_env>
  4163b7:	49 63 d6             	movslq %r14d,%rdx
  4163ba:	48 8d 3c d5 40 20 64 	lea    0x642040(,%rdx,8),%rdi
  4163c1:	00 
  4163c2:	48 89 f9             	mov    %rdi,%rcx
  4163c5:	48 c1 e9 03          	shr    $0x3,%rcx
  4163c9:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  4163d0:	0f 85 e7 03 00 00    	jne    4167bd <make_envp+0xe0d>
  4163d6:	48 89 04 d5 40 20 64 	mov    %rax,0x642040(,%rdx,8)
  4163dd:	00 
  4163de:	41 8d 46 02          	lea    0x2(%r14),%eax
  4163e2:	41 89 ee             	mov    %ebp,%r14d
  4163e5:	89 c5                	mov    %eax,%ebp
  4163e7:	e9 99 fc ff ff       	jmpq   416085 <make_envp+0x6d5>
	envp[envn++] = build_env( "HTTP_HOST=%s", hc->hdrhost );
  4163ec:	bf 00 5a 42 00       	mov    $0x425a00,%edi
  4163f1:	4d 63 f6             	movslq %r14d,%r14
  4163f4:	e8 c7 93 ff ff       	callq  40f7c0 <build_env>
  4163f9:	4a 8d 3c f5 40 20 64 	lea    0x642040(,%r14,8),%rdi
  416400:	00 
  416401:	48 89 fa             	mov    %rdi,%rdx
  416404:	48 c1 ea 03          	shr    $0x3,%rdx
  416408:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41640f:	0f 85 eb 03 00 00    	jne    416800 <make_envp+0xe50>
  416415:	4a 89 04 f5 40 20 64 	mov    %rax,0x642040(,%r14,8)
  41641c:	00 
  41641d:	41 89 ee             	mov    %ebp,%r14d
  416420:	83 c5 01             	add    $0x1,%ebp
  416423:	e9 e2 fb ff ff       	jmpq   41600a <make_envp+0x65a>
	envp[envn++] = build_env( "AUTH_TYPE=%s", "Basic" );
  416428:	bf 40 5b 42 00       	mov    $0x425b40,%edi
  41642d:	be 00 5b 42 00       	mov    $0x425b00,%esi
  416432:	4d 63 f6             	movslq %r14d,%r14
  416435:	e8 86 93 ff ff       	callq  40f7c0 <build_env>
  41643a:	4a 8d 3c f5 40 20 64 	lea    0x642040(,%r14,8),%rdi
  416441:	00 
  416442:	48 89 fa             	mov    %rdi,%rdx
  416445:	48 c1 ea 03          	shr    $0x3,%rdx
  416449:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  416450:	0f 85 af 03 00 00    	jne    416805 <make_envp+0xe55>
  416456:	4a 89 04 f5 40 20 64 	mov    %rax,0x642040(,%r14,8)
  41645d:	00 
  41645e:	41 89 ee             	mov    %ebp,%r14d
  416461:	83 c5 01             	add    $0x1,%ebp
  416464:	e9 67 fc ff ff       	jmpq   4160d0 <make_envp+0x720>
	envp[envn++] = build_env( "HTTP_REFERER=%s", hc->referer );
  416469:	bf 40 58 42 00       	mov    $0x425840,%edi
  41646e:	4d 63 f6             	movslq %r14d,%r14
  416471:	83 c5 02             	add    $0x2,%ebp
  416474:	e8 47 93 ff ff       	callq  40f7c0 <build_env>
  416479:	4a 8d 3c f5 40 20 64 	lea    0x642040(,%r14,8),%rdi
  416480:	00 
  416481:	48 89 fa             	mov    %rdi,%rdx
  416484:	48 c1 ea 03          	shr    $0x3,%rdx
  416488:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41648f:	0f 85 57 03 00 00    	jne    4167ec <make_envp+0xe3c>
  416495:	4a 89 04 f5 40 20 64 	mov    %rax,0x642040(,%r14,8)
  41649c:	00 
  41649d:	41 89 ee             	mov    %ebp,%r14d
  4164a0:	e9 54 f9 ff ff       	jmpq   415df9 <make_envp+0x449>
	envp[envn++] = build_env( "QUERY_STRING=%s", hc->query );
  4164a5:	bf c0 57 42 00       	mov    $0x4257c0,%edi
  4164aa:	48 63 ed             	movslq %ebp,%rbp
  4164ad:	41 83 c6 02          	add    $0x2,%r14d
  4164b1:	e8 0a 93 ff ff       	callq  40f7c0 <build_env>
  4164b6:	48 8d 3c ed 40 20 64 	lea    0x642040(,%rbp,8),%rdi
  4164bd:	00 
  4164be:	48 89 fa             	mov    %rdi,%rdx
  4164c1:	48 c1 ea 03          	shr    $0x3,%rdx
  4164c5:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4164cc:	0f 85 1f 03 00 00    	jne    4167f1 <make_envp+0xe41>
  4164d2:	48 89 04 ed 40 20 64 	mov    %rax,0x642040(,%rbp,8)
  4164d9:	00 
  4164da:	44 89 f5             	mov    %r14d,%ebp
  4164dd:	e9 8b f8 ff ff       	jmpq   415d6d <make_envp+0x3bd>
	envp[envn++] = build_env( "HTTP_USER_AGENT=%s", hc->useragent );
  4164e2:	bf 80 58 42 00       	mov    $0x425880,%edi
  4164e7:	e8 d4 92 ff ff       	callq  40f7c0 <build_env>
  4164ec:	49 63 d6             	movslq %r14d,%rdx
  4164ef:	48 8d 3c d5 40 20 64 	lea    0x642040(,%rdx,8),%rdi
  4164f6:	00 
  4164f7:	48 89 f9             	mov    %rdi,%rcx
  4164fa:	48 c1 e9 03          	shr    $0x3,%rcx
  4164fe:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  416505:	0f 85 eb 02 00 00    	jne    4167f6 <make_envp+0xe46>
  41650b:	48 89 04 d5 40 20 64 	mov    %rax,0x642040(,%rdx,8)
  416512:	00 
  416513:	41 8d 46 02          	lea    0x2(%r14),%eax
  416517:	41 89 ee             	mov    %ebp,%r14d
  41651a:	89 c5                	mov    %eax,%ebp
  41651c:	e9 27 f9 ff ff       	jmpq   415e48 <make_envp+0x498>
	envp[envn++] = build_env( "HTTP_ACCEPT=%s", hc->accept );
  416521:	bf c0 58 42 00       	mov    $0x4258c0,%edi
  416526:	4d 63 f6             	movslq %r14d,%r14
  416529:	e8 92 92 ff ff       	callq  40f7c0 <build_env>
  41652e:	4a 8d 3c f5 40 20 64 	lea    0x642040(,%r14,8),%rdi
  416535:	00 
  416536:	48 89 fa             	mov    %rdi,%rdx
  416539:	48 c1 ea 03          	shr    $0x3,%rdx
  41653d:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  416544:	0f 85 b1 02 00 00    	jne    4167fb <make_envp+0xe4b>
  41654a:	4a 89 04 f5 40 20 64 	mov    %rax,0x642040(,%r14,8)
  416551:	00 
  416552:	41 89 ee             	mov    %ebp,%r14d
  416555:	83 c5 01             	add    $0x1,%ebp
  416558:	e9 36 f9 ff ff       	jmpq   415e93 <make_envp+0x4e3>
	envp[envn++] = build_env( "HTTP_COOKIE=%s", hc->cookie );
  41655d:	bf 80 59 42 00       	mov    $0x425980,%edi
  416562:	4d 63 f6             	movslq %r14d,%r14
  416565:	e8 56 92 ff ff       	callq  40f7c0 <build_env>
  41656a:	4a 8d 3c f5 40 20 64 	lea    0x642040(,%r14,8),%rdi
  416571:	00 
  416572:	48 89 fa             	mov    %rdi,%rdx
  416575:	48 c1 ea 03          	shr    $0x3,%rdx
  416579:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  416580:	0f 85 2d 02 00 00    	jne    4167b3 <make_envp+0xe03>
  416586:	4a 89 04 f5 40 20 64 	mov    %rax,0x642040(,%r14,8)
  41658d:	00 
  41658e:	41 89 ee             	mov    %ebp,%r14d
  416591:	83 c5 01             	add    $0x1,%ebp
  416594:	e9 db f9 ff ff       	jmpq   415f74 <make_envp+0x5c4>
	envp[envn++] = build_env( "CONTENT_TYPE=%s", hc->contenttype );
  416599:	bf c0 59 42 00       	mov    $0x4259c0,%edi
  41659e:	4d 63 f6             	movslq %r14d,%r14
  4165a1:	e8 1a 92 ff ff       	callq  40f7c0 <build_env>
  4165a6:	4a 8d 3c f5 40 20 64 	lea    0x642040(,%r14,8),%rdi
  4165ad:	00 
  4165ae:	48 89 fa             	mov    %rdi,%rdx
  4165b1:	48 c1 ea 03          	shr    $0x3,%rdx
  4165b5:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4165bc:	0f 85 f6 01 00 00    	jne    4167b8 <make_envp+0xe08>
  4165c2:	4a 89 04 f5 40 20 64 	mov    %rax,0x642040(,%r14,8)
  4165c9:	00 
  4165ca:	41 89 ee             	mov    %ebp,%r14d
  4165cd:	83 c5 01             	add    $0x1,%ebp
  4165d0:	e9 ea f9 ff ff       	jmpq   415fbf <make_envp+0x60f>
	envp[envn++] = build_env( "HTTP_ACCEPT_LANGUAGE=%s", hc->acceptl );
  4165d5:	bf 40 59 42 00       	mov    $0x425940,%edi
  4165da:	4d 63 f6             	movslq %r14d,%r14
  4165dd:	e8 de 91 ff ff       	callq  40f7c0 <build_env>
  4165e2:	4a 8d 3c f5 40 20 64 	lea    0x642040(,%r14,8),%rdi
  4165e9:	00 
  4165ea:	48 89 fa             	mov    %rdi,%rdx
  4165ed:	48 c1 ea 03          	shr    $0x3,%rdx
  4165f1:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4165f8:	0f 85 c9 01 00 00    	jne    4167c7 <make_envp+0xe17>
  4165fe:	4a 89 04 f5 40 20 64 	mov    %rax,0x642040(,%r14,8)
  416605:	00 
  416606:	41 89 ee             	mov    %ebp,%r14d
  416609:	83 c5 01             	add    $0x1,%ebp
  41660c:	e9 18 f9 ff ff       	jmpq   415f29 <make_envp+0x579>
	envp[envn++] = build_env( "HTTP_ACCEPT_ENCODING=%s", hc->accepte );
  416611:	bf 00 59 42 00       	mov    $0x425900,%edi
  416616:	4d 63 f6             	movslq %r14d,%r14
  416619:	e8 a2 91 ff ff       	callq  40f7c0 <build_env>
  41661e:	4a 8d 3c f5 40 20 64 	lea    0x642040(,%r14,8),%rdi
  416625:	00 
  416626:	48 89 fa             	mov    %rdi,%rdx
  416629:	48 c1 ea 03          	shr    $0x3,%rdx
  41662d:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  416634:	0f 85 92 01 00 00    	jne    4167cc <make_envp+0xe1c>
  41663a:	4a 89 04 f5 40 20 64 	mov    %rax,0x642040(,%r14,8)
  416641:	00 
  416642:	41 89 ee             	mov    %ebp,%r14d
  416645:	83 c5 01             	add    $0x1,%ebp
  416648:	e9 91 f8 ff ff       	jmpq   415ede <make_envp+0x52e>
	envp[envn++] = build_env( "PATH_INFO=/%s", hc->pathinfo );
  41664d:	44 8b 74 24 14       	mov    0x14(%rsp),%r14d
  416652:	e9 4f f6 ff ff       	jmpq   415ca6 <make_envp+0x2f6>
    (void) my_snprintf( buf, sizeof(buf), "%d", (int) hc->hs->port );
  416657:	e8 54 c9 fe ff       	callq  402fb0 <__asan_report_load2@plt>
    if ( hc->hs->vhost && hc->hostname != (char*) 0 )
  41665c:	e8 6f c7 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( hc->authorization[0] != '\0' )
  416661:	e8 aa ca fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->remoteuser[0] != '\0' )
  416666:	48 89 f7             	mov    %rsi,%rdi
  416669:	e8 a2 ca fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->hdrhost[0] != '\0' )
  41666e:	48 89 f7             	mov    %rsi,%rdi
  416671:	e8 9a ca fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->contenttype[0] != '\0' )
  416676:	48 89 f7             	mov    %rsi,%rdi
  416679:	e8 92 ca fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->cookie[0] != '\0' )
  41667e:	48 89 f7             	mov    %rsi,%rdi
  416681:	e8 8a ca fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->acceptl[0] != '\0' )
  416686:	48 89 f7             	mov    %rsi,%rdi
  416689:	e8 82 ca fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->accepte[0] != '\0' )
  41668e:	48 89 f7             	mov    %rsi,%rdi
  416691:	e8 7a ca fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->accept[0] != '\0' )
  416696:	48 89 f7             	mov    %rsi,%rdi
  416699:	e8 72 ca fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->useragent[0] != '\0' )
  41669e:	48 89 f7             	mov    %rsi,%rdi
  4166a1:	e8 6a ca fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->referer[0] != '\0' )
  4166a6:	48 89 f7             	mov    %rsi,%rdi
  4166a9:	e8 62 ca fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->query[0] != '\0')
  4166ae:	48 89 f7             	mov    %rsi,%rdi
  4166b1:	e8 5a ca fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->pathinfo[0] != '\0' )
  4166b6:	48 89 f7             	mov    %rsi,%rdi
  4166b9:	e8 52 ca fe ff       	callq  403110 <__asan_report_load1@plt>
    envp[envn++] = build_env(
  4166be:	e8 0d c7 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( hc->hs->vhost && hc->hostname != (char*) 0 )
  4166c3:	e8 88 cb fe ff       	callq  403250 <__asan_report_load8@plt>
    envp[envn++] = build_env("SERVER_PROTOCOL=%s", hc->protocol);
  4166c8:	e8 d3 c8 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    if ( hc->hdrhost[0] != '\0' )
  4166cd:	e8 7e cb fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->contentlength != -1 )
  4166d2:	e8 79 cb fe ff       	callq  403250 <__asan_report_load8@plt>
    {
  4166d7:	bf 40 01 00 00       	mov    $0x140,%edi
  4166dc:	e8 9f cd fe ff       	callq  403480 <__asan_stack_malloc_3@plt>
  4166e1:	48 85 c0             	test   %rax,%rax
  4166e4:	48 0f 45 d8          	cmovne %rax,%rbx
  4166e8:	e9 ea f2 ff ff       	jmpq   4159d7 <make_envp+0x27>
  4166ed:	66 0f 6f 05 9b b6 00 	movdqa 0xb69b(%rip),%xmm0        # 421d90 <_IO_stdin_used+0x2cd0>
  4166f4:	00 
  4166f5:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  4166fc:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
  416703:	f5 f5 f5 
  416706:	49 89 85 20 80 ff 7f 	mov    %rax,0x7fff8020(%r13)
  41670d:	41 0f 11 85 00 80 ff 	movups %xmm0,0x7fff8000(%r13)
  416714:	7f 
  416715:	41 0f 11 85 10 80 ff 	movups %xmm0,0x7fff8010(%r13)
  41671c:	7f 
  41671d:	e9 b7 fa ff ff       	jmpq   4161d9 <make_envp+0x829>
    if ( hc->remoteuser[0] != '\0' )
  416722:	e8 29 cb fe ff       	callq  403250 <__asan_report_load8@plt>
	"SCRIPT_NAME=/%s", strcmp( hc->origfilename, "." ) == 0 ?
  416727:	e8 24 cb fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->query[0] != '\0')
  41672c:	e8 1f cb fe ff       	callq  403250 <__asan_report_load8@plt>
    envp[envn++] = build_env(
  416731:	e8 6a c8 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    if ( hc->useragent[0] != '\0' )
  416736:	e8 15 cb fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->contenttype[0] != '\0' )
  41673b:	e8 10 cb fe ff       	callq  403250 <__asan_report_load8@plt>
    envp[envn] = (char*) 0;
  416740:	e8 5b c8 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    if ( hc->accept[0] != '\0' )
  416745:	e8 06 cb fe ff       	callq  403250 <__asan_report_load8@plt>
    envp[envn++] = build_env( "CGI_PATTERN=%s", hc->hs->cgi_pattern );
  41674a:	e8 51 c8 fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41674f:	e8 fc ca fe ff       	callq  403250 <__asan_report_load8@plt>
  416754:	48 8b 3c 24          	mov    (%rsp),%rdi
  416758:	e8 f3 ca fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->hs->vhost && hc->hostname != (char*) 0 )
  41675d:	48 8b 3c 24          	mov    (%rsp),%rdi
  416761:	e8 ea ca fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->authorization[0] != '\0' )
  416766:	e8 e5 ca fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->referer[0] != '\0' )
  41676b:	e8 e0 ca fe ff       	callq  403250 <__asan_report_load8@plt>
    envp[envn++] = build_env(
  416770:	e8 2b c8 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    envp[envn++] = build_env( "SERVER_PORT=%s", buf );
  416775:	e8 26 c8 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    envp[envn++] = build_env("SERVER_PROTOCOL=%s", hc->protocol);
  41677a:	e8 d1 ca fe ff       	callq  403250 <__asan_report_load8@plt>
    envp[envn++] = "GATEWAY_INTERFACE=CGI/1.1";
  41677f:	e8 1c c8 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    if ( hc->pathinfo[0] != '\0' )
  416784:	48 89 d7             	mov    %rdx,%rdi
  416787:	e8 c4 ca fe ff       	callq  403250 <__asan_report_load8@plt>
    envp[envn++] = build_env(
  41678c:	e8 0f c8 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    (void) my_snprintf( buf, sizeof(buf), "%d", (int) hc->hs->port );
  416791:	48 8b 3c 24          	mov    (%rsp),%rdi
  416795:	e8 b6 ca fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->acceptl[0] != '\0' )
  41679a:	e8 b1 ca fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->cookie[0] != '\0' )
  41679f:	e8 ac ca fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->accepte[0] != '\0' )
  4167a4:	e8 a7 ca fe ff       	callq  403250 <__asan_report_load8@plt>
	cp = hc->hs->server_hostname;
  4167a9:	e8 a2 ca fe ff       	callq  403250 <__asan_report_load8@plt>
	envp[envn++] = build_env( "TZ=%s", getenv( "TZ" ) );
  4167ae:	e8 ed c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	envp[envn++] = build_env( "HTTP_COOKIE=%s", hc->cookie );
  4167b3:	e8 e8 c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	envp[envn++] = build_env( "CONTENT_TYPE=%s", hc->contenttype );
  4167b8:	e8 e3 c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	envp[envn++] = build_env( "REMOTE_USER=%s", hc->remoteuser );
  4167bd:	e8 de c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	envp[envn++] = build_env( "CONTENT_LENGTH=%s", buf );
  4167c2:	e8 d9 c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	envp[envn++] = build_env( "HTTP_ACCEPT_LANGUAGE=%s", hc->acceptl );
  4167c7:	e8 d4 c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	envp[envn++] = build_env( "HTTP_ACCEPT_ENCODING=%s", hc->accepte );
  4167cc:	e8 cf c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	envp[envn++] = build_env( "PATH_INFO=/%s", hc->pathinfo );
  4167d1:	e8 ca c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	l = strlen( hc->hs->cwd ) + strlen( hc->pathinfo ) + 1;
  4167d6:	48 8b 3c 24          	mov    (%rsp),%rdi
  4167da:	e8 71 ca fe ff       	callq  403250 <__asan_report_load8@plt>
  4167df:	e8 6c ca fe ff       	callq  403250 <__asan_report_load8@plt>
  4167e4:	48 89 d7             	mov    %rdx,%rdi
  4167e7:	e8 64 ca fe ff       	callq  403250 <__asan_report_load8@plt>
	envp[envn++] = build_env( "HTTP_REFERER=%s", hc->referer );
  4167ec:	e8 af c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	envp[envn++] = build_env( "QUERY_STRING=%s", hc->query );
  4167f1:	e8 aa c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	envp[envn++] = build_env( "HTTP_USER_AGENT=%s", hc->useragent );
  4167f6:	e8 a5 c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	envp[envn++] = build_env( "HTTP_ACCEPT=%s", hc->accept );
  4167fb:	e8 a0 c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	envp[envn++] = build_env( "HTTP_HOST=%s", hc->hdrhost );
  416800:	e8 9b c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	envp[envn++] = build_env( "AUTH_TYPE=%s", "Basic" );
  416805:	e8 96 c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	    envp[envn++] = build_env( "PATH_TRANSLATED=%s", cp2 );
  41680a:	e8 91 c7 fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41680f:	90                   	nop

0000000000416810 <httpd_read_fully>:


/* Read the requested buffer completely, accounting for interruptions. */
int
httpd_read_fully( int fd, void* buf, size_t nbytes )
    {
  416810:	41 57                	push   %r15
  416812:	41 56                	push   %r14
  416814:	41 89 fe             	mov    %edi,%r14d
  416817:	41 55                	push   %r13
  416819:	49 89 f5             	mov    %rsi,%r13
  41681c:	41 54                	push   %r12
  41681e:	49 89 d4             	mov    %rdx,%r12
  416821:	55                   	push   %rbp
    int nread;

    nread = 0;
  416822:	31 ed                	xor    %ebp,%ebp
    {
  416824:	53                   	push   %rbx
  416825:	31 db                	xor    %ebx,%ebx
  416827:	48 83 ec 08          	sub    $0x8,%rsp
    while ( nread < nbytes )
  41682b:	eb 0a                	jmp    416837 <httpd_read_fully+0x27>
  41682d:	0f 1f 00             	nopl   (%rax)
	    sleep( 1 );
	    continue;
	    }
	if ( r < 0 )
	    return r;
	if ( r == 0 )
  416830:	74 7e                	je     4168b0 <httpd_read_fully+0xa0>
	    break;
	nread += r;
  416832:	01 c5                	add    %eax,%ebp
  416834:	48 63 dd             	movslq %ebp,%rbx
    while ( nread < nbytes )
  416837:	4c 39 e3             	cmp    %r12,%rbx
  41683a:	73 74                	jae    4168b0 <httpd_read_fully+0xa0>
	r = read( fd, (char*) buf + nread, nbytes - nread );
  41683c:	4c 89 e2             	mov    %r12,%rdx
  41683f:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
  416844:	44 89 f7             	mov    %r14d,%edi
  416847:	48 29 da             	sub    %rbx,%rdx
  41684a:	e8 71 c6 fe ff       	callq  402ec0 <read@plt>
  41684f:	41 89 c7             	mov    %eax,%r15d
	if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
  416852:	85 c0                	test   %eax,%eax
  416854:	79 da                	jns    416830 <httpd_read_fully+0x20>
  416856:	e8 a5 c3 fe ff       	callq  402c00 <__errno_location@plt>
  41685b:	48 89 c2             	mov    %rax,%rdx
  41685e:	48 c1 ea 03          	shr    $0x3,%rdx
  416862:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  416869:	48 89 c2             	mov    %rax,%rdx
  41686c:	83 e2 07             	and    $0x7,%edx
  41686f:	83 c2 03             	add    $0x3,%edx
  416872:	38 ca                	cmp    %cl,%dl
  416874:	7c 04                	jl     41687a <httpd_read_fully+0x6a>
  416876:	84 c9                	test   %cl,%cl
  416878:	75 3b                	jne    4168b5 <httpd_read_fully+0xa5>
  41687a:	8b 00                	mov    (%rax),%eax
  41687c:	83 f8 04             	cmp    $0x4,%eax
  41687f:	74 1f                	je     4168a0 <httpd_read_fully+0x90>
  416881:	83 f8 0b             	cmp    $0xb,%eax
  416884:	74 1a                	je     4168a0 <httpd_read_fully+0x90>
	}

    return nread;
    }
  416886:	48 83 c4 08          	add    $0x8,%rsp
  41688a:	44 89 f8             	mov    %r15d,%eax
  41688d:	5b                   	pop    %rbx
  41688e:	5d                   	pop    %rbp
  41688f:	41 5c                	pop    %r12
  416891:	41 5d                	pop    %r13
  416893:	41 5e                	pop    %r14
  416895:	41 5f                	pop    %r15
  416897:	c3                   	retq   
  416898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41689f:	00 
	    sleep( 1 );
  4168a0:	bf 01 00 00 00       	mov    $0x1,%edi
  4168a5:	e8 c6 c5 fe ff       	callq  402e70 <sleep@plt>
    while ( nread < nbytes )
  4168aa:	4c 39 e3             	cmp    %r12,%rbx
  4168ad:	72 8d                	jb     41683c <httpd_read_fully+0x2c>
  4168af:	90                   	nop
  4168b0:	41 89 ef             	mov    %ebp,%r15d
  4168b3:	eb d1                	jmp    416886 <httpd_read_fully+0x76>
	if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
  4168b5:	48 89 c7             	mov    %rax,%rdi
  4168b8:	e8 13 c5 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  4168bd:	0f 1f 00             	nopl   (%rax)

00000000004168c0 <httpd_write_fully>:


/* Write the requested buffer completely, accounting for interruptions. */
int
httpd_write_fully( int fd, const void* buf, size_t nbytes )
    {
  4168c0:	41 57                	push   %r15
  4168c2:	41 56                	push   %r14
  4168c4:	41 89 fe             	mov    %edi,%r14d
  4168c7:	41 55                	push   %r13
  4168c9:	49 89 f5             	mov    %rsi,%r13
  4168cc:	41 54                	push   %r12
  4168ce:	49 89 d4             	mov    %rdx,%r12
  4168d1:	55                   	push   %rbp
    int nwritten;

    nwritten = 0;
  4168d2:	31 ed                	xor    %ebp,%ebp
    {
  4168d4:	53                   	push   %rbx
  4168d5:	31 db                	xor    %ebx,%ebx
  4168d7:	48 83 ec 08          	sub    $0x8,%rsp
    while ( nwritten < nbytes )
  4168db:	eb 0a                	jmp    4168e7 <httpd_write_fully+0x27>
  4168dd:	0f 1f 00             	nopl   (%rax)
	    sleep( 1 );
	    continue;
	    }
	if ( r < 0 )
	    return r;
	if ( r == 0 )
  4168e0:	74 7e                	je     416960 <httpd_write_fully+0xa0>
	    break;
	nwritten += r;
  4168e2:	01 c5                	add    %eax,%ebp
  4168e4:	48 63 dd             	movslq %ebp,%rbx
    while ( nwritten < nbytes )
  4168e7:	4c 39 e3             	cmp    %r12,%rbx
  4168ea:	73 74                	jae    416960 <httpd_write_fully+0xa0>
	r = write( fd, (char*) buf + nwritten, nbytes - nwritten );
  4168ec:	4c 89 e2             	mov    %r12,%rdx
  4168ef:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
  4168f4:	44 89 f7             	mov    %r14d,%edi
  4168f7:	48 29 da             	sub    %rbx,%rdx
  4168fa:	e8 61 c6 fe ff       	callq  402f60 <write@plt>
  4168ff:	41 89 c7             	mov    %eax,%r15d
	if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
  416902:	85 c0                	test   %eax,%eax
  416904:	79 da                	jns    4168e0 <httpd_write_fully+0x20>
  416906:	e8 f5 c2 fe ff       	callq  402c00 <__errno_location@plt>
  41690b:	48 89 c2             	mov    %rax,%rdx
  41690e:	48 c1 ea 03          	shr    $0x3,%rdx
  416912:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  416919:	48 89 c2             	mov    %rax,%rdx
  41691c:	83 e2 07             	and    $0x7,%edx
  41691f:	83 c2 03             	add    $0x3,%edx
  416922:	38 ca                	cmp    %cl,%dl
  416924:	7c 04                	jl     41692a <httpd_write_fully+0x6a>
  416926:	84 c9                	test   %cl,%cl
  416928:	75 3b                	jne    416965 <httpd_write_fully+0xa5>
  41692a:	8b 00                	mov    (%rax),%eax
  41692c:	83 f8 04             	cmp    $0x4,%eax
  41692f:	74 1f                	je     416950 <httpd_write_fully+0x90>
  416931:	83 f8 0b             	cmp    $0xb,%eax
  416934:	74 1a                	je     416950 <httpd_write_fully+0x90>
	}

    return nwritten;
    }
  416936:	48 83 c4 08          	add    $0x8,%rsp
  41693a:	44 89 f8             	mov    %r15d,%eax
  41693d:	5b                   	pop    %rbx
  41693e:	5d                   	pop    %rbp
  41693f:	41 5c                	pop    %r12
  416941:	41 5d                	pop    %r13
  416943:	41 5e                	pop    %r14
  416945:	41 5f                	pop    %r15
  416947:	c3                   	retq   
  416948:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41694f:	00 
	    sleep( 1 );
  416950:	bf 01 00 00 00       	mov    $0x1,%edi
  416955:	e8 16 c5 fe ff       	callq  402e70 <sleep@plt>
    while ( nwritten < nbytes )
  41695a:	4c 39 e3             	cmp    %r12,%rbx
  41695d:	72 8d                	jb     4168ec <httpd_write_fully+0x2c>
  41695f:	90                   	nop
  416960:	41 89 ef             	mov    %ebp,%r15d
  416963:	eb d1                	jmp    416936 <httpd_write_fully+0x76>
	if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
  416965:	48 89 c7             	mov    %rax,%rdi
  416968:	e8 63 c4 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41696d:	0f 1f 00             	nopl   (%rax)

0000000000416970 <httpd_write_response>:
    {
  416970:	55                   	push   %rbp
  416971:	53                   	push   %rbx
  416972:	48 89 fb             	mov    %rdi,%rbx
  416975:	48 83 ec 08          	sub    $0x8,%rsp
    if ( sub_process )
  416979:	8b 05 21 c3 22 00    	mov    0x22c321(%rip),%eax        # 642ca0 <sub_process>
  41697f:	85 c0                	test   %eax,%eax
  416981:	75 35                	jne    4169b8 <httpd_write_response+0x48>
    if ( hc->responselen > 0 )
  416983:	48 8d ab d8 01 00 00 	lea    0x1d8(%rbx),%rbp
  41698a:	48 89 e8             	mov    %rbp,%rax
  41698d:	48 c1 e8 03          	shr    $0x3,%rax
  416991:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  416998:	0f 85 bc 00 00 00    	jne    416a5a <httpd_write_response+0xea>
  41699e:	48 8b 93 d8 01 00 00 	mov    0x1d8(%rbx),%rdx
  4169a5:	48 85 d2             	test   %rdx,%rdx
  4169a8:	75 3e                	jne    4169e8 <httpd_write_response+0x78>
    }
  4169aa:	48 83 c4 08          	add    $0x8,%rsp
  4169ae:	5b                   	pop    %rbx
  4169af:	5d                   	pop    %rbp
  4169b0:	c3                   	retq   
  4169b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	httpd_clear_ndelay( hc->conn_fd );
  4169b8:	48 8d bf c0 02 00 00 	lea    0x2c0(%rdi),%rdi
  4169bf:	48 89 f8             	mov    %rdi,%rax
  4169c2:	48 c1 e8 03          	shr    $0x3,%rax
  4169c6:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4169cd:	84 c0                	test   %al,%al
  4169cf:	74 04                	je     4169d5 <httpd_write_response+0x65>
  4169d1:	3c 03                	cmp    $0x3,%al
  4169d3:	7e 7b                	jle    416a50 <httpd_write_response+0xe0>
  4169d5:	8b bb c0 02 00 00    	mov    0x2c0(%rbx),%edi
  4169db:	e8 10 69 ff ff       	callq  40d2f0 <httpd_clear_ndelay>
  4169e0:	eb a1                	jmp    416983 <httpd_write_response+0x13>
  4169e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	(void) httpd_write_fully( hc->conn_fd, hc->response, hc->responselen );
  4169e8:	48 8d bb 70 01 00 00 	lea    0x170(%rbx),%rdi
  4169ef:	48 89 f8             	mov    %rdi,%rax
  4169f2:	48 c1 e8 03          	shr    $0x3,%rax
  4169f6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4169fd:	75 6b                	jne    416a6a <httpd_write_response+0xfa>
  4169ff:	48 8d bb c0 02 00 00 	lea    0x2c0(%rbx),%rdi
  416a06:	48 8b b3 70 01 00 00 	mov    0x170(%rbx),%rsi
  416a0d:	48 89 f8             	mov    %rdi,%rax
  416a10:	48 c1 e8 03          	shr    $0x3,%rax
  416a14:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  416a1b:	84 c0                	test   %al,%al
  416a1d:	74 04                	je     416a23 <httpd_write_response+0xb3>
  416a1f:	3c 03                	cmp    $0x3,%al
  416a21:	7e 32                	jle    416a55 <httpd_write_response+0xe5>
  416a23:	8b bb c0 02 00 00    	mov    0x2c0(%rbx),%edi
  416a29:	e8 92 fe ff ff       	callq  4168c0 <httpd_write_fully>
	hc->responselen = 0;
  416a2e:	48 89 e8             	mov    %rbp,%rax
  416a31:	48 c1 e8 03          	shr    $0x3,%rax
  416a35:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  416a3c:	75 24                	jne    416a62 <httpd_write_response+0xf2>
  416a3e:	48 c7 83 d8 01 00 00 	movq   $0x0,0x1d8(%rbx)
  416a45:	00 00 00 00 
    }
  416a49:	48 83 c4 08          	add    $0x8,%rsp
  416a4d:	5b                   	pop    %rbx
  416a4e:	5d                   	pop    %rbp
  416a4f:	c3                   	retq   
	httpd_clear_ndelay( hc->conn_fd );
  416a50:	e8 7b c3 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	(void) httpd_write_fully( hc->conn_fd, hc->response, hc->responselen );
  416a55:	e8 76 c3 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( hc->responselen > 0 )
  416a5a:	48 89 ef             	mov    %rbp,%rdi
  416a5d:	e8 ee c7 fe ff       	callq  403250 <__asan_report_load8@plt>
	hc->responselen = 0;
  416a62:	48 89 ef             	mov    %rbp,%rdi
  416a65:	e8 36 c5 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	(void) httpd_write_fully( hc->conn_fd, hc->response, hc->responselen );
  416a6a:	e8 e1 c7 fe ff       	callq  403250 <__asan_report_load8@plt>
  416a6f:	90                   	nop

0000000000416a70 <ls>:
    {
  416a70:	41 57                	push   %r15
  416a72:	41 56                	push   %r14
  416a74:	41 55                	push   %r13
  416a76:	41 54                	push   %r12
  416a78:	55                   	push   %rbp
  416a79:	53                   	push   %rbx
  416a7a:	48 89 fb             	mov    %rdi,%rbx
  416a7d:	48 81 ec 68 12 00 00 	sub    $0x1268,%rsp
  416a84:	44 8b 05 75 a8 22 00 	mov    0x22a875(%rip),%r8d        # 641300 <__asan_option_detect_stack_use_after_return>
  416a8b:	4c 8d 74 24 40       	lea    0x40(%rsp),%r14
  416a90:	4d 89 f5             	mov    %r14,%r13
  416a93:	45 85 c0             	test   %r8d,%r8d
  416a96:	0f 85 a7 15 00 00    	jne    418043 <ls+0x15d3>
    dirp = opendir( hc->expnfilename );
  416a9c:	48 8d 83 f0 00 00 00 	lea    0xf0(%rbx),%rax
    {
  416aa3:	4d 89 f7             	mov    %r14,%r15
  416aa6:	49 c7 06 b3 8a b5 41 	movq   $0x41b58ab3,(%r14)
  416aad:	4d 8d a6 20 12 00 00 	lea    0x1220(%r14),%r12
    dirp = opendir( hc->expnfilename );
  416ab4:	48 89 c5             	mov    %rax,%rbp
    {
  416ab7:	49 c1 ef 03          	shr    $0x3,%r15
  416abb:	49 c7 46 08 c0 c8 42 	movq   $0x42c8c0,0x8(%r14)
  416ac2:	00 
    dirp = opendir( hc->expnfilename );
  416ac3:	48 c1 ed 03          	shr    $0x3,%rbp
    {
  416ac7:	49 c7 46 10 70 6a 41 	movq   $0x416a70,0x10(%r14)
  416ace:	00 
  416acf:	41 c7 87 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r15)
  416ad6:	f1 f1 f1 f1 
  416ada:	41 c7 87 04 80 ff 7f 	movl   $0xf2040000,0x7fff8004(%r15)
  416ae1:	00 00 04 f2 
  416ae5:	41 c7 87 08 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8008(%r15)
  416aec:	f2 f2 f2 f2 
  416af0:	41 c7 87 1c 80 ff 7f 	movl   $0xf2f20000,0x7fff801c(%r15)
  416af7:	00 00 f2 f2 
  416afb:	41 c7 87 20 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8020(%r15)
  416b02:	f2 f2 f2 f2 
  416b06:	41 c7 87 34 80 ff 7f 	movl   $0xf2f20000,0x7fff8034(%r15)
  416b0d:	00 00 f2 f2 
  416b11:	41 c7 87 38 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8038(%r15)
  416b18:	f2 f2 f2 f2 
  416b1c:	41 c7 87 3c 82 ff 7f 	movl   $0xf2f2f201,0x7fff823c(%r15)
  416b23:	01 f2 f2 f2 
  416b27:	41 c7 87 40 82 ff 7f 	movl   $0xf3f3f3f3,0x7fff8240(%r15)
  416b2e:	f3 f3 f3 f3 
    dirp = opendir( hc->expnfilename );
  416b32:	80 bd 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rbp)
  416b39:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  416b3e:	0f 85 ef 14 00 00    	jne    418033 <ls+0x15c3>
  416b44:	48 8b bb f0 00 00 00 	mov    0xf0(%rbx),%rdi
  416b4b:	e8 40 c7 fe ff       	callq  403290 <opendir@plt>
  416b50:	48 89 04 24          	mov    %rax,(%rsp)
    if ( dirp == (DIR*) 0 )
  416b54:	48 85 c0             	test   %rax,%rax
  416b57:	0f 84 fa 12 00 00    	je     417e57 <ls+0x13e7>
    if ( hc->method == METHOD_HEAD )
  416b5d:	48 8d ab b4 00 00 00 	lea    0xb4(%rbx),%rbp
  416b64:	48 89 e8             	mov    %rbp,%rax
  416b67:	48 c1 e8 03          	shr    $0x3,%rax
  416b6b:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  416b72:	48 89 e8             	mov    %rbp,%rax
  416b75:	83 e0 07             	and    $0x7,%eax
  416b78:	83 c0 03             	add    $0x3,%eax
  416b7b:	38 d0                	cmp    %dl,%al
  416b7d:	7c 08                	jl     416b87 <ls+0x117>
  416b7f:	84 d2                	test   %dl,%dl
  416b81:	0f 85 d2 14 00 00    	jne    418059 <ls+0x15e9>
  416b87:	8b 83 b4 00 00 00    	mov    0xb4(%rbx),%eax
  416b8d:	83 f8 02             	cmp    $0x2,%eax
  416b90:	0f 84 dd 0d 00 00    	je     417973 <ls+0xf03>
    else if ( hc->method == METHOD_GET )
  416b96:	83 f8 01             	cmp    $0x1,%eax
  416b99:	0f 85 97 11 00 00    	jne    417d36 <ls+0x12c6>
	if ( hc->hs->cgi_limit != 0 && hc->hs->cgi_count >= hc->hs->cgi_limit )
  416b9f:	48 8d 4b 08          	lea    0x8(%rbx),%rcx
  416ba3:	48 89 c8             	mov    %rcx,%rax
  416ba6:	48 c1 e8 03          	shr    $0x3,%rax
  416baa:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  416bb1:	0f 85 84 14 00 00    	jne    41803b <ls+0x15cb>
  416bb7:	48 8b 43 08          	mov    0x8(%rbx),%rax
  416bbb:	48 8d 78 20          	lea    0x20(%rax),%rdi
  416bbf:	48 89 fa             	mov    %rdi,%rdx
  416bc2:	48 c1 ea 03          	shr    $0x3,%rdx
  416bc6:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  416bcd:	84 d2                	test   %dl,%dl
  416bcf:	74 09                	je     416bda <ls+0x16a>
  416bd1:	80 fa 03             	cmp    $0x3,%dl
  416bd4:	0f 8e 14 14 00 00    	jle    417fee <ls+0x157e>
  416bda:	48 8d 78 24          	lea    0x24(%rax),%rdi
  416bde:	8b 70 20             	mov    0x20(%rax),%esi
  416be1:	48 89 fa             	mov    %rdi,%rdx
  416be4:	48 c1 ea 03          	shr    $0x3,%rdx
  416be8:	44 0f b6 82 00 80 ff 	movzbl 0x7fff8000(%rdx),%r8d
  416bef:	7f 
  416bf0:	48 89 fa             	mov    %rdi,%rdx
  416bf3:	83 e2 07             	and    $0x7,%edx
  416bf6:	83 c2 03             	add    $0x3,%edx
  416bf9:	44 38 c2             	cmp    %r8b,%dl
  416bfc:	7c 09                	jl     416c07 <ls+0x197>
  416bfe:	45 84 c0             	test   %r8b,%r8b
  416c01:	0f 85 e2 13 00 00    	jne    417fe9 <ls+0x1579>
  416c07:	8b 50 24             	mov    0x24(%rax),%edx
  416c0a:	85 f6                	test   %esi,%esi
  416c0c:	74 08                	je     416c16 <ls+0x1a6>
  416c0e:	39 d6                	cmp    %edx,%esi
  416c10:	0f 8e 81 11 00 00    	jle    417d97 <ls+0x1327>
	++hc->hs->cgi_count;
  416c16:	83 c2 01             	add    $0x1,%edx
  416c19:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  416c1e:	89 50 24             	mov    %edx,0x24(%rax)
	r = fork( );
  416c21:	e8 ea c0 fe ff       	callq  402d10 <fork@plt>
	if ( r < 0 )
  416c26:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  416c2b:	85 c0                	test   %eax,%eax
	r = fork( );
  416c2d:	89 c5                	mov    %eax,%ebp
	if ( r < 0 )
  416c2f:	0f 88 b7 11 00 00    	js     417dec <ls+0x137c>
	if ( r == 0 )
  416c35:	0f 85 45 02 00 00    	jne    416e80 <ls+0x410>
	    sub_process = 1;
  416c3b:	c7 05 5b c0 22 00 01 	movl   $0x1,0x22c05b(%rip)        # 642ca0 <sub_process>
  416c42:	00 00 00 
	    httpd_unlisten( hc->hs );
  416c45:	48 89 c8             	mov    %rcx,%rax
  416c48:	48 c1 e8 03          	shr    $0x3,%rax
  416c4c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  416c53:	0f 85 9a 13 00 00    	jne    417ff3 <ls+0x1583>
  416c59:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  416c5d:	e8 de 63 ff ff       	callq  40d040 <httpd_unlisten>
	    send_mime(
  416c62:	48 8d bb 88 02 00 00 	lea    0x288(%rbx),%rdi
  416c69:	48 89 f8             	mov    %rdi,%rax
  416c6c:	48 c1 e8 03          	shr    $0x3,%rax
  416c70:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  416c77:	0f 85 7e 13 00 00    	jne    417ffb <ls+0x158b>
  416c7d:	ff b3 88 02 00 00    	pushq  0x288(%rbx)
  416c83:	41 b8 60 38 42 00    	mov    $0x423860,%r8d
  416c89:	ba 20 5e 42 00       	mov    $0x425e20,%edx
  416c8e:	41 b9 20 38 42 00    	mov    $0x423820,%r9d
  416c94:	6a ff                	pushq  $0xffffffffffffffff
  416c96:	4c 89 c1             	mov    %r8,%rcx
  416c99:	be c8 00 00 00       	mov    $0xc8,%esi
  416c9e:	48 89 df             	mov    %rbx,%rdi
  416ca1:	e8 ca 68 ff ff       	callq  40d570 <send_mime>
	    httpd_write_response( hc );
  416ca6:	48 89 df             	mov    %rbx,%rdi
  416ca9:	e8 c2 fc ff ff       	callq  416970 <httpd_write_response>
	    (void) nice( CGI_NICE );
  416cae:	bf 0a 00 00 00       	mov    $0xa,%edi
  416cb3:	e8 68 c3 fe ff       	callq  403020 <nice@plt>
	    fp = fdopen( hc->conn_fd, "w" );
  416cb8:	48 8d bb c0 02 00 00 	lea    0x2c0(%rbx),%rdi
  416cbf:	5a                   	pop    %rdx
  416cc0:	59                   	pop    %rcx
  416cc1:	48 89 f8             	mov    %rdi,%rax
  416cc4:	48 c1 e8 03          	shr    $0x3,%rax
  416cc8:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  416ccf:	84 c0                	test   %al,%al
  416cd1:	74 08                	je     416cdb <ls+0x26b>
  416cd3:	3c 03                	cmp    $0x3,%al
  416cd5:	0f 8e ff 12 00 00    	jle    417fda <ls+0x156a>
  416cdb:	8b bb c0 02 00 00    	mov    0x2c0(%rbx),%edi
  416ce1:	be a0 5e 42 00       	mov    $0x425ea0,%esi
  416ce6:	e8 b5 c3 fe ff       	callq  4030a0 <fdopen@plt>
  416ceb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
	    if ( fp == (FILE*) 0 )
  416cf0:	48 85 c0             	test   %rax,%rax
  416cf3:	0f 84 d9 13 00 00    	je     4180d2 <ls+0x1662>
	    (void) fprintf( fp, "\
  416cf9:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
  416d00:	48 89 f8             	mov    %rdi,%rax
  416d03:	48 c1 e8 03          	shr    $0x3,%rax
  416d07:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  416d0e:	0f 85 62 14 00 00    	jne    418176 <ls+0x1706>
  416d14:	48 8b 93 d0 00 00 00 	mov    0xd0(%rbx),%rdx
  416d1b:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  416d20:	31 c0                	xor    %eax,%eax
	    while ( ( de = readdir( dirp ) ) != 0 )     /* dirent or direct */
  416d22:	31 ed                	xor    %ebp,%ebp
	    (void) fprintf( fp, "\
  416d24:	be 20 5f 42 00       	mov    $0x425f20,%esi
  416d29:	48 89 d1             	mov    %rdx,%rcx
  416d2c:	e8 ff bf fe ff       	callq  402d30 <fprintf@plt>
	    while ( ( de = readdir( dirp ) ) != 0 )     /* dirent or direct */
  416d31:	4c 8b 2c 24          	mov    (%rsp),%r13
  416d35:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
  416d3a:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
  416d3f:	eb 69                	jmp    416daa <ls+0x33a>
  416d41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
		namlen = NAMLEN(de);
  416d48:	49 8d 5f 13          	lea    0x13(%r15),%rbx
		(void) strncpy( nameptrs[nnames], de->d_name, namlen );
  416d4c:	4d 8d 3c ec          	lea    (%r12,%rbp,8),%r15
		namlen = NAMLEN(de);
  416d50:	48 89 df             	mov    %rbx,%rdi
  416d53:	e8 28 bf fe ff       	callq  402c80 <strlen@plt>
		(void) strncpy( nameptrs[nnames], de->d_name, namlen );
  416d58:	4c 63 f0             	movslq %eax,%r14
  416d5b:	4c 89 f8             	mov    %r15,%rax
  416d5e:	48 c1 e8 03          	shr    $0x3,%rax
  416d62:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  416d69:	0f 85 e0 10 00 00    	jne    417e4f <ls+0x13df>
  416d6f:	49 8b 3f             	mov    (%r15),%rdi
  416d72:	4c 89 f2             	mov    %r14,%rdx
  416d75:	48 89 de             	mov    %rbx,%rsi
  416d78:	e8 e3 be fe ff       	callq  402c60 <strncpy@plt>
		nameptrs[nnames][namlen] = '\0';
  416d7d:	49 8b 07             	mov    (%r15),%rax
  416d80:	4c 01 f0             	add    %r14,%rax
  416d83:	48 89 c2             	mov    %rax,%rdx
  416d86:	48 89 c1             	mov    %rax,%rcx
  416d89:	48 c1 ea 03          	shr    $0x3,%rdx
  416d8d:	83 e1 07             	and    $0x7,%ecx
  416d90:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  416d97:	38 ca                	cmp    %cl,%dl
  416d99:	7f 08                	jg     416da3 <ls+0x333>
  416d9b:	84 d2                	test   %dl,%dl
  416d9d:	0f 85 22 11 00 00    	jne    417ec5 <ls+0x1455>
  416da3:	c6 00 00             	movb   $0x0,(%rax)
		++nnames;
  416da6:	48 83 c5 01          	add    $0x1,%rbp
	    while ( ( de = readdir( dirp ) ) != 0 )     /* dirent or direct */
  416daa:	4c 89 ef             	mov    %r13,%rdi
  416dad:	e8 be c5 fe ff       	callq  403370 <readdir@plt>
  416db2:	49 89 c7             	mov    %rax,%r15
  416db5:	48 85 c0             	test   %rax,%rax
  416db8:	0f 84 45 02 00 00    	je     417003 <ls+0x593>
		if ( nnames >= maxnames )
  416dbe:	8b 05 7c b9 22 00    	mov    0x22b97c(%rip),%eax        # 642740 <maxnames.6486>
  416dc4:	4c 8b 25 f5 b8 22 00 	mov    0x22b8f5(%rip),%r12        # 6426c0 <nameptrs.6489>
  416dcb:	39 e8                	cmp    %ebp,%eax
  416dcd:	0f 8f 75 ff ff ff    	jg     416d48 <ls+0x2d8>
		    if ( maxnames == 0 )
  416dd3:	85 c0                	test   %eax,%eax
  416dd5:	0f 85 dd 01 00 00    	jne    416fb8 <ls+0x548>
			maxnames = 100;
  416ddb:	c7 05 5b b9 22 00 64 	movl   $0x64,0x22b95b(%rip)        # 642740 <maxnames.6486>
  416de2:	00 00 00 
			names = NEW( char, maxnames * ( MAXPATHLEN + 1 ) );
  416de5:	bf 64 40 06 00       	mov    $0x64064,%edi
  416dea:	e8 c1 c2 fe ff       	callq  4030b0 <malloc@plt>
			nameptrs = NEW( char*, maxnames );
  416def:	bf 20 03 00 00       	mov    $0x320,%edi
			names = NEW( char, maxnames * ( MAXPATHLEN + 1 ) );
  416df4:	49 89 c6             	mov    %rax,%r14
  416df7:	48 89 05 02 b9 22 00 	mov    %rax,0x22b902(%rip)        # 642700 <names.6488>
			nameptrs = NEW( char*, maxnames );
  416dfe:	e8 ad c2 fe ff       	callq  4030b0 <malloc@plt>
  416e03:	48 89 05 b6 b8 22 00 	mov    %rax,0x22b8b6(%rip)        # 6426c0 <nameptrs.6489>
		    if ( names == (char*) 0 || nameptrs == (char**) 0 )
  416e0a:	4d 85 f6             	test   %r14,%r14
  416e0d:	0f 84 ba 10 00 00    	je     417ecd <ls+0x145d>
  416e13:	4c 8b 25 a6 b8 22 00 	mov    0x22b8a6(%rip),%r12        # 6426c0 <nameptrs.6489>
  416e1a:	4d 85 e4             	test   %r12,%r12
  416e1d:	0f 84 aa 10 00 00    	je     417ecd <ls+0x145d>
		    for ( i = 0; i < maxnames; ++i )
  416e23:	8b 0d 17 b9 22 00    	mov    0x22b917(%rip),%ecx        # 642740 <maxnames.6486>
  416e29:	85 c9                	test   %ecx,%ecx
  416e2b:	0f 8e 17 ff ff ff    	jle    416d48 <ls+0x2d8>
  416e31:	83 e9 01             	sub    $0x1,%ecx
  416e34:	4c 89 e2             	mov    %r12,%rdx
  416e37:	4c 89 f0             	mov    %r14,%rax
  416e3a:	49 8d 74 cc 08       	lea    0x8(%r12,%rcx,8),%rsi
  416e3f:	eb 1d                	jmp    416e5e <ls+0x3ee>
  416e41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
			nameptrs[i] = &names[i * ( MAXPATHLEN + 1 )];
  416e48:	48 89 02             	mov    %rax,(%rdx)
  416e4b:	48 83 c2 08          	add    $0x8,%rdx
  416e4f:	48 05 01 10 00 00    	add    $0x1001,%rax
		    for ( i = 0; i < maxnames; ++i )
  416e55:	48 39 f2             	cmp    %rsi,%rdx
  416e58:	0f 84 ea fe ff ff    	je     416d48 <ls+0x2d8>
			nameptrs[i] = &names[i * ( MAXPATHLEN + 1 )];
  416e5e:	48 89 d1             	mov    %rdx,%rcx
  416e61:	48 c1 e9 03          	shr    $0x3,%rcx
  416e65:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  416e6c:	74 da                	je     416e48 <ls+0x3d8>
  416e6e:	48 89 d7             	mov    %rdx,%rdi
  416e71:	e8 2a c1 fe ff       	callq  402fa0 <__asan_report_store8@plt>
  416e76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  416e7d:	00 00 00 
	closedir( dirp );
  416e80:	48 8b 3c 24          	mov    (%rsp),%rdi
  416e84:	e8 57 c4 fe ff       	callq  4032e0 <closedir@plt>
	syslog( LOG_INFO, "spawned indexing process %d for directory '%.200s'", r, hc->expnfilename );
  416e89:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  416e8e:	48 c1 e8 03          	shr    $0x3,%rax
  416e92:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  416e99:	0f 85 ab 12 00 00    	jne    41814a <ls+0x16da>
  416e9f:	48 8b 8b f0 00 00 00 	mov    0xf0(%rbx),%rcx
  416ea6:	89 ea                	mov    %ebp,%edx
  416ea8:	be 60 61 42 00       	mov    $0x426160,%esi
  416ead:	31 c0                	xor    %eax,%eax
  416eaf:	bf 06 00 00 00       	mov    $0x6,%edi
  416eb4:	e8 87 bd fe ff       	callq  402c40 <syslog@plt>
	if ( tmr_create( (struct timeval*) 0, cgi_kill, client_data, CGI_TIMELIMIT * 1000L, 0 ) == (Timer*) 0 )
  416eb9:	45 31 c0             	xor    %r8d,%r8d
  416ebc:	31 ff                	xor    %edi,%edi
	client_data.i = r;
  416ebe:	89 ea                	mov    %ebp,%edx
	if ( tmr_create( (struct timeval*) 0, cgi_kill, client_data, CGI_TIMELIMIT * 1000L, 0 ) == (Timer*) 0 )
  416ec0:	b9 30 75 00 00       	mov    $0x7530,%ecx
  416ec5:	be 30 b5 40 00       	mov    $0x40b530,%esi
  416eca:	e8 c1 60 00 00       	callq  41cf90 <tmr_create>
  416ecf:	48 85 c0             	test   %rax,%rax
  416ed2:	0f 84 28 11 00 00    	je     418000 <ls+0x1590>
	hc->status = 200;
  416ed8:	48 8d bb b8 00 00 00 	lea    0xb8(%rbx),%rdi
  416edf:	48 89 f8             	mov    %rdi,%rax
  416ee2:	48 c1 e8 03          	shr    $0x3,%rax
  416ee6:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  416eed:	84 c0                	test   %al,%al
  416eef:	74 08                	je     416ef9 <ls+0x489>
  416ef1:	3c 03                	cmp    $0x3,%al
  416ef3:	0f 8e e6 10 00 00    	jle    417fdf <ls+0x156f>
	hc->bytes_sent = CGI_BYTECOUNT;
  416ef9:	48 8d bb c8 00 00 00 	lea    0xc8(%rbx),%rdi
	hc->status = 200;
  416f00:	c7 83 b8 00 00 00 c8 	movl   $0xc8,0xb8(%rbx)
  416f07:	00 00 00 
	hc->bytes_sent = CGI_BYTECOUNT;
  416f0a:	48 89 f8             	mov    %rdi,%rax
  416f0d:	48 c1 e8 03          	shr    $0x3,%rax
  416f11:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  416f18:	0f 85 00 11 00 00    	jne    41801e <ls+0x15ae>
	hc->should_linger = 0;
  416f1e:	48 8d bb 2c 02 00 00 	lea    0x22c(%rbx),%rdi
	hc->bytes_sent = CGI_BYTECOUNT;
  416f25:	48 c7 83 c8 00 00 00 	movq   $0x61a8,0xc8(%rbx)
  416f2c:	a8 61 00 00 
	hc->should_linger = 0;
  416f30:	48 89 f8             	mov    %rdi,%rax
  416f33:	48 c1 e8 03          	shr    $0x3,%rax
  416f37:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  416f3e:	48 89 f8             	mov    %rdi,%rax
  416f41:	83 e0 07             	and    $0x7,%eax
  416f44:	83 c0 03             	add    $0x3,%eax
  416f47:	38 d0                	cmp    %dl,%al
  416f49:	7c 08                	jl     416f53 <ls+0x4e3>
  416f4b:	84 d2                	test   %dl,%dl
  416f4d:	0f 85 91 10 00 00    	jne    417fe4 <ls+0x1574>
  416f53:	c7 83 2c 02 00 00 00 	movl   $0x0,0x22c(%rbx)
  416f5a:	00 00 00 
    return 0;
  416f5d:	31 db                	xor    %ebx,%ebx
    {
  416f5f:	4d 39 f5             	cmp    %r14,%r13
  416f62:	0f 85 4e 11 00 00    	jne    4180b6 <ls+0x1646>
  416f68:	49 c7 87 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r15)
  416f6f:	00 00 00 00 
  416f73:	41 c7 87 08 80 ff 7f 	movl   $0x0,0x7fff8008(%r15)
  416f7a:	00 00 00 00 
  416f7e:	49 c7 87 1c 80 ff 7f 	movq   $0x0,0x7fff801c(%r15)
  416f85:	00 00 00 00 
  416f89:	49 c7 87 34 80 ff 7f 	movq   $0x0,0x7fff8034(%r15)
  416f90:	00 00 00 00 
  416f94:	49 c7 87 3c 82 ff 7f 	movq   $0x0,0x7fff823c(%r15)
  416f9b:	00 00 00 00 
    }
  416f9f:	48 81 c4 68 12 00 00 	add    $0x1268,%rsp
  416fa6:	89 d8                	mov    %ebx,%eax
  416fa8:	5b                   	pop    %rbx
  416fa9:	5d                   	pop    %rbp
  416faa:	41 5c                	pop    %r12
  416fac:	41 5d                	pop    %r13
  416fae:	41 5e                	pop    %r14
  416fb0:	41 5f                	pop    %r15
  416fb2:	c3                   	retq   
  416fb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
			maxnames *= 2;
  416fb8:	8d 1c 00             	lea    (%rax,%rax,1),%ebx
			names = RENEW( names, char, maxnames * ( MAXPATHLEN + 1 ) );
  416fbb:	48 8b 3d 3e b7 22 00 	mov    0x22b73e(%rip),%rdi        # 642700 <names.6488>
  416fc2:	69 c0 02 20 00 00    	imul   $0x2002,%eax,%eax
			maxnames *= 2;
  416fc8:	89 1d 72 b7 22 00    	mov    %ebx,0x22b772(%rip)        # 642740 <maxnames.6486>
			names = RENEW( names, char, maxnames * ( MAXPATHLEN + 1 ) );
  416fce:	48 63 f0             	movslq %eax,%rsi
  416fd1:	e8 da c3 fe ff       	callq  4033b0 <realloc@plt>
			nameptrs = RENEW( nameptrs, char*, maxnames );
  416fd6:	48 63 d3             	movslq %ebx,%rdx
  416fd9:	48 8b 3d e0 b6 22 00 	mov    0x22b6e0(%rip),%rdi        # 6426c0 <nameptrs.6489>
  416fe0:	48 8d 34 d5 00 00 00 	lea    0x0(,%rdx,8),%rsi
  416fe7:	00 
			names = RENEW( names, char, maxnames * ( MAXPATHLEN + 1 ) );
  416fe8:	49 89 c6             	mov    %rax,%r14
  416feb:	48 89 05 0e b7 22 00 	mov    %rax,0x22b70e(%rip)        # 642700 <names.6488>
			nameptrs = RENEW( nameptrs, char*, maxnames );
  416ff2:	e8 b9 c3 fe ff       	callq  4033b0 <realloc@plt>
  416ff7:	48 89 05 c2 b6 22 00 	mov    %rax,0x22b6c2(%rip)        # 6426c0 <nameptrs.6489>
  416ffe:	e9 07 fe ff ff       	jmpq   416e0a <ls+0x39a>
	    closedir( dirp );
  417003:	48 8b 3c 24          	mov    (%rsp),%rdi
  417007:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
  41700c:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  417011:	e8 ca c2 fe ff       	callq  4032e0 <closedir@plt>
	    qsort( nameptrs, nnames, sizeof(*nameptrs), name_compare );
  417016:	48 8b 3d a3 b6 22 00 	mov    0x22b6a3(%rip),%rdi        # 6426c0 <nameptrs.6489>
  41701d:	48 63 f5             	movslq %ebp,%rsi
  417020:	b9 d0 ae 40 00       	mov    $0x40aed0,%ecx
  417025:	ba 08 00 00 00       	mov    $0x8,%edx
  41702a:	e8 81 c4 fe ff       	callq  4034b0 <qsort@plt>
	    for ( i = 0; i < nnames; ++i )
  41702f:	85 ed                	test   %ebp,%ebp
  417031:	0f 84 1c 08 00 00    	je     417853 <ls+0xde3>
  417037:	8d 45 ff             	lea    -0x1(%rbp),%eax
		if ( stat( name, &sb ) < 0 || lstat( name, &lsb ) < 0 )
  41703a:	4d 8d b4 24 00 ef ff 	lea    -0x1100(%r12),%r14
  417041:	ff 
	    for ( i = 0; i < nnames; ++i )
  417042:	31 ed                	xor    %ebp,%ebp
  417044:	48 8d 04 c5 08 00 00 	lea    0x8(,%rax,8),%rax
  41704b:	00 
  41704c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
		if ( stat( name, &sb ) < 0 || lstat( name, &lsb ) < 0 )
  417051:	49 8d 84 24 40 ee ff 	lea    -0x11c0(%r12),%rax
  417058:	ff 
  417059:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
		switch ( lsb.st_mode & S_IFMT )
  41705e:	49 8d 46 18          	lea    0x18(%r14),%rax
  417062:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  417067:	48 c1 e8 03          	shr    $0x3,%rax
  41706b:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
		    strlen( hc->expnfilename ) + 1 + strlen( nameptrs[i] ) );
  417070:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
  417075:	49 c1 ed 03          	shr    $0x3,%r13
  417079:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  417080:	00 
  417081:	0f 85 b9 10 00 00    	jne    418140 <ls+0x16d0>
  417087:	48 8b bb f0 00 00 00 	mov    0xf0(%rbx),%rdi
  41708e:	e8 ed bb fe ff       	callq  402c80 <strlen@plt>
  417093:	48 8b 3d 26 b6 22 00 	mov    0x22b626(%rip),%rdi        # 6426c0 <nameptrs.6489>
  41709a:	49 89 c7             	mov    %rax,%r15
  41709d:	48 01 ef             	add    %rbp,%rdi
  4170a0:	48 89 f8             	mov    %rdi,%rax
  4170a3:	48 c1 e8 03          	shr    $0x3,%rax
  4170a7:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4170ae:	0f 85 c6 0f 00 00    	jne    41807a <ls+0x160a>
  4170b4:	48 8b 3f             	mov    (%rdi),%rdi
  4170b7:	e8 c4 bb fe ff       	callq  402c80 <strlen@plt>
		httpd_realloc_str(
  4170bc:	be 40 26 64 00       	mov    $0x642640,%esi
  4170c1:	bf 80 26 64 00       	mov    $0x642680,%edi
  4170c6:	49 8d 54 07 01       	lea    0x1(%r15,%rax,1),%rdx
		    strlen( hc->origfilename ) + 1 + strlen( nameptrs[i] ) );
  4170cb:	4c 8d bb e8 00 00 00 	lea    0xe8(%rbx),%r15
		httpd_realloc_str(
  4170d2:	e8 59 62 ff ff       	callq  40d330 <httpd_realloc_str>
		    strlen( hc->origfilename ) + 1 + strlen( nameptrs[i] ) );
  4170d7:	4c 89 f8             	mov    %r15,%rax
  4170da:	48 c1 e8 03          	shr    $0x3,%rax
  4170de:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4170e5:	0f 85 94 0f 00 00    	jne    41807f <ls+0x160f>
  4170eb:	48 8b bb e8 00 00 00 	mov    0xe8(%rbx),%rdi
  4170f2:	e8 89 bb fe ff       	callq  402c80 <strlen@plt>
  4170f7:	48 8b 3d c2 b5 22 00 	mov    0x22b5c2(%rip),%rdi        # 6426c0 <nameptrs.6489>
  4170fe:	48 89 c2             	mov    %rax,%rdx
  417101:	48 01 ef             	add    %rbp,%rdi
  417104:	48 89 f8             	mov    %rdi,%rax
  417107:	48 c1 e8 03          	shr    $0x3,%rax
  41710b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  417112:	0f 85 6f 0f 00 00    	jne    418087 <ls+0x1617>
  417118:	48 8b 3f             	mov    (%rdi),%rdi
  41711b:	48 89 14 24          	mov    %rdx,(%rsp)
  41711f:	e8 5c bb fe ff       	callq  402c80 <strlen@plt>
		httpd_realloc_str(
  417124:	48 8b 14 24          	mov    (%rsp),%rdx
  417128:	be c0 25 64 00       	mov    $0x6425c0,%esi
  41712d:	bf 00 26 64 00       	mov    $0x642600,%edi
  417132:	48 8d 54 02 01       	lea    0x1(%rdx,%rax,1),%rdx
  417137:	e8 f4 61 ff ff       	callq  40d330 <httpd_realloc_str>
		if ( hc->expnfilename[0] == '\0' ||
  41713c:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  417143:	00 
  417144:	0f 85 42 0f 00 00    	jne    41808c <ls+0x161c>
  41714a:	4c 8b ab f0 00 00 00 	mov    0xf0(%rbx),%r13
  417151:	4c 89 e8             	mov    %r13,%rax
  417154:	4c 89 ea             	mov    %r13,%rdx
  417157:	48 c1 e8 03          	shr    $0x3,%rax
  41715b:	83 e2 07             	and    $0x7,%edx
  41715e:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417165:	38 d0                	cmp    %dl,%al
  417167:	7f 08                	jg     417171 <ls+0x701>
  417169:	84 c0                	test   %al,%al
  41716b:	0f 85 25 0f 00 00    	jne    418096 <ls+0x1626>
  417171:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
  417176:	0f 84 0c 07 00 00    	je     417888 <ls+0xe18>
		     strcmp( hc->expnfilename, "." ) == 0 )
  41717c:	be c0 3a 42 00       	mov    $0x423ac0,%esi
  417181:	4c 89 ef             	mov    %r13,%rdi
  417184:	e8 b7 bc fe ff       	callq  402e40 <strcmp@plt>
  417189:	48 8b 15 30 b5 22 00 	mov    0x22b530(%rip),%rdx        # 6426c0 <nameptrs.6489>
  417190:	48 01 ea             	add    %rbp,%rdx
  417193:	48 89 d1             	mov    %rdx,%rcx
  417196:	48 c1 e9 03          	shr    $0x3,%rcx
  41719a:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  4171a1:	0f 85 f7 0e 00 00    	jne    41809e <ls+0x162e>
  4171a7:	48 8b 32             	mov    (%rdx),%rsi
  4171aa:	48 8b 3d cf b4 22 00 	mov    0x22b4cf(%rip),%rdi        # 642680 <name.6490>
		if ( hc->expnfilename[0] == '\0' ||
  4171b1:	85 c0                	test   %eax,%eax
  4171b3:	0f 85 ff 06 00 00    	jne    4178b8 <ls+0xe48>
  4171b9:	48 89 14 24          	mov    %rdx,(%rsp)
		    (void) strcpy( name, nameptrs[i] );
  4171bd:	e8 4e bd fe ff       	callq  402f10 <strcpy@plt>
		    (void) strcpy( rname, nameptrs[i] );
  4171c2:	48 8b 14 24          	mov    (%rsp),%rdx
  4171c6:	48 89 d0             	mov    %rdx,%rax
  4171c9:	48 c1 e8 03          	shr    $0x3,%rax
  4171cd:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4171d4:	0f 85 cc 0e 00 00    	jne    4180a6 <ls+0x1636>
  4171da:	48 8b 32             	mov    (%rdx),%rsi
  4171dd:	48 8b 3d 1c b4 22 00 	mov    0x22b41c(%rip),%rdi        # 642600 <rname.6492>
  4171e4:	e8 27 bd fe ff       	callq  402f10 <strcpy@plt>
		    &encrname, &maxencrname, 3 * strlen( rname ) + 1 );
  4171e9:	48 8b 3d 10 b4 22 00 	mov    0x22b410(%rip),%rdi        # 642600 <rname.6492>
  4171f0:	e8 8b ba fe ff       	callq  402c80 <strlen@plt>
		httpd_realloc_str(
  4171f5:	be 40 25 64 00       	mov    $0x642540,%esi
  4171fa:	bf 80 25 64 00       	mov    $0x642580,%edi
  4171ff:	48 8d 54 40 01       	lea    0x1(%rax,%rax,2),%rdx
  417204:	e8 27 61 ff ff       	callq  40d330 <httpd_realloc_str>
		strencode( encrname, maxencrname, rname );
  417209:	8b 35 31 b3 22 00    	mov    0x22b331(%rip),%esi        # 642540 <maxencrname.6495>
  41720f:	48 8b 3d 6a b3 22 00 	mov    0x22b36a(%rip),%rdi        # 642580 <encrname.6494>
  417216:	48 8b 15 e3 b3 22 00 	mov    0x22b3e3(%rip),%rdx        # 642600 <rname.6492>
  41721d:	e8 9e 45 ff ff       	callq  40b7c0 <strencode>
		if ( stat( name, &sb ) < 0 || lstat( name, &lsb ) < 0 )
  417222:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  417227:	48 8b 3d 52 b4 22 00 	mov    0x22b452(%rip),%rdi        # 642680 <name.6490>
  41722e:	e8 4d 7e 00 00       	callq  41f080 <__stat>
  417233:	85 c0                	test   %eax,%eax
  417235:	0f 88 09 06 00 00    	js     417844 <ls+0xdd4>
  41723b:	48 8b 3d 3e b4 22 00 	mov    0x22b43e(%rip),%rdi        # 642680 <name.6490>
  417242:	4c 89 f6             	mov    %r14,%rsi
  417245:	e8 46 7e 00 00       	callq  41f090 <__lstat>
  41724a:	85 c0                	test   %eax,%eax
  41724c:	0f 88 f2 05 00 00    	js     417844 <ls+0xdd4>
		link[0] = '\0';
  417252:	4d 8d ac 24 c0 ef ff 	lea    -0x1040(%r12),%r13
  417259:	ff 
  41725a:	4c 89 e8             	mov    %r13,%rax
  41725d:	48 c1 e8 03          	shr    $0x3,%rax
  417261:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417268:	84 c0                	test   %al,%al
  41726a:	74 06                	je     417272 <ls+0x802>
  41726c:	0f 8e 3c 0e 00 00    	jle    4180ae <ls+0x163e>
  417272:	41 c6 84 24 c0 ef ff 	movb   $0x0,-0x1040(%r12)
  417279:	ff 00 
		switch ( lsb.st_mode & S_IFMT )
  41727b:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  417280:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417287:	84 c0                	test   %al,%al
  417289:	74 08                	je     417293 <ls+0x823>
  41728b:	3c 03                	cmp    $0x3,%al
  41728d:	0f 8e dd 0d 00 00    	jle    418070 <ls+0x1600>
  417293:	41 8b 94 24 18 ef ff 	mov    -0x10e8(%r12),%edx
  41729a:	ff 
  41729b:	89 d0                	mov    %edx,%eax
  41729d:	25 00 f0 00 00       	and    $0xf000,%eax
  4172a2:	3d 00 60 00 00       	cmp    $0x6000,%eax
  4172a7:	0f 84 1a 0a 00 00    	je     417cc7 <ls+0x1257>
  4172ad:	77 59                	ja     417308 <ls+0x898>
  4172af:	3d 00 20 00 00       	cmp    $0x2000,%eax
  4172b4:	0f 84 7a 08 00 00    	je     417b34 <ls+0x10c4>
  4172ba:	3d 00 40 00 00       	cmp    $0x4000,%eax
  4172bf:	0f 84 8b 09 00 00    	je     417c50 <ls+0x11e0>
  4172c5:	3d 00 10 00 00       	cmp    $0x1000,%eax
  4172ca:	0f 84 c0 09 00 00    	je     417c90 <ls+0x1220>
		    default:       modestr[0] = '?'; break;
  4172d0:	4d 8d bc 24 00 ee ff 	lea    -0x1200(%r12),%r15
  4172d7:	ff 
  4172d8:	4c 89 f8             	mov    %r15,%rax
  4172db:	48 c1 e8 03          	shr    $0x3,%rax
  4172df:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4172e6:	84 c0                	test   %al,%al
  4172e8:	74 06                	je     4172f0 <ls+0x880>
  4172ea:	0f 8e 7e 0e 00 00    	jle    41816e <ls+0x16fe>
  4172f0:	41 c6 84 24 00 ee ff 	movb   $0x3f,-0x1200(%r12)
  4172f7:	ff 3f 
		linkprefix = "";
  4172f9:	48 c7 44 24 20 60 38 	movq   $0x423860,0x20(%rsp)
  417300:	42 00 
		    default:       modestr[0] = '?'; break;
  417302:	eb 5c                	jmp    417360 <ls+0x8f0>
  417304:	0f 1f 40 00          	nopl   0x0(%rax)
  417308:	3d 00 a0 00 00       	cmp    $0xa000,%eax
  41730d:	0f 84 58 08 00 00    	je     417b6b <ls+0x10fb>
  417313:	3d 00 c0 00 00       	cmp    $0xc000,%eax
  417318:	0f 84 f2 08 00 00    	je     417c10 <ls+0x11a0>
  41731e:	3d 00 80 00 00       	cmp    $0x8000,%eax
  417323:	75 ab                	jne    4172d0 <ls+0x860>
		    case S_IFREG:  modestr[0] = '-'; break;
  417325:	4d 8d bc 24 00 ee ff 	lea    -0x1200(%r12),%r15
  41732c:	ff 
  41732d:	4c 89 f8             	mov    %r15,%rax
  417330:	48 c1 e8 03          	shr    $0x3,%rax
  417334:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41733b:	84 c0                	test   %al,%al
  41733d:	74 06                	je     417345 <ls+0x8d5>
  41733f:	0f 8e 14 0e 00 00    	jle    418159 <ls+0x16e9>
  417345:	41 c6 84 24 00 ee ff 	movb   $0x2d,-0x1200(%r12)
  41734c:	ff 2d 
		linkprefix = "";
  41734e:	48 c7 44 24 20 60 38 	movq   $0x423860,0x20(%rsp)
  417355:	42 00 
  417357:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41735e:	00 00 
		modestr[1] = ( lsb.st_mode & S_IROTH ) ? 'r' : '-';
  417360:	89 d0                	mov    %edx,%eax
  417362:	49 8d 7f 01          	lea    0x1(%r15),%rdi
  417366:	83 e0 04             	and    $0x4,%eax
  417369:	48 89 f9             	mov    %rdi,%rcx
  41736c:	48 89 fe             	mov    %rdi,%rsi
  41736f:	83 f8 01             	cmp    $0x1,%eax
  417372:	19 c0                	sbb    %eax,%eax
  417374:	48 c1 e9 03          	shr    $0x3,%rcx
  417378:	83 e6 07             	and    $0x7,%esi
  41737b:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  417382:	83 e0 bb             	and    $0xffffffbb,%eax
  417385:	83 c0 72             	add    $0x72,%eax
  417388:	40 38 f1             	cmp    %sil,%cl
  41738b:	7f 08                	jg     417395 <ls+0x925>
  41738d:	84 c9                	test   %cl,%cl
  41738f:	0f 85 40 0c 00 00    	jne    417fd5 <ls+0x1565>
  417395:	41 88 84 24 01 ee ff 	mov    %al,-0x11ff(%r12)
  41739c:	ff 
		modestr[2] = ( lsb.st_mode & S_IWOTH ) ? 'w' : '-';
  41739d:	89 d0                	mov    %edx,%eax
  41739f:	49 8d 7f 02          	lea    0x2(%r15),%rdi
  4173a3:	83 e0 02             	and    $0x2,%eax
  4173a6:	48 89 f9             	mov    %rdi,%rcx
  4173a9:	48 89 fe             	mov    %rdi,%rsi
  4173ac:	83 f8 01             	cmp    $0x1,%eax
  4173af:	19 c0                	sbb    %eax,%eax
  4173b1:	48 c1 e9 03          	shr    $0x3,%rcx
  4173b5:	83 e6 07             	and    $0x7,%esi
  4173b8:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  4173bf:	83 e0 b6             	and    $0xffffffb6,%eax
  4173c2:	83 c0 77             	add    $0x77,%eax
  4173c5:	40 38 f1             	cmp    %sil,%cl
  4173c8:	7f 08                	jg     4173d2 <ls+0x962>
  4173ca:	84 c9                	test   %cl,%cl
  4173cc:	0f 85 fe 0b 00 00    	jne    417fd0 <ls+0x1560>
		modestr[3] = ( lsb.st_mode & S_IXOTH ) ? 'x' : '-';
  4173d2:	83 e2 01             	and    $0x1,%edx
  4173d5:	49 8d 7f 03          	lea    0x3(%r15),%rdi
		modestr[2] = ( lsb.st_mode & S_IWOTH ) ? 'w' : '-';
  4173d9:	41 88 84 24 02 ee ff 	mov    %al,-0x11fe(%r12)
  4173e0:	ff 
		modestr[3] = ( lsb.st_mode & S_IXOTH ) ? 'x' : '-';
  4173e1:	83 fa 01             	cmp    $0x1,%edx
  4173e4:	48 89 fa             	mov    %rdi,%rdx
  4173e7:	48 89 f9             	mov    %rdi,%rcx
  4173ea:	19 c0                	sbb    %eax,%eax
  4173ec:	48 c1 ea 03          	shr    $0x3,%rdx
  4173f0:	83 e1 07             	and    $0x7,%ecx
  4173f3:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  4173fa:	83 e0 b5             	and    $0xffffffb5,%eax
  4173fd:	83 c0 78             	add    $0x78,%eax
  417400:	38 ca                	cmp    %cl,%dl
  417402:	7f 08                	jg     41740c <ls+0x99c>
  417404:	84 d2                	test   %dl,%dl
  417406:	0f 85 bf 0b 00 00    	jne    417fcb <ls+0x155b>
		modestr[4] = '\0';
  41740c:	49 8d 7f 04          	lea    0x4(%r15),%rdi
		modestr[3] = ( lsb.st_mode & S_IXOTH ) ? 'x' : '-';
  417410:	41 88 84 24 03 ee ff 	mov    %al,-0x11fd(%r12)
  417417:	ff 
		modestr[4] = '\0';
  417418:	48 89 f8             	mov    %rdi,%rax
  41741b:	48 89 fa             	mov    %rdi,%rdx
  41741e:	48 c1 e8 03          	shr    $0x3,%rax
  417422:	83 e2 07             	and    $0x7,%edx
  417425:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41742c:	38 d0                	cmp    %dl,%al
  41742e:	7f 08                	jg     417438 <ls+0x9c8>
  417430:	84 c0                	test   %al,%al
  417432:	0f 85 8e 0b 00 00    	jne    417fc6 <ls+0x1556>
  417438:	41 c6 84 24 04 ee ff 	movb   $0x0,-0x11fc(%r12)
  41743f:	ff 00 
		now = time( (time_t*) 0 );
  417441:	31 ff                	xor    %edi,%edi
  417443:	e8 28 bb fe ff       	callq  402f70 <time@plt>
		timestr = ctime( &lsb.st_mtime );
  417448:	49 8d 7e 58          	lea    0x58(%r14),%rdi
		now = time( (time_t*) 0 );
  41744c:	48 89 04 24          	mov    %rax,(%rsp)
		timestr = ctime( &lsb.st_mtime );
  417450:	e8 1b be fe ff       	callq  403270 <ctime@plt>
		timestr[ 0] = timestr[ 4];
  417455:	48 8b 14 24          	mov    (%rsp),%rdx
  417459:	48 8d 78 04          	lea    0x4(%rax),%rdi
		timestr = ctime( &lsb.st_mtime );
  41745d:	49 89 c1             	mov    %rax,%r9
		timestr[ 0] = timestr[ 4];
  417460:	48 89 f8             	mov    %rdi,%rax
  417463:	48 89 f9             	mov    %rdi,%rcx
  417466:	48 c1 e8 03          	shr    $0x3,%rax
  41746a:	83 e1 07             	and    $0x7,%ecx
  41746d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417474:	38 c8                	cmp    %cl,%al
  417476:	7f 08                	jg     417480 <ls+0xa10>
  417478:	84 c0                	test   %al,%al
  41747a:	0f 85 41 0b 00 00    	jne    417fc1 <ls+0x1551>
  417480:	4c 89 c8             	mov    %r9,%rax
  417483:	4c 89 ce             	mov    %r9,%rsi
  417486:	41 0f b6 49 04       	movzbl 0x4(%r9),%ecx
  41748b:	48 c1 e8 03          	shr    $0x3,%rax
  41748f:	83 e6 07             	and    $0x7,%esi
  417492:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417499:	40 38 f0             	cmp    %sil,%al
  41749c:	7f 08                	jg     4174a6 <ls+0xa36>
  41749e:	84 c0                	test   %al,%al
  4174a0:	0f 85 13 0b 00 00    	jne    417fb9 <ls+0x1549>
		timestr[ 1] = timestr[ 5];
  4174a6:	49 8d 79 05          	lea    0x5(%r9),%rdi
		timestr[ 0] = timestr[ 4];
  4174aa:	41 88 09             	mov    %cl,(%r9)
		timestr[ 1] = timestr[ 5];
  4174ad:	48 89 f8             	mov    %rdi,%rax
  4174b0:	48 89 f9             	mov    %rdi,%rcx
  4174b3:	48 c1 e8 03          	shr    $0x3,%rax
  4174b7:	83 e1 07             	and    $0x7,%ecx
  4174ba:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4174c1:	38 c8                	cmp    %cl,%al
  4174c3:	7f 08                	jg     4174cd <ls+0xa5d>
  4174c5:	84 c0                	test   %al,%al
  4174c7:	0f 85 e7 0a 00 00    	jne    417fb4 <ls+0x1544>
  4174cd:	49 8d 79 01          	lea    0x1(%r9),%rdi
  4174d1:	41 0f b6 49 05       	movzbl 0x5(%r9),%ecx
  4174d6:	48 89 f8             	mov    %rdi,%rax
  4174d9:	48 89 fe             	mov    %rdi,%rsi
  4174dc:	48 c1 e8 03          	shr    $0x3,%rax
  4174e0:	83 e6 07             	and    $0x7,%esi
  4174e3:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4174ea:	40 38 f0             	cmp    %sil,%al
  4174ed:	7f 08                	jg     4174f7 <ls+0xa87>
  4174ef:	84 c0                	test   %al,%al
  4174f1:	0f 85 b8 0a 00 00    	jne    417faf <ls+0x153f>
		timestr[ 2] = timestr[ 6];
  4174f7:	49 8d 79 06          	lea    0x6(%r9),%rdi
		timestr[ 1] = timestr[ 5];
  4174fb:	41 88 49 01          	mov    %cl,0x1(%r9)
		timestr[ 2] = timestr[ 6];
  4174ff:	48 89 f8             	mov    %rdi,%rax
  417502:	48 89 f9             	mov    %rdi,%rcx
  417505:	48 c1 e8 03          	shr    $0x3,%rax
  417509:	83 e1 07             	and    $0x7,%ecx
  41750c:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417513:	38 c8                	cmp    %cl,%al
  417515:	7f 08                	jg     41751f <ls+0xaaf>
  417517:	84 c0                	test   %al,%al
  417519:	0f 85 8b 0a 00 00    	jne    417faa <ls+0x153a>
  41751f:	49 8d 79 02          	lea    0x2(%r9),%rdi
  417523:	41 0f b6 49 06       	movzbl 0x6(%r9),%ecx
  417528:	48 89 f8             	mov    %rdi,%rax
  41752b:	48 89 fe             	mov    %rdi,%rsi
  41752e:	48 c1 e8 03          	shr    $0x3,%rax
  417532:	83 e6 07             	and    $0x7,%esi
  417535:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41753c:	40 38 f0             	cmp    %sil,%al
  41753f:	7f 08                	jg     417549 <ls+0xad9>
  417541:	84 c0                	test   %al,%al
  417543:	0f 85 5c 0a 00 00    	jne    417fa5 <ls+0x1535>
		timestr[ 3] = ' ';
  417549:	49 8d 79 03          	lea    0x3(%r9),%rdi
		timestr[ 2] = timestr[ 6];
  41754d:	41 88 49 02          	mov    %cl,0x2(%r9)
		timestr[ 3] = ' ';
  417551:	48 89 f8             	mov    %rdi,%rax
  417554:	48 89 f9             	mov    %rdi,%rcx
  417557:	48 c1 e8 03          	shr    $0x3,%rax
  41755b:	83 e1 07             	and    $0x7,%ecx
  41755e:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417565:	38 c8                	cmp    %cl,%al
  417567:	7f 08                	jg     417571 <ls+0xb01>
  417569:	84 c0                	test   %al,%al
  41756b:	0f 85 2f 0a 00 00    	jne    417fa0 <ls+0x1530>
		timestr[ 4] = timestr[ 8];
  417571:	49 8d 79 08          	lea    0x8(%r9),%rdi
		timestr[ 3] = ' ';
  417575:	41 c6 41 03 20       	movb   $0x20,0x3(%r9)
		timestr[ 4] = timestr[ 8];
  41757a:	48 89 f8             	mov    %rdi,%rax
  41757d:	48 89 f9             	mov    %rdi,%rcx
  417580:	48 c1 e8 03          	shr    $0x3,%rax
  417584:	83 e1 07             	and    $0x7,%ecx
  417587:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41758e:	38 c8                	cmp    %cl,%al
  417590:	7f 08                	jg     41759a <ls+0xb2a>
  417592:	84 c0                	test   %al,%al
  417594:	0f 85 01 0a 00 00    	jne    417f9b <ls+0x152b>
  41759a:	41 0f b6 41 08       	movzbl 0x8(%r9),%eax
		timestr[ 5] = timestr[ 9];
  41759f:	49 8d 79 09          	lea    0x9(%r9),%rdi
  4175a3:	48 89 f9             	mov    %rdi,%rcx
		timestr[ 4] = timestr[ 8];
  4175a6:	41 88 41 04          	mov    %al,0x4(%r9)
		timestr[ 5] = timestr[ 9];
  4175aa:	48 89 f8             	mov    %rdi,%rax
  4175ad:	83 e1 07             	and    $0x7,%ecx
  4175b0:	48 c1 e8 03          	shr    $0x3,%rax
  4175b4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4175bb:	38 c8                	cmp    %cl,%al
  4175bd:	7f 08                	jg     4175c7 <ls+0xb57>
  4175bf:	84 c0                	test   %al,%al
  4175c1:	0f 85 cf 09 00 00    	jne    417f96 <ls+0x1526>
  4175c7:	41 0f b6 41 09       	movzbl 0x9(%r9),%eax
		if ( now - lsb.st_mtime > 60*60*24*182 )        /* 1/2 year */
  4175cc:	49 8d 7e 58          	lea    0x58(%r14),%rdi
		timestr[ 6] = ' ';
  4175d0:	41 c6 41 06 20       	movb   $0x20,0x6(%r9)
		timestr[ 5] = timestr[ 9];
  4175d5:	41 88 41 05          	mov    %al,0x5(%r9)
		if ( now - lsb.st_mtime > 60*60*24*182 )        /* 1/2 year */
  4175d9:	48 89 f8             	mov    %rdi,%rax
  4175dc:	48 c1 e8 03          	shr    $0x3,%rax
  4175e0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4175e7:	0f 85 a4 09 00 00    	jne    417f91 <ls+0x1521>
  4175ed:	49 2b 94 24 58 ef ff 	sub    -0x10a8(%r12),%rdx
  4175f4:	ff 
  4175f5:	48 81 fa 00 f1 ef 00 	cmp    $0xeff100,%rdx
  4175fc:	0f 8e ce 03 00 00    	jle    4179d0 <ls+0xf60>
		    timestr[ 7] = ' ';
  417602:	49 8d 79 07          	lea    0x7(%r9),%rdi
  417606:	48 89 f8             	mov    %rdi,%rax
  417609:	48 89 fa             	mov    %rdi,%rdx
  41760c:	48 c1 e8 03          	shr    $0x3,%rax
  417610:	83 e2 07             	and    $0x7,%edx
  417613:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41761a:	38 d0                	cmp    %dl,%al
  41761c:	7f 08                	jg     417626 <ls+0xbb6>
  41761e:	84 c0                	test   %al,%al
  417620:	0f 85 66 09 00 00    	jne    417f8c <ls+0x151c>
		    timestr[ 8] = timestr[20];
  417626:	49 8d 79 14          	lea    0x14(%r9),%rdi
		    timestr[ 7] = ' ';
  41762a:	41 c6 41 07 20       	movb   $0x20,0x7(%r9)
		    timestr[ 8] = timestr[20];
  41762f:	48 89 f8             	mov    %rdi,%rax
  417632:	48 89 fa             	mov    %rdi,%rdx
  417635:	48 c1 e8 03          	shr    $0x3,%rax
  417639:	83 e2 07             	and    $0x7,%edx
  41763c:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417643:	38 d0                	cmp    %dl,%al
  417645:	7f 08                	jg     41764f <ls+0xbdf>
  417647:	84 c0                	test   %al,%al
  417649:	0f 85 38 09 00 00    	jne    417f87 <ls+0x1517>
  41764f:	41 0f b6 41 14       	movzbl 0x14(%r9),%eax
		    timestr[ 9] = timestr[21];
  417654:	49 8d 79 15          	lea    0x15(%r9),%rdi
  417658:	48 89 fa             	mov    %rdi,%rdx
		    timestr[ 8] = timestr[20];
  41765b:	41 88 41 08          	mov    %al,0x8(%r9)
		    timestr[ 9] = timestr[21];
  41765f:	48 89 f8             	mov    %rdi,%rax
  417662:	83 e2 07             	and    $0x7,%edx
  417665:	48 c1 e8 03          	shr    $0x3,%rax
  417669:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417670:	38 d0                	cmp    %dl,%al
  417672:	7f 08                	jg     41767c <ls+0xc0c>
  417674:	84 c0                	test   %al,%al
  417676:	0f 85 06 09 00 00    	jne    417f82 <ls+0x1512>
  41767c:	41 0f b6 41 15       	movzbl 0x15(%r9),%eax
		    timestr[10] = timestr[22];
  417681:	49 8d 79 16          	lea    0x16(%r9),%rdi
  417685:	48 89 fa             	mov    %rdi,%rdx
		    timestr[ 9] = timestr[21];
  417688:	41 88 41 09          	mov    %al,0x9(%r9)
		    timestr[10] = timestr[22];
  41768c:	48 89 f8             	mov    %rdi,%rax
  41768f:	83 e2 07             	and    $0x7,%edx
  417692:	48 c1 e8 03          	shr    $0x3,%rax
  417696:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41769d:	38 d0                	cmp    %dl,%al
  41769f:	7f 08                	jg     4176a9 <ls+0xc39>
  4176a1:	84 c0                	test   %al,%al
  4176a3:	0f 85 d4 08 00 00    	jne    417f7d <ls+0x150d>
  4176a9:	49 8d 79 0a          	lea    0xa(%r9),%rdi
  4176ad:	41 0f b6 51 16       	movzbl 0x16(%r9),%edx
  4176b2:	48 89 f8             	mov    %rdi,%rax
  4176b5:	48 89 f9             	mov    %rdi,%rcx
  4176b8:	48 c1 e8 03          	shr    $0x3,%rax
  4176bc:	83 e1 07             	and    $0x7,%ecx
  4176bf:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4176c6:	38 c8                	cmp    %cl,%al
  4176c8:	7f 08                	jg     4176d2 <ls+0xc62>
  4176ca:	84 c0                	test   %al,%al
  4176cc:	0f 85 a6 08 00 00    	jne    417f78 <ls+0x1508>
		    timestr[11] = timestr[23];
  4176d2:	49 8d 79 17          	lea    0x17(%r9),%rdi
		    timestr[10] = timestr[22];
  4176d6:	41 88 51 0a          	mov    %dl,0xa(%r9)
		    timestr[11] = timestr[23];
  4176da:	48 89 f8             	mov    %rdi,%rax
  4176dd:	48 89 fa             	mov    %rdi,%rdx
  4176e0:	48 c1 e8 03          	shr    $0x3,%rax
  4176e4:	83 e2 07             	and    $0x7,%edx
  4176e7:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4176ee:	38 d0                	cmp    %dl,%al
  4176f0:	7f 08                	jg     4176fa <ls+0xc8a>
  4176f2:	84 c0                	test   %al,%al
  4176f4:	0f 85 79 08 00 00    	jne    417f73 <ls+0x1503>
  4176fa:	49 8d 79 0b          	lea    0xb(%r9),%rdi
  4176fe:	41 0f b6 51 17       	movzbl 0x17(%r9),%edx
  417703:	48 89 f8             	mov    %rdi,%rax
  417706:	48 89 f9             	mov    %rdi,%rcx
  417709:	48 c1 e8 03          	shr    $0x3,%rax
  41770d:	83 e1 07             	and    $0x7,%ecx
  417710:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417717:	38 c8                	cmp    %cl,%al
  417719:	7f 08                	jg     417723 <ls+0xcb3>
  41771b:	84 c0                	test   %al,%al
  41771d:	0f 85 4b 08 00 00    	jne    417f6e <ls+0x14fe>
  417723:	41 88 51 0b          	mov    %dl,0xb(%r9)
  417727:	49 8d 41 0c          	lea    0xc(%r9),%rax
		timestr[12] = '\0';
  41772b:	48 89 c2             	mov    %rax,%rdx
  41772e:	48 89 c1             	mov    %rax,%rcx
  417731:	48 c1 ea 03          	shr    $0x3,%rdx
  417735:	83 e1 07             	and    $0x7,%ecx
  417738:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41773f:	38 ca                	cmp    %cl,%dl
  417741:	7f 08                	jg     41774b <ls+0xcdb>
  417743:	84 d2                	test   %dl,%dl
  417745:	0f 85 1b 08 00 00    	jne    417f66 <ls+0x14f6>
		switch ( sb.st_mode & S_IFMT )
  41774b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
		timestr[12] = '\0';
  417750:	41 c6 41 0c 00       	movb   $0x0,0xc(%r9)
		switch ( sb.st_mode & S_IFMT )
  417755:	48 8d 78 18          	lea    0x18(%rax),%rdi
  417759:	48 89 f8             	mov    %rdi,%rax
  41775c:	48 c1 e8 03          	shr    $0x3,%rax
  417760:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417767:	84 c0                	test   %al,%al
  417769:	74 08                	je     417773 <ls+0xd03>
  41776b:	3c 03                	cmp    $0x3,%al
  41776d:	0f 8e ee 07 00 00    	jle    417f61 <ls+0x14f1>
  417773:	41 8b 94 24 58 ee ff 	mov    -0x11a8(%r12),%edx
  41777a:	ff 
  41777b:	48 8b 3d 3e af 22 00 	mov    0x22af3e(%rip),%rdi        # 6426c0 <nameptrs.6489>
  417782:	89 d0                	mov    %edx,%eax
  417784:	48 01 ef             	add    %rbp,%rdi
  417787:	25 00 f0 00 00       	and    $0xf000,%eax
  41778c:	3d 00 a0 00 00       	cmp    $0xa000,%eax
  417791:	0f 84 69 03 00 00    	je     417b00 <ls+0x1090>
  417797:	3d 00 c0 00 00       	cmp    $0xc000,%eax
  41779c:	0f 84 3e 03 00 00    	je     417ae0 <ls+0x1070>
  4177a2:	3d 00 40 00 00       	cmp    $0x4000,%eax
  4177a7:	0f 84 63 03 00 00    	je     417b10 <ls+0x10a0>
		    fileclass = ( sb.st_mode & S_IXOTH ) ? "*" : "";
  4177ad:	83 e2 01             	and    $0x1,%edx
  4177b0:	b8 60 38 42 00       	mov    $0x423860,%eax
  4177b5:	ba 80 5c 42 00       	mov    $0x425c80,%edx
  4177ba:	48 0f 45 c2          	cmovne %rdx,%rax
		(void)  fprintf( fp,
  4177be:	48 89 fa             	mov    %rdi,%rdx
  4177c1:	48 c1 ea 03          	shr    $0x3,%rdx
  4177c5:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  4177cc:	0f 85 8a 07 00 00    	jne    417f5c <ls+0x14ec>
  4177d2:	4c 8b 17             	mov    (%rdi),%r10
  4177d5:	be 60 38 42 00       	mov    $0x423860,%esi
		    modestr, (long) lsb.st_nlink, (int64_t) lsb.st_size,
  4177da:	49 8d 7e 30          	lea    0x30(%r14),%rdi
		(void)  fprintf( fp,
  4177de:	48 8b 15 9b ad 22 00 	mov    0x22ad9b(%rip),%rdx        # 642580 <encrname.6494>
		    modestr, (long) lsb.st_nlink, (int64_t) lsb.st_size,
  4177e5:	48 89 f9             	mov    %rdi,%rcx
  4177e8:	48 c1 e9 03          	shr    $0x3,%rcx
  4177ec:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  4177f3:	0f 85 5e 07 00 00    	jne    417f57 <ls+0x14e7>
  4177f9:	49 8d 7e 10          	lea    0x10(%r14),%rdi
  4177fd:	4d 8b 84 24 30 ef ff 	mov    -0x10d0(%r12),%r8
  417804:	ff 
  417805:	48 89 f9             	mov    %rdi,%rcx
  417808:	48 c1 e9 03          	shr    $0x3,%rcx
  41780c:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  417813:	0f 85 48 09 00 00    	jne    418161 <ls+0x16f1>
		(void)  fprintf( fp,
  417819:	49 8b 8c 24 10 ef ff 	mov    -0x10f0(%r12),%rcx
  417820:	ff 
  417821:	50                   	push   %rax
  417822:	31 c0                	xor    %eax,%eax
  417824:	41 55                	push   %r13
  417826:	ff 74 24 30          	pushq  0x30(%rsp)
  41782a:	41 52                	push   %r10
  41782c:	56                   	push   %rsi
  41782d:	be 00 61 42 00       	mov    $0x426100,%esi
  417832:	52                   	push   %rdx
  417833:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
  417838:	4c 89 fa             	mov    %r15,%rdx
  41783b:	e8 f0 b4 fe ff       	callq  402d30 <fprintf@plt>
  417840:	48 83 c4 30          	add    $0x30,%rsp
  417844:	48 83 c5 08          	add    $0x8,%rbp
	    for ( i = 0; i < nnames; ++i )
  417848:	48 39 6c 24 18       	cmp    %rbp,0x18(%rsp)
  41784d:	0f 85 1d f8 ff ff    	jne    417070 <ls+0x600>
	    (void) fprintf( fp, "</PRE></BODY>\n</HTML>\n" );
  417853:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
  417858:	ba 16 00 00 00       	mov    $0x16,%edx
  41785d:	be 01 00 00 00       	mov    $0x1,%esi
  417862:	bf 80 60 42 00       	mov    $0x426080,%edi
  417867:	48 89 d9             	mov    %rbx,%rcx
  41786a:	e8 11 b7 fe ff       	callq  402f80 <fwrite@plt>
	    (void) fclose( fp );
  41786f:	48 89 df             	mov    %rbx,%rdi
  417872:	e8 99 ba fe ff       	callq  403310 <fclose@plt>
	    exit( 0 );
  417877:	e8 c4 b7 fe ff       	callq  403040 <__asan_handle_no_return@plt>
  41787c:	31 ff                	xor    %edi,%edi
  41787e:	e8 5d b8 fe ff       	callq  4030e0 <exit@plt>
  417883:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  417888:	48 8b 15 31 ae 22 00 	mov    0x22ae31(%rip),%rdx        # 6426c0 <nameptrs.6489>
  41788f:	48 01 ea             	add    %rbp,%rdx
  417892:	48 89 d0             	mov    %rdx,%rax
  417895:	48 c1 e8 03          	shr    $0x3,%rax
  417899:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4178a0:	0f 85 7d 07 00 00    	jne    418023 <ls+0x15b3>
  4178a6:	48 8b 32             	mov    (%rdx),%rsi
  4178a9:	48 8b 3d d0 ad 22 00 	mov    0x22add0(%rip),%rdi        # 642680 <name.6490>
  4178b0:	e9 04 f9 ff ff       	jmpq   4171b9 <ls+0x749>
  4178b5:	0f 1f 00             	nopl   (%rax)
		    (void) my_snprintf( name, maxname,
  4178b8:	49 89 f0             	mov    %rsi,%r8
  4178bb:	48 8b 35 7e ad 22 00 	mov    0x22ad7e(%rip),%rsi        # 642640 <maxname.6491>
  4178c2:	31 c0                	xor    %eax,%eax
  4178c4:	4c 89 e9             	mov    %r13,%rcx
  4178c7:	ba 00 52 42 00       	mov    $0x425200,%edx
  4178cc:	e8 3f 36 ff ff       	callq  40af10 <my_snprintf>
		    if ( strcmp( hc->origfilename, "." ) == 0 )
  4178d1:	4c 89 f8             	mov    %r15,%rax
  4178d4:	48 c1 e8 03          	shr    $0x3,%rax
  4178d8:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4178df:	0f 85 46 07 00 00    	jne    41802b <ls+0x15bb>
  4178e5:	4c 8b ab e8 00 00 00 	mov    0xe8(%rbx),%r13
  4178ec:	be c0 3a 42 00       	mov    $0x423ac0,%esi
  4178f1:	4c 89 ef             	mov    %r13,%rdi
  4178f4:	e8 47 b5 fe ff       	callq  402e40 <strcmp@plt>
			    "%s", nameptrs[i] );
  4178f9:	48 8b 3d c0 ad 22 00 	mov    0x22adc0(%rip),%rdi        # 6426c0 <nameptrs.6489>
  417900:	48 01 ef             	add    %rbp,%rdi
		    if ( strcmp( hc->origfilename, "." ) == 0 )
  417903:	85 c0                	test   %eax,%eax
			(void) my_snprintf( rname, maxrname,
  417905:	48 89 f8             	mov    %rdi,%rax
		    if ( strcmp( hc->origfilename, "." ) == 0 )
  417908:	75 33                	jne    41793d <ls+0xecd>
			(void) my_snprintf( rname, maxrname,
  41790a:	48 c1 e8 03          	shr    $0x3,%rax
  41790e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  417915:	0f 85 46 07 00 00    	jne    418061 <ls+0x15f1>
  41791b:	48 8b 0f             	mov    (%rdi),%rcx
  41791e:	48 8b 35 9b ac 22 00 	mov    0x22ac9b(%rip),%rsi        # 6425c0 <maxrname.6493>
  417925:	ba c0 60 42 00       	mov    $0x4260c0,%edx
  41792a:	31 c0                	xor    %eax,%eax
  41792c:	48 8b 3d cd ac 22 00 	mov    0x22accd(%rip),%rdi        # 642600 <rname.6492>
  417933:	e8 d8 35 ff ff       	callq  40af10 <my_snprintf>
  417938:	e9 ac f8 ff ff       	jmpq   4171e9 <ls+0x779>
			(void) my_snprintf( rname, maxrname,
  41793d:	48 c1 e8 03          	shr    $0x3,%rax
  417941:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  417948:	0f 85 18 07 00 00    	jne    418066 <ls+0x15f6>
  41794e:	4c 8b 07             	mov    (%rdi),%r8
  417951:	48 8b 35 68 ac 22 00 	mov    0x22ac68(%rip),%rsi        # 6425c0 <maxrname.6493>
  417958:	4c 89 e9             	mov    %r13,%rcx
  41795b:	31 c0                	xor    %eax,%eax
  41795d:	48 8b 3d 9c ac 22 00 	mov    0x22ac9c(%rip),%rdi        # 642600 <rname.6492>
  417964:	ba 00 57 42 00       	mov    $0x425700,%edx
  417969:	e8 a2 35 ff ff       	callq  40af10 <my_snprintf>
  41796e:	e9 76 f8 ff ff       	jmpq   4171e9 <ls+0x779>
	closedir( dirp );
  417973:	48 8b 3c 24          	mov    (%rsp),%rdi
  417977:	e8 64 b9 fe ff       	callq  4032e0 <closedir@plt>
	send_mime(
  41797c:	48 8d bb 88 02 00 00 	lea    0x288(%rbx),%rdi
  417983:	48 89 f8             	mov    %rdi,%rax
  417986:	48 c1 e8 03          	shr    $0x3,%rax
  41798a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  417991:	0f 85 d4 06 00 00    	jne    41806b <ls+0x15fb>
  417997:	ff b3 88 02 00 00    	pushq  0x288(%rbx)
  41799d:	41 b8 60 38 42 00    	mov    $0x423860,%r8d
  4179a3:	48 89 df             	mov    %rbx,%rdi
  4179a6:	be c8 00 00 00       	mov    $0xc8,%esi
  4179ab:	6a ff                	pushq  $0xffffffffffffffff
  4179ad:	41 b9 20 38 42 00    	mov    $0x423820,%r9d
  4179b3:	4c 89 c1             	mov    %r8,%rcx
  4179b6:	ba 20 5e 42 00       	mov    $0x425e20,%edx
    return 0;
  4179bb:	31 db                	xor    %ebx,%ebx
	send_mime(
  4179bd:	e8 ae 5b ff ff       	callq  40d570 <send_mime>
  4179c2:	5e                   	pop    %rsi
  4179c3:	5f                   	pop    %rdi
  4179c4:	e9 96 f5 ff ff       	jmpq   416f5f <ls+0x4ef>
  4179c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
		    timestr[ 7] = timestr[11];
  4179d0:	49 8d 79 0b          	lea    0xb(%r9),%rdi
  4179d4:	48 89 f8             	mov    %rdi,%rax
  4179d7:	48 89 fa             	mov    %rdi,%rdx
  4179da:	48 c1 e8 03          	shr    $0x3,%rax
  4179de:	83 e2 07             	and    $0x7,%edx
  4179e1:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4179e8:	38 d0                	cmp    %dl,%al
  4179ea:	7f 08                	jg     4179f4 <ls+0xf84>
  4179ec:	84 c0                	test   %al,%al
  4179ee:	0f 85 30 05 00 00    	jne    417f24 <ls+0x14b4>
  4179f4:	49 8d 79 07          	lea    0x7(%r9),%rdi
  4179f8:	41 0f b6 51 0b       	movzbl 0xb(%r9),%edx
  4179fd:	48 89 f8             	mov    %rdi,%rax
  417a00:	48 89 f9             	mov    %rdi,%rcx
  417a03:	48 c1 e8 03          	shr    $0x3,%rax
  417a07:	83 e1 07             	and    $0x7,%ecx
  417a0a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417a11:	38 c8                	cmp    %cl,%al
  417a13:	7f 08                	jg     417a1d <ls+0xfad>
  417a15:	84 c0                	test   %al,%al
  417a17:	0f 85 02 05 00 00    	jne    417f1f <ls+0x14af>
		    timestr[ 8] = timestr[12];
  417a1d:	49 8d 41 0c          	lea    0xc(%r9),%rax
		    timestr[ 7] = timestr[11];
  417a21:	41 88 51 07          	mov    %dl,0x7(%r9)
		    timestr[ 8] = timestr[12];
  417a25:	48 89 c2             	mov    %rax,%rdx
  417a28:	48 89 c1             	mov    %rax,%rcx
  417a2b:	48 c1 ea 03          	shr    $0x3,%rdx
  417a2f:	83 e1 07             	and    $0x7,%ecx
  417a32:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  417a39:	38 ca                	cmp    %cl,%dl
  417a3b:	7f 08                	jg     417a45 <ls+0xfd5>
  417a3d:	84 d2                	test   %dl,%dl
  417a3f:	0f 85 d2 04 00 00    	jne    417f17 <ls+0x14a7>
  417a45:	41 0f b6 51 0c       	movzbl 0xc(%r9),%edx
		    timestr[10] = timestr[14];
  417a4a:	49 8d 79 0e          	lea    0xe(%r9),%rdi
		    timestr[ 9] = ':';
  417a4e:	41 c6 41 09 3a       	movb   $0x3a,0x9(%r9)
		    timestr[10] = timestr[14];
  417a53:	48 89 f9             	mov    %rdi,%rcx
		    timestr[ 8] = timestr[12];
  417a56:	41 88 51 08          	mov    %dl,0x8(%r9)
		    timestr[10] = timestr[14];
  417a5a:	48 89 fa             	mov    %rdi,%rdx
  417a5d:	83 e1 07             	and    $0x7,%ecx
  417a60:	48 c1 ea 03          	shr    $0x3,%rdx
  417a64:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  417a6b:	38 ca                	cmp    %cl,%dl
  417a6d:	7f 08                	jg     417a77 <ls+0x1007>
  417a6f:	84 d2                	test   %dl,%dl
  417a71:	0f 85 9b 04 00 00    	jne    417f12 <ls+0x14a2>
  417a77:	49 8d 79 0a          	lea    0xa(%r9),%rdi
  417a7b:	41 0f b6 49 0e       	movzbl 0xe(%r9),%ecx
  417a80:	48 89 fa             	mov    %rdi,%rdx
  417a83:	48 89 fe             	mov    %rdi,%rsi
  417a86:	48 c1 ea 03          	shr    $0x3,%rdx
  417a8a:	83 e6 07             	and    $0x7,%esi
  417a8d:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  417a94:	40 38 f2             	cmp    %sil,%dl
  417a97:	7f 08                	jg     417aa1 <ls+0x1031>
  417a99:	84 d2                	test   %dl,%dl
  417a9b:	0f 85 b1 04 00 00    	jne    417f52 <ls+0x14e2>
		    timestr[11] = timestr[15];
  417aa1:	49 8d 79 0f          	lea    0xf(%r9),%rdi
		    timestr[10] = timestr[14];
  417aa5:	41 88 49 0a          	mov    %cl,0xa(%r9)
		    timestr[11] = timestr[15];
  417aa9:	48 89 fa             	mov    %rdi,%rdx
  417aac:	48 89 f9             	mov    %rdi,%rcx
  417aaf:	48 c1 ea 03          	shr    $0x3,%rdx
  417ab3:	83 e1 07             	and    $0x7,%ecx
  417ab6:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  417abd:	38 ca                	cmp    %cl,%dl
  417abf:	7f 08                	jg     417ac9 <ls+0x1059>
  417ac1:	84 d2                	test   %dl,%dl
  417ac3:	0f 85 84 04 00 00    	jne    417f4d <ls+0x14dd>
  417ac9:	41 0f b6 51 0f       	movzbl 0xf(%r9),%edx
  417ace:	41 88 51 0b          	mov    %dl,0xb(%r9)
  417ad2:	e9 54 fc ff ff       	jmpq   41772b <ls+0xcbb>
  417ad7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  417ade:	00 00 
		    case S_IFSOCK: fileclass = "="; break;
  417ae0:	b8 c0 5c 42 00       	mov    $0x425cc0,%eax
		(void)  fprintf( fp,
  417ae5:	48 89 fa             	mov    %rdi,%rdx
  417ae8:	48 c1 ea 03          	shr    $0x3,%rdx
  417aec:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  417af3:	0f 84 d9 fc ff ff    	je     4177d2 <ls+0xd62>
  417af9:	e8 52 b7 fe ff       	callq  403250 <__asan_report_load8@plt>
  417afe:	66 90                	xchg   %ax,%ax
		    case S_IFLNK:  fileclass = "@"; break;
  417b00:	b8 00 5d 42 00       	mov    $0x425d00,%eax
  417b05:	eb de                	jmp    417ae5 <ls+0x1075>
  417b07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  417b0e:	00 00 
		(void)  fprintf( fp,
  417b10:	48 89 f8             	mov    %rdi,%rax
  417b13:	48 c1 e8 03          	shr    $0x3,%rax
  417b17:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  417b1e:	0f 85 24 04 00 00    	jne    417f48 <ls+0x14d8>
		    case S_IFDIR:  fileclass = "/"; break;
  417b24:	b8 e0 45 42 00       	mov    $0x4245e0,%eax
		(void)  fprintf( fp,
  417b29:	4c 8b 17             	mov    (%rdi),%r10
  417b2c:	48 89 c6             	mov    %rax,%rsi
  417b2f:	e9 a6 fc ff ff       	jmpq   4177da <ls+0xd6a>
		    case S_IFCHR:  modestr[0] = 'c'; break;
  417b34:	4d 8d bc 24 00 ee ff 	lea    -0x1200(%r12),%r15
  417b3b:	ff 
  417b3c:	4c 89 f8             	mov    %r15,%rax
  417b3f:	48 c1 e8 03          	shr    $0x3,%rax
  417b43:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417b4a:	84 c0                	test   %al,%al
  417b4c:	74 06                	je     417b54 <ls+0x10e4>
  417b4e:	0f 8e ec 03 00 00    	jle    417f40 <ls+0x14d0>
  417b54:	41 c6 84 24 00 ee ff 	movb   $0x63,-0x1200(%r12)
  417b5b:	ff 63 
		linkprefix = "";
  417b5d:	48 c7 44 24 20 60 38 	movq   $0x423860,0x20(%rsp)
  417b64:	42 00 
		    case S_IFCHR:  modestr[0] = 'c'; break;
  417b66:	e9 f5 f7 ff ff       	jmpq   417360 <ls+0x8f0>
		    case S_IFLNK:  modestr[0] = 'l';
  417b6b:	4d 8d bc 24 00 ee ff 	lea    -0x1200(%r12),%r15
  417b72:	ff 
  417b73:	4c 89 f8             	mov    %r15,%rax
  417b76:	48 c1 e8 03          	shr    $0x3,%rax
  417b7a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417b81:	84 c0                	test   %al,%al
  417b83:	74 06                	je     417b8b <ls+0x111b>
  417b85:	0f 8e ad 03 00 00    	jle    417f38 <ls+0x14c8>
		    linklen = readlink( name, link, sizeof(link) - 1 );
  417b8b:	48 8b 3d ee aa 22 00 	mov    0x22aaee(%rip),%rdi        # 642680 <name.6490>
  417b92:	ba 00 10 00 00       	mov    $0x1000,%edx
  417b97:	4c 89 ee             	mov    %r13,%rsi
		    case S_IFLNK:  modestr[0] = 'l';
  417b9a:	41 c6 84 24 00 ee ff 	movb   $0x6c,-0x1200(%r12)
  417ba1:	ff 6c 
		    linklen = readlink( name, link, sizeof(link) - 1 );
  417ba3:	e8 38 b4 fe ff       	callq  402fe0 <readlink@plt>
		    if ( linklen != -1 )
  417ba8:	83 f8 ff             	cmp    $0xffffffff,%eax
  417bab:	0f 84 4d 01 00 00    	je     417cfe <ls+0x128e>
			link[linklen] = '\0';
  417bb1:	48 98                	cltq   
  417bb3:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
  417bb8:	48 89 fa             	mov    %rdi,%rdx
  417bbb:	48 89 f9             	mov    %rdi,%rcx
  417bbe:	48 c1 ea 03          	shr    $0x3,%rdx
  417bc2:	83 e1 07             	and    $0x7,%ecx
  417bc5:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  417bcc:	38 ca                	cmp    %cl,%dl
  417bce:	7f 08                	jg     417bd8 <ls+0x1168>
  417bd0:	84 d2                	test   %dl,%dl
  417bd2:	0f 85 5b 03 00 00    	jne    417f33 <ls+0x14c3>
  417bd8:	41 c6 84 04 c0 ef ff 	movb   $0x0,-0x1040(%r12,%rax,1)
  417bdf:	ff 00 
			linkprefix = " -&gt; ";
  417be1:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  417be6:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417bed:	84 c0                	test   %al,%al
  417bef:	74 08                	je     417bf9 <ls+0x1189>
  417bf1:	3c 03                	cmp    $0x3,%al
  417bf3:	0f 8e 30 03 00 00    	jle    417f29 <ls+0x14b9>
  417bf9:	41 8b 94 24 18 ef ff 	mov    -0x10e8(%r12),%edx
  417c00:	ff 
  417c01:	48 c7 44 24 20 40 5c 	movq   $0x425c40,0x20(%rsp)
  417c08:	42 00 
  417c0a:	e9 51 f7 ff ff       	jmpq   417360 <ls+0x8f0>
  417c0f:	90                   	nop
		    case S_IFSOCK: modestr[0] = 's'; break;
  417c10:	4d 8d bc 24 00 ee ff 	lea    -0x1200(%r12),%r15
  417c17:	ff 
  417c18:	4c 89 f8             	mov    %r15,%rax
  417c1b:	48 c1 e8 03          	shr    $0x3,%rax
  417c1f:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417c26:	84 c0                	test   %al,%al
  417c28:	74 06                	je     417c30 <ls+0x11c0>
  417c2a:	0f 8e da 02 00 00    	jle    417f0a <ls+0x149a>
  417c30:	41 c6 84 24 00 ee ff 	movb   $0x73,-0x1200(%r12)
  417c37:	ff 73 
		linkprefix = "";
  417c39:	48 c7 44 24 20 60 38 	movq   $0x423860,0x20(%rsp)
  417c40:	42 00 
		    case S_IFSOCK: modestr[0] = 's'; break;
  417c42:	e9 19 f7 ff ff       	jmpq   417360 <ls+0x8f0>
  417c47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  417c4e:	00 00 
		    case S_IFDIR:  modestr[0] = 'd'; break;
  417c50:	4d 8d bc 24 00 ee ff 	lea    -0x1200(%r12),%r15
  417c57:	ff 
  417c58:	4c 89 f8             	mov    %r15,%rax
  417c5b:	48 c1 e8 03          	shr    $0x3,%rax
  417c5f:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417c66:	84 c0                	test   %al,%al
  417c68:	74 06                	je     417c70 <ls+0x1200>
  417c6a:	0f 8e 92 02 00 00    	jle    417f02 <ls+0x1492>
  417c70:	41 c6 84 24 00 ee ff 	movb   $0x64,-0x1200(%r12)
  417c77:	ff 64 
		linkprefix = "";
  417c79:	48 c7 44 24 20 60 38 	movq   $0x423860,0x20(%rsp)
  417c80:	42 00 
		    case S_IFDIR:  modestr[0] = 'd'; break;
  417c82:	e9 d9 f6 ff ff       	jmpq   417360 <ls+0x8f0>
  417c87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  417c8e:	00 00 
		    case S_IFIFO:  modestr[0] = 'p'; break;
  417c90:	4d 8d bc 24 00 ee ff 	lea    -0x1200(%r12),%r15
  417c97:	ff 
  417c98:	4c 89 f8             	mov    %r15,%rax
  417c9b:	48 c1 e8 03          	shr    $0x3,%rax
  417c9f:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417ca6:	84 c0                	test   %al,%al
  417ca8:	74 06                	je     417cb0 <ls+0x1240>
  417caa:	0f 8e 4a 02 00 00    	jle    417efa <ls+0x148a>
  417cb0:	41 c6 84 24 00 ee ff 	movb   $0x70,-0x1200(%r12)
  417cb7:	ff 70 
		linkprefix = "";
  417cb9:	48 c7 44 24 20 60 38 	movq   $0x423860,0x20(%rsp)
  417cc0:	42 00 
		    case S_IFIFO:  modestr[0] = 'p'; break;
  417cc2:	e9 99 f6 ff ff       	jmpq   417360 <ls+0x8f0>
		    case S_IFBLK:  modestr[0] = 'b'; break;
  417cc7:	4d 8d bc 24 00 ee ff 	lea    -0x1200(%r12),%r15
  417cce:	ff 
  417ccf:	4c 89 f8             	mov    %r15,%rax
  417cd2:	48 c1 e8 03          	shr    $0x3,%rax
  417cd6:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417cdd:	84 c0                	test   %al,%al
  417cdf:	74 06                	je     417ce7 <ls+0x1277>
  417ce1:	0f 8e 0b 02 00 00    	jle    417ef2 <ls+0x1482>
  417ce7:	41 c6 84 24 00 ee ff 	movb   $0x62,-0x1200(%r12)
  417cee:	ff 62 
		linkprefix = "";
  417cf0:	48 c7 44 24 20 60 38 	movq   $0x423860,0x20(%rsp)
  417cf7:	42 00 
		    case S_IFBLK:  modestr[0] = 'b'; break;
  417cf9:	e9 62 f6 ff ff       	jmpq   417360 <ls+0x8f0>
  417cfe:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  417d03:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  417d0a:	84 c0                	test   %al,%al
  417d0c:	74 12                	je     417d20 <ls+0x12b0>
  417d0e:	3c 03                	cmp    $0x3,%al
  417d10:	7f 0e                	jg     417d20 <ls+0x12b0>
  417d12:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  417d17:	e8 b4 b0 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  417d1c:	0f 1f 40 00          	nopl   0x0(%rax)
  417d20:	41 8b 94 24 18 ef ff 	mov    -0x10e8(%r12),%edx
  417d27:	ff 
		linkprefix = "";
  417d28:	48 c7 44 24 20 60 38 	movq   $0x423860,0x20(%rsp)
  417d2f:	42 00 
  417d31:	e9 2a f6 ff ff       	jmpq   417360 <ls+0x8f0>
	closedir( dirp );
  417d36:	48 8b 3c 24          	mov    (%rsp),%rdi
  417d3a:	e8 a1 b5 fe ff       	callq  4032e0 <closedir@plt>
	httpd_send_err(
  417d3f:	48 89 e8             	mov    %rbp,%rax
  417d42:	48 c1 e8 03          	shr    $0x3,%rax
  417d46:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  417d4d:	48 89 e8             	mov    %rbp,%rax
  417d50:	83 e0 07             	and    $0x7,%eax
  417d53:	83 c0 03             	add    $0x3,%eax
  417d56:	38 d0                	cmp    %dl,%al
  417d58:	7c 08                	jl     417d62 <ls+0x12f2>
  417d5a:	84 d2                	test   %dl,%dl
  417d5c:	0f 85 04 04 00 00    	jne    418166 <ls+0x16f6>
  417d62:	8b bb b4 00 00 00    	mov    0xb4(%rbx),%edi
  417d68:	e8 b3 84 ff ff       	callq  410220 <httpd_method_str>
  417d6d:	48 89 df             	mov    %rbx,%rdi
  417d70:	41 b8 20 47 42 00    	mov    $0x424720,%r8d
  417d76:	b9 60 38 42 00       	mov    $0x423860,%ecx
  417d7b:	49 89 c1             	mov    %rax,%r9
  417d7e:	ba a0 47 42 00       	mov    $0x4247a0,%edx
  417d83:	be f5 01 00 00       	mov    $0x1f5,%esi
	return -1;
  417d88:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
	httpd_send_err(
  417d8d:	e8 2e 81 ff ff       	callq  40fec0 <httpd_send_err>
	return -1;
  417d92:	e9 c8 f1 ff ff       	jmpq   416f5f <ls+0x4ef>
	    closedir( dirp );
  417d97:	48 8b 3c 24          	mov    (%rsp),%rdi
  417d9b:	e8 40 b5 fe ff       	callq  4032e0 <closedir@plt>
	    httpd_send_err(
  417da0:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
  417da7:	48 89 f8             	mov    %rdi,%rax
  417daa:	48 c1 e8 03          	shr    $0x3,%rax
  417dae:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  417db5:	0f 85 32 01 00 00    	jne    417eed <ls+0x147d>
  417dbb:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  417dc2:	48 89 df             	mov    %rbx,%rdi
  417dc5:	b9 60 38 42 00       	mov    $0x423860,%ecx
  417dca:	be f7 01 00 00       	mov    $0x1f7,%esi
  417dcf:	4c 8b 05 8a e1 21 00 	mov    0x21e18a(%rip),%r8        # 635f60 <httpd_err503form>
  417dd6:	48 8b 15 c3 e1 21 00 	mov    0x21e1c3(%rip),%rdx        # 635fa0 <httpd_err503title>
	    return -1;
  417ddd:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
	    httpd_send_err(
  417de2:	e8 d9 80 ff ff       	callq  40fec0 <httpd_send_err>
	    return -1;
  417de7:	e9 73 f1 ff ff       	jmpq   416f5f <ls+0x4ef>
	    syslog( LOG_ERR, "fork - %m" );
  417dec:	31 c0                	xor    %eax,%eax
  417dee:	be 60 5e 42 00       	mov    $0x425e60,%esi
  417df3:	bf 03 00 00 00       	mov    $0x3,%edi
  417df8:	e8 43 ae fe ff       	callq  402c40 <syslog@plt>
	    closedir( dirp );
  417dfd:	48 8b 3c 24          	mov    (%rsp),%rdi
  417e01:	e8 da b4 fe ff       	callq  4032e0 <closedir@plt>
	    httpd_send_err(
  417e06:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
  417e0d:	48 89 f8             	mov    %rdi,%rax
  417e10:	48 c1 e8 03          	shr    $0x3,%rax
  417e14:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  417e1b:	0f 85 5a 03 00 00    	jne    41817b <ls+0x170b>
  417e21:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  417e28:	48 89 df             	mov    %rbx,%rdi
  417e2b:	41 b8 80 4d 42 00    	mov    $0x424d80,%r8d
  417e31:	b9 60 38 42 00       	mov    $0x423860,%ecx
  417e36:	ba 00 4e 42 00       	mov    $0x424e00,%edx
  417e3b:	be f4 01 00 00       	mov    $0x1f4,%esi
	    return -1;
  417e40:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
	    httpd_send_err(
  417e45:	e8 76 80 ff ff       	callq  40fec0 <httpd_send_err>
	    return -1;
  417e4a:	e9 10 f1 ff ff       	jmpq   416f5f <ls+0x4ef>
		(void) strncpy( nameptrs[nnames], de->d_name, namlen );
  417e4f:	4c 89 ff             	mov    %r15,%rdi
  417e52:	e8 f9 b3 fe ff       	callq  403250 <__asan_report_load8@plt>
	syslog( LOG_ERR, "opendir %.80s - %m", hc->expnfilename );
  417e57:	80 bd 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rbp)
  417e5e:	0f 85 21 03 00 00    	jne    418185 <ls+0x1715>
  417e64:	48 8b 93 f0 00 00 00 	mov    0xf0(%rbx),%rdx
  417e6b:	31 c0                	xor    %eax,%eax
  417e6d:	bf 03 00 00 00       	mov    $0x3,%edi
  417e72:	be 40 5d 42 00       	mov    $0x425d40,%esi
  417e77:	e8 c4 ad fe ff       	callq  402c40 <syslog@plt>
	httpd_send_err( hc, 404, err404title, "", err404form, hc->encodedurl );
  417e7c:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
  417e83:	48 89 f8             	mov    %rdi,%rax
  417e86:	48 c1 e8 03          	shr    $0x3,%rax
  417e8a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  417e91:	0f 85 e9 02 00 00    	jne    418180 <ls+0x1710>
  417e97:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  417e9e:	48 89 df             	mov    %rbx,%rdi
  417ea1:	41 b8 80 5d 42 00    	mov    $0x425d80,%r8d
  417ea7:	b9 60 38 42 00       	mov    $0x423860,%ecx
  417eac:	ba e0 5d 42 00       	mov    $0x425de0,%edx
  417eb1:	be 94 01 00 00       	mov    $0x194,%esi
	return -1;
  417eb6:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
	httpd_send_err( hc, 404, err404title, "", err404form, hc->encodedurl );
  417ebb:	e8 00 80 ff ff       	callq  40fec0 <httpd_send_err>
	return -1;
  417ec0:	e9 9a f0 ff ff       	jmpq   416f5f <ls+0x4ef>
		nameptrs[nnames][namlen] = '\0';
  417ec5:	48 89 c7             	mov    %rax,%rdi
  417ec8:	e8 63 b2 fe ff       	callq  403130 <__asan_report_store1@plt>
			syslog( LOG_ERR, "out of memory reallocating directory names" );
  417ecd:	bf 03 00 00 00       	mov    $0x3,%edi
  417ed2:	be 20 60 42 00       	mov    $0x426020,%esi
  417ed7:	31 c0                	xor    %eax,%eax
  417ed9:	e8 62 ad fe ff       	callq  402c40 <syslog@plt>
			exit( 1 );
  417ede:	e8 5d b1 fe ff       	callq  403040 <__asan_handle_no_return@plt>
  417ee3:	bf 01 00 00 00       	mov    $0x1,%edi
  417ee8:	e8 f3 b1 fe ff       	callq  4030e0 <exit@plt>
	    httpd_send_err(
  417eed:	e8 5e b3 fe ff       	callq  403250 <__asan_report_load8@plt>
		    case S_IFBLK:  modestr[0] = 'b'; break;
  417ef2:	4c 89 ff             	mov    %r15,%rdi
  417ef5:	e8 36 b2 fe ff       	callq  403130 <__asan_report_store1@plt>
		    case S_IFIFO:  modestr[0] = 'p'; break;
  417efa:	4c 89 ff             	mov    %r15,%rdi
  417efd:	e8 2e b2 fe ff       	callq  403130 <__asan_report_store1@plt>
		    case S_IFDIR:  modestr[0] = 'd'; break;
  417f02:	4c 89 ff             	mov    %r15,%rdi
  417f05:	e8 26 b2 fe ff       	callq  403130 <__asan_report_store1@plt>
		    case S_IFSOCK: modestr[0] = 's'; break;
  417f0a:	4c 89 ff             	mov    %r15,%rdi
  417f0d:	e8 1e b2 fe ff       	callq  403130 <__asan_report_store1@plt>
		    timestr[10] = timestr[14];
  417f12:	e8 f9 b1 fe ff       	callq  403110 <__asan_report_load1@plt>
		    timestr[ 8] = timestr[12];
  417f17:	48 89 c7             	mov    %rax,%rdi
  417f1a:	e8 f1 b1 fe ff       	callq  403110 <__asan_report_load1@plt>
		    timestr[ 7] = timestr[11];
  417f1f:	e8 0c b2 fe ff       	callq  403130 <__asan_report_store1@plt>
  417f24:	e8 e7 b1 fe ff       	callq  403110 <__asan_report_load1@plt>
  417f29:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  417f2e:	e8 9d ae fe ff       	callq  402dd0 <__asan_report_load4@plt>
			link[linklen] = '\0';
  417f33:	e8 f8 b1 fe ff       	callq  403130 <__asan_report_store1@plt>
		    case S_IFLNK:  modestr[0] = 'l';
  417f38:	4c 89 ff             	mov    %r15,%rdi
  417f3b:	e8 f0 b1 fe ff       	callq  403130 <__asan_report_store1@plt>
		    case S_IFCHR:  modestr[0] = 'c'; break;
  417f40:	4c 89 ff             	mov    %r15,%rdi
  417f43:	e8 e8 b1 fe ff       	callq  403130 <__asan_report_store1@plt>
		(void)  fprintf( fp,
  417f48:	e8 03 b3 fe ff       	callq  403250 <__asan_report_load8@plt>
		    timestr[11] = timestr[15];
  417f4d:	e8 be b1 fe ff       	callq  403110 <__asan_report_load1@plt>
		    timestr[10] = timestr[14];
  417f52:	e8 d9 b1 fe ff       	callq  403130 <__asan_report_store1@plt>
		    modestr, (long) lsb.st_nlink, (int64_t) lsb.st_size,
  417f57:	e8 f4 b2 fe ff       	callq  403250 <__asan_report_load8@plt>
		(void)  fprintf( fp,
  417f5c:	e8 ef b2 fe ff       	callq  403250 <__asan_report_load8@plt>
		switch ( sb.st_mode & S_IFMT )
  417f61:	e8 6a ae fe ff       	callq  402dd0 <__asan_report_load4@plt>
		timestr[12] = '\0';
  417f66:	48 89 c7             	mov    %rax,%rdi
  417f69:	e8 c2 b1 fe ff       	callq  403130 <__asan_report_store1@plt>
		    timestr[11] = timestr[23];
  417f6e:	e8 bd b1 fe ff       	callq  403130 <__asan_report_store1@plt>
  417f73:	e8 98 b1 fe ff       	callq  403110 <__asan_report_load1@plt>
		    timestr[10] = timestr[22];
  417f78:	e8 b3 b1 fe ff       	callq  403130 <__asan_report_store1@plt>
  417f7d:	e8 8e b1 fe ff       	callq  403110 <__asan_report_load1@plt>
		    timestr[ 9] = timestr[21];
  417f82:	e8 89 b1 fe ff       	callq  403110 <__asan_report_load1@plt>
		    timestr[ 8] = timestr[20];
  417f87:	e8 84 b1 fe ff       	callq  403110 <__asan_report_load1@plt>
		    timestr[ 7] = ' ';
  417f8c:	e8 9f b1 fe ff       	callq  403130 <__asan_report_store1@plt>
		if ( now - lsb.st_mtime > 60*60*24*182 )        /* 1/2 year */
  417f91:	e8 ba b2 fe ff       	callq  403250 <__asan_report_load8@plt>
		timestr[ 5] = timestr[ 9];
  417f96:	e8 75 b1 fe ff       	callq  403110 <__asan_report_load1@plt>
		timestr[ 4] = timestr[ 8];
  417f9b:	e8 70 b1 fe ff       	callq  403110 <__asan_report_load1@plt>
		timestr[ 3] = ' ';
  417fa0:	e8 8b b1 fe ff       	callq  403130 <__asan_report_store1@plt>
		timestr[ 2] = timestr[ 6];
  417fa5:	e8 86 b1 fe ff       	callq  403130 <__asan_report_store1@plt>
  417faa:	e8 61 b1 fe ff       	callq  403110 <__asan_report_load1@plt>
		timestr[ 1] = timestr[ 5];
  417faf:	e8 7c b1 fe ff       	callq  403130 <__asan_report_store1@plt>
  417fb4:	e8 57 b1 fe ff       	callq  403110 <__asan_report_load1@plt>
		timestr[ 0] = timestr[ 4];
  417fb9:	4c 89 cf             	mov    %r9,%rdi
  417fbc:	e8 6f b1 fe ff       	callq  403130 <__asan_report_store1@plt>
  417fc1:	e8 4a b1 fe ff       	callq  403110 <__asan_report_load1@plt>
		modestr[4] = '\0';
  417fc6:	e8 65 b1 fe ff       	callq  403130 <__asan_report_store1@plt>
		modestr[3] = ( lsb.st_mode & S_IXOTH ) ? 'x' : '-';
  417fcb:	e8 60 b1 fe ff       	callq  403130 <__asan_report_store1@plt>
		modestr[2] = ( lsb.st_mode & S_IWOTH ) ? 'w' : '-';
  417fd0:	e8 5b b1 fe ff       	callq  403130 <__asan_report_store1@plt>
		modestr[1] = ( lsb.st_mode & S_IROTH ) ? 'r' : '-';
  417fd5:	e8 56 b1 fe ff       	callq  403130 <__asan_report_store1@plt>
	    fp = fdopen( hc->conn_fd, "w" );
  417fda:	e8 f1 ad fe ff       	callq  402dd0 <__asan_report_load4@plt>
	hc->status = 200;
  417fdf:	e8 0c ac fe ff       	callq  402bf0 <__asan_report_store4@plt>
	hc->should_linger = 0;
  417fe4:	e8 07 ac fe ff       	callq  402bf0 <__asan_report_store4@plt>
  417fe9:	e8 e2 ad fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( hc->hs->cgi_limit != 0 && hc->hs->cgi_count >= hc->hs->cgi_limit )
  417fee:	e8 dd ad fe ff       	callq  402dd0 <__asan_report_load4@plt>
	    httpd_unlisten( hc->hs );
  417ff3:	48 89 cf             	mov    %rcx,%rdi
  417ff6:	e8 55 b2 fe ff       	callq  403250 <__asan_report_load8@plt>
	    send_mime(
  417ffb:	e8 50 b2 fe ff       	callq  403250 <__asan_report_load8@plt>
	    syslog( LOG_CRIT, "tmr_create(cgi_kill ls) failed" );
  418000:	bf 02 00 00 00       	mov    $0x2,%edi
  418005:	be c0 61 42 00       	mov    $0x4261c0,%esi
  41800a:	e8 31 ac fe ff       	callq  402c40 <syslog@plt>
	    exit( 1 );
  41800f:	e8 2c b0 fe ff       	callq  403040 <__asan_handle_no_return@plt>
  418014:	bf 01 00 00 00       	mov    $0x1,%edi
  418019:	e8 c2 b0 fe ff       	callq  4030e0 <exit@plt>
	hc->bytes_sent = CGI_BYTECOUNT;
  41801e:	e8 7d af fe ff       	callq  402fa0 <__asan_report_store8@plt>
  418023:	48 89 d7             	mov    %rdx,%rdi
  418026:	e8 25 b2 fe ff       	callq  403250 <__asan_report_load8@plt>
		    if ( strcmp( hc->origfilename, "." ) == 0 )
  41802b:	4c 89 ff             	mov    %r15,%rdi
  41802e:	e8 1d b2 fe ff       	callq  403250 <__asan_report_load8@plt>
    dirp = opendir( hc->expnfilename );
  418033:	48 89 c7             	mov    %rax,%rdi
  418036:	e8 15 b2 fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( hc->hs->cgi_limit != 0 && hc->hs->cgi_count >= hc->hs->cgi_limit )
  41803b:	48 89 cf             	mov    %rcx,%rdi
  41803e:	e8 0d b2 fe ff       	callq  403250 <__asan_report_load8@plt>
    {
  418043:	bf 20 12 00 00       	mov    $0x1220,%edi
  418048:	e8 e3 ae fe ff       	callq  402f30 <__asan_stack_malloc_7@plt>
  41804d:	48 85 c0             	test   %rax,%rax
  418050:	4c 0f 45 f0          	cmovne %rax,%r14
  418054:	e9 43 ea ff ff       	jmpq   416a9c <ls+0x2c>
    if ( hc->method == METHOD_HEAD )
  418059:	48 89 ef             	mov    %rbp,%rdi
  41805c:	e8 6f ad fe ff       	callq  402dd0 <__asan_report_load4@plt>
			(void) my_snprintf( rname, maxrname,
  418061:	e8 ea b1 fe ff       	callq  403250 <__asan_report_load8@plt>
			(void) my_snprintf( rname, maxrname,
  418066:	e8 e5 b1 fe ff       	callq  403250 <__asan_report_load8@plt>
	send_mime(
  41806b:	e8 e0 b1 fe ff       	callq  403250 <__asan_report_load8@plt>
		switch ( lsb.st_mode & S_IFMT )
  418070:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  418075:	e8 56 ad fe ff       	callq  402dd0 <__asan_report_load4@plt>
		    strlen( hc->expnfilename ) + 1 + strlen( nameptrs[i] ) );
  41807a:	e8 d1 b1 fe ff       	callq  403250 <__asan_report_load8@plt>
		    strlen( hc->origfilename ) + 1 + strlen( nameptrs[i] ) );
  41807f:	4c 89 ff             	mov    %r15,%rdi
  418082:	e8 c9 b1 fe ff       	callq  403250 <__asan_report_load8@plt>
  418087:	e8 c4 b1 fe ff       	callq  403250 <__asan_report_load8@plt>
		if ( hc->expnfilename[0] == '\0' ||
  41808c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  418091:	e8 ba b1 fe ff       	callq  403250 <__asan_report_load8@plt>
  418096:	4c 89 ef             	mov    %r13,%rdi
  418099:	e8 72 b0 fe ff       	callq  403110 <__asan_report_load1@plt>
  41809e:	48 89 d7             	mov    %rdx,%rdi
  4180a1:	e8 aa b1 fe ff       	callq  403250 <__asan_report_load8@plt>
		    (void) strcpy( rname, nameptrs[i] );
  4180a6:	48 89 d7             	mov    %rdx,%rdi
  4180a9:	e8 a2 b1 fe ff       	callq  403250 <__asan_report_load8@plt>
		link[0] = '\0';
  4180ae:	4c 89 ef             	mov    %r13,%rdi
  4180b1:	e8 7a b0 fe ff       	callq  403130 <__asan_report_store1@plt>
    {
  4180b6:	49 c7 06 0e 36 e0 45 	movq   $0x45e0360e,(%r14)
  4180bd:	4c 89 ea             	mov    %r13,%rdx
  4180c0:	be 20 12 00 00       	mov    $0x1220,%esi
  4180c5:	4c 89 f7             	mov    %r14,%rdi
  4180c8:	e8 83 ab fe ff       	callq  402c50 <__asan_stack_free_7@plt>
  4180cd:	e9 cd ee ff ff       	jmpq   416f9f <ls+0x52f>
		syslog( LOG_ERR, "fdopen - %m" );
  4180d2:	bf 03 00 00 00       	mov    $0x3,%edi
  4180d7:	be e0 5e 42 00       	mov    $0x425ee0,%esi
  4180dc:	e8 5f ab fe ff       	callq  402c40 <syslog@plt>
		httpd_send_err(
  4180e1:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
  4180e8:	48 89 f8             	mov    %rdi,%rax
  4180eb:	48 c1 e8 03          	shr    $0x3,%rax
  4180ef:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4180f6:	75 5c                	jne    418154 <ls+0x16e4>
  4180f8:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  4180ff:	41 b8 80 4d 42 00    	mov    $0x424d80,%r8d
  418105:	b9 60 38 42 00       	mov    $0x423860,%ecx
  41810a:	48 89 df             	mov    %rbx,%rdi
  41810d:	ba 00 4e 42 00       	mov    $0x424e00,%edx
  418112:	be f4 01 00 00       	mov    $0x1f4,%esi
  418117:	e8 a4 7d ff ff       	callq  40fec0 <httpd_send_err>
		httpd_write_response( hc );
  41811c:	48 89 df             	mov    %rbx,%rdi
  41811f:	e8 4c e8 ff ff       	callq  416970 <httpd_write_response>
		closedir( dirp );
  418124:	48 8b 3c 24          	mov    (%rsp),%rdi
  418128:	e8 b3 b1 fe ff       	callq  4032e0 <closedir@plt>
		exit( 1 );
  41812d:	e8 0e af fe ff       	callq  403040 <__asan_handle_no_return@plt>
  418132:	bf 01 00 00 00       	mov    $0x1,%edi
  418137:	e8 a4 af fe ff       	callq  4030e0 <exit@plt>
  41813c:	0f 1f 40 00          	nopl   0x0(%rax)
		    strlen( hc->expnfilename ) + 1 + strlen( nameptrs[i] ) );
  418140:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  418145:	e8 06 b1 fe ff       	callq  403250 <__asan_report_load8@plt>
	syslog( LOG_INFO, "spawned indexing process %d for directory '%.200s'", r, hc->expnfilename );
  41814a:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41814f:	e8 fc b0 fe ff       	callq  403250 <__asan_report_load8@plt>
		httpd_send_err(
  418154:	e8 f7 b0 fe ff       	callq  403250 <__asan_report_load8@plt>
		    case S_IFREG:  modestr[0] = '-'; break;
  418159:	4c 89 ff             	mov    %r15,%rdi
  41815c:	e8 cf af fe ff       	callq  403130 <__asan_report_store1@plt>
		    modestr, (long) lsb.st_nlink, (int64_t) lsb.st_size,
  418161:	e8 ea b0 fe ff       	callq  403250 <__asan_report_load8@plt>
	httpd_send_err(
  418166:	48 89 ef             	mov    %rbp,%rdi
  418169:	e8 62 ac fe ff       	callq  402dd0 <__asan_report_load4@plt>
		    default:       modestr[0] = '?'; break;
  41816e:	4c 89 ff             	mov    %r15,%rdi
  418171:	e8 ba af fe ff       	callq  403130 <__asan_report_store1@plt>
	    (void) fprintf( fp, "\
  418176:	e8 d5 b0 fe ff       	callq  403250 <__asan_report_load8@plt>
	    httpd_send_err(
  41817b:	e8 d0 b0 fe ff       	callq  403250 <__asan_report_load8@plt>
	httpd_send_err( hc, 404, err404title, "", err404form, hc->encodedurl );
  418180:	e8 cb b0 fe ff       	callq  403250 <__asan_report_load8@plt>
	syslog( LOG_ERR, "opendir %.80s - %m", hc->expnfilename );
  418185:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41818a:	e8 c1 b0 fe ff       	callq  403250 <__asan_report_load8@plt>
  41818f:	90                   	nop

0000000000418190 <cgi_interpose_input>:
    {
  418190:	41 57                	push   %r15
  418192:	41 56                	push   %r14
  418194:	41 55                	push   %r13
  418196:	41 54                	push   %r12
  418198:	55                   	push   %rbp
  418199:	48 89 fd             	mov    %rdi,%rbp
  41819c:	53                   	push   %rbx
  41819d:	48 81 ec 78 04 00 00 	sub    $0x478,%rsp
  4181a4:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  4181a9:	89 74 24 0c          	mov    %esi,0xc(%rsp)
  4181ad:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  4181b2:	8b 05 48 91 22 00    	mov    0x229148(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  4181b8:	85 c0                	test   %eax,%eax
  4181ba:	0f 85 2d 02 00 00    	jne    4183ed <cgi_interpose_input+0x25d>
  4181c0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    c = hc->read_idx - hc->checked_idx;
  4181c5:	48 8d bd a0 00 00 00 	lea    0xa0(%rbp),%rdi
    {
  4181cc:	48 c7 00 b3 8a b5 41 	movq   $0x41b58ab3,(%rax)
  4181d3:	4c 8d a0 40 04 00 00 	lea    0x440(%rax),%r12
  4181da:	48 c7 40 08 7d 21 42 	movq   $0x42217d,0x8(%rax)
  4181e1:	00 
  4181e2:	48 c7 40 10 90 81 41 	movq   $0x418190,0x10(%rax)
  4181e9:	00 
  4181ea:	48 c1 e8 03          	shr    $0x3,%rax
  4181ee:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  4181f3:	c7 80 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rax)
  4181fa:	f1 f1 f1 
  4181fd:	c7 80 84 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8084(%rax)
  418204:	f3 f3 f3 
    c = hc->read_idx - hc->checked_idx;
  418207:	48 89 f8             	mov    %rdi,%rax
  41820a:	48 c1 e8 03          	shr    $0x3,%rax
  41820e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  418215:	0f 85 cd 01 00 00    	jne    4183e8 <cgi_interpose_input+0x258>
  41821b:	48 8d bd a8 00 00 00 	lea    0xa8(%rbp),%rdi
  418222:	48 8b 9d a0 00 00 00 	mov    0xa0(%rbp),%rbx
  418229:	48 89 f8             	mov    %rdi,%rax
  41822c:	48 c1 e8 03          	shr    $0x3,%rax
  418230:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  418237:	0f 85 a6 01 00 00    	jne    4183e3 <cgi_interpose_input+0x253>
  41823d:	48 8b b5 a8 00 00 00 	mov    0xa8(%rbp),%rsi
    if ( c > 0 )
  418244:	48 29 f3             	sub    %rsi,%rbx
  418247:	0f 85 2f 01 00 00    	jne    41837c <cgi_interpose_input+0x1ec>
  41824d:	48 8d 85 f0 01 00 00 	lea    0x1f0(%rbp),%rax
	r = read( hc->conn_fd, buf, MIN( sizeof(buf), hc->contentlength - c ) );
  418254:	49 81 ec 20 04 00 00 	sub    $0x420,%r12
    while ( c < hc->contentlength )
  41825b:	49 89 c5             	mov    %rax,%r13
  41825e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
	r = read( hc->conn_fd, buf, MIN( sizeof(buf), hc->contentlength - c ) );
  418263:	48 8d 85 c0 02 00 00 	lea    0x2c0(%rbp),%rax
  41826a:	49 89 c6             	mov    %rax,%r14
    while ( c < hc->contentlength )
  41826d:	49 c1 ed 03          	shr    $0x3,%r13
	r = read( hc->conn_fd, buf, MIN( sizeof(buf), hc->contentlength - c ) );
  418271:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  418276:	49 c1 ee 03          	shr    $0x3,%r14
  41827a:	eb 27                	jmp    4182a3 <cgi_interpose_input+0x113>
  41827c:	0f 1f 40 00          	nopl   0x0(%rax)
	if ( r <= 0 )
  418280:	0f 84 ac 00 00 00    	je     418332 <cgi_interpose_input+0x1a2>
	if ( httpd_write_fully( wfd, buf, r ) != r )
  418286:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  41828a:	48 89 c2             	mov    %rax,%rdx
  41828d:	4c 89 e6             	mov    %r12,%rsi
  418290:	e8 2b e6 ff ff       	callq  4168c0 <httpd_write_fully>
  418295:	48 98                	cltq   
  418297:	4c 39 f8             	cmp    %r15,%rax
  41829a:	0f 85 92 00 00 00    	jne    418332 <cgi_interpose_input+0x1a2>
	c += r;
  4182a0:	48 01 c3             	add    %rax,%rbx
    while ( c < hc->contentlength )
  4182a3:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  4182aa:	00 
  4182ab:	0f 85 16 01 00 00    	jne    4183c7 <cgi_interpose_input+0x237>
  4182b1:	48 8b 95 f0 01 00 00 	mov    0x1f0(%rbp),%rdx
  4182b8:	48 39 da             	cmp    %rbx,%rdx
  4182bb:	0f 86 f5 00 00 00    	jbe    4183b6 <cgi_interpose_input+0x226>
	r = read( hc->conn_fd, buf, MIN( sizeof(buf), hc->contentlength - c ) );
  4182c1:	48 29 da             	sub    %rbx,%rdx
  4182c4:	b8 00 04 00 00       	mov    $0x400,%eax
  4182c9:	48 81 fa 00 04 00 00 	cmp    $0x400,%rdx
  4182d0:	48 0f 47 d0          	cmova  %rax,%rdx
  4182d4:	41 0f b6 86 00 80 ff 	movzbl 0x7fff8000(%r14),%eax
  4182db:	7f 
  4182dc:	84 c0                	test   %al,%al
  4182de:	74 08                	je     4182e8 <cgi_interpose_input+0x158>
  4182e0:	3c 03                	cmp    $0x3,%al
  4182e2:	0f 8e e9 00 00 00    	jle    4183d1 <cgi_interpose_input+0x241>
  4182e8:	8b bd c0 02 00 00    	mov    0x2c0(%rbp),%edi
  4182ee:	4c 89 e6             	mov    %r12,%rsi
  4182f1:	e8 ca ab fe ff       	callq  402ec0 <read@plt>
  4182f6:	49 89 c7             	mov    %rax,%r15
	if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
  4182f9:	48 85 c0             	test   %rax,%rax
  4182fc:	79 82                	jns    418280 <cgi_interpose_input+0xf0>
  4182fe:	e8 fd a8 fe ff       	callq  402c00 <__errno_location@plt>
  418303:	48 89 c2             	mov    %rax,%rdx
  418306:	48 c1 ea 03          	shr    $0x3,%rdx
  41830a:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  418311:	48 89 c2             	mov    %rax,%rdx
  418314:	83 e2 07             	and    $0x7,%edx
  418317:	83 c2 03             	add    $0x3,%edx
  41831a:	38 ca                	cmp    %cl,%dl
  41831c:	7c 08                	jl     418326 <cgi_interpose_input+0x196>
  41831e:	84 c9                	test   %cl,%cl
  418320:	0f 85 b5 00 00 00    	jne    4183db <cgi_interpose_input+0x24b>
  418326:	8b 00                	mov    (%rax),%eax
  418328:	83 f8 04             	cmp    $0x4,%eax
  41832b:	74 40                	je     41836d <cgi_interpose_input+0x1dd>
  41832d:	83 f8 0b             	cmp    $0xb,%eax
  418330:	74 3b                	je     41836d <cgi_interpose_input+0x1dd>
    {
  418332:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  418337:	48 3b 44 24 10       	cmp    0x10(%rsp),%rax
  41833c:	0f 85 c8 00 00 00    	jne    41840a <cgi_interpose_input+0x27a>
  418342:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  418347:	c7 80 00 80 ff 7f 00 	movl   $0x0,0x7fff8000(%rax)
  41834e:	00 00 00 
  418351:	c7 80 84 80 ff 7f 00 	movl   $0x0,0x7fff8084(%rax)
  418358:	00 00 00 
    }
  41835b:	48 81 c4 78 04 00 00 	add    $0x478,%rsp
  418362:	5b                   	pop    %rbx
  418363:	5d                   	pop    %rbp
  418364:	41 5c                	pop    %r12
  418366:	41 5d                	pop    %r13
  418368:	41 5e                	pop    %r14
  41836a:	41 5f                	pop    %r15
  41836c:	c3                   	retq   
	    sleep( 1 );
  41836d:	bf 01 00 00 00       	mov    $0x1,%edi
  418372:	e8 f9 aa fe ff       	callq  402e70 <sleep@plt>
	    continue;
  418377:	e9 27 ff ff ff       	jmpq   4182a3 <cgi_interpose_input+0x113>
	if ( httpd_write_fully( wfd, &(hc->read_buf[hc->checked_idx]), c ) != c )
  41837c:	48 8d bd 90 00 00 00 	lea    0x90(%rbp),%rdi
  418383:	48 89 f8             	mov    %rdi,%rax
  418386:	48 c1 e8 03          	shr    $0x3,%rax
  41838a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  418391:	0f 85 96 00 00 00    	jne    41842d <cgi_interpose_input+0x29d>
  418397:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  41839b:	48 03 b5 90 00 00 00 	add    0x90(%rbp),%rsi
  4183a2:	48 89 da             	mov    %rbx,%rdx
  4183a5:	e8 16 e5 ff ff       	callq  4168c0 <httpd_write_fully>
  4183aa:	48 98                	cltq   
  4183ac:	48 39 d8             	cmp    %rbx,%rax
  4183af:	75 81                	jne    418332 <cgi_interpose_input+0x1a2>
  4183b1:	e9 97 fe ff ff       	jmpq   41824d <cgi_interpose_input+0xbd>
    post_post_garbage_hack( hc );
  4183b6:	48 8d bd c0 02 00 00 	lea    0x2c0(%rbp),%rdi
  4183bd:	e8 ee 4d ff ff       	callq  40d1b0 <post_post_garbage_hack.isra.3>
  4183c2:	e9 6b ff ff ff       	jmpq   418332 <cgi_interpose_input+0x1a2>
    while ( c < hc->contentlength )
  4183c7:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  4183cc:	e8 7f ae fe ff       	callq  403250 <__asan_report_load8@plt>
	r = read( hc->conn_fd, buf, MIN( sizeof(buf), hc->contentlength - c ) );
  4183d1:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4183d6:	e8 f5 a9 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
  4183db:	48 89 c7             	mov    %rax,%rdi
  4183de:	e8 ed a9 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    c = hc->read_idx - hc->checked_idx;
  4183e3:	e8 68 ae fe ff       	callq  403250 <__asan_report_load8@plt>
  4183e8:	e8 63 ae fe ff       	callq  403250 <__asan_report_load8@plt>
    {
  4183ed:	bf 40 04 00 00       	mov    $0x440,%edi
  4183f2:	e8 d9 ad fe ff       	callq  4031d0 <__asan_stack_malloc_5@plt>
  4183f7:	48 85 c0             	test   %rax,%rax
  4183fa:	48 0f 44 44 24 10    	cmove  0x10(%rsp),%rax
  418400:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  418405:	e9 b6 fd ff ff       	jmpq   4181c0 <cgi_interpose_input+0x30>
  41840a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  41840f:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
  418414:	be 40 04 00 00       	mov    $0x440,%esi
  418419:	48 c7 00 0e 36 e0 45 	movq   $0x45e0360e,(%rax)
  418420:	48 89 c7             	mov    %rax,%rdi
  418423:	e8 88 ae fe ff       	callq  4032b0 <__asan_stack_free_5@plt>
  418428:	e9 2e ff ff ff       	jmpq   41835b <cgi_interpose_input+0x1cb>
	if ( httpd_write_fully( wfd, &(hc->read_buf[hc->checked_idx]), c ) != c )
  41842d:	e8 1e ae fe ff       	callq  403250 <__asan_report_load8@plt>
  418432:	0f 1f 40 00          	nopl   0x0(%rax)
  418436:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41843d:	00 00 00 

0000000000418440 <cgi_interpose_output.isra.4>:
cgi_interpose_output( httpd_conn* hc, int rfd )
  418440:	41 57                	push   %r15
  418442:	49 89 ff             	mov    %rdi,%r15
  418445:	41 56                	push   %r14
  418447:	41 55                	push   %r13
  418449:	41 54                	push   %r12
  41844b:	55                   	push   %rbp
  41844c:	53                   	push   %rbx
  41844d:	48 81 ec f8 04 00 00 	sub    $0x4f8,%rsp
  418454:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  418459:	89 74 24 04          	mov    %esi,0x4(%rsp)
  41845d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  418462:	8b 05 98 8e 22 00    	mov    0x228e98(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  418468:	85 c0                	test   %eax,%eax
  41846a:	0f 85 69 06 00 00    	jne    418ad9 <cgi_interpose_output.isra.4+0x699>
  418470:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  418475:	48 c7 00 b3 8a b5 41 	movq   $0x41b58ab3,(%rax)
  41847c:	4c 8d b0 c0 04 00 00 	lea    0x4c0(%rax),%r14
  418483:	48 c7 40 08 00 c9 42 	movq   $0x42c900,0x8(%rax)
  41848a:	00 
  41848b:	48 c7 40 10 40 84 41 	movq   $0x418440,0x10(%rax)
  418492:	00 
  418493:	48 c1 e8 03          	shr    $0x3,%rax
  418497:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  41849c:	c7 80 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rax)
  4184a3:	f1 f1 f1 
  4184a6:	c7 80 04 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff8004(%rax)
  4184ad:	f2 f2 f2 
  4184b0:	c7 80 08 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8008(%rax)
  4184b7:	f2 f2 f2 
  4184ba:	c7 80 0c 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff800c(%rax)
  4184c1:	f2 f2 f2 
  4184c4:	c7 80 10 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8010(%rax)
  4184cb:	f2 f2 f2 
  4184ce:	c7 80 94 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8094(%rax)
  4184d5:	f3 f3 f3 
    httpd_clear_ndelay( hc->conn_fd );
  4184d8:	4c 89 f8             	mov    %r15,%rax
  4184db:	48 c1 e8 03          	shr    $0x3,%rax
  4184df:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4184e6:	4c 89 f8             	mov    %r15,%rax
  4184e9:	83 e0 07             	and    $0x7,%eax
  4184ec:	83 c0 03             	add    $0x3,%eax
  4184ef:	38 d0                	cmp    %dl,%al
  4184f1:	7c 08                	jl     4184fb <cgi_interpose_output.isra.4+0xbb>
  4184f3:	84 d2                	test   %dl,%dl
  4184f5:	0f 85 32 06 00 00    	jne    418b2d <cgi_interpose_output.isra.4+0x6ed>
  4184fb:	41 8b 3f             	mov    (%r15),%edi
  4184fe:	e8 ed 4d ff ff       	callq  40d2f0 <httpd_clear_ndelay>
    headers_size = 0;
  418503:	49 8d 86 60 fb ff ff 	lea    -0x4a0(%r14),%rax
  41850a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41850f:	48 c1 e8 03          	shr    $0x3,%rax
  418513:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41851a:	0f 85 03 06 00 00    	jne    418b23 <cgi_interpose_output.isra.4+0x6e3>
    httpd_realloc_str( &headers, &headers_size, 500 );
  418520:	4d 8d ae a0 fb ff ff 	lea    -0x460(%r14),%r13
  418527:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    headers_len = 0;
  41852c:	31 db                	xor    %ebx,%ebx
    httpd_realloc_str( &headers, &headers_size, 500 );
  41852e:	ba f4 01 00 00       	mov    $0x1f4,%edx
  418533:	4c 89 ef             	mov    %r13,%rdi
  418536:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
  41853b:	4d 8d a6 e0 fb ff ff 	lea    -0x420(%r14),%r12
	(void) memmove( &(headers[headers_len]), buf, r );
  418542:	49 c1 ed 03          	shr    $0x3,%r13
    headers_size = 0;
  418546:	49 c7 86 60 fb ff ff 	movq   $0x0,-0x4a0(%r14)
  41854d:	00 00 00 00 
    httpd_realloc_str( &headers, &headers_size, 500 );
  418551:	e8 da 4d ff ff       	callq  40d330 <httpd_realloc_str>
    headers_len = 0;
  418556:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
  41855b:	e9 a5 00 00 00       	jmpq   418605 <cgi_interpose_output.isra.4+0x1c5>
	if ( r <= 0 )
  418560:	0f 84 ec 00 00 00    	je     418652 <cgi_interpose_output.isra.4+0x212>
	httpd_realloc_str( &headers, &headers_size, headers_len + r );
  418566:	4c 63 f8             	movslq %eax,%r15
  418569:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  41856e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  418573:	49 8d 2c 1f          	lea    (%r15,%rbx,1),%rbp
  418577:	48 89 ea             	mov    %rbp,%rdx
  41857a:	e8 b1 4d ff ff       	callq  40d330 <httpd_realloc_str>
	(void) memmove( &(headers[headers_len]), buf, r );
  41857f:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  418586:	00 
  418587:	0f 85 13 05 00 00    	jne    418aa0 <cgi_interpose_output.isra.4+0x660>
  41858d:	49 03 9e a0 fb ff ff 	add    -0x460(%r14),%rbx
  418594:	4c 89 fa             	mov    %r15,%rdx
  418597:	4c 89 e6             	mov    %r12,%rsi
  41859a:	48 89 df             	mov    %rbx,%rdi
  41859d:	e8 3e a7 fe ff       	callq  402ce0 <memmove@plt>
	headers[headers_len] = '\0';
  4185a2:	49 8b be a0 fb ff ff 	mov    -0x460(%r14),%rdi
  4185a9:	48 01 ef             	add    %rbp,%rdi
  4185ac:	48 89 f8             	mov    %rdi,%rax
  4185af:	48 89 fa             	mov    %rdi,%rdx
  4185b2:	48 c1 e8 03          	shr    $0x3,%rax
  4185b6:	83 e2 07             	and    $0x7,%edx
  4185b9:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4185c0:	38 d0                	cmp    %dl,%al
  4185c2:	7f 08                	jg     4185cc <cgi_interpose_output.isra.4+0x18c>
  4185c4:	84 c0                	test   %al,%al
  4185c6:	0f 85 de 04 00 00    	jne    418aaa <cgi_interpose_output.isra.4+0x66a>
  4185cc:	c6 07 00             	movb   $0x0,(%rdi)
	if ( ( br = strstr( headers, "\015\012\015\012" ) ) != (char*) 0 ||
  4185cf:	49 8b 9e a0 fb ff ff 	mov    -0x460(%r14),%rbx
  4185d6:	be 80 62 42 00       	mov    $0x426280,%esi
  4185db:	48 89 df             	mov    %rbx,%rdi
  4185de:	e8 9d ad fe ff       	callq  403380 <strstr@plt>
  4185e3:	48 85 c0             	test   %rax,%rax
  4185e6:	0f 85 a6 00 00 00    	jne    418692 <cgi_interpose_output.isra.4+0x252>
	     ( br = strstr( headers, "\012\012" ) ) != (char*) 0 )
  4185ec:	be c0 62 42 00       	mov    $0x4262c0,%esi
  4185f1:	48 89 df             	mov    %rbx,%rdi
  4185f4:	e8 87 ad fe ff       	callq  403380 <strstr@plt>
	if ( ( br = strstr( headers, "\015\012\015\012" ) ) != (char*) 0 ||
  4185f9:	48 85 c0             	test   %rax,%rax
  4185fc:	0f 85 90 00 00 00    	jne    418692 <cgi_interpose_output.isra.4+0x252>
	    sleep( 1 );
  418602:	48 89 eb             	mov    %rbp,%rbx
	r = read( rfd, buf, sizeof(buf) );
  418605:	8b 7c 24 04          	mov    0x4(%rsp),%edi
  418609:	ba 00 04 00 00       	mov    $0x400,%edx
  41860e:	4c 89 e6             	mov    %r12,%rsi
  418611:	e8 aa a8 fe ff       	callq  402ec0 <read@plt>
	if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
  418616:	85 c0                	test   %eax,%eax
  418618:	0f 89 42 ff ff ff    	jns    418560 <cgi_interpose_output.isra.4+0x120>
  41861e:	e8 dd a5 fe ff       	callq  402c00 <__errno_location@plt>
  418623:	48 89 c2             	mov    %rax,%rdx
  418626:	48 c1 ea 03          	shr    $0x3,%rdx
  41862a:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  418631:	48 89 c2             	mov    %rax,%rdx
  418634:	83 e2 07             	and    $0x7,%edx
  418637:	83 c2 03             	add    $0x3,%edx
  41863a:	38 ca                	cmp    %cl,%dl
  41863c:	7c 08                	jl     418646 <cgi_interpose_output.isra.4+0x206>
  41863e:	84 c9                	test   %cl,%cl
  418640:	0f 85 71 04 00 00    	jne    418ab7 <cgi_interpose_output.isra.4+0x677>
  418646:	8b 00                	mov    (%rax),%eax
  418648:	83 f8 04             	cmp    $0x4,%eax
  41864b:	74 33                	je     418680 <cgi_interpose_output.isra.4+0x240>
  41864d:	83 f8 0b             	cmp    $0xb,%eax
  418650:	74 2e                	je     418680 <cgi_interpose_output.isra.4+0x240>
	    br = &(headers[headers_len]);
  418652:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  418657:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
  41865c:	48 c1 e8 03          	shr    $0x3,%rax
  418660:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  418667:	0f 85 89 04 00 00    	jne    418af6 <cgi_interpose_output.isra.4+0x6b6>
  41866d:	4d 8b ae a0 fb ff ff 	mov    -0x460(%r14),%r13
  418674:	48 89 dd             	mov    %rbx,%rbp
  418677:	4d 8d 44 1d 00       	lea    0x0(%r13,%rbx,1),%r8
	    break;
  41867c:	eb 1f                	jmp    41869d <cgi_interpose_output.isra.4+0x25d>
  41867e:	66 90                	xchg   %ax,%ax
	    sleep( 1 );
  418680:	bf 01 00 00 00       	mov    $0x1,%edi
  418685:	48 89 dd             	mov    %rbx,%rbp
  418688:	e8 e3 a7 fe ff       	callq  402e70 <sleep@plt>
	    continue;
  41868d:	e9 70 ff ff ff       	jmpq   418602 <cgi_interpose_output.isra.4+0x1c2>
  418692:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
  418697:	49 89 c0             	mov    %rax,%r8
  41869a:	49 89 dd             	mov    %rbx,%r13
    if ( headers[0] == '\0' )
  41869d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4186a2:	48 c1 e8 03          	shr    $0x3,%rax
  4186a6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4186ad:	0f 85 94 04 00 00    	jne    418b47 <cgi_interpose_output.isra.4+0x707>
  4186b3:	4c 89 e8             	mov    %r13,%rax
  4186b6:	4c 89 ea             	mov    %r13,%rdx
  4186b9:	48 c1 e8 03          	shr    $0x3,%rax
  4186bd:	83 e2 07             	and    $0x7,%edx
  4186c0:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4186c7:	38 d0                	cmp    %dl,%al
  4186c9:	7f 08                	jg     4186d3 <cgi_interpose_output.isra.4+0x293>
  4186cb:	84 c0                	test   %al,%al
  4186cd:	0f 85 6c 04 00 00    	jne    418b3f <cgi_interpose_output.isra.4+0x6ff>
  4186d3:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
  4186d8:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
  4186dd:	0f 84 e4 02 00 00    	je     4189c7 <cgi_interpose_output.isra.4+0x587>
    if ( strncmp( headers, "HTTP/", 5 ) == 0 )
  4186e3:	ba 05 00 00 00       	mov    $0x5,%edx
  4186e8:	be 00 63 42 00       	mov    $0x426300,%esi
  4186ed:	4c 89 ef             	mov    %r13,%rdi
    status = 200;
  4186f0:	bb c8 00 00 00       	mov    $0xc8,%ebx
    if ( strncmp( headers, "HTTP/", 5 ) == 0 )
  4186f5:	e8 f6 ac fe ff       	callq  4033f0 <strncmp@plt>
  4186fa:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
  4186ff:	85 c0                	test   %eax,%eax
  418701:	75 1e                	jne    418721 <cgi_interpose_output.isra.4+0x2e1>
	cp += strcspn( cp, " \t" );
  418703:	be 20 48 42 00       	mov    $0x424820,%esi
  418708:	4c 89 ef             	mov    %r13,%rdi
  41870b:	e8 f0 a9 fe ff       	callq  403100 <strcspn@plt>
  418710:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
	status = atoi( cp );
  418715:	e8 46 a6 fe ff       	callq  402d60 <atoi@plt>
  41871a:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
  41871f:	89 c3                	mov    %eax,%ebx
    if ( ( cp = strstr( headers, "Status:" ) ) != (char*) 0 &&
  418721:	be 40 63 42 00       	mov    $0x426340,%esi
  418726:	4c 89 ef             	mov    %r13,%rdi
  418729:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
  41872e:	e8 4d ac fe ff       	callq  403380 <strstr@plt>
  418733:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
  418738:	4c 39 c0             	cmp    %r8,%rax
  41873b:	0f 83 a3 00 00 00    	jae    4187e4 <cgi_interpose_output.isra.4+0x3a4>
  418741:	48 85 c0             	test   %rax,%rax
  418744:	0f 84 9a 00 00 00    	je     4187e4 <cgi_interpose_output.isra.4+0x3a4>
	 cp < br &&
  41874a:	49 39 c5             	cmp    %rax,%r13
  41874d:	74 2a                	je     418779 <cgi_interpose_output.isra.4+0x339>
	 ( cp == headers || *(cp-1) == '\012' ) )
  41874f:	48 8d 78 ff          	lea    -0x1(%rax),%rdi
  418753:	48 89 fa             	mov    %rdi,%rdx
  418756:	48 89 f9             	mov    %rdi,%rcx
  418759:	48 c1 ea 03          	shr    $0x3,%rdx
  41875d:	83 e1 07             	and    $0x7,%ecx
  418760:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  418767:	38 ca                	cmp    %cl,%dl
  418769:	7f 08                	jg     418773 <cgi_interpose_output.isra.4+0x333>
  41876b:	84 d2                	test   %dl,%dl
  41876d:	0f 85 5c 03 00 00    	jne    418acf <cgi_interpose_output.isra.4+0x68f>
  418773:	80 78 ff 0a          	cmpb   $0xa,-0x1(%rax)
  418777:	75 6b                	jne    4187e4 <cgi_interpose_output.isra.4+0x3a4>
	cp += 7;
  418779:	48 8d 58 07          	lea    0x7(%rax),%rbx
	cp += strspn( cp, " \t" );
  41877d:	be 20 48 42 00       	mov    $0x424820,%esi
  418782:	48 89 df             	mov    %rbx,%rdi
  418785:	e8 56 ad fe ff       	callq  4034e0 <strspn@plt>
  41878a:	48 8d 3c 03          	lea    (%rbx,%rax,1),%rdi
	status = atoi( cp );
  41878e:	e8 cd a5 fe ff       	callq  402d60 <atoi@plt>
  418793:	89 c3                	mov    %eax,%ebx
    switch ( status )
  418795:	81 fb 93 01 00 00    	cmp    $0x193,%ebx
  41879b:	0f 84 f4 02 00 00    	je     418a95 <cgi_interpose_output.isra.4+0x655>
  4187a1:	0f 8e 66 02 00 00    	jle    418a0d <cgi_interpose_output.isra.4+0x5cd>
  4187a7:	81 fb f4 01 00 00    	cmp    $0x1f4,%ebx
  4187ad:	0f 84 d7 02 00 00    	je     418a8a <cgi_interpose_output.isra.4+0x64a>
  4187b3:	0f 8f 8c 00 00 00    	jg     418845 <cgi_interpose_output.isra.4+0x405>
	case 404: title = err404title; break;
  4187b9:	41 b8 e0 5d 42 00    	mov    $0x425de0,%r8d
  4187bf:	81 fb 94 01 00 00    	cmp    $0x194,%ebx
  4187c5:	0f 84 9c 00 00 00    	je     418867 <cgi_interpose_output.isra.4+0x427>
	default: title = "Something"; break;
  4187cb:	81 fb 98 01 00 00    	cmp    $0x198,%ebx
  4187d1:	41 b8 00 62 42 00    	mov    $0x426200,%r8d
  4187d7:	4c 0f 44 05 41 d8 21 	cmove  0x21d841(%rip),%r8        # 636020 <httpd_err408title>
  4187de:	00 
  4187df:	e9 83 00 00 00       	jmpq   418867 <cgi_interpose_output.isra.4+0x427>
    else if ( ( cp = strstr( headers, "Location:" ) ) != (char*) 0 &&
  4187e4:	be 80 63 42 00       	mov    $0x426380,%esi
  4187e9:	4c 89 ef             	mov    %r13,%rdi
  4187ec:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
  4187f1:	e8 8a ab fe ff       	callq  403380 <strstr@plt>
  4187f6:	48 85 c0             	test   %rax,%rax
  4187f9:	74 9a                	je     418795 <cgi_interpose_output.isra.4+0x355>
  4187fb:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
  418800:	49 39 c0             	cmp    %rax,%r8
  418803:	76 90                	jbe    418795 <cgi_interpose_output.isra.4+0x355>
	 cp < br &&
  418805:	49 39 c5             	cmp    %rax,%r13
  418808:	74 2e                	je     418838 <cgi_interpose_output.isra.4+0x3f8>
	 ( cp == headers || *(cp-1) == '\012' ) )
  41880a:	48 8d 78 ff          	lea    -0x1(%rax),%rdi
  41880e:	48 89 fa             	mov    %rdi,%rdx
  418811:	48 89 f9             	mov    %rdi,%rcx
  418814:	48 c1 ea 03          	shr    $0x3,%rdx
  418818:	83 e1 07             	and    $0x7,%ecx
  41881b:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  418822:	38 ca                	cmp    %cl,%dl
  418824:	7f 08                	jg     41882e <cgi_interpose_output.isra.4+0x3ee>
  418826:	84 d2                	test   %dl,%dl
  418828:	0f 85 a6 02 00 00    	jne    418ad4 <cgi_interpose_output.isra.4+0x694>
  41882e:	80 78 ff 0a          	cmpb   $0xa,-0x1(%rax)
  418832:	0f 85 5d ff ff ff    	jne    418795 <cgi_interpose_output.isra.4+0x355>
  418838:	bb 2e 01 00 00       	mov    $0x12e,%ebx
	case 302: title = err302title; break;
  41883d:	41 b8 80 3c 42 00    	mov    $0x423c80,%r8d
  418843:	eb 22                	jmp    418867 <cgi_interpose_output.isra.4+0x427>
	case 501: title = err501title; break;
  418845:	41 b8 a0 47 42 00    	mov    $0x4247a0,%r8d
  41884b:	81 fb f5 01 00 00    	cmp    $0x1f5,%ebx
  418851:	74 14                	je     418867 <cgi_interpose_output.isra.4+0x427>
	default: title = "Something"; break;
  418853:	81 fb f7 01 00 00    	cmp    $0x1f7,%ebx
  418859:	41 b8 00 62 42 00    	mov    $0x426200,%r8d
  41885f:	4c 0f 44 05 39 d7 21 	cmove  0x21d739(%rip),%r8        # 635fa0 <httpd_err503title>
  418866:	00 
    (void) my_snprintf( buf, sizeof(buf), "HTTP/1.0 %d %s\015\012", status, title );
  418867:	89 d9                	mov    %ebx,%ecx
  418869:	ba c0 63 42 00       	mov    $0x4263c0,%edx
  41886e:	be 00 04 00 00       	mov    $0x400,%esi
  418873:	4c 89 e7             	mov    %r12,%rdi
  418876:	31 c0                	xor    %eax,%eax
  418878:	e8 93 26 ff ff       	callq  40af10 <my_snprintf>
    (void) httpd_write_fully( hc->conn_fd, buf, strlen( buf ) );
  41887d:	4c 89 e7             	mov    %r12,%rdi
  418880:	e8 fb a3 fe ff       	callq  402c80 <strlen@plt>
  418885:	4c 89 fa             	mov    %r15,%rdx
  418888:	4c 89 f9             	mov    %r15,%rcx
  41888b:	48 c1 ea 03          	shr    $0x3,%rdx
  41888f:	83 e1 07             	and    $0x7,%ecx
  418892:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  418899:	83 c1 03             	add    $0x3,%ecx
  41889c:	40 38 f1             	cmp    %sil,%cl
  41889f:	7c 09                	jl     4188aa <cgi_interpose_output.isra.4+0x46a>
  4188a1:	40 84 f6             	test   %sil,%sil
  4188a4:	0f 85 a7 02 00 00    	jne    418b51 <cgi_interpose_output.isra.4+0x711>
  4188aa:	41 8b 3f             	mov    (%r15),%edi
  4188ad:	48 89 c2             	mov    %rax,%rdx
  4188b0:	4c 89 e6             	mov    %r12,%rsi
  4188b3:	e8 08 e0 ff ff       	callq  4168c0 <httpd_write_fully>
    (void) httpd_write_fully( hc->conn_fd, headers, headers_len );
  4188b8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4188bd:	48 c1 e8 03          	shr    $0x3,%rax
  4188c1:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4188c8:	0f 85 67 02 00 00    	jne    418b35 <cgi_interpose_output.isra.4+0x6f5>
  4188ce:	4c 89 f8             	mov    %r15,%rax
  4188d1:	49 8b b6 a0 fb ff ff 	mov    -0x460(%r14),%rsi
  4188d8:	48 c1 e8 03          	shr    $0x3,%rax
  4188dc:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4188e3:	4c 89 f8             	mov    %r15,%rax
  4188e6:	83 e0 07             	and    $0x7,%eax
  4188e9:	83 c0 03             	add    $0x3,%eax
  4188ec:	38 d0                	cmp    %dl,%al
  4188ee:	7c 08                	jl     4188f8 <cgi_interpose_output.isra.4+0x4b8>
  4188f0:	84 d2                	test   %dl,%dl
  4188f2:	0f 85 61 02 00 00    	jne    418b59 <cgi_interpose_output.isra.4+0x719>
  4188f8:	41 8b 3f             	mov    (%r15),%edi
  4188fb:	4c 89 fb             	mov    %r15,%rbx
  4188fe:	48 89 ea             	mov    %rbp,%rdx
  418901:	4c 89 fd             	mov    %r15,%rbp
  418904:	83 e3 07             	and    $0x7,%ebx
  418907:	48 c1 ed 03          	shr    $0x3,%rbp
  41890b:	e8 b0 df ff ff       	callq  4168c0 <httpd_write_fully>
  418910:	83 c3 03             	add    $0x3,%ebx
  418913:	eb 2e                	jmp    418943 <cgi_interpose_output.isra.4+0x503>
  418915:	0f 1f 00             	nopl   (%rax)
	if ( r <= 0 )
  418918:	0f b6 85 00 80 ff 7f 	movzbl 0x7fff8000(%rbp),%eax
  41891f:	38 c3                	cmp    %al,%bl
  418921:	7c 08                	jl     41892b <cgi_interpose_output.isra.4+0x4eb>
  418923:	84 c0                	test   %al,%al
  418925:	0f 85 84 01 00 00    	jne    418aaf <cgi_interpose_output.isra.4+0x66f>
  41892b:	41 8b 3f             	mov    (%r15),%edi
  41892e:	45 85 ed             	test   %r13d,%r13d
  418931:	74 64                	je     418997 <cgi_interpose_output.isra.4+0x557>
	if ( httpd_write_fully( hc->conn_fd, buf, r ) != r )
  418933:	49 63 d5             	movslq %r13d,%rdx
  418936:	4c 89 e6             	mov    %r12,%rsi
  418939:	e8 82 df ff ff       	callq  4168c0 <httpd_write_fully>
  41893e:	41 39 c5             	cmp    %eax,%r13d
  418941:	75 54                	jne    418997 <cgi_interpose_output.isra.4+0x557>
	r = read( rfd, buf, sizeof(buf) );
  418943:	8b 7c 24 04          	mov    0x4(%rsp),%edi
  418947:	ba 00 04 00 00       	mov    $0x400,%edx
  41894c:	4c 89 e6             	mov    %r12,%rsi
  41894f:	e8 6c a5 fe ff       	callq  402ec0 <read@plt>
  418954:	49 89 c5             	mov    %rax,%r13
	if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
  418957:	85 c0                	test   %eax,%eax
  418959:	79 bd                	jns    418918 <cgi_interpose_output.isra.4+0x4d8>
  41895b:	e8 a0 a2 fe ff       	callq  402c00 <__errno_location@plt>
  418960:	48 89 c2             	mov    %rax,%rdx
  418963:	48 c1 ea 03          	shr    $0x3,%rdx
  418967:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  41896e:	48 89 c2             	mov    %rax,%rdx
  418971:	83 e2 07             	and    $0x7,%edx
  418974:	83 c2 03             	add    $0x3,%edx
  418977:	38 ca                	cmp    %cl,%dl
  418979:	7c 08                	jl     418983 <cgi_interpose_output.isra.4+0x543>
  41897b:	84 c9                	test   %cl,%cl
  41897d:	0f 85 44 01 00 00    	jne    418ac7 <cgi_interpose_output.isra.4+0x687>
  418983:	8b 00                	mov    (%rax),%eax
  418985:	83 f8 04             	cmp    $0x4,%eax
  418988:	0f 84 e2 00 00 00    	je     418a70 <cgi_interpose_output.isra.4+0x630>
  41898e:	83 f8 0b             	cmp    $0xb,%eax
  418991:	0f 84 d9 00 00 00    	je     418a70 <cgi_interpose_output.isra.4+0x630>
    shutdown( hc->conn_fd, SHUT_WR );
  418997:	4c 89 f8             	mov    %r15,%rax
  41899a:	48 c1 e8 03          	shr    $0x3,%rax
  41899e:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4189a5:	4c 89 f8             	mov    %r15,%rax
  4189a8:	83 e0 07             	and    $0x7,%eax
  4189ab:	83 c0 03             	add    $0x3,%eax
  4189ae:	38 d0                	cmp    %dl,%al
  4189b0:	7c 08                	jl     4189ba <cgi_interpose_output.isra.4+0x57a>
  4189b2:	84 d2                	test   %dl,%dl
  4189b4:	0f 85 05 01 00 00    	jne    418abf <cgi_interpose_output.isra.4+0x67f>
  4189ba:	41 8b 3f             	mov    (%r15),%edi
  4189bd:	be 01 00 00 00       	mov    $0x1,%esi
  4189c2:	e8 e9 a7 fe ff       	callq  4031b0 <shutdown@plt>
cgi_interpose_output( httpd_conn* hc, int rfd )
  4189c7:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  4189cc:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
  4189d1:	0f 85 29 01 00 00    	jne    418b00 <cgi_interpose_output.isra.4+0x6c0>
  4189d7:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  4189dc:	66 0f ef c0          	pxor   %xmm0,%xmm0
  4189e0:	c7 80 10 80 ff 7f 00 	movl   $0x0,0x7fff8010(%rax)
  4189e7:	00 00 00 
  4189ea:	c7 80 94 80 ff 7f 00 	movl   $0x0,0x7fff8094(%rax)
  4189f1:	00 00 00 
  4189f4:	0f 11 80 00 80 ff 7f 	movups %xmm0,0x7fff8000(%rax)
    }
  4189fb:	48 81 c4 f8 04 00 00 	add    $0x4f8,%rsp
  418a02:	5b                   	pop    %rbx
  418a03:	5d                   	pop    %rbp
  418a04:	41 5c                	pop    %r12
  418a06:	41 5d                	pop    %r13
  418a08:	41 5e                	pop    %r14
  418a0a:	41 5f                	pop    %r15
  418a0c:	c3                   	retq   
  418a0d:	81 fb 30 01 00 00    	cmp    $0x130,%ebx
  418a13:	74 6a                	je     418a7f <cgi_interpose_output.isra.4+0x63f>
  418a15:	7f 2c                	jg     418a43 <cgi_interpose_output.isra.4+0x603>
	case 200: title = ok200title; break;
  418a17:	41 b8 20 5e 42 00    	mov    $0x425e20,%r8d
  418a1d:	81 fb c8 00 00 00    	cmp    $0xc8,%ebx
  418a23:	0f 84 3e fe ff ff    	je     418867 <cgi_interpose_output.isra.4+0x427>
	default: title = "Something"; break;
  418a29:	81 fb 2e 01 00 00    	cmp    $0x12e,%ebx
  418a2f:	41 b8 80 3c 42 00    	mov    $0x423c80,%r8d
  418a35:	b8 00 62 42 00       	mov    $0x426200,%eax
  418a3a:	4c 0f 45 c0          	cmovne %rax,%r8
  418a3e:	e9 24 fe ff ff       	jmpq   418867 <cgi_interpose_output.isra.4+0x427>
	case 400: title = httpd_err400title; break;
  418a43:	4c 8b 05 56 d6 21 00 	mov    0x21d656(%rip),%r8        # 6360a0 <httpd_err400title>
  418a4a:	81 fb 90 01 00 00    	cmp    $0x190,%ebx
  418a50:	0f 84 11 fe ff ff    	je     418867 <cgi_interpose_output.isra.4+0x427>
	default: title = "Something"; break;
  418a56:	81 fb 91 01 00 00    	cmp    $0x191,%ebx
  418a5c:	41 b8 00 3f 42 00    	mov    $0x423f00,%r8d
  418a62:	b8 00 62 42 00       	mov    $0x426200,%eax
  418a67:	4c 0f 45 c0          	cmovne %rax,%r8
  418a6b:	e9 f7 fd ff ff       	jmpq   418867 <cgi_interpose_output.isra.4+0x427>
	    sleep( 1 );
  418a70:	bf 01 00 00 00       	mov    $0x1,%edi
  418a75:	e8 f6 a3 fe ff       	callq  402e70 <sleep@plt>
	    continue;
  418a7a:	e9 c4 fe ff ff       	jmpq   418943 <cgi_interpose_output.isra.4+0x503>
	case 304: title = err304title; break;
  418a7f:	41 b8 40 62 42 00    	mov    $0x426240,%r8d
  418a85:	e9 dd fd ff ff       	jmpq   418867 <cgi_interpose_output.isra.4+0x427>
	case 500: title = err500title; break;
  418a8a:	41 b8 00 4e 42 00    	mov    $0x424e00,%r8d
  418a90:	e9 d2 fd ff ff       	jmpq   418867 <cgi_interpose_output.isra.4+0x427>
	case 403: title = err403title; break;
  418a95:	41 b8 20 4f 42 00    	mov    $0x424f20,%r8d
  418a9b:	e9 c7 fd ff ff       	jmpq   418867 <cgi_interpose_output.isra.4+0x427>
	(void) memmove( &(headers[headers_len]), buf, r );
  418aa0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  418aa5:	e8 a6 a7 fe ff       	callq  403250 <__asan_report_load8@plt>
	headers[headers_len] = '\0';
  418aaa:	e8 81 a6 fe ff       	callq  403130 <__asan_report_store1@plt>
  418aaf:	4c 89 ff             	mov    %r15,%rdi
  418ab2:	e8 19 a3 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
  418ab7:	48 89 c7             	mov    %rax,%rdi
  418aba:	e8 11 a3 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    shutdown( hc->conn_fd, SHUT_WR );
  418abf:	4c 89 ff             	mov    %r15,%rdi
  418ac2:	e8 09 a3 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
  418ac7:	48 89 c7             	mov    %rax,%rdi
  418aca:	e8 01 a3 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	 ( cp == headers || *(cp-1) == '\012' ) )
  418acf:	e8 3c a6 fe ff       	callq  403110 <__asan_report_load1@plt>
	 ( cp == headers || *(cp-1) == '\012' ) )
  418ad4:	e8 37 a6 fe ff       	callq  403110 <__asan_report_load1@plt>
cgi_interpose_output( httpd_conn* hc, int rfd )
  418ad9:	bf c0 04 00 00       	mov    $0x4c0,%edi
  418ade:	e8 ed a6 fe ff       	callq  4031d0 <__asan_stack_malloc_5@plt>
  418ae3:	48 85 c0             	test   %rax,%rax
  418ae6:	48 0f 44 44 24 18    	cmove  0x18(%rsp),%rax
  418aec:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  418af1:	e9 7a f9 ff ff       	jmpq   418470 <cgi_interpose_output.isra.4+0x30>
	    br = &(headers[headers_len]);
  418af6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  418afb:	e8 50 a7 fe ff       	callq  403250 <__asan_report_load8@plt>
cgi_interpose_output( httpd_conn* hc, int rfd )
  418b00:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  418b05:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
  418b0a:	be c0 04 00 00       	mov    $0x4c0,%esi
  418b0f:	48 c7 00 0e 36 e0 45 	movq   $0x45e0360e,(%rax)
  418b16:	48 89 c7             	mov    %rax,%rdi
  418b19:	e8 92 a7 fe ff       	callq  4032b0 <__asan_stack_free_5@plt>
  418b1e:	e9 d8 fe ff ff       	jmpq   4189fb <cgi_interpose_output.isra.4+0x5bb>
    headers_size = 0;
  418b23:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  418b28:	e8 73 a4 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    httpd_clear_ndelay( hc->conn_fd );
  418b2d:	4c 89 ff             	mov    %r15,%rdi
  418b30:	e8 9b a2 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    (void) httpd_write_fully( hc->conn_fd, headers, headers_len );
  418b35:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  418b3a:	e8 11 a7 fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( headers[0] == '\0' )
  418b3f:	4c 89 ef             	mov    %r13,%rdi
  418b42:	e8 c9 a5 fe ff       	callq  403110 <__asan_report_load1@plt>
  418b47:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  418b4c:	e8 ff a6 fe ff       	callq  403250 <__asan_report_load8@plt>
    (void) httpd_write_fully( hc->conn_fd, buf, strlen( buf ) );
  418b51:	4c 89 ff             	mov    %r15,%rdi
  418b54:	e8 77 a2 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    (void) httpd_write_fully( hc->conn_fd, headers, headers_len );
  418b59:	4c 89 ff             	mov    %r15,%rdi
  418b5c:	e8 6f a2 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  418b61:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  418b66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  418b6d:	00 00 00 

0000000000418b70 <cgi_child>:
    {
  418b70:	41 57                	push   %r15
  418b72:	49 89 ff             	mov    %rdi,%r15
  418b75:	41 56                	push   %r14
  418b77:	41 55                	push   %r13
  418b79:	41 54                	push   %r12
  418b7b:	55                   	push   %rbp
  418b7c:	53                   	push   %rbx
  418b7d:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
  418b84:	8b 05 76 87 22 00    	mov    0x228776(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  418b8a:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
  418b8f:	85 c0                	test   %eax,%eax
  418b91:	0f 85 ea 07 00 00    	jne    419381 <cgi_child+0x811>
  418b97:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
  418b9e:	4c 8d b3 a0 00 00 00 	lea    0xa0(%rbx),%r14
  418ba5:	48 c7 43 08 8e 21 42 	movq   $0x42218e,0x8(%rbx)
  418bac:	00 
  418bad:	48 c7 43 10 70 8b 41 	movq   $0x418b70,0x10(%rbx)
  418bb4:	00 
  418bb5:	48 c1 eb 03          	shr    $0x3,%rbx
  418bb9:	c7 83 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbx)
  418bc0:	f1 f1 f1 
  418bc3:	c7 83 04 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff8004(%rbx)
  418bca:	f2 f2 f2 
  418bcd:	c7 83 08 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8008(%rbx)
  418bd4:	f2 f2 f2 
  418bd7:	c7 83 0c 80 ff 7f 00 	movl   $0xf2f2f200,0x7fff800c(%rbx)
  418bde:	f2 f2 f2 
  418be1:	c7 83 10 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8010(%rbx)
  418be8:	f3 f3 f3 
    (void) fcntl( hc->conn_fd, F_SETFD, 0 );
  418beb:	49 8d 9f c0 02 00 00 	lea    0x2c0(%r15),%rbx
  418bf2:	48 89 d8             	mov    %rbx,%rax
  418bf5:	48 c1 e8 03          	shr    $0x3,%rax
  418bf9:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  418c00:	84 c0                	test   %al,%al
  418c02:	74 08                	je     418c0c <cgi_child+0x9c>
  418c04:	3c 03                	cmp    $0x3,%al
  418c06:	0f 8e 01 06 00 00    	jle    41920d <cgi_child+0x69d>
  418c0c:	41 8b bf c0 02 00 00 	mov    0x2c0(%r15),%edi
  418c13:	31 d2                	xor    %edx,%edx
  418c15:	be 02 00 00 00       	mov    $0x2,%esi
  418c1a:	31 c0                	xor    %eax,%eax
  418c1c:	e8 df a1 fe ff       	callq  402e00 <fcntl@plt>
    closelog();
  418c21:	e8 6a a3 fe ff       	callq  402f90 <closelog@plt>
    if ( hc->conn_fd == STDIN_FILENO || hc->conn_fd == STDOUT_FILENO || hc->conn_fd == STDERR_FILENO )
  418c26:	48 89 d8             	mov    %rbx,%rax
  418c29:	48 c1 e8 03          	shr    $0x3,%rax
  418c2d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  418c34:	84 c0                	test   %al,%al
  418c36:	74 08                	je     418c40 <cgi_child+0xd0>
  418c38:	3c 03                	cmp    $0x3,%al
  418c3a:	0f 8e c5 05 00 00    	jle    419205 <cgi_child+0x695>
  418c40:	41 8b bf c0 02 00 00 	mov    0x2c0(%r15),%edi
  418c47:	83 ff 02             	cmp    $0x2,%edi
  418c4a:	0f 86 7f 03 00 00    	jbe    418fcf <cgi_child+0x45f>
    envp = make_envp( hc );
  418c50:	4c 89 ff             	mov    %r15,%rdi
    argp = make_argp( hc );
  418c53:	4d 8d a7 f0 00 00 00 	lea    0xf0(%r15),%r12
    envp = make_envp( hc );
  418c5a:	e8 51 cd ff ff       	callq  4159b0 <make_envp>
  418c5f:	49 89 c5             	mov    %rax,%r13
    argp = make_argp( hc );
  418c62:	4c 89 e0             	mov    %r12,%rax
  418c65:	48 c1 e8 03          	shr    $0x3,%rax
  418c69:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  418c70:	0f 85 03 07 00 00    	jne    419379 <cgi_child+0x809>
  418c76:	49 8d 87 08 01 00 00 	lea    0x108(%r15),%rax
  418c7d:	49 8b bf f0 00 00 00 	mov    0xf0(%r15),%rdi
  418c84:	48 89 c2             	mov    %rax,%rdx
  418c87:	48 c1 ea 03          	shr    $0x3,%rdx
  418c8b:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  418c92:	0f 85 ff 06 00 00    	jne    419397 <cgi_child+0x827>
  418c98:	49 8b b7 08 01 00 00 	mov    0x108(%r15),%rsi
  418c9f:	e8 0c 2d ff ff       	callq  40b9b0 <make_argp.isra.2>
    if ( hc->method == METHOD_POST && hc->read_idx > hc->checked_idx )
  418ca4:	49 8d bf b4 00 00 00 	lea    0xb4(%r15),%rdi
    argp = make_argp( hc );
  418cab:	48 89 c5             	mov    %rax,%rbp
    if ( hc->method == METHOD_POST && hc->read_idx > hc->checked_idx )
  418cae:	48 89 f8             	mov    %rdi,%rax
  418cb1:	48 c1 e8 03          	shr    $0x3,%rax
  418cb5:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  418cbc:	48 89 f8             	mov    %rdi,%rax
  418cbf:	83 e0 07             	and    $0x7,%eax
  418cc2:	83 c0 03             	add    $0x3,%eax
  418cc5:	38 d0                	cmp    %dl,%al
  418cc7:	7c 08                	jl     418cd1 <cgi_child+0x161>
  418cc9:	84 d2                	test   %dl,%dl
  418ccb:	0f 85 2f 05 00 00    	jne    419200 <cgi_child+0x690>
  418cd1:	41 83 bf b4 00 00 00 	cmpl   $0x3,0xb4(%r15)
  418cd8:	03 
  418cd9:	0f 84 0a 02 00 00    	je     418ee9 <cgi_child+0x379>
	if ( hc->conn_fd != STDIN_FILENO )
  418cdf:	48 89 d8             	mov    %rbx,%rax
  418ce2:	48 c1 e8 03          	shr    $0x3,%rax
  418ce6:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  418ced:	84 c0                	test   %al,%al
  418cef:	74 08                	je     418cf9 <cgi_child+0x189>
  418cf1:	3c 03                	cmp    $0x3,%al
  418cf3:	0f 8e 1c 05 00 00    	jle    419215 <cgi_child+0x6a5>
  418cf9:	41 8b bf c0 02 00 00 	mov    0x2c0(%r15),%edi
  418d00:	85 ff                	test   %edi,%edi
  418d02:	0f 85 00 03 00 00    	jne    419008 <cgi_child+0x498>
    if ( strncmp( argp[0], "nph-", 4 ) != 0 && hc->mime_flag )
  418d08:	48 89 e8             	mov    %rbp,%rax
  418d0b:	48 c1 e8 03          	shr    $0x3,%rax
  418d0f:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  418d16:	0f 85 98 06 00 00    	jne    4193b4 <cgi_child+0x844>
  418d1c:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
  418d20:	ba 04 00 00 00       	mov    $0x4,%edx
  418d25:	be 40 64 42 00       	mov    $0x426440,%esi
  418d2a:	e8 c1 a6 fe ff       	callq  4033f0 <strncmp@plt>
  418d2f:	89 c7                	mov    %eax,%edi
  418d31:	85 c0                	test   %eax,%eax
  418d33:	0f 84 77 01 00 00    	je     418eb0 <cgi_child+0x340>
  418d39:	49 8d bf 08 02 00 00 	lea    0x208(%r15),%rdi
  418d40:	48 89 f8             	mov    %rdi,%rax
  418d43:	48 c1 e8 03          	shr    $0x3,%rax
  418d47:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  418d4e:	84 c0                	test   %al,%al
  418d50:	74 08                	je     418d5a <cgi_child+0x1ea>
  418d52:	3c 03                	cmp    $0x3,%al
  418d54:	0f 8e 72 06 00 00    	jle    4193cc <cgi_child+0x85c>
  418d5a:	41 83 bf 08 02 00 00 	cmpl   $0x0,0x208(%r15)
  418d61:	00 
  418d62:	0f 85 db 02 00 00    	jne    419043 <cgi_child+0x4d3>
	if ( hc->conn_fd != STDOUT_FILENO )
  418d68:	48 89 d8             	mov    %rbx,%rax
  418d6b:	48 c1 e8 03          	shr    $0x3,%rax
  418d6f:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  418d76:	84 c0                	test   %al,%al
  418d78:	74 08                	je     418d82 <cgi_child+0x212>
  418d7a:	3c 03                	cmp    $0x3,%al
  418d7c:	0f 8e 42 06 00 00    	jle    4193c4 <cgi_child+0x854>
  418d82:	41 8b bf c0 02 00 00 	mov    0x2c0(%r15),%edi
  418d89:	83 ff 01             	cmp    $0x1,%edi
  418d8c:	0f 85 1e 01 00 00    	jne    418eb0 <cgi_child+0x340>
	    (void) dup2( hc->conn_fd, STDERR_FILENO );
  418d92:	be 02 00 00 00       	mov    $0x2,%esi
  418d97:	e8 a4 a1 fe ff       	callq  402f40 <dup2@plt>
    (void) nice( CGI_NICE );
  418d9c:	bf 0a 00 00 00       	mov    $0xa,%edi
  418da1:	e8 7a a2 fe ff       	callq  403020 <nice@plt>
    directory = strdup( hc->expnfilename );
  418da6:	4c 89 e0             	mov    %r12,%rax
  418da9:	48 c1 e8 03          	shr    $0x3,%rax
  418dad:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  418db4:	0f 85 ea 05 00 00    	jne    4193a4 <cgi_child+0x834>
  418dba:	49 8b 9f f0 00 00 00 	mov    0xf0(%r15),%rbx
  418dc1:	48 89 df             	mov    %rbx,%rdi
  418dc4:	e8 e7 9e fe ff       	callq  402cb0 <strdup@plt>
  418dc9:	49 89 c6             	mov    %rax,%r14
    if ( directory == (char*) 0 )
  418dcc:	48 85 c0             	test   %rax,%rax
  418dcf:	74 41                	je     418e12 <cgi_child+0x2a2>
	binary = strrchr( directory, '/' );
  418dd1:	be 2f 00 00 00       	mov    $0x2f,%esi
  418dd6:	48 89 c7             	mov    %rax,%rdi
  418dd9:	e8 a2 a0 fe ff       	callq  402e80 <strrchr@plt>
	if ( binary == (char*) 0 )
  418dde:	48 85 c0             	test   %rax,%rax
  418de1:	74 2f                	je     418e12 <cgi_child+0x2a2>
	    *binary++ = '\0';
  418de3:	48 89 c2             	mov    %rax,%rdx
  418de6:	48 89 c1             	mov    %rax,%rcx
  418de9:	48 8d 58 01          	lea    0x1(%rax),%rbx
  418ded:	48 c1 ea 03          	shr    $0x3,%rdx
  418df1:	83 e1 07             	and    $0x7,%ecx
  418df4:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  418dfb:	38 ca                	cmp    %cl,%dl
  418dfd:	7f 08                	jg     418e07 <cgi_child+0x297>
  418dff:	84 d2                	test   %dl,%dl
  418e01:	0f 85 1e 04 00 00    	jne    419225 <cgi_child+0x6b5>
  418e07:	c6 00 00             	movb   $0x0,(%rax)
	    (void) chdir( directory );  /* ignore errors */
  418e0a:	4c 89 f7             	mov    %r14,%rdi
  418e0d:	e8 1e a4 fe ff       	callq  403230 <chdir@plt>
    (void) sigset( SIGPIPE, SIG_DFL );
  418e12:	31 f6                	xor    %esi,%esi
  418e14:	bf 0d 00 00 00       	mov    $0xd,%edi
  418e19:	31 c0                	xor    %eax,%eax
  418e1b:	e8 20 a6 fe ff       	callq  403440 <sigset@plt>
    (void) execve( binary, argp, envp );
  418e20:	4c 89 ea             	mov    %r13,%rdx
  418e23:	48 89 ee             	mov    %rbp,%rsi
  418e26:	48 89 df             	mov    %rbx,%rdi
  418e29:	e8 a2 a5 fe ff       	callq  4033d0 <execve@plt>
    syslog( LOG_ERR, "execve %.80s - %m", hc->expnfilename );
  418e2e:	4c 89 e0             	mov    %r12,%rax
  418e31:	48 c1 e8 03          	shr    $0x3,%rax
  418e35:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  418e3c:	0f 85 6a 05 00 00    	jne    4193ac <cgi_child+0x83c>
  418e42:	49 8b 97 f0 00 00 00 	mov    0xf0(%r15),%rdx
  418e49:	31 c0                	xor    %eax,%eax
  418e4b:	bf 03 00 00 00       	mov    $0x3,%edi
  418e50:	be 80 64 42 00       	mov    $0x426480,%esi
  418e55:	e8 e6 9d fe ff       	callq  402c40 <syslog@plt>
    httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  418e5a:	49 8d bf d0 00 00 00 	lea    0xd0(%r15),%rdi
  418e61:	48 89 f8             	mov    %rdi,%rax
  418e64:	48 c1 e8 03          	shr    $0x3,%rax
  418e68:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  418e6f:	0f 85 2a 05 00 00    	jne    41939f <cgi_child+0x82f>
  418e75:	4d 8b 8f d0 00 00 00 	mov    0xd0(%r15),%r9
  418e7c:	41 b8 80 4d 42 00    	mov    $0x424d80,%r8d
  418e82:	b9 60 38 42 00       	mov    $0x423860,%ecx
  418e87:	4c 89 ff             	mov    %r15,%rdi
  418e8a:	ba 00 4e 42 00       	mov    $0x424e00,%edx
  418e8f:	be f4 01 00 00       	mov    $0x1f4,%esi
  418e94:	e8 27 70 ff ff       	callq  40fec0 <httpd_send_err>
    httpd_write_response( hc );
  418e99:	4c 89 ff             	mov    %r15,%rdi
  418e9c:	e8 cf da ff ff       	callq  416970 <httpd_write_response>
    exit( 1 );
  418ea1:	e8 9a a1 fe ff       	callq  403040 <__asan_handle_no_return@plt>
  418ea6:	bf 01 00 00 00       	mov    $0x1,%edi
  418eab:	e8 30 a2 fe ff       	callq  4030e0 <exit@plt>
	    (void) dup2( hc->conn_fd, STDOUT_FILENO );
  418eb0:	be 01 00 00 00       	mov    $0x1,%esi
  418eb5:	e8 86 a0 fe ff       	callq  402f40 <dup2@plt>
	if ( hc->conn_fd != STDERR_FILENO )
  418eba:	48 89 d8             	mov    %rbx,%rax
  418ebd:	48 c1 e8 03          	shr    $0x3,%rax
  418ec1:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  418ec8:	84 c0                	test   %al,%al
  418eca:	74 08                	je     418ed4 <cgi_child+0x364>
  418ecc:	3c 03                	cmp    $0x3,%al
  418ece:	0f 8e 49 03 00 00    	jle    41921d <cgi_child+0x6ad>
  418ed4:	41 8b bf c0 02 00 00 	mov    0x2c0(%r15),%edi
  418edb:	83 ff 02             	cmp    $0x2,%edi
  418ede:	0f 84 b8 fe ff ff    	je     418d9c <cgi_child+0x22c>
  418ee4:	e9 a9 fe ff ff       	jmpq   418d92 <cgi_child+0x222>
    if ( hc->method == METHOD_POST && hc->read_idx > hc->checked_idx )
  418ee9:	49 8d bf a0 00 00 00 	lea    0xa0(%r15),%rdi
  418ef0:	48 89 f8             	mov    %rdi,%rax
  418ef3:	48 c1 e8 03          	shr    $0x3,%rax
  418ef7:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  418efe:	0f 85 cd 04 00 00    	jne    4193d1 <cgi_child+0x861>
  418f04:	49 8d bf a8 00 00 00 	lea    0xa8(%r15),%rdi
  418f0b:	49 8b 87 a0 00 00 00 	mov    0xa0(%r15),%rax
  418f12:	48 89 fa             	mov    %rdi,%rdx
  418f15:	48 c1 ea 03          	shr    $0x3,%rdx
  418f19:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  418f20:	0f 85 b0 04 00 00    	jne    4193d6 <cgi_child+0x866>
  418f26:	49 3b 87 a8 00 00 00 	cmp    0xa8(%r15),%rax
  418f2d:	0f 86 ac fd ff ff    	jbe    418cdf <cgi_child+0x16f>
	if ( pipe( p ) < 0 )
  418f33:	49 8d 46 80          	lea    -0x80(%r14),%rax
  418f37:	48 89 c7             	mov    %rax,%rdi
  418f3a:	48 89 04 24          	mov    %rax,(%rsp)
  418f3e:	e8 4d a2 fe ff       	callq  403190 <pipe@plt>
  418f43:	85 c0                	test   %eax,%eax
  418f45:	0f 88 e2 02 00 00    	js     41922d <cgi_child+0x6bd>
	r = fork( );
  418f4b:	e8 c0 9d fe ff       	callq  402d10 <fork@plt>
	if ( r < 0 )
  418f50:	85 c0                	test   %eax,%eax
  418f52:	0f 88 77 02 00 00    	js     4191cf <cgi_child+0x65f>
	if ( r == 0 )
  418f58:	0f 85 00 03 00 00    	jne    41925e <cgi_child+0x6ee>
	    sub_process = 1;
  418f5e:	c7 05 38 9d 22 00 01 	movl   $0x1,0x229d38(%rip)        # 642ca0 <sub_process>
  418f65:	00 00 00 
	    (void) close( p[0] );
  418f68:	48 8b 04 24          	mov    (%rsp),%rax
  418f6c:	48 c1 e8 03          	shr    $0x3,%rax
  418f70:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  418f77:	84 c0                	test   %al,%al
  418f79:	74 08                	je     418f83 <cgi_child+0x413>
  418f7b:	3c 03                	cmp    $0x3,%al
  418f7d:	0f 8e 69 04 00 00    	jle    4193ec <cgi_child+0x87c>
  418f83:	41 8b 7e 80          	mov    -0x80(%r14),%edi
  418f87:	e8 44 a5 fe ff       	callq  4034d0 <close@plt>
	    cgi_interpose_input( hc, p[1] );
  418f8c:	48 8b 3c 24          	mov    (%rsp),%rdi
  418f90:	48 83 c7 04          	add    $0x4,%rdi
  418f94:	48 89 f8             	mov    %rdi,%rax
  418f97:	48 c1 e8 03          	shr    $0x3,%rax
  418f9b:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  418fa2:	48 89 f8             	mov    %rdi,%rax
  418fa5:	83 e0 07             	and    $0x7,%eax
  418fa8:	83 c0 03             	add    $0x3,%eax
  418fab:	38 d0                	cmp    %dl,%al
  418fad:	7c 08                	jl     418fb7 <cgi_child+0x447>
  418faf:	84 d2                	test   %dl,%dl
  418fb1:	0f 85 3e 04 00 00    	jne    4193f5 <cgi_child+0x885>
  418fb7:	41 8b 76 84          	mov    -0x7c(%r14),%esi
  418fbb:	4c 89 ff             	mov    %r15,%rdi
  418fbe:	e8 cd f1 ff ff       	callq  418190 <cgi_interpose_input>
	    exit( 0 );
  418fc3:	e8 78 a0 fe ff       	callq  403040 <__asan_handle_no_return@plt>
  418fc8:	31 ff                	xor    %edi,%edi
  418fca:	e8 11 a1 fe ff       	callq  4030e0 <exit@plt>
	int newfd = dup2( hc->conn_fd, STDERR_FILENO + 1 );
  418fcf:	be 03 00 00 00       	mov    $0x3,%esi
  418fd4:	e8 67 9f fe ff       	callq  402f40 <dup2@plt>
	if ( newfd >= 0 )
  418fd9:	85 c0                	test   %eax,%eax
  418fdb:	0f 88 6f fc ff ff    	js     418c50 <cgi_child+0xe0>
	    hc->conn_fd = newfd;
  418fe1:	48 89 da             	mov    %rbx,%rdx
  418fe4:	48 c1 ea 03          	shr    $0x3,%rdx
  418fe8:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  418fef:	84 d2                	test   %dl,%dl
  418ff1:	74 09                	je     418ffc <cgi_child+0x48c>
  418ff3:	80 fa 03             	cmp    $0x3,%dl
  418ff6:	0f 8e df 03 00 00    	jle    4193db <cgi_child+0x86b>
  418ffc:	41 89 87 c0 02 00 00 	mov    %eax,0x2c0(%r15)
  419003:	e9 48 fc ff ff       	jmpq   418c50 <cgi_child+0xe0>
	    (void) dup2( hc->conn_fd, STDIN_FILENO );
  419008:	31 f6                	xor    %esi,%esi
  41900a:	e8 31 9f fe ff       	callq  402f40 <dup2@plt>
    if ( strncmp( argp[0], "nph-", 4 ) != 0 && hc->mime_flag )
  41900f:	48 89 e8             	mov    %rbp,%rax
  419012:	48 c1 e8 03          	shr    $0x3,%rax
  419016:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41901d:	0f 85 99 03 00 00    	jne    4193bc <cgi_child+0x84c>
  419023:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
  419027:	ba 04 00 00 00       	mov    $0x4,%edx
  41902c:	be 40 64 42 00       	mov    $0x426440,%esi
  419031:	e8 ba a3 fe ff       	callq  4033f0 <strncmp@plt>
  419036:	85 c0                	test   %eax,%eax
  419038:	0f 84 2a fd ff ff    	je     418d68 <cgi_child+0x1f8>
  41903e:	e9 f6 fc ff ff       	jmpq   418d39 <cgi_child+0x1c9>
	int p[2];
  419043:	49 8d 7e c0          	lea    -0x40(%r14),%rdi
  419047:	48 89 f8             	mov    %rdi,%rax
  41904a:	48 89 3c 24          	mov    %rdi,(%rsp)
  41904e:	48 c1 e8 03          	shr    $0x3,%rax
  419052:	c6 80 00 80 ff 7f 00 	movb   $0x0,0x7fff8000(%rax)
  419059:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
	if ( pipe( p ) < 0 )
  41905e:	e8 2d a1 fe ff       	callq  403190 <pipe@plt>
  419063:	85 c0                	test   %eax,%eax
  419065:	0f 88 c2 00 00 00    	js     41912d <cgi_child+0x5bd>
	r = fork( );
  41906b:	e8 a0 9c fe ff       	callq  402d10 <fork@plt>
	if ( r < 0 )
  419070:	85 c0                	test   %eax,%eax
  419072:	0f 88 55 02 00 00    	js     4192cd <cgi_child+0x75d>
	if ( r == 0 )
  419078:	0f 84 e0 00 00 00    	je     41915e <cgi_child+0x5ee>
	(void) close( p[0] );
  41907e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  419083:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41908a:	84 c0                	test   %al,%al
  41908c:	74 08                	je     419096 <cgi_child+0x526>
  41908e:	3c 03                	cmp    $0x3,%al
  419090:	0f 8e 77 03 00 00    	jle    41940d <cgi_child+0x89d>
  419096:	41 8b 7e c0          	mov    -0x40(%r14),%edi
  41909a:	e8 31 a4 fe ff       	callq  4034d0 <close@plt>
	if ( p[1] != STDOUT_FILENO )
  41909f:	48 8b 04 24          	mov    (%rsp),%rax
  4190a3:	48 8d 78 04          	lea    0x4(%rax),%rdi
  4190a7:	48 89 f8             	mov    %rdi,%rax
  4190aa:	48 c1 e8 03          	shr    $0x3,%rax
  4190ae:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4190b5:	48 89 f8             	mov    %rdi,%rax
  4190b8:	83 e0 07             	and    $0x7,%eax
  4190bb:	83 c0 03             	add    $0x3,%eax
  4190be:	38 d0                	cmp    %dl,%al
  4190c0:	7c 08                	jl     4190ca <cgi_child+0x55a>
  4190c2:	84 d2                	test   %dl,%dl
  4190c4:	0f 85 4c 03 00 00    	jne    419416 <cgi_child+0x8a6>
  4190ca:	41 8b 7e c4          	mov    -0x3c(%r14),%edi
  4190ce:	83 ff 01             	cmp    $0x1,%edi
  4190d1:	0f 84 27 02 00 00    	je     4192fe <cgi_child+0x78e>
	    (void) dup2( p[1], STDOUT_FILENO );
  4190d7:	be 01 00 00 00       	mov    $0x1,%esi
  4190dc:	e8 5f 9e fe ff       	callq  402f40 <dup2@plt>
	if ( p[1] != STDERR_FILENO )
  4190e1:	48 8b 04 24          	mov    (%rsp),%rax
  4190e5:	48 8d 78 04          	lea    0x4(%rax),%rdi
  4190e9:	48 89 f8             	mov    %rdi,%rax
  4190ec:	48 c1 e8 03          	shr    $0x3,%rax
  4190f0:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4190f7:	48 89 f8             	mov    %rdi,%rax
  4190fa:	83 e0 07             	and    $0x7,%eax
  4190fd:	83 c0 03             	add    $0x3,%eax
  419100:	38 d0                	cmp    %dl,%al
  419102:	7c 08                	jl     41910c <cgi_child+0x59c>
  419104:	84 d2                	test   %dl,%dl
  419106:	0f 85 0f 03 00 00    	jne    41941b <cgi_child+0x8ab>
  41910c:	41 8b 7e c4          	mov    -0x3c(%r14),%edi
  419110:	83 ff 02             	cmp    $0x2,%edi
  419113:	0f 85 e5 01 00 00    	jne    4192fe <cgi_child+0x78e>
  419119:	48 8b 04 24          	mov    (%rsp),%rax
  41911d:	48 c1 e8 03          	shr    $0x3,%rax
  419121:	c6 80 00 80 ff 7f f8 	movb   $0xf8,0x7fff8000(%rax)
	{
  419128:	e9 6f fc ff ff       	jmpq   418d9c <cgi_child+0x22c>
	    syslog( LOG_ERR, "pipe - %m" );
  41912d:	31 c0                	xor    %eax,%eax
  41912f:	bf 03 00 00 00       	mov    $0x3,%edi
  419134:	be 00 64 42 00       	mov    $0x426400,%esi
  419139:	e8 02 9b fe ff       	callq  402c40 <syslog@plt>
	    httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  41913e:	49 8d bf d0 00 00 00 	lea    0xd0(%r15),%rdi
  419145:	48 89 f8             	mov    %rdi,%rax
  419148:	48 c1 e8 03          	shr    $0x3,%rax
  41914c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419153:	0f 84 1c fd ff ff    	je     418e75 <cgi_child+0x305>
  419159:	e8 f2 a0 fe ff       	callq  403250 <__asan_report_load8@plt>
	    sub_process = 1;
  41915e:	c7 05 38 9b 22 00 01 	movl   $0x1,0x229b38(%rip)        # 642ca0 <sub_process>
  419165:	00 00 00 
	    (void) close( p[1] );
  419168:	48 8b 04 24          	mov    (%rsp),%rax
  41916c:	48 8d 78 04          	lea    0x4(%rax),%rdi
  419170:	48 89 f8             	mov    %rdi,%rax
  419173:	48 c1 e8 03          	shr    $0x3,%rax
  419177:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  41917e:	48 89 f8             	mov    %rdi,%rax
  419181:	83 e0 07             	and    $0x7,%eax
  419184:	83 c0 03             	add    $0x3,%eax
  419187:	38 d0                	cmp    %dl,%al
  419189:	7c 08                	jl     419193 <cgi_child+0x623>
  41918b:	84 d2                	test   %dl,%dl
  41918d:	0f 85 8d 02 00 00    	jne    419420 <cgi_child+0x8b0>
  419193:	41 8b 7e c4          	mov    -0x3c(%r14),%edi
  419197:	e8 34 a3 fe ff       	callq  4034d0 <close@plt>
	    cgi_interpose_output( hc, p[0] );
  41919c:	48 8b 04 24          	mov    (%rsp),%rax
  4191a0:	48 c1 e8 03          	shr    $0x3,%rax
  4191a4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4191ab:	84 c0                	test   %al,%al
  4191ad:	74 08                	je     4191b7 <cgi_child+0x647>
  4191af:	3c 03                	cmp    $0x3,%al
  4191b1:	0f 8e 6e 02 00 00    	jle    419425 <cgi_child+0x8b5>
  4191b7:	41 8b 76 c0          	mov    -0x40(%r14),%esi
  4191bb:	48 89 df             	mov    %rbx,%rdi
  4191be:	e8 7d f2 ff ff       	callq  418440 <cgi_interpose_output.isra.4>
	    exit( 0 );
  4191c3:	e8 78 9e fe ff       	callq  403040 <__asan_handle_no_return@plt>
  4191c8:	31 ff                	xor    %edi,%edi
  4191ca:	e8 11 9f fe ff       	callq  4030e0 <exit@plt>
	    syslog( LOG_ERR, "fork - %m" );
  4191cf:	31 c0                	xor    %eax,%eax
  4191d1:	bf 03 00 00 00       	mov    $0x3,%edi
  4191d6:	be 60 5e 42 00       	mov    $0x425e60,%esi
  4191db:	e8 60 9a fe ff       	callq  402c40 <syslog@plt>
	    httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  4191e0:	49 8d bf d0 00 00 00 	lea    0xd0(%r15),%rdi
  4191e7:	48 89 f8             	mov    %rdi,%rax
  4191ea:	48 c1 e8 03          	shr    $0x3,%rax
  4191ee:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4191f5:	0f 84 7a fc ff ff    	je     418e75 <cgi_child+0x305>
  4191fb:	e8 50 a0 fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->method == METHOD_POST && hc->read_idx > hc->checked_idx )
  419200:	e8 cb 9b fe ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( hc->conn_fd == STDIN_FILENO || hc->conn_fd == STDOUT_FILENO || hc->conn_fd == STDERR_FILENO )
  419205:	48 89 df             	mov    %rbx,%rdi
  419208:	e8 c3 9b fe ff       	callq  402dd0 <__asan_report_load4@plt>
    (void) fcntl( hc->conn_fd, F_SETFD, 0 );
  41920d:	48 89 df             	mov    %rbx,%rdi
  419210:	e8 bb 9b fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( hc->conn_fd != STDIN_FILENO )
  419215:	48 89 df             	mov    %rbx,%rdi
  419218:	e8 b3 9b fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( hc->conn_fd != STDERR_FILENO )
  41921d:	48 89 df             	mov    %rbx,%rdi
  419220:	e8 ab 9b fe ff       	callq  402dd0 <__asan_report_load4@plt>
	    *binary++ = '\0';
  419225:	48 89 c7             	mov    %rax,%rdi
  419228:	e8 03 9f fe ff       	callq  403130 <__asan_report_store1@plt>
	    syslog( LOG_ERR, "pipe - %m" );
  41922d:	31 c0                	xor    %eax,%eax
  41922f:	bf 03 00 00 00       	mov    $0x3,%edi
  419234:	be 00 64 42 00       	mov    $0x426400,%esi
  419239:	e8 02 9a fe ff       	callq  402c40 <syslog@plt>
	    httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  41923e:	49 8d bf d0 00 00 00 	lea    0xd0(%r15),%rdi
  419245:	48 89 f8             	mov    %rdi,%rax
  419248:	48 c1 e8 03          	shr    $0x3,%rax
  41924c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419253:	0f 84 1c fc ff ff    	je     418e75 <cgi_child+0x305>
  419259:	e8 f2 9f fe ff       	callq  403250 <__asan_report_load8@plt>
	(void) close( p[1] );
  41925e:	48 8b 04 24          	mov    (%rsp),%rax
  419262:	48 8d 78 04          	lea    0x4(%rax),%rdi
  419266:	48 89 f8             	mov    %rdi,%rax
  419269:	48 c1 e8 03          	shr    $0x3,%rax
  41926d:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  419274:	48 89 f8             	mov    %rdi,%rax
  419277:	83 e0 07             	and    $0x7,%eax
  41927a:	83 c0 03             	add    $0x3,%eax
  41927d:	38 d0                	cmp    %dl,%al
  41927f:	7c 08                	jl     419289 <cgi_child+0x719>
  419281:	84 d2                	test   %dl,%dl
  419283:	0f 85 71 01 00 00    	jne    4193fa <cgi_child+0x88a>
  419289:	41 8b 7e 84          	mov    -0x7c(%r14),%edi
  41928d:	e8 3e a2 fe ff       	callq  4034d0 <close@plt>
	if ( p[0] != STDIN_FILENO )
  419292:	48 8b 04 24          	mov    (%rsp),%rax
  419296:	48 c1 e8 03          	shr    $0x3,%rax
  41929a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4192a1:	84 c0                	test   %al,%al
  4192a3:	74 08                	je     4192ad <cgi_child+0x73d>
  4192a5:	3c 03                	cmp    $0x3,%al
  4192a7:	0f 8e 57 01 00 00    	jle    419404 <cgi_child+0x894>
  4192ad:	41 8b 7e 80          	mov    -0x80(%r14),%edi
  4192b1:	85 ff                	test   %edi,%edi
  4192b3:	0f 85 94 00 00 00    	jne    41934d <cgi_child+0x7dd>
  4192b9:	48 8b 04 24          	mov    (%rsp),%rax
  4192bd:	48 c1 e8 03          	shr    $0x3,%rax
  4192c1:	c6 80 00 80 ff 7f f8 	movb   $0xf8,0x7fff8000(%rax)
	{
  4192c8:	e9 42 fd ff ff       	jmpq   41900f <cgi_child+0x49f>
	    syslog( LOG_ERR, "fork - %m" );
  4192cd:	31 c0                	xor    %eax,%eax
  4192cf:	bf 03 00 00 00       	mov    $0x3,%edi
  4192d4:	be 60 5e 42 00       	mov    $0x425e60,%esi
  4192d9:	e8 62 99 fe ff       	callq  402c40 <syslog@plt>
	    httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  4192de:	49 8d bf d0 00 00 00 	lea    0xd0(%r15),%rdi
  4192e5:	48 89 f8             	mov    %rdi,%rax
  4192e8:	48 c1 e8 03          	shr    $0x3,%rax
  4192ec:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4192f3:	0f 84 7c fb ff ff    	je     418e75 <cgi_child+0x305>
  4192f9:	e8 52 9f fe ff       	callq  403250 <__asan_report_load8@plt>
	    (void) dup2( p[1], STDERR_FILENO );
  4192fe:	be 02 00 00 00       	mov    $0x2,%esi
  419303:	e8 38 9c fe ff       	callq  402f40 <dup2@plt>
	if ( p[1] != STDOUT_FILENO && p[1] != STDERR_FILENO )
  419308:	48 8b 04 24          	mov    (%rsp),%rax
  41930c:	48 8d 78 04          	lea    0x4(%rax),%rdi
  419310:	48 89 f8             	mov    %rdi,%rax
  419313:	48 c1 e8 03          	shr    $0x3,%rax
  419317:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  41931e:	48 89 f8             	mov    %rdi,%rax
  419321:	83 e0 07             	and    $0x7,%eax
  419324:	83 c0 03             	add    $0x3,%eax
  419327:	38 d0                	cmp    %dl,%al
  419329:	7c 08                	jl     419333 <cgi_child+0x7c3>
  41932b:	84 d2                	test   %dl,%dl
  41932d:	0f 85 cc 00 00 00    	jne    4193ff <cgi_child+0x88f>
  419333:	41 8b 7e c4          	mov    -0x3c(%r14),%edi
  419337:	8d 47 ff             	lea    -0x1(%rdi),%eax
  41933a:	83 f8 01             	cmp    $0x1,%eax
  41933d:	0f 86 d6 fd ff ff    	jbe    419119 <cgi_child+0x5a9>
	    (void) close( p[1] );
  419343:	e8 88 a1 fe ff       	callq  4034d0 <close@plt>
  419348:	e9 cc fd ff ff       	jmpq   419119 <cgi_child+0x5a9>
	    (void) dup2( p[0], STDIN_FILENO );
  41934d:	31 f6                	xor    %esi,%esi
  41934f:	e8 ec 9b fe ff       	callq  402f40 <dup2@plt>
	    (void) close( p[0] );
  419354:	48 8b 04 24          	mov    (%rsp),%rax
  419358:	48 c1 e8 03          	shr    $0x3,%rax
  41935c:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  419363:	84 c0                	test   %al,%al
  419365:	74 04                	je     41936b <cgi_child+0x7fb>
  419367:	3c 03                	cmp    $0x3,%al
  419369:	7e 78                	jle    4193e3 <cgi_child+0x873>
  41936b:	41 8b 7e 80          	mov    -0x80(%r14),%edi
  41936f:	e8 5c a1 fe ff       	callq  4034d0 <close@plt>
  419374:	e9 40 ff ff ff       	jmpq   4192b9 <cgi_child+0x749>
    argp = make_argp( hc );
  419379:	4c 89 e7             	mov    %r12,%rdi
  41937c:	e8 cf 9e fe ff       	callq  403250 <__asan_report_load8@plt>
    {
  419381:	bf a0 00 00 00       	mov    $0xa0,%edi
  419386:	e8 95 9f fe ff       	callq  403320 <__asan_stack_malloc_2@plt>
  41938b:	48 85 c0             	test   %rax,%rax
  41938e:	48 0f 45 d8          	cmovne %rax,%rbx
  419392:	e9 00 f8 ff ff       	jmpq   418b97 <cgi_child+0x27>
    argp = make_argp( hc );
  419397:	48 89 c7             	mov    %rax,%rdi
  41939a:	e8 b1 9e fe ff       	callq  403250 <__asan_report_load8@plt>
    httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  41939f:	e8 ac 9e fe ff       	callq  403250 <__asan_report_load8@plt>
    directory = strdup( hc->expnfilename );
  4193a4:	4c 89 e7             	mov    %r12,%rdi
  4193a7:	e8 a4 9e fe ff       	callq  403250 <__asan_report_load8@plt>
    syslog( LOG_ERR, "execve %.80s - %m", hc->expnfilename );
  4193ac:	4c 89 e7             	mov    %r12,%rdi
  4193af:	e8 9c 9e fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( strncmp( argp[0], "nph-", 4 ) != 0 && hc->mime_flag )
  4193b4:	48 89 ef             	mov    %rbp,%rdi
  4193b7:	e8 94 9e fe ff       	callq  403250 <__asan_report_load8@plt>
  4193bc:	48 89 ef             	mov    %rbp,%rdi
  4193bf:	e8 8c 9e fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( hc->conn_fd != STDOUT_FILENO )
  4193c4:	48 89 df             	mov    %rbx,%rdi
  4193c7:	e8 04 9a fe ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( strncmp( argp[0], "nph-", 4 ) != 0 && hc->mime_flag )
  4193cc:	e8 ff 99 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( hc->method == METHOD_POST && hc->read_idx > hc->checked_idx )
  4193d1:	e8 7a 9e fe ff       	callq  403250 <__asan_report_load8@plt>
  4193d6:	e8 75 9e fe ff       	callq  403250 <__asan_report_load8@plt>
	    hc->conn_fd = newfd;
  4193db:	48 89 df             	mov    %rbx,%rdi
  4193de:	e8 0d 98 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	    (void) close( p[0] );
  4193e3:	48 8b 3c 24          	mov    (%rsp),%rdi
  4193e7:	e8 e4 99 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	    (void) close( p[0] );
  4193ec:	48 8b 3c 24          	mov    (%rsp),%rdi
  4193f0:	e8 db 99 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	    cgi_interpose_input( hc, p[1] );
  4193f5:	e8 d6 99 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	(void) close( p[1] );
  4193fa:	e8 d1 99 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( p[1] != STDOUT_FILENO && p[1] != STDERR_FILENO )
  4193ff:	e8 cc 99 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( p[0] != STDIN_FILENO )
  419404:	48 8b 3c 24          	mov    (%rsp),%rdi
  419408:	e8 c3 99 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	(void) close( p[0] );
  41940d:	48 8b 3c 24          	mov    (%rsp),%rdi
  419411:	e8 ba 99 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( p[1] != STDOUT_FILENO )
  419416:	e8 b5 99 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( p[1] != STDERR_FILENO )
  41941b:	e8 b0 99 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	    (void) close( p[1] );
  419420:	e8 ab 99 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	    cgi_interpose_output( hc, p[0] );
  419425:	48 8b 3c 24          	mov    (%rsp),%rdi
  419429:	e8 a2 99 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41942e:	66 90                	xchg   %ax,%ax

0000000000419430 <cgi>:
    {
  419430:	41 54                	push   %r12
  419432:	55                   	push   %rbp
  419433:	53                   	push   %rbx
  419434:	48 89 fb             	mov    %rdi,%rbx
    if ( hc->method == METHOD_GET || hc->method == METHOD_POST )
  419437:	48 81 c7 b4 00 00 00 	add    $0xb4,%rdi
  41943e:	48 89 f8             	mov    %rdi,%rax
  419441:	48 c1 e8 03          	shr    $0x3,%rax
  419445:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  41944c:	48 89 f8             	mov    %rdi,%rax
  41944f:	83 e0 07             	and    $0x7,%eax
  419452:	83 c0 03             	add    $0x3,%eax
  419455:	38 d0                	cmp    %dl,%al
  419457:	7c 08                	jl     419461 <cgi+0x31>
  419459:	84 d2                	test   %dl,%dl
  41945b:	0f 85 ae 01 00 00    	jne    41960f <cgi+0x1df>
  419461:	8b bb b4 00 00 00    	mov    0xb4(%rbx),%edi
  419467:	89 f8                	mov    %edi,%eax
  419469:	83 e0 fd             	and    $0xfffffffd,%eax
  41946c:	83 f8 01             	cmp    $0x1,%eax
  41946f:	0f 85 bb 01 00 00    	jne    419630 <cgi+0x200>
	if ( hc->hs->cgi_limit != 0 && hc->hs->cgi_count >= hc->hs->cgi_limit )
  419475:	4c 8d 63 08          	lea    0x8(%rbx),%r12
  419479:	4c 89 e0             	mov    %r12,%rax
  41947c:	48 c1 e8 03          	shr    $0x3,%rax
  419480:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419487:	0f 85 7a 02 00 00    	jne    419707 <cgi+0x2d7>
  41948d:	48 8b 43 08          	mov    0x8(%rbx),%rax
  419491:	48 8d 78 20          	lea    0x20(%rax),%rdi
  419495:	48 89 fa             	mov    %rdi,%rdx
  419498:	48 c1 ea 03          	shr    $0x3,%rdx
  41949c:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  4194a3:	84 d2                	test   %dl,%dl
  4194a5:	74 09                	je     4194b0 <cgi+0x80>
  4194a7:	80 fa 03             	cmp    $0x3,%dl
  4194aa:	0f 8e 69 01 00 00    	jle    419619 <cgi+0x1e9>
  4194b0:	48 8d 78 24          	lea    0x24(%rax),%rdi
  4194b4:	8b 48 20             	mov    0x20(%rax),%ecx
  4194b7:	48 89 fa             	mov    %rdi,%rdx
  4194ba:	48 c1 ea 03          	shr    $0x3,%rdx
  4194be:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  4194c5:	48 89 fa             	mov    %rdi,%rdx
  4194c8:	83 e2 07             	and    $0x7,%edx
  4194cb:	83 c2 03             	add    $0x3,%edx
  4194ce:	40 38 f2             	cmp    %sil,%dl
  4194d1:	7c 09                	jl     4194dc <cgi+0xac>
  4194d3:	40 84 f6             	test   %sil,%sil
  4194d6:	0f 85 38 01 00 00    	jne    419614 <cgi+0x1e4>
  4194dc:	8b 50 24             	mov    0x24(%rax),%edx
  4194df:	85 c9                	test   %ecx,%ecx
  4194e1:	74 08                	je     4194eb <cgi+0xbb>
  4194e3:	39 ca                	cmp    %ecx,%edx
  4194e5:	0f 8d cb 01 00 00    	jge    4196b6 <cgi+0x286>
	++hc->hs->cgi_count;
  4194eb:	83 c2 01             	add    $0x1,%edx
	httpd_clear_ndelay( hc->conn_fd );
  4194ee:	48 8d bb c0 02 00 00 	lea    0x2c0(%rbx),%rdi
	++hc->hs->cgi_count;
  4194f5:	89 50 24             	mov    %edx,0x24(%rax)
	httpd_clear_ndelay( hc->conn_fd );
  4194f8:	48 89 f8             	mov    %rdi,%rax
  4194fb:	48 c1 e8 03          	shr    $0x3,%rax
  4194ff:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  419506:	84 c0                	test   %al,%al
  419508:	74 08                	je     419512 <cgi+0xe2>
  41950a:	3c 03                	cmp    $0x3,%al
  41950c:	0f 8e 0c 01 00 00    	jle    41961e <cgi+0x1ee>
  419512:	8b bb c0 02 00 00    	mov    0x2c0(%rbx),%edi
  419518:	e8 d3 3d ff ff       	callq  40d2f0 <httpd_clear_ndelay>
	r = fork( );
  41951d:	e8 ee 97 fe ff       	callq  402d10 <fork@plt>
  419522:	89 c5                	mov    %eax,%ebp
	if ( r < 0 )
  419524:	85 c0                	test   %eax,%eax
  419526:	0f 88 30 01 00 00    	js     41965c <cgi+0x22c>
	if ( r == 0 )
  41952c:	0f 84 e2 01 00 00    	je     419714 <cgi+0x2e4>
	syslog( LOG_INFO, "spawned CGI process %d for file '%.200s'", r, hc->expnfilename );
  419532:	48 8d bb f0 00 00 00 	lea    0xf0(%rbx),%rdi
  419539:	48 89 f8             	mov    %rdi,%rax
  41953c:	48 c1 e8 03          	shr    $0x3,%rax
  419540:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419547:	0f 85 c2 01 00 00    	jne    41970f <cgi+0x2df>
  41954d:	48 8b 8b f0 00 00 00 	mov    0xf0(%rbx),%rcx
  419554:	89 ea                	mov    %ebp,%edx
  419556:	be c0 64 42 00       	mov    $0x4264c0,%esi
  41955b:	31 c0                	xor    %eax,%eax
  41955d:	bf 06 00 00 00       	mov    $0x6,%edi
  419562:	e8 d9 96 fe ff       	callq  402c40 <syslog@plt>
	if ( tmr_create( (struct timeval*) 0, cgi_kill, client_data, CGI_TIMELIMIT * 1000L, 0 ) == (Timer*) 0 )
  419567:	45 31 c0             	xor    %r8d,%r8d
  41956a:	31 ff                	xor    %edi,%edi
	client_data.i = r;
  41956c:	89 ea                	mov    %ebp,%edx
	if ( tmr_create( (struct timeval*) 0, cgi_kill, client_data, CGI_TIMELIMIT * 1000L, 0 ) == (Timer*) 0 )
  41956e:	b9 30 75 00 00       	mov    $0x7530,%ecx
  419573:	be 30 b5 40 00       	mov    $0x40b530,%esi
  419578:	e8 13 3a 00 00       	callq  41cf90 <tmr_create>
  41957d:	48 85 c0             	test   %rax,%rax
  419580:	0f 84 be 01 00 00    	je     419744 <cgi+0x314>
	hc->status = 200;
  419586:	48 8d bb b8 00 00 00 	lea    0xb8(%rbx),%rdi
  41958d:	48 89 f8             	mov    %rdi,%rax
  419590:	48 c1 e8 03          	shr    $0x3,%rax
  419594:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41959b:	84 c0                	test   %al,%al
  41959d:	74 04                	je     4195a3 <cgi+0x173>
  41959f:	3c 03                	cmp    $0x3,%al
  4195a1:	7e 67                	jle    41960a <cgi+0x1da>
	hc->bytes_sent = CGI_BYTECOUNT;
  4195a3:	48 8d bb c8 00 00 00 	lea    0xc8(%rbx),%rdi
	hc->status = 200;
  4195aa:	c7 83 b8 00 00 00 c8 	movl   $0xc8,0xb8(%rbx)
  4195b1:	00 00 00 
	hc->bytes_sent = CGI_BYTECOUNT;
  4195b4:	48 89 f8             	mov    %rdi,%rax
  4195b7:	48 c1 e8 03          	shr    $0x3,%rax
  4195bb:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4195c2:	0f 85 3a 01 00 00    	jne    419702 <cgi+0x2d2>
	hc->should_linger = 0;
  4195c8:	48 8d bb 2c 02 00 00 	lea    0x22c(%rbx),%rdi
	hc->bytes_sent = CGI_BYTECOUNT;
  4195cf:	48 c7 83 c8 00 00 00 	movq   $0x61a8,0xc8(%rbx)
  4195d6:	a8 61 00 00 
	hc->should_linger = 0;
  4195da:	48 89 f8             	mov    %rdi,%rax
  4195dd:	48 c1 e8 03          	shr    $0x3,%rax
  4195e1:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  4195e8:	48 89 f8             	mov    %rdi,%rax
  4195eb:	83 e0 07             	and    $0x7,%eax
  4195ee:	83 c0 03             	add    $0x3,%eax
  4195f1:	38 d0                	cmp    %dl,%al
  4195f3:	7c 04                	jl     4195f9 <cgi+0x1c9>
  4195f5:	84 d2                	test   %dl,%dl
  4195f7:	75 2a                	jne    419623 <cgi+0x1f3>
  4195f9:	c7 83 2c 02 00 00 00 	movl   $0x0,0x22c(%rbx)
  419600:	00 00 00 
    return 0;
  419603:	31 c0                	xor    %eax,%eax
    }
  419605:	5b                   	pop    %rbx
  419606:	5d                   	pop    %rbp
  419607:	41 5c                	pop    %r12
  419609:	c3                   	retq   
	hc->status = 200;
  41960a:	e8 e1 95 fe ff       	callq  402bf0 <__asan_report_store4@plt>
    if ( hc->method == METHOD_GET || hc->method == METHOD_POST )
  41960f:	e8 bc 97 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  419614:	e8 b7 97 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( hc->hs->cgi_limit != 0 && hc->hs->cgi_count >= hc->hs->cgi_limit )
  419619:	e8 b2 97 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	httpd_clear_ndelay( hc->conn_fd );
  41961e:	e8 ad 97 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	hc->should_linger = 0;
  419623:	e8 c8 95 fe ff       	callq  402bf0 <__asan_report_store4@plt>
  419628:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41962f:	00 
	httpd_send_err(
  419630:	e8 eb 6b ff ff       	callq  410220 <httpd_method_str>
  419635:	41 b8 20 47 42 00    	mov    $0x424720,%r8d
  41963b:	b9 60 38 42 00       	mov    $0x423860,%ecx
  419640:	48 89 df             	mov    %rbx,%rdi
  419643:	49 89 c1             	mov    %rax,%r9
  419646:	ba a0 47 42 00       	mov    $0x4247a0,%edx
  41964b:	be f5 01 00 00       	mov    $0x1f5,%esi
  419650:	e8 6b 68 ff ff       	callq  40fec0 <httpd_send_err>
	return -1;
  419655:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  41965a:	eb a9                	jmp    419605 <cgi+0x1d5>
	    syslog( LOG_ERR, "fork - %m" );
  41965c:	31 c0                	xor    %eax,%eax
  41965e:	bf 03 00 00 00       	mov    $0x3,%edi
  419663:	be 60 5e 42 00       	mov    $0x425e60,%esi
  419668:	e8 d3 95 fe ff       	callq  402c40 <syslog@plt>
	    httpd_send_err(
  41966d:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
  419674:	48 89 f8             	mov    %rdi,%rax
  419677:	48 c1 e8 03          	shr    $0x3,%rax
  41967b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419682:	0f 85 da 00 00 00    	jne    419762 <cgi+0x332>
  419688:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  41968f:	41 b8 80 4d 42 00    	mov    $0x424d80,%r8d
  419695:	b9 60 38 42 00       	mov    $0x423860,%ecx
  41969a:	48 89 df             	mov    %rbx,%rdi
  41969d:	ba 00 4e 42 00       	mov    $0x424e00,%edx
  4196a2:	be f4 01 00 00       	mov    $0x1f4,%esi
  4196a7:	e8 14 68 ff ff       	callq  40fec0 <httpd_send_err>
	    return -1;
  4196ac:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4196b1:	e9 4f ff ff ff       	jmpq   419605 <cgi+0x1d5>
	    httpd_send_err(
  4196b6:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
  4196bd:	48 89 f8             	mov    %rdi,%rax
  4196c0:	48 c1 e8 03          	shr    $0x3,%rax
  4196c4:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4196cb:	0f 85 96 00 00 00    	jne    419767 <cgi+0x337>
  4196d1:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  4196d8:	4c 8b 05 81 c8 21 00 	mov    0x21c881(%rip),%r8        # 635f60 <httpd_err503form>
  4196df:	b9 60 38 42 00       	mov    $0x423860,%ecx
  4196e4:	48 89 df             	mov    %rbx,%rdi
  4196e7:	48 8b 15 b2 c8 21 00 	mov    0x21c8b2(%rip),%rdx        # 635fa0 <httpd_err503title>
  4196ee:	be f7 01 00 00       	mov    $0x1f7,%esi
  4196f3:	e8 c8 67 ff ff       	callq  40fec0 <httpd_send_err>
	    return -1;
  4196f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4196fd:	e9 03 ff ff ff       	jmpq   419605 <cgi+0x1d5>
	hc->bytes_sent = CGI_BYTECOUNT;
  419702:	e8 99 98 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	if ( hc->hs->cgi_limit != 0 && hc->hs->cgi_count >= hc->hs->cgi_limit )
  419707:	4c 89 e7             	mov    %r12,%rdi
  41970a:	e8 41 9b fe ff       	callq  403250 <__asan_report_load8@plt>
	syslog( LOG_INFO, "spawned CGI process %d for file '%.200s'", r, hc->expnfilename );
  41970f:	e8 3c 9b fe ff       	callq  403250 <__asan_report_load8@plt>
	    sub_process = 1;
  419714:	c7 05 82 95 22 00 01 	movl   $0x1,0x229582(%rip)        # 642ca0 <sub_process>
  41971b:	00 00 00 
	    httpd_unlisten( hc->hs );
  41971e:	4c 89 e0             	mov    %r12,%rax
  419721:	48 c1 e8 03          	shr    $0x3,%rax
  419725:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41972c:	75 3e                	jne    41976c <cgi+0x33c>
  41972e:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  419732:	e8 09 39 ff ff       	callq  40d040 <httpd_unlisten>
	    cgi_child( hc );
  419737:	e8 04 99 fe ff       	callq  403040 <__asan_handle_no_return@plt>
  41973c:	48 89 df             	mov    %rbx,%rdi
  41973f:	e8 2c f4 ff ff       	callq  418b70 <cgi_child>
	    syslog( LOG_CRIT, "tmr_create(cgi_kill child) failed" );
  419744:	bf 02 00 00 00       	mov    $0x2,%edi
  419749:	be 20 65 42 00       	mov    $0x426520,%esi
  41974e:	e8 ed 94 fe ff       	callq  402c40 <syslog@plt>
	    exit( 1 );
  419753:	e8 e8 98 fe ff       	callq  403040 <__asan_handle_no_return@plt>
  419758:	bf 01 00 00 00       	mov    $0x1,%edi
  41975d:	e8 7e 99 fe ff       	callq  4030e0 <exit@plt>
	    httpd_send_err(
  419762:	e8 e9 9a fe ff       	callq  403250 <__asan_report_load8@plt>
	    httpd_send_err(
  419767:	e8 e4 9a fe ff       	callq  403250 <__asan_report_load8@plt>
	    httpd_unlisten( hc->hs );
  41976c:	4c 89 e7             	mov    %r12,%rdi
  41976f:	e8 dc 9a fe ff       	callq  403250 <__asan_report_load8@plt>
  419774:	66 90                	xchg   %ax,%ax
  419776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41977d:	00 00 00 

0000000000419780 <really_start_request>:
    {
  419780:	41 57                	push   %r15
  419782:	41 56                	push   %r14
  419784:	41 55                	push   %r13
  419786:	41 54                	push   %r12
  419788:	55                   	push   %rbp
  419789:	53                   	push   %rbx
  41978a:	48 89 fb             	mov    %rdi,%rbx
  41978d:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  419794:	44 8b 05 65 7b 22 00 	mov    0x227b65(%rip),%r8d        # 641300 <__asan_option_detect_stack_use_after_return>
  41979b:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
  4197a0:	4c 8d 64 24 40       	lea    0x40(%rsp),%r12
  4197a5:	45 85 c0             	test   %r8d,%r8d
  4197a8:	0f 85 f2 0e 00 00    	jne    41a6a0 <really_start_request+0xf20>
  4197ae:	49 8d 44 24 60       	lea    0x60(%r12),%rax
  4197b3:	4d 89 e6             	mov    %r12,%r14
  4197b6:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  4197bb:	49 c1 ee 03          	shr    $0x3,%r14
    expnlen = strlen( hc->expnfilename );
  4197bf:	48 8d 83 f0 00 00 00 	lea    0xf0(%rbx),%rax
    {
  4197c6:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
  4197cd:	41 
  4197ce:	49 c7 44 24 08 60 21 	movq   $0x422160,0x8(%r12)
  4197d5:	42 00 
  4197d7:	49 c7 44 24 10 80 97 	movq   $0x419780,0x10(%r12)
  4197de:	41 00 
  4197e0:	41 c7 86 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r14)
  4197e7:	f1 f1 f1 f1 
  4197eb:	41 c7 86 04 80 ff 7f 	movl   $0xf2f2f200,0x7fff8004(%r14)
  4197f2:	00 f2 f2 f2 
  4197f6:	41 c7 86 08 80 ff 7f 	movl   $0xf3f3f3f3,0x7fff8008(%r14)
  4197fd:	f3 f3 f3 f3 
    expnlen = strlen( hc->expnfilename );
  419801:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  419806:	48 c1 e8 03          	shr    $0x3,%rax
  41980a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419811:	0f 85 a7 0e 00 00    	jne    41a6be <really_start_request+0xf3e>
  419817:	4c 8b ab f0 00 00 00 	mov    0xf0(%rbx),%r13
  41981e:	4c 89 ef             	mov    %r13,%rdi
  419821:	e8 5a 94 fe ff       	callq  402c80 <strlen@plt>
    if ( hc->method != METHOD_GET && hc->method != METHOD_HEAD &&
  419826:	48 8d 8b b4 00 00 00 	lea    0xb4(%rbx),%rcx
    expnlen = strlen( hc->expnfilename );
  41982d:	48 89 c5             	mov    %rax,%rbp
    if ( hc->method != METHOD_GET && hc->method != METHOD_HEAD &&
  419830:	48 89 c8             	mov    %rcx,%rax
  419833:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
  419838:	48 c1 e8 03          	shr    $0x3,%rax
  41983c:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  419843:	48 89 c8             	mov    %rcx,%rax
  419846:	83 e0 07             	and    $0x7,%eax
  419849:	83 c0 03             	add    $0x3,%eax
  41984c:	38 d0                	cmp    %dl,%al
  41984e:	7c 08                	jl     419858 <really_start_request+0xd8>
  419850:	84 d2                	test   %dl,%dl
  419852:	0f 85 ee 0b 00 00    	jne    41a446 <really_start_request+0xcc6>
  419858:	8b bb b4 00 00 00    	mov    0xb4(%rbx),%edi
  41985e:	8d 47 ff             	lea    -0x1(%rdi),%eax
  419861:	83 f8 02             	cmp    $0x2,%eax
  419864:	0f 87 53 0c 00 00    	ja     41a4bd <really_start_request+0xd3d>
    if ( stat( hc->expnfilename, &hc->sb ) < 0 )
  41986a:	48 8d 83 30 02 00 00 	lea    0x230(%rbx),%rax
  419871:	4c 89 ef             	mov    %r13,%rdi
  419874:	48 89 c6             	mov    %rax,%rsi
  419877:	48 89 04 24          	mov    %rax,(%rsp)
  41987b:	e8 00 58 00 00       	callq  41f080 <__stat>
  419880:	85 c0                	test   %eax,%eax
  419882:	0f 88 d8 0b 00 00    	js     41a460 <really_start_request+0xce0>
    if ( ! ( hc->sb.st_mode & ( S_IROTH | S_IXOTH ) ) )
  419888:	48 8d 83 48 02 00 00 	lea    0x248(%rbx),%rax
  41988f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  419894:	48 c1 e8 03          	shr    $0x3,%rax
  419898:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41989f:	84 c0                	test   %al,%al
  4198a1:	74 08                	je     4198ab <really_start_request+0x12b>
  4198a3:	3c 03                	cmp    $0x3,%al
  4198a5:	0f 8e 91 0b 00 00    	jle    41a43c <really_start_request+0xcbc>
  4198ab:	8b 83 48 02 00 00    	mov    0x248(%rbx),%eax
  4198b1:	a8 05                	test   $0x5,%al
  4198b3:	0f 84 33 0c 00 00    	je     41a4ec <really_start_request+0xd6c>
    if ( S_ISDIR(hc->sb.st_mode) )
  4198b9:	25 00 f0 00 00       	and    $0xf000,%eax
  4198be:	3d 00 40 00 00       	cmp    $0x4000,%eax
  4198c3:	0f 85 f7 03 00 00    	jne    419cc0 <really_start_request+0x540>
	if ( hc->pathinfo[0] != '\0' )
  4198c9:	48 8d bb 00 01 00 00 	lea    0x100(%rbx),%rdi
  4198d0:	48 89 f8             	mov    %rdi,%rax
  4198d3:	48 c1 e8 03          	shr    $0x3,%rax
  4198d7:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4198de:	0f 85 51 0e 00 00    	jne    41a735 <really_start_request+0xfb5>
  4198e4:	48 8b bb 00 01 00 00 	mov    0x100(%rbx),%rdi
  4198eb:	48 89 f8             	mov    %rdi,%rax
  4198ee:	48 89 fa             	mov    %rdi,%rdx
  4198f1:	48 c1 e8 03          	shr    $0x3,%rax
  4198f5:	83 e2 07             	and    $0x7,%edx
  4198f8:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  4198ff:	38 d0                	cmp    %dl,%al
  419901:	7f 08                	jg     41990b <really_start_request+0x18b>
  419903:	84 c0                	test   %al,%al
  419905:	0f 85 43 0b 00 00    	jne    41a44e <really_start_request+0xcce>
  41990b:	80 3f 00             	cmpb   $0x0,(%rdi)
  41990e:	0f 85 7c 0a 00 00    	jne    41a390 <really_start_request+0xc10>
	if ( strcmp( hc->origfilename, "" ) != 0 &&
  419914:	48 8d bb e8 00 00 00 	lea    0xe8(%rbx),%rdi
  41991b:	48 89 f8             	mov    %rdi,%rax
  41991e:	48 c1 e8 03          	shr    $0x3,%rax
  419922:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419929:	0f 85 24 0e 00 00    	jne    41a753 <really_start_request+0xfd3>
  41992f:	4c 8b ab e8 00 00 00 	mov    0xe8(%rbx),%r13
  419936:	4c 89 e8             	mov    %r13,%rax
  419939:	4c 89 ea             	mov    %r13,%rdx
  41993c:	48 c1 e8 03          	shr    $0x3,%rax
  419940:	83 e2 07             	and    $0x7,%edx
  419943:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41994a:	38 d0                	cmp    %dl,%al
  41994c:	7f 08                	jg     419956 <really_start_request+0x1d6>
  41994e:	84 c0                	test   %al,%al
  419950:	0f 85 86 0d 00 00    	jne    41a6dc <really_start_request+0xf5c>
  419956:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
  41995b:	74 15                	je     419972 <really_start_request+0x1f2>
	     strcmp( hc->origfilename, "." ) != 0 &&
  41995d:	be c0 3a 42 00       	mov    $0x423ac0,%esi
  419962:	4c 89 ef             	mov    %r13,%rdi
  419965:	e8 d6 94 fe ff       	callq  402e40 <strcmp@plt>
	if ( strcmp( hc->origfilename, "" ) != 0 &&
  41996a:	85 c0                	test   %eax,%eax
  41996c:	0f 85 a6 08 00 00    	jne    41a218 <really_start_request+0xa98>
	    (void) strcpy( indexname, hc->expnfilename );
  419972:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
  419977:	48 8d 4d 01          	lea    0x1(%rbp),%rcx
  41997b:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
  419980:	bd 08 6e 42 00       	mov    $0x426e08,%ebp
    {
  419985:	b8 0a 00 00 00       	mov    $0xa,%eax
  41998a:	41 bd 80 65 42 00    	mov    $0x426580,%r13d
	    (void) strcpy( indexname, hc->expnfilename );
  419990:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
  419995:	49 89 ce             	mov    %rcx,%r14
  419998:	49 c1 ef 03          	shr    $0x3,%r15
  41999c:	eb 26                	jmp    4199c4 <really_start_request+0x244>
  41999e:	66 90                	xchg   %ax,%ax
  4199a0:	48 89 e8             	mov    %rbp,%rax
  4199a3:	48 c1 e8 03          	shr    $0x3,%rax
  4199a7:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  4199ae:	0f 85 bb 0c 00 00    	jne    41a66f <really_start_request+0xeef>
  4199b4:	4c 8b 6d 00          	mov    0x0(%rbp),%r13
  4199b8:	48 83 c5 08          	add    $0x8,%rbp
  4199bc:	4c 89 ef             	mov    %r13,%rdi
  4199bf:	e8 bc 92 fe ff       	callq  402c80 <strlen@plt>
	    httpd_realloc_str(
  4199c4:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
  4199c8:	be 00 29 64 00       	mov    $0x642900,%esi
  4199cd:	bf 40 29 64 00       	mov    $0x642940,%edi
  4199d2:	e8 59 39 ff ff       	callq  40d330 <httpd_realloc_str>
	    (void) strcpy( indexname, hc->expnfilename );
  4199d7:	41 80 bf 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r15)
  4199de:	00 
  4199df:	0f 85 7b 0c 00 00    	jne    41a660 <really_start_request+0xee0>
  4199e5:	48 8b 3d 54 8f 22 00 	mov    0x228f54(%rip),%rdi        # 642940 <indexname.6628>
  4199ec:	48 8b b3 f0 00 00 00 	mov    0xf0(%rbx),%rsi
  4199f3:	e8 18 95 fe ff       	callq  402f10 <strcpy@plt>
	    indxlen = strlen( indexname );
  4199f8:	4c 8b 25 41 8f 22 00 	mov    0x228f41(%rip),%r12        # 642940 <indexname.6628>
  4199ff:	4c 89 e7             	mov    %r12,%rdi
  419a02:	e8 79 92 fe ff       	callq  402c80 <strlen@plt>
	    if ( indxlen == 0 || indexname[indxlen - 1] != '/' )
  419a07:	48 85 c0             	test   %rax,%rax
  419a0a:	74 2b                	je     419a37 <really_start_request+0x2b7>
  419a0c:	49 8d 7c 04 ff       	lea    -0x1(%r12,%rax,1),%rdi
  419a11:	48 89 f9             	mov    %rdi,%rcx
  419a14:	48 89 fe             	mov    %rdi,%rsi
  419a17:	48 c1 e9 03          	shr    $0x3,%rcx
  419a1b:	83 e6 07             	and    $0x7,%esi
  419a1e:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  419a25:	40 38 f1             	cmp    %sil,%cl
  419a28:	7f 08                	jg     419a32 <really_start_request+0x2b2>
  419a2a:	84 c9                	test   %cl,%cl
  419a2c:	0f 85 38 0c 00 00    	jne    41a66a <really_start_request+0xeea>
  419a32:	80 3f 2f             	cmpb   $0x2f,(%rdi)
  419a35:	74 1a                	je     419a51 <really_start_request+0x2d1>
		(void) strcat( indexname, "/" );
  419a37:	49 8d 3c 04          	lea    (%r12,%rax,1),%rdi
  419a3b:	ba 02 00 00 00       	mov    $0x2,%edx
  419a40:	be e0 45 42 00       	mov    $0x4245e0,%esi
  419a45:	e8 f6 96 fe ff       	callq  403140 <memcpy@plt>
  419a4a:	4c 8b 25 ef 8e 22 00 	mov    0x228eef(%rip),%r12        # 642940 <indexname.6628>
	    if ( strcmp( indexname, "./" ) == 0 )
  419a51:	be e0 30 42 00       	mov    $0x4230e0,%esi
  419a56:	4c 89 e7             	mov    %r12,%rdi
  419a59:	e8 e2 93 fe ff       	callq  402e40 <strcmp@plt>
  419a5e:	85 c0                	test   %eax,%eax
  419a60:	75 2c                	jne    419a8e <really_start_request+0x30e>
		indexname[0] = '\0';
  419a62:	4c 89 e0             	mov    %r12,%rax
  419a65:	4c 89 e1             	mov    %r12,%rcx
  419a68:	48 c1 e8 03          	shr    $0x3,%rax
  419a6c:	83 e1 07             	and    $0x7,%ecx
  419a6f:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  419a76:	38 c8                	cmp    %cl,%al
  419a78:	7f 08                	jg     419a82 <really_start_request+0x302>
  419a7a:	84 c0                	test   %al,%al
  419a7c:	0f 85 34 0c 00 00    	jne    41a6b6 <really_start_request+0xf36>
  419a82:	41 c6 04 24 00       	movb   $0x0,(%r12)
  419a87:	4c 8b 25 b2 8e 22 00 	mov    0x228eb2(%rip),%r12        # 642940 <indexname.6628>
	    (void) strcat( indexname, index_names[i] );
  419a8e:	4c 89 ee             	mov    %r13,%rsi
  419a91:	4c 89 e7             	mov    %r12,%rdi
  419a94:	e8 27 9a fe ff       	callq  4034c0 <strcat@plt>
	    if ( stat( indexname, &hc->sb ) >= 0 )
  419a99:	48 8b 34 24          	mov    (%rsp),%rsi
  419a9d:	48 8b 3d 9c 8e 22 00 	mov    0x228e9c(%rip),%rdi        # 642940 <indexname.6628>
  419aa4:	e8 d7 55 00 00       	callq  41f080 <__stat>
  419aa9:	85 c0                	test   %eax,%eax
  419aab:	0f 89 bf 00 00 00    	jns    419b70 <really_start_request+0x3f0>
	for ( i = 0; i < sizeof(index_names) / sizeof(char*); ++i )
  419ab1:	48 81 fd 30 6e 42 00 	cmp    $0x426e30,%rbp
  419ab8:	0f 85 e2 fe ff ff    	jne    4199a0 <really_start_request+0x220>
	if ( ! ( hc->sb.st_mode & S_IROTH ) )
  419abe:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  419ac3:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
  419ac8:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
  419acd:	48 c1 e8 03          	shr    $0x3,%rax
  419ad1:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  419ad8:	84 c0                	test   %al,%al
  419ada:	74 08                	je     419ae4 <really_start_request+0x364>
  419adc:	3c 03                	cmp    $0x3,%al
  419ade:	0f 8e 6f 09 00 00    	jle    41a453 <really_start_request+0xcd3>
  419ae4:	f6 83 48 02 00 00 04 	testb  $0x4,0x248(%rbx)
  419aeb:	0f 84 5e 0a 00 00    	je     41a54f <really_start_request+0xdcf>
	if ( auth_check( hc, hc->expnfilename ) == -1 )
  419af1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  419af6:	48 c1 e8 03          	shr    $0x3,%rax
  419afa:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419b01:	0f 85 c1 0b 00 00    	jne    41a6c8 <really_start_request+0xf48>
  419b07:	48 8b b3 f0 00 00 00 	mov    0xf0(%rbx),%rsi
  419b0e:	48 89 df             	mov    %rbx,%rdi
  419b11:	e8 7a bb ff ff       	callq  415690 <auth_check>
  419b16:	83 f8 ff             	cmp    $0xffffffff,%eax
  419b19:	0f 84 80 09 00 00    	je     41a49f <really_start_request+0xd1f>
	if ( ! check_referer( hc ) )
  419b1f:	48 89 df             	mov    %rbx,%rdi
  419b22:	e8 79 bc ff ff       	callq  4157a0 <check_referer>
  419b27:	85 c0                	test   %eax,%eax
  419b29:	0f 84 70 09 00 00    	je     41a49f <really_start_request+0xd1f>
	return ls( hc );
  419b2f:	48 89 df             	mov    %rbx,%rdi
  419b32:	e8 39 cf ff ff       	callq  416a70 <ls>
    {
  419b37:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
  419b3c:	4c 39 e3             	cmp    %r12,%rbx
  419b3f:	0f 85 32 0b 00 00    	jne    41a677 <really_start_request+0xef7>
  419b45:	49 c7 86 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r14)
  419b4c:	00 00 00 00 
  419b50:	41 c7 86 08 80 ff 7f 	movl   $0x0,0x7fff8008(%r14)
  419b57:	00 00 00 00 
    }
  419b5b:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
  419b62:	5b                   	pop    %rbx
  419b63:	5d                   	pop    %rbp
  419b64:	41 5c                	pop    %r12
  419b66:	41 5d                	pop    %r13
  419b68:	41 5e                	pop    %r14
  419b6a:	41 5f                	pop    %r15
  419b6c:	c3                   	retq   
  419b6d:	0f 1f 00             	nopl   (%rax)
	cp = expand_symlinks( indexname, &pi, hc->hs->no_symlink_check, hc->tildemapped );
  419b70:	48 8d bb 14 02 00 00 	lea    0x214(%rbx),%rdi
  419b77:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
  419b7c:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
  419b81:	48 89 f8             	mov    %rdi,%rax
  419b84:	48 c1 e8 03          	shr    $0x3,%rax
  419b88:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  419b8f:	48 89 f8             	mov    %rdi,%rax
  419b92:	83 e0 07             	and    $0x7,%eax
  419b95:	83 c0 03             	add    $0x3,%eax
  419b98:	38 d0                	cmp    %dl,%al
  419b9a:	7c 08                	jl     419ba4 <really_start_request+0x424>
  419b9c:	84 d2                	test   %dl,%dl
  419b9e:	0f 85 10 0c 00 00    	jne    41a7b4 <really_start_request+0x1034>
  419ba4:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  419ba8:	8b 8b 14 02 00 00    	mov    0x214(%rbx),%ecx
  419bae:	48 89 f8             	mov    %rdi,%rax
  419bb1:	48 c1 e8 03          	shr    $0x3,%rax
  419bb5:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419bbc:	0f 85 ed 0b 00 00    	jne    41a7af <really_start_request+0x102f>
  419bc2:	48 8b 43 08          	mov    0x8(%rbx),%rax
  419bc6:	48 8d 78 60          	lea    0x60(%rax),%rdi
  419bca:	48 89 fa             	mov    %rdi,%rdx
  419bcd:	48 c1 ea 03          	shr    $0x3,%rdx
  419bd1:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  419bd8:	84 d2                	test   %dl,%dl
  419bda:	74 09                	je     419be5 <really_start_request+0x465>
  419bdc:	80 fa 03             	cmp    $0x3,%dl
  419bdf:	0f 8e d4 0b 00 00    	jle    41a7b9 <really_start_request+0x1039>
  419be5:	8b 50 60             	mov    0x60(%rax),%edx
  419be8:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  419bed:	48 8b 3d 4c 8d 22 00 	mov    0x228d4c(%rip),%rdi        # 642940 <indexname.6628>
  419bf4:	48 8d 68 c0          	lea    -0x40(%rax),%rbp
  419bf8:	48 89 ee             	mov    %rbp,%rsi
  419bfb:	e8 50 47 ff ff       	callq  40e350 <expand_symlinks>
  419c00:	49 89 c5             	mov    %rax,%r13
	if ( cp == (char*) 0 || pi[0] != '\0' )
  419c03:	48 85 c0             	test   %rax,%rax
  419c06:	0f 84 a6 09 00 00    	je     41a5b2 <really_start_request+0xe32>
  419c0c:	48 89 e8             	mov    %rbp,%rax
  419c0f:	48 c1 e8 03          	shr    $0x3,%rax
  419c13:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419c1a:	0f 85 bc 0b 00 00    	jne    41a7dc <really_start_request+0x105c>
  419c20:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  419c25:	48 8b 78 c0          	mov    -0x40(%rax),%rdi
  419c29:	48 89 f8             	mov    %rdi,%rax
  419c2c:	48 89 fa             	mov    %rdi,%rdx
  419c2f:	48 c1 e8 03          	shr    $0x3,%rax
  419c33:	83 e2 07             	and    $0x7,%edx
  419c36:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  419c3d:	38 d0                	cmp    %dl,%al
  419c3f:	7f 08                	jg     419c49 <really_start_request+0x4c9>
  419c41:	84 c0                	test   %al,%al
  419c43:	0f 85 8e 0b 00 00    	jne    41a7d7 <really_start_request+0x1057>
  419c49:	80 3f 00             	cmpb   $0x0,(%rdi)
  419c4c:	0f 85 60 09 00 00    	jne    41a5b2 <really_start_request+0xe32>
	expnlen = strlen( cp );
  419c52:	4c 89 ef             	mov    %r13,%rdi
  419c55:	e8 26 90 fe ff       	callq  402c80 <strlen@plt>
	httpd_realloc_str( &hc->expnfilename, &hc->maxexpnfilename, expnlen );
  419c5a:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
  419c5f:	48 8d b3 88 01 00 00 	lea    0x188(%rbx),%rsi
  419c66:	48 89 c2             	mov    %rax,%rdx
	expnlen = strlen( cp );
  419c69:	48 89 c5             	mov    %rax,%rbp
	httpd_realloc_str( &hc->expnfilename, &hc->maxexpnfilename, expnlen );
  419c6c:	4c 89 ff             	mov    %r15,%rdi
  419c6f:	e8 bc 36 ff ff       	callq  40d330 <httpd_realloc_str>
	(void) strcpy( hc->expnfilename, cp );
  419c74:	4c 89 f8             	mov    %r15,%rax
  419c77:	48 c1 e8 03          	shr    $0x3,%rax
  419c7b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419c82:	0f 85 45 0b 00 00    	jne    41a7cd <really_start_request+0x104d>
  419c88:	48 8b bb f0 00 00 00 	mov    0xf0(%rbx),%rdi
  419c8f:	4c 89 ee             	mov    %r13,%rsi
  419c92:	e8 79 92 fe ff       	callq  402f10 <strcpy@plt>
	if ( ! ( hc->sb.st_mode & ( S_IROTH | S_IXOTH ) ) )
  419c97:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  419c9c:	48 c1 e8 03          	shr    $0x3,%rax
  419ca0:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  419ca7:	84 c0                	test   %al,%al
  419ca9:	74 08                	je     419cb3 <really_start_request+0x533>
  419cab:	3c 03                	cmp    $0x3,%al
  419cad:	0f 8e 10 0b 00 00    	jle    41a7c3 <really_start_request+0x1043>
  419cb3:	f6 83 48 02 00 00 05 	testb  $0x5,0x248(%rbx)
  419cba:	0f 84 19 07 00 00    	je     41a3d9 <really_start_request+0xc59>
    httpd_realloc_str( &dirname, &maxdirname, expnlen );
  419cc0:	48 89 ea             	mov    %rbp,%rdx
  419cc3:	be 80 28 64 00       	mov    $0x642880,%esi
  419cc8:	bf c0 28 64 00       	mov    $0x6428c0,%edi
  419ccd:	e8 5e 36 ff ff       	callq  40d330 <httpd_realloc_str>
    (void) strcpy( dirname, hc->expnfilename );
  419cd2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  419cd7:	48 c1 e8 03          	shr    $0x3,%rax
  419cdb:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419ce2:	0f 85 52 0a 00 00    	jne    41a73a <really_start_request+0xfba>
  419ce8:	48 8b b3 f0 00 00 00 	mov    0xf0(%rbx),%rsi
  419cef:	48 8b 3d ca 8b 22 00 	mov    0x228bca(%rip),%rdi        # 6428c0 <dirname.6632>
  419cf6:	e8 15 92 fe ff       	callq  402f10 <strcpy@plt>
    cp = strrchr( dirname, '/' );
  419cfb:	4c 8b 2d be 8b 22 00 	mov    0x228bbe(%rip),%r13        # 6428c0 <dirname.6632>
  419d02:	be 2f 00 00 00       	mov    $0x2f,%esi
  419d07:	4c 89 ef             	mov    %r13,%rdi
  419d0a:	e8 71 91 fe ff       	callq  402e80 <strrchr@plt>
    if ( cp == (char*) 0 )
  419d0f:	48 85 c0             	test   %rax,%rax
  419d12:	0f 84 48 05 00 00    	je     41a260 <really_start_request+0xae0>
	*cp = '\0';
  419d18:	48 89 c2             	mov    %rax,%rdx
  419d1b:	48 89 c1             	mov    %rax,%rcx
  419d1e:	48 c1 ea 03          	shr    $0x3,%rdx
  419d22:	83 e1 07             	and    $0x7,%ecx
  419d25:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  419d2c:	38 ca                	cmp    %cl,%dl
  419d2e:	7f 08                	jg     419d38 <really_start_request+0x5b8>
  419d30:	84 d2                	test   %dl,%dl
  419d32:	0f 85 f5 09 00 00    	jne    41a72d <really_start_request+0xfad>
  419d38:	c6 00 00             	movb   $0x0,(%rax)
    if ( auth_check( hc, dirname ) == -1 )
  419d3b:	48 8b 35 7e 8b 22 00 	mov    0x228b7e(%rip),%rsi        # 6428c0 <dirname.6632>
  419d42:	48 89 df             	mov    %rbx,%rdi
  419d45:	e8 46 b9 ff ff       	callq  415690 <auth_check>
  419d4a:	83 f8 ff             	cmp    $0xffffffff,%eax
  419d4d:	0f 84 4c 07 00 00    	je     41a49f <really_start_request+0xd1f>
    if ( expnlen == sizeof(AUTH_FILE) - 1 )
  419d53:	48 83 fd 09          	cmp    $0x9,%rbp
  419d57:	0f 84 c3 03 00 00    	je     41a120 <really_start_request+0x9a0>
    else if ( expnlen >= sizeof(AUTH_FILE) &&
  419d5d:	0f 87 55 04 00 00    	ja     41a1b8 <really_start_request+0xa38>
    if ( ! check_referer( hc ) )
  419d63:	48 89 df             	mov    %rbx,%rdi
  419d66:	e8 35 ba ff ff       	callq  4157a0 <check_referer>
  419d6b:	85 c0                	test   %eax,%eax
  419d6d:	0f 84 2c 07 00 00    	je     41a49f <really_start_request+0xd1f>
    if ( hc->hs->cgi_pattern != (char*) 0 &&
  419d73:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  419d77:	48 89 f8             	mov    %rdi,%rax
  419d7a:	48 c1 e8 03          	shr    $0x3,%rax
  419d7e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419d85:	0f 85 86 09 00 00    	jne    41a711 <really_start_request+0xf91>
  419d8b:	48 8b 43 08          	mov    0x8(%rbx),%rax
  419d8f:	48 8d 78 18          	lea    0x18(%rax),%rdi
  419d93:	48 89 fa             	mov    %rdi,%rdx
  419d96:	48 c1 ea 03          	shr    $0x3,%rdx
  419d9a:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  419da1:	0f 85 6f 09 00 00    	jne    41a716 <really_start_request+0xf96>
  419da7:	48 8b 78 18          	mov    0x18(%rax),%rdi
  419dab:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  419db0:	48 c1 e8 03          	shr    $0x3,%rax
  419db4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  419dbb:	84 c0                	test   %al,%al
  419dbd:	74 08                	je     419dc7 <really_start_request+0x647>
  419dbf:	3c 03                	cmp    $0x3,%al
  419dc1:	0f 8e 7d 09 00 00    	jle    41a744 <really_start_request+0xfc4>
  419dc7:	8b 83 48 02 00 00    	mov    0x248(%rbx),%eax
  419dcd:	83 e0 01             	and    $0x1,%eax
  419dd0:	48 85 ff             	test   %rdi,%rdi
  419dd3:	0f 84 be 02 00 00    	je     41a097 <really_start_request+0x917>
  419dd9:	85 c0                	test   %eax,%eax
  419ddb:	0f 85 67 02 00 00    	jne    41a048 <really_start_request+0x8c8>
    if ( hc->pathinfo[0] != '\0' )
  419de1:	48 8d bb 00 01 00 00 	lea    0x100(%rbx),%rdi
  419de8:	48 89 f8             	mov    %rdi,%rax
  419deb:	48 c1 e8 03          	shr    $0x3,%rax
  419def:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419df6:	0f 85 0b 09 00 00    	jne    41a707 <really_start_request+0xf87>
  419dfc:	48 8b bb 00 01 00 00 	mov    0x100(%rbx),%rdi
  419e03:	48 89 f8             	mov    %rdi,%rax
  419e06:	48 89 fa             	mov    %rdi,%rdx
  419e09:	48 c1 e8 03          	shr    $0x3,%rax
  419e0d:	83 e2 07             	and    $0x7,%edx
  419e10:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  419e17:	38 d0                	cmp    %dl,%al
  419e19:	7f 08                	jg     419e23 <really_start_request+0x6a3>
  419e1b:	84 c0                	test   %al,%al
  419e1d:	0f 85 e9 08 00 00    	jne    41a70c <really_start_request+0xf8c>
  419e23:	80 3f 00             	cmpb   $0x0,(%rdi)
  419e26:	0f 85 ac 07 00 00    	jne    41a5d8 <really_start_request+0xe58>
    if ( hc->got_range &&
  419e2c:	48 8d bb 10 02 00 00 	lea    0x210(%rbx),%rdi
  419e33:	48 89 f8             	mov    %rdi,%rax
  419e36:	48 c1 e8 03          	shr    $0x3,%rax
  419e3a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  419e41:	84 c0                	test   %al,%al
  419e43:	74 08                	je     419e4d <really_start_request+0x6cd>
  419e45:	3c 03                	cmp    $0x3,%al
  419e47:	0f 8e 8a 08 00 00    	jle    41a6d7 <really_start_request+0xf57>
  419e4d:	8b bb 10 02 00 00    	mov    0x210(%rbx),%edi
  419e53:	85 ff                	test   %edi,%edi
  419e55:	74 5a                	je     419eb1 <really_start_request+0x731>
	 ( hc->last_byte_index == -1 || hc->last_byte_index >= hc->sb.st_size ) )
  419e57:	48 8d bb 20 02 00 00 	lea    0x220(%rbx),%rdi
  419e5e:	48 89 f8             	mov    %rdi,%rax
  419e61:	48 c1 e8 03          	shr    $0x3,%rax
  419e65:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419e6c:	0f 85 7c 08 00 00    	jne    41a6ee <really_start_request+0xf6e>
  419e72:	48 8d bb 60 02 00 00 	lea    0x260(%rbx),%rdi
  419e79:	48 8b 93 20 02 00 00 	mov    0x220(%rbx),%rdx
  419e80:	48 89 f8             	mov    %rdi,%rax
  419e83:	48 c1 e8 03          	shr    $0x3,%rax
  419e87:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419e8e:	0f 85 3e 08 00 00    	jne    41a6d2 <really_start_request+0xf52>
  419e94:	48 8b 83 60 02 00 00 	mov    0x260(%rbx),%rax
    if ( hc->got_range &&
  419e9b:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
  419e9f:	74 05                	je     419ea6 <really_start_request+0x726>
	 ( hc->last_byte_index == -1 || hc->last_byte_index >= hc->sb.st_size ) )
  419ea1:	48 39 c2             	cmp    %rax,%rdx
  419ea4:	7c 0b                	jl     419eb1 <really_start_request+0x731>
	hc->last_byte_index = hc->sb.st_size - 1;
  419ea6:	48 83 e8 01          	sub    $0x1,%rax
  419eaa:	48 89 83 20 02 00 00 	mov    %rax,0x220(%rbx)
    figure_mime( hc );
  419eb1:	48 89 df             	mov    %rbx,%rdi
  419eb4:	e8 97 59 ff ff       	callq  40f850 <figure_mime>
    if ( hc->method == METHOD_HEAD )
  419eb9:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  419ebe:	48 89 c8             	mov    %rcx,%rax
  419ec1:	48 c1 e8 03          	shr    $0x3,%rax
  419ec5:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  419ecc:	48 89 c8             	mov    %rcx,%rax
  419ecf:	83 e0 07             	and    $0x7,%eax
  419ed2:	83 c0 03             	add    $0x3,%eax
  419ed5:	38 d0                	cmp    %dl,%al
  419ed7:	7c 08                	jl     419ee1 <really_start_request+0x761>
  419ed9:	84 d2                	test   %dl,%dl
  419edb:	0f 85 3a 08 00 00    	jne    41a71b <really_start_request+0xf9b>
  419ee1:	83 bb b4 00 00 00 02 	cmpl   $0x2,0xb4(%rbx)
  419ee8:	0f 84 12 04 00 00    	je     41a300 <really_start_request+0xb80>
    else if ( hc->if_modified_since != (time_t) -1 &&
  419eee:	48 8d bb e0 01 00 00 	lea    0x1e0(%rbx),%rdi
  419ef5:	48 89 f8             	mov    %rdi,%rax
  419ef8:	48 c1 e8 03          	shr    $0x3,%rax
  419efc:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419f03:	0f 85 db 07 00 00    	jne    41a6e4 <really_start_request+0xf64>
  419f09:	48 8b 83 e0 01 00 00 	mov    0x1e0(%rbx),%rax
  419f10:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  419f14:	74 2b                	je     419f41 <really_start_request+0x7c1>
	 hc->if_modified_since >= hc->sb.st_mtime )
  419f16:	48 8d bb 88 02 00 00 	lea    0x288(%rbx),%rdi
  419f1d:	48 89 fa             	mov    %rdi,%rdx
  419f20:	48 c1 ea 03          	shr    $0x3,%rdx
  419f24:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  419f2b:	0f 85 b8 07 00 00    	jne    41a6e9 <really_start_request+0xf69>
  419f31:	48 8b 93 88 02 00 00 	mov    0x288(%rbx),%rdx
    else if ( hc->if_modified_since != (time_t) -1 &&
  419f38:	48 39 d0             	cmp    %rdx,%rax
  419f3b:	0f 8d 4f 03 00 00    	jge    41a290 <really_start_request+0xb10>
	hc->file_address = mmc_map( hc->expnfilename, &(hc->sb), nowP );
  419f41:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  419f46:	48 c1 e8 03          	shr    $0x3,%rax
  419f4a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419f51:	0f 85 cc 07 00 00    	jne    41a723 <really_start_request+0xfa3>
  419f57:	48 8b bb f0 00 00 00 	mov    0xf0(%rbx),%rdi
  419f5e:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
  419f63:	48 8b 34 24          	mov    (%rsp),%rsi
  419f67:	e8 04 10 00 00       	callq  41af70 <mmc_map>
  419f6c:	48 8d bb c8 02 00 00 	lea    0x2c8(%rbx),%rdi
  419f73:	48 89 fa             	mov    %rdi,%rdx
  419f76:	48 c1 ea 03          	shr    $0x3,%rdx
  419f7a:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  419f81:	0f 85 c7 07 00 00    	jne    41a74e <really_start_request+0xfce>
  419f87:	48 89 83 c8 02 00 00 	mov    %rax,0x2c8(%rbx)
	if ( hc->file_address == (char*) 0 )
  419f8e:	48 85 c0             	test   %rax,%rax
  419f91:	0f 84 a4 06 00 00    	je     41a63b <really_start_request+0xebb>
	send_mime(
  419f97:	48 8d bb 88 02 00 00 	lea    0x288(%rbx),%rdi
  419f9e:	48 89 f8             	mov    %rdi,%rax
  419fa1:	48 c1 e8 03          	shr    $0x3,%rax
  419fa5:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419fac:	0f 85 4b 07 00 00    	jne    41a6fd <really_start_request+0xf7d>
  419fb2:	48 8d bb 60 02 00 00 	lea    0x260(%rbx),%rdi
  419fb9:	48 8b 93 88 02 00 00 	mov    0x288(%rbx),%rdx
  419fc0:	48 89 f8             	mov    %rdi,%rax
  419fc3:	48 c1 e8 03          	shr    $0x3,%rax
  419fc7:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  419fce:	0f 85 2e 07 00 00    	jne    41a702 <really_start_request+0xf82>
  419fd4:	48 8d bb f8 01 00 00 	lea    0x1f8(%rbx),%rdi
  419fdb:	48 8b 83 60 02 00 00 	mov    0x260(%rbx),%rax
  419fe2:	48 89 f9             	mov    %rdi,%rcx
  419fe5:	48 c1 e9 03          	shr    $0x3,%rcx
  419fe9:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  419ff0:	0f 85 fd 06 00 00    	jne    41a6f3 <really_start_request+0xf73>
  419ff6:	48 8d bb f8 00 00 00 	lea    0xf8(%rbx),%rdi
  419ffd:	4c 8b 8b f8 01 00 00 	mov    0x1f8(%rbx),%r9
  41a004:	48 89 f9             	mov    %rdi,%rcx
  41a007:	48 c1 e9 03          	shr    $0x3,%rcx
  41a00b:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41a012:	0f 85 e0 06 00 00    	jne    41a6f8 <really_start_request+0xf78>
  41a018:	48 8b 8b f8 00 00 00 	mov    0xf8(%rbx),%rcx
  41a01f:	52                   	push   %rdx
  41a020:	41 b8 60 38 42 00    	mov    $0x423860,%r8d
  41a026:	ba 20 5e 42 00       	mov    $0x425e20,%edx
  41a02b:	50                   	push   %rax
  41a02c:	be c8 00 00 00       	mov    $0xc8,%esi
  41a031:	48 89 df             	mov    %rbx,%rdi
  41a034:	e8 37 35 ff ff       	callq  40d570 <send_mime>
  41a039:	58                   	pop    %rax
    return 0;
  41a03a:	31 c0                	xor    %eax,%eax
	send_mime(
  41a03c:	5a                   	pop    %rdx
  41a03d:	e9 f5 fa ff ff       	jmpq   419b37 <really_start_request+0x3b7>
  41a042:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	 match( hc->hs->cgi_pattern, hc->expnfilename ) )
  41a048:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  41a04d:	48 c1 e8 03          	shr    $0x3,%rax
  41a051:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41a058:	0f 85 fa 06 00 00    	jne    41a758 <really_start_request+0xfd8>
  41a05e:	48 8b b3 f0 00 00 00 	mov    0xf0(%rbx),%rsi
  41a065:	e8 26 4f 00 00       	callq  41ef90 <match>
	 ( hc->sb.st_mode & S_IXOTH ) &&
  41a06a:	85 c0                	test   %eax,%eax
  41a06c:	0f 85 3e 04 00 00    	jne    41a4b0 <really_start_request+0xd30>
  41a072:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  41a077:	48 c1 e8 03          	shr    $0x3,%rax
  41a07b:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41a082:	84 c0                	test   %al,%al
  41a084:	74 08                	je     41a08e <really_start_request+0x90e>
  41a086:	3c 03                	cmp    $0x3,%al
  41a088:	0f 8e 0d 07 00 00    	jle    41a79b <really_start_request+0x101b>
  41a08e:	8b 83 48 02 00 00    	mov    0x248(%rbx),%eax
  41a094:	83 e0 01             	and    $0x1,%eax
    if ( hc->sb.st_mode & S_IXOTH )
  41a097:	85 c0                	test   %eax,%eax
  41a099:	0f 84 42 fd ff ff    	je     419de1 <really_start_request+0x661>
	syslog(
  41a09f:	48 8d ab d0 00 00 00 	lea    0xd0(%rbx),%rbp
  41a0a6:	49 89 ed             	mov    %rbp,%r13
  41a0a9:	49 c1 ed 03          	shr    $0x3,%r13
  41a0ad:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  41a0b4:	00 
  41a0b5:	0f 85 c8 06 00 00    	jne    41a783 <really_start_request+0x1003>
  41a0bb:	4c 8b bb d0 00 00 00 	mov    0xd0(%rbx),%r15
  41a0c2:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
  41a0c6:	e8 35 78 ff ff       	callq  411900 <httpd_ntoa>
  41a0cb:	be 60 69 42 00       	mov    $0x426960,%esi
  41a0d0:	bf 05 00 00 00       	mov    $0x5,%edi
  41a0d5:	48 89 c2             	mov    %rax,%rdx
  41a0d8:	4c 89 f9             	mov    %r15,%rcx
  41a0db:	31 c0                	xor    %eax,%eax
  41a0dd:	e8 5e 8b fe ff       	callq  402c40 <syslog@plt>
	httpd_send_err(
  41a0e2:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  41a0e9:	00 
  41a0ea:	0f 85 8b 06 00 00    	jne    41a77b <really_start_request+0xffb>
  41a0f0:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  41a0f7:	41 b8 c0 69 42 00    	mov    $0x4269c0,%r8d
	    httpd_send_err(
  41a0fd:	b9 60 38 42 00       	mov    $0x423860,%ecx
  41a102:	ba 20 4f 42 00       	mov    $0x424f20,%edx
  41a107:	be 93 01 00 00       	mov    $0x193,%esi
  41a10c:	48 89 df             	mov    %rbx,%rdi
  41a10f:	e8 ac 5d ff ff       	callq  40fec0 <httpd_send_err>
	    return -1;
  41a114:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  41a119:	e9 19 fa ff ff       	jmpq   419b37 <really_start_request+0x3b7>
  41a11e:	66 90                	xchg   %ax,%ax
	if ( strcmp( hc->expnfilename, AUTH_FILE ) == 0 )
  41a120:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  41a125:	48 c1 e8 03          	shr    $0x3,%rax
  41a129:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41a130:	0f 85 3b 06 00 00    	jne    41a771 <really_start_request+0xff1>
  41a136:	48 8b bb f0 00 00 00 	mov    0xf0(%rbx),%rdi
  41a13d:	be c0 51 42 00       	mov    $0x4251c0,%esi
  41a142:	e8 f9 8c fe ff       	callq  402e40 <strcmp@plt>
  41a147:	85 c0                	test   %eax,%eax
  41a149:	0f 85 14 fc ff ff    	jne    419d63 <really_start_request+0x5e3>
	    syslog(
  41a14f:	48 8d ab d0 00 00 00 	lea    0xd0(%rbx),%rbp
  41a156:	49 89 ed             	mov    %rbp,%r13
  41a159:	49 c1 ed 03          	shr    $0x3,%r13
  41a15d:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  41a164:	00 
  41a165:	0f 85 8b 06 00 00    	jne    41a7f6 <really_start_request+0x1076>
  41a16b:	4c 8b bb d0 00 00 00 	mov    0xd0(%rbx),%r15
  41a172:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
  41a176:	e8 85 77 ff ff       	callq  411900 <httpd_ntoa>
  41a17b:	be 80 68 42 00       	mov    $0x426880,%esi
  41a180:	bf 05 00 00 00       	mov    $0x5,%edi
  41a185:	48 89 c2             	mov    %rax,%rdx
  41a188:	4c 89 f9             	mov    %r15,%rcx
  41a18b:	31 c0                	xor    %eax,%eax
  41a18d:	e8 ae 8a fe ff       	callq  402c40 <syslog@plt>
	    httpd_send_err(
  41a192:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  41a199:	00 
  41a19a:	0f 85 4e 06 00 00    	jne    41a7ee <really_start_request+0x106e>
  41a1a0:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  41a1a7:	41 b8 e0 68 42 00    	mov    $0x4268e0,%r8d
  41a1ad:	e9 4b ff ff ff       	jmpq   41a0fd <really_start_request+0x97d>
  41a1b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	      strcmp( &(hc->expnfilename[expnlen - sizeof(AUTH_FILE) + 1]), AUTH_FILE ) == 0 &&
  41a1b8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  41a1bd:	48 c1 e8 03          	shr    $0x3,%rax
  41a1c1:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41a1c8:	0f 85 99 05 00 00    	jne    41a767 <really_start_request+0xfe7>
  41a1ce:	4c 8b ab f0 00 00 00 	mov    0xf0(%rbx),%r13
  41a1d5:	be c0 51 42 00       	mov    $0x4251c0,%esi
  41a1da:	49 8d 7c 2d f7       	lea    -0x9(%r13,%rbp,1),%rdi
  41a1df:	e8 5c 8c fe ff       	callq  402e40 <strcmp@plt>
    else if ( expnlen >= sizeof(AUTH_FILE) &&
  41a1e4:	85 c0                	test   %eax,%eax
  41a1e6:	0f 85 77 fb ff ff    	jne    419d63 <really_start_request+0x5e3>
	      hc->expnfilename[expnlen - sizeof(AUTH_FILE)] == '/' )
  41a1ec:	49 8d 7c 2d f6       	lea    -0xa(%r13,%rbp,1),%rdi
  41a1f1:	48 89 f8             	mov    %rdi,%rax
  41a1f4:	48 89 fa             	mov    %rdi,%rdx
  41a1f7:	48 c1 e8 03          	shr    $0x3,%rax
  41a1fb:	83 e2 07             	and    $0x7,%edx
  41a1fe:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41a205:	38 d0                	cmp    %dl,%al
  41a207:	7f 77                	jg     41a280 <really_start_request+0xb00>
  41a209:	84 c0                	test   %al,%al
  41a20b:	74 73                	je     41a280 <really_start_request+0xb00>
  41a20d:	e8 fe 8e fe ff       	callq  403110 <__asan_report_load1@plt>
  41a212:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	     hc->origfilename[strlen( hc->origfilename ) - 1] != '/' )
  41a218:	4c 89 ef             	mov    %r13,%rdi
  41a21b:	e8 60 8a fe ff       	callq  402c80 <strlen@plt>
  41a220:	49 8d 7c 05 ff       	lea    -0x1(%r13,%rax,1),%rdi
  41a225:	48 89 f8             	mov    %rdi,%rax
  41a228:	48 89 fa             	mov    %rdi,%rdx
  41a22b:	48 c1 e8 03          	shr    $0x3,%rax
  41a22f:	83 e2 07             	and    $0x7,%edx
  41a232:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41a239:	38 d0                	cmp    %dl,%al
  41a23b:	7f 08                	jg     41a245 <really_start_request+0xac5>
  41a23d:	84 c0                	test   %al,%al
  41a23f:	0f 85 1d 05 00 00    	jne    41a762 <really_start_request+0xfe2>
	     strcmp( hc->origfilename, "." ) != 0 &&
  41a245:	80 3f 2f             	cmpb   $0x2f,(%rdi)
  41a248:	0f 84 24 f7 ff ff    	je     419972 <really_start_request+0x1f2>
	    send_dirredirect( hc );
  41a24e:	48 89 df             	mov    %rbx,%rdi
  41a251:	e8 2a 4e ff ff       	callq  40f080 <send_dirredirect>
	    return -1;
  41a256:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  41a25b:	e9 d7 f8 ff ff       	jmpq   419b37 <really_start_request+0x3b7>
	(void) strcpy( dirname, "." );
  41a260:	ba 02 00 00 00       	mov    $0x2,%edx
  41a265:	be c0 3a 42 00       	mov    $0x423ac0,%esi
  41a26a:	4c 89 ef             	mov    %r13,%rdi
  41a26d:	e8 ce 8e fe ff       	callq  403140 <memcpy@plt>
  41a272:	e9 c4 fa ff ff       	jmpq   419d3b <really_start_request+0x5bb>
  41a277:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41a27e:	00 00 
	      strcmp( &(hc->expnfilename[expnlen - sizeof(AUTH_FILE) + 1]), AUTH_FILE ) == 0 &&
  41a280:	80 3f 2f             	cmpb   $0x2f,(%rdi)
  41a283:	0f 85 da fa ff ff    	jne    419d63 <really_start_request+0x5e3>
  41a289:	e9 c1 fe ff ff       	jmpq   41a14f <really_start_request+0x9cf>
  41a28e:	66 90                	xchg   %ax,%ax
	send_mime(
  41a290:	48 8d bb f8 01 00 00 	lea    0x1f8(%rbx),%rdi
  41a297:	48 89 f8             	mov    %rdi,%rax
  41a29a:	48 c1 e8 03          	shr    $0x3,%rax
  41a29e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41a2a5:	0f 85 ff 04 00 00    	jne    41a7aa <really_start_request+0x102a>
  41a2ab:	48 8d bb f8 00 00 00 	lea    0xf8(%rbx),%rdi
  41a2b2:	4c 8b 8b f8 01 00 00 	mov    0x1f8(%rbx),%r9
  41a2b9:	48 89 f8             	mov    %rdi,%rax
  41a2bc:	48 c1 e8 03          	shr    $0x3,%rax
  41a2c0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41a2c7:	0f 85 1c 05 00 00    	jne    41a7e9 <really_start_request+0x1069>
  41a2cd:	48 8b 8b f8 00 00 00 	mov    0xf8(%rbx),%rcx
  41a2d4:	52                   	push   %rdx
  41a2d5:	be 30 01 00 00       	mov    $0x130,%esi
  41a2da:	41 b8 60 38 42 00    	mov    $0x423860,%r8d
  41a2e0:	6a ff                	pushq  $0xffffffffffffffff
  41a2e2:	ba 40 62 42 00       	mov    $0x426240,%edx
  41a2e7:	48 89 df             	mov    %rbx,%rdi
  41a2ea:	e8 81 32 ff ff       	callq  40d570 <send_mime>
  41a2ef:	59                   	pop    %rcx
    return 0;
  41a2f0:	31 c0                	xor    %eax,%eax
	send_mime(
  41a2f2:	5e                   	pop    %rsi
  41a2f3:	e9 3f f8 ff ff       	jmpq   419b37 <really_start_request+0x3b7>
  41a2f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41a2ff:	00 
	send_mime(
  41a300:	48 8d bb 88 02 00 00 	lea    0x288(%rbx),%rdi
  41a307:	48 89 f8             	mov    %rdi,%rax
  41a30a:	48 c1 e8 03          	shr    $0x3,%rax
  41a30e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41a315:	0f 85 c9 04 00 00    	jne    41a7e4 <really_start_request+0x1064>
  41a31b:	48 8d bb 60 02 00 00 	lea    0x260(%rbx),%rdi
  41a322:	48 8b 93 88 02 00 00 	mov    0x288(%rbx),%rdx
  41a329:	48 89 f8             	mov    %rdi,%rax
  41a32c:	48 c1 e8 03          	shr    $0x3,%rax
  41a330:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41a337:	0f 85 c6 04 00 00    	jne    41a803 <really_start_request+0x1083>
  41a33d:	48 8d bb f8 01 00 00 	lea    0x1f8(%rbx),%rdi
  41a344:	48 8b 83 60 02 00 00 	mov    0x260(%rbx),%rax
  41a34b:	48 89 f9             	mov    %rdi,%rcx
  41a34e:	48 c1 e9 03          	shr    $0x3,%rcx
  41a352:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41a359:	0f 85 9f 04 00 00    	jne    41a7fe <really_start_request+0x107e>
  41a35f:	48 8d bb f8 00 00 00 	lea    0xf8(%rbx),%rdi
  41a366:	4c 8b 8b f8 01 00 00 	mov    0x1f8(%rbx),%r9
  41a36d:	48 89 f9             	mov    %rdi,%rcx
  41a370:	48 c1 e9 03          	shr    $0x3,%rcx
  41a374:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41a37b:	0f 84 97 fc ff ff    	je     41a018 <really_start_request+0x898>
  41a381:	e8 ca 8e fe ff       	callq  403250 <__asan_report_load8@plt>
  41a386:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41a38d:	00 00 00 
	    httpd_send_err( hc, 404, err404title, "", err404form, hc->encodedurl );
  41a390:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
  41a397:	48 89 f8             	mov    %rdi,%rax
  41a39a:	48 c1 e8 03          	shr    $0x3,%rax
  41a39e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41a3a5:	0f 85 fa 03 00 00    	jne    41a7a5 <really_start_request+0x1025>
  41a3ab:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  41a3b2:	41 b8 80 5d 42 00    	mov    $0x425d80,%r8d
  41a3b8:	b9 60 38 42 00       	mov    $0x423860,%ecx
  41a3bd:	48 89 df             	mov    %rbx,%rdi
  41a3c0:	ba e0 5d 42 00       	mov    $0x425de0,%edx
  41a3c5:	be 94 01 00 00       	mov    $0x194,%esi
  41a3ca:	e8 f1 5a ff ff       	callq  40fec0 <httpd_send_err>
	    return -1;
  41a3cf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  41a3d4:	e9 5e f7 ff ff       	jmpq   419b37 <really_start_request+0x3b7>
	    syslog(
  41a3d9:	48 8d ab d0 00 00 00 	lea    0xd0(%rbx),%rbp
  41a3e0:	49 89 ed             	mov    %rbp,%r13
  41a3e3:	49 c1 ed 03          	shr    $0x3,%r13
  41a3e7:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  41a3ee:	00 
  41a3ef:	0f 85 9e 03 00 00    	jne    41a793 <really_start_request+0x1013>
  41a3f5:	4c 8b bb d0 00 00 00 	mov    0xd0(%rbx),%r15
  41a3fc:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
  41a400:	e8 fb 74 ff ff       	callq  411900 <httpd_ntoa>
  41a405:	be a0 67 42 00       	mov    $0x4267a0,%esi
  41a40a:	bf 06 00 00 00       	mov    $0x6,%edi
  41a40f:	48 89 c2             	mov    %rax,%rdx
  41a412:	4c 89 f9             	mov    %r15,%rcx
  41a415:	31 c0                	xor    %eax,%eax
  41a417:	e8 24 88 fe ff       	callq  402c40 <syslog@plt>
	    httpd_send_err(
  41a41c:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  41a423:	00 
  41a424:	0f 85 61 03 00 00    	jne    41a78b <really_start_request+0x100b>
  41a42a:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  41a431:	41 b8 00 68 42 00    	mov    $0x426800,%r8d
  41a437:	e9 c1 fc ff ff       	jmpq   41a0fd <really_start_request+0x97d>
    if ( ! ( hc->sb.st_mode & ( S_IROTH | S_IXOTH ) ) )
  41a43c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41a441:	e8 8a 89 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    if ( hc->method != METHOD_GET && hc->method != METHOD_HEAD &&
  41a446:	48 89 cf             	mov    %rcx,%rdi
  41a449:	e8 82 89 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( hc->pathinfo[0] != '\0' )
  41a44e:	e8 bd 8c fe ff       	callq  403110 <__asan_report_load1@plt>
	if ( ! ( hc->sb.st_mode & S_IROTH ) )
  41a453:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41a458:	e8 73 89 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41a45d:	0f 1f 00             	nopl   (%rax)
	httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  41a460:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
  41a467:	48 89 f8             	mov    %rdi,%rax
  41a46a:	48 c1 e8 03          	shr    $0x3,%rax
  41a46e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41a475:	0f 85 43 03 00 00    	jne    41a7be <really_start_request+0x103e>
	    httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  41a47b:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  41a482:	41 b8 80 4d 42 00    	mov    $0x424d80,%r8d
  41a488:	b9 60 38 42 00       	mov    $0x423860,%ecx
  41a48d:	48 89 df             	mov    %rbx,%rdi
  41a490:	ba 00 4e 42 00       	mov    $0x424e00,%edx
  41a495:	be f4 01 00 00       	mov    $0x1f4,%esi
  41a49a:	e8 21 5a ff ff       	callq  40fec0 <httpd_send_err>
	    return -1;
  41a49f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  41a4a4:	e9 8e f6 ff ff       	jmpq   419b37 <really_start_request+0x3b7>
  41a4a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	return cgi( hc );
  41a4b0:	48 89 df             	mov    %rbx,%rdi
  41a4b3:	e8 78 ef ff ff       	callq  419430 <cgi>
  41a4b8:	e9 7a f6 ff ff       	jmpq   419b37 <really_start_request+0x3b7>
	httpd_send_err(
  41a4bd:	e8 5e 5d ff ff       	callq  410220 <httpd_method_str>
  41a4c2:	41 b8 20 47 42 00    	mov    $0x424720,%r8d
  41a4c8:	b9 60 38 42 00       	mov    $0x423860,%ecx
  41a4cd:	48 89 df             	mov    %rbx,%rdi
  41a4d0:	49 89 c1             	mov    %rax,%r9
  41a4d3:	ba a0 47 42 00       	mov    $0x4247a0,%edx
  41a4d8:	be f5 01 00 00       	mov    $0x1f5,%esi
  41a4dd:	e8 de 59 ff ff       	callq  40fec0 <httpd_send_err>
	return -1;
  41a4e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  41a4e7:	e9 4b f6 ff ff       	jmpq   419b37 <really_start_request+0x3b7>
	syslog(
  41a4ec:	48 8d ab d0 00 00 00 	lea    0xd0(%rbx),%rbp
  41a4f3:	49 89 ed             	mov    %rbp,%r13
  41a4f6:	49 c1 ed 03          	shr    $0x3,%r13
  41a4fa:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  41a501:	00 
  41a502:	0f 85 08 03 00 00    	jne    41a810 <really_start_request+0x1090>
  41a508:	4c 8b bb d0 00 00 00 	mov    0xd0(%rbx),%r15
  41a50f:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
  41a513:	e8 e8 73 ff ff       	callq  411900 <httpd_ntoa>
  41a518:	be c0 65 42 00       	mov    $0x4265c0,%esi
  41a51d:	bf 06 00 00 00       	mov    $0x6,%edi
  41a522:	48 89 c2             	mov    %rax,%rdx
  41a525:	4c 89 f9             	mov    %r15,%rcx
  41a528:	31 c0                	xor    %eax,%eax
  41a52a:	e8 11 87 fe ff       	callq  402c40 <syslog@plt>
	httpd_send_err(
  41a52f:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  41a536:	00 
  41a537:	0f 85 cb 02 00 00    	jne    41a808 <really_start_request+0x1088>
  41a53d:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  41a544:	41 b8 20 66 42 00    	mov    $0x426620,%r8d
  41a54a:	e9 ae fb ff ff       	jmpq   41a0fd <really_start_request+0x97d>
	    syslog(
  41a54f:	48 8d ab d0 00 00 00 	lea    0xd0(%rbx),%rbp
  41a556:	49 89 ed             	mov    %rbp,%r13
  41a559:	49 c1 ed 03          	shr    $0x3,%r13
  41a55d:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  41a564:	00 
  41a565:	0f 85 c5 02 00 00    	jne    41a830 <really_start_request+0x10b0>
  41a56b:	4c 8b bb d0 00 00 00 	mov    0xd0(%rbx),%r15
  41a572:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
  41a576:	e8 85 73 ff ff       	callq  411900 <httpd_ntoa>
  41a57b:	be a0 66 42 00       	mov    $0x4266a0,%esi
  41a580:	bf 06 00 00 00       	mov    $0x6,%edi
  41a585:	48 89 c2             	mov    %rax,%rdx
  41a588:	4c 89 f9             	mov    %r15,%rcx
  41a58b:	31 c0                	xor    %eax,%eax
  41a58d:	e8 ae 86 fe ff       	callq  402c40 <syslog@plt>
	    httpd_send_err(
  41a592:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  41a599:	00 
  41a59a:	0f 85 88 02 00 00    	jne    41a828 <really_start_request+0x10a8>
  41a5a0:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  41a5a7:	41 b8 20 67 42 00    	mov    $0x426720,%r8d
  41a5ad:	e9 4b fb ff ff       	jmpq   41a0fd <really_start_request+0x97d>
	    httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  41a5b2:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
  41a5b9:	48 89 f8             	mov    %rdi,%rax
  41a5bc:	48 c1 e8 03          	shr    $0x3,%rax
  41a5c0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41a5c7:	0f 84 ae fe ff ff    	je     41a47b <really_start_request+0xcfb>
  41a5cd:	e8 7e 8c fe ff       	callq  403250 <__asan_report_load8@plt>
  41a5d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	syslog(
  41a5d8:	48 8d ab d0 00 00 00 	lea    0xd0(%rbx),%rbp
  41a5df:	49 89 ed             	mov    %rbp,%r13
  41a5e2:	49 c1 ed 03          	shr    $0x3,%r13
  41a5e6:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  41a5ed:	00 
  41a5ee:	0f 85 2c 02 00 00    	jne    41a820 <really_start_request+0x10a0>
  41a5f4:	4c 8b bb d0 00 00 00 	mov    0xd0(%rbx),%r15
  41a5fb:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
  41a5ff:	e8 fc 72 ff ff       	callq  411900 <httpd_ntoa>
  41a604:	be 60 6a 42 00       	mov    $0x426a60,%esi
  41a609:	bf 06 00 00 00       	mov    $0x6,%edi
  41a60e:	48 89 c2             	mov    %rax,%rdx
  41a611:	4c 89 f9             	mov    %r15,%rcx
  41a614:	31 c0                	xor    %eax,%eax
  41a616:	e8 25 86 fe ff       	callq  402c40 <syslog@plt>
	httpd_send_err(
  41a61b:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  41a622:	00 
  41a623:	0f 85 ef 01 00 00    	jne    41a818 <really_start_request+0x1098>
  41a629:	4c 8b 8b d0 00 00 00 	mov    0xd0(%rbx),%r9
  41a630:	41 b8 c0 6a 42 00    	mov    $0x426ac0,%r8d
  41a636:	e9 c2 fa ff ff       	jmpq   41a0fd <really_start_request+0x97d>
	    httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  41a63b:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
  41a642:	48 89 f8             	mov    %rdi,%rax
  41a645:	48 c1 e8 03          	shr    $0x3,%rax
  41a649:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41a650:	0f 84 25 fe ff ff    	je     41a47b <really_start_request+0xcfb>
  41a656:	e8 f5 8b fe ff       	callq  403250 <__asan_report_load8@plt>
  41a65b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	    (void) strcpy( indexname, hc->expnfilename );
  41a660:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41a665:	e8 e6 8b fe ff       	callq  403250 <__asan_report_load8@plt>
	    if ( indxlen == 0 || indexname[indxlen - 1] != '/' )
  41a66a:	e8 a1 8a fe ff       	callq  403110 <__asan_report_load1@plt>
  41a66f:	48 89 ef             	mov    %rbp,%rdi
  41a672:	e8 d9 8b fe ff       	callq  403250 <__asan_report_load8@plt>
    {
  41a677:	48 bb f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rbx
  41a67e:	f5 f5 f5 
  41a681:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
  41a688:	45 
  41a689:	49 89 9e 00 80 ff 7f 	mov    %rbx,0x7fff8000(%r14)
  41a690:	41 c7 86 08 80 ff 7f 	movl   $0xf5f5f5f5,0x7fff8008(%r14)
  41a697:	f5 f5 f5 f5 
  41a69b:	e9 bb f4 ff ff       	jmpq   419b5b <really_start_request+0x3db>
  41a6a0:	bf 60 00 00 00       	mov    $0x60,%edi
  41a6a5:	e8 06 87 fe ff       	callq  402db0 <__asan_stack_malloc_1@plt>
  41a6aa:	48 85 c0             	test   %rax,%rax
  41a6ad:	4c 0f 45 e0          	cmovne %rax,%r12
  41a6b1:	e9 f8 f0 ff ff       	jmpq   4197ae <really_start_request+0x2e>
		indexname[0] = '\0';
  41a6b6:	4c 89 e7             	mov    %r12,%rdi
  41a6b9:	e8 72 8a fe ff       	callq  403130 <__asan_report_store1@plt>
    expnlen = strlen( hc->expnfilename );
  41a6be:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41a6c3:	e8 88 8b fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( auth_check( hc, hc->expnfilename ) == -1 )
  41a6c8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41a6cd:	e8 7e 8b fe ff       	callq  403250 <__asan_report_load8@plt>
  41a6d2:	e8 79 8b fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->got_range &&
  41a6d7:	e8 f4 86 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	if ( strcmp( hc->origfilename, "" ) != 0 &&
  41a6dc:	4c 89 ef             	mov    %r13,%rdi
  41a6df:	e8 2c 8a fe ff       	callq  403110 <__asan_report_load1@plt>
    else if ( hc->if_modified_since != (time_t) -1 &&
  41a6e4:	e8 67 8b fe ff       	callq  403250 <__asan_report_load8@plt>
	 hc->if_modified_since >= hc->sb.st_mtime )
  41a6e9:	e8 62 8b fe ff       	callq  403250 <__asan_report_load8@plt>
	 ( hc->last_byte_index == -1 || hc->last_byte_index >= hc->sb.st_size ) )
  41a6ee:	e8 5d 8b fe ff       	callq  403250 <__asan_report_load8@plt>
	send_mime(
  41a6f3:	e8 58 8b fe ff       	callq  403250 <__asan_report_load8@plt>
  41a6f8:	e8 53 8b fe ff       	callq  403250 <__asan_report_load8@plt>
  41a6fd:	e8 4e 8b fe ff       	callq  403250 <__asan_report_load8@plt>
  41a702:	e8 49 8b fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->pathinfo[0] != '\0' )
  41a707:	e8 44 8b fe ff       	callq  403250 <__asan_report_load8@plt>
  41a70c:	e8 ff 89 fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( hc->hs->cgi_pattern != (char*) 0 &&
  41a711:	e8 3a 8b fe ff       	callq  403250 <__asan_report_load8@plt>
  41a716:	e8 35 8b fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( hc->method == METHOD_HEAD )
  41a71b:	48 89 cf             	mov    %rcx,%rdi
  41a71e:	e8 ad 86 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	hc->file_address = mmc_map( hc->expnfilename, &(hc->sb), nowP );
  41a723:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41a728:	e8 23 8b fe ff       	callq  403250 <__asan_report_load8@plt>
	*cp = '\0';
  41a72d:	48 89 c7             	mov    %rax,%rdi
  41a730:	e8 fb 89 fe ff       	callq  403130 <__asan_report_store1@plt>
	if ( hc->pathinfo[0] != '\0' )
  41a735:	e8 16 8b fe ff       	callq  403250 <__asan_report_load8@plt>
    (void) strcpy( dirname, hc->expnfilename );
  41a73a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41a73f:	e8 0c 8b fe ff       	callq  403250 <__asan_report_load8@plt>
  41a744:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41a749:	e8 82 86 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	hc->file_address = mmc_map( hc->expnfilename, &(hc->sb), nowP );
  41a74e:	e8 4d 88 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	if ( strcmp( hc->origfilename, "" ) != 0 &&
  41a753:	e8 f8 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	 match( hc->hs->cgi_pattern, hc->expnfilename ) )
  41a758:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41a75d:	e8 ee 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	     hc->origfilename[strlen( hc->origfilename ) - 1] != '/' )
  41a762:	e8 a9 89 fe ff       	callq  403110 <__asan_report_load1@plt>
	      strcmp( &(hc->expnfilename[expnlen - sizeof(AUTH_FILE) + 1]), AUTH_FILE ) == 0 &&
  41a767:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41a76c:	e8 df 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( strcmp( hc->expnfilename, AUTH_FILE ) == 0 )
  41a771:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41a776:	e8 d5 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	httpd_send_err(
  41a77b:	48 89 ef             	mov    %rbp,%rdi
  41a77e:	e8 cd 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	syslog(
  41a783:	48 89 ef             	mov    %rbp,%rdi
  41a786:	e8 c5 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	    httpd_send_err(
  41a78b:	48 89 ef             	mov    %rbp,%rdi
  41a78e:	e8 bd 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	    syslog(
  41a793:	48 89 ef             	mov    %rbp,%rdi
  41a796:	e8 b5 8a fe ff       	callq  403250 <__asan_report_load8@plt>
  41a79b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41a7a0:	e8 2b 86 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	    httpd_send_err( hc, 404, err404title, "", err404form, hc->encodedurl );
  41a7a5:	e8 a6 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	send_mime(
  41a7aa:	e8 a1 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	cp = expand_symlinks( indexname, &pi, hc->hs->no_symlink_check, hc->tildemapped );
  41a7af:	e8 9c 8a fe ff       	callq  403250 <__asan_report_load8@plt>
  41a7b4:	e8 17 86 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41a7b9:	e8 12 86 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	httpd_send_err( hc, 500, err500title, "", err500form, hc->encodedurl );
  41a7be:	e8 8d 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( ! ( hc->sb.st_mode & ( S_IROTH | S_IXOTH ) ) )
  41a7c3:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41a7c8:	e8 03 86 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	(void) strcpy( hc->expnfilename, cp );
  41a7cd:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41a7d2:	e8 79 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( cp == (char*) 0 || pi[0] != '\0' )
  41a7d7:	e8 34 89 fe ff       	callq  403110 <__asan_report_load1@plt>
  41a7dc:	48 89 ef             	mov    %rbp,%rdi
  41a7df:	e8 6c 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	send_mime(
  41a7e4:	e8 67 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	send_mime(
  41a7e9:	e8 62 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	    httpd_send_err(
  41a7ee:	48 89 ef             	mov    %rbp,%rdi
  41a7f1:	e8 5a 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	    syslog(
  41a7f6:	48 89 ef             	mov    %rbp,%rdi
  41a7f9:	e8 52 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	send_mime(
  41a7fe:	e8 4d 8a fe ff       	callq  403250 <__asan_report_load8@plt>
  41a803:	e8 48 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	httpd_send_err(
  41a808:	48 89 ef             	mov    %rbp,%rdi
  41a80b:	e8 40 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	syslog(
  41a810:	48 89 ef             	mov    %rbp,%rdi
  41a813:	e8 38 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	httpd_send_err(
  41a818:	48 89 ef             	mov    %rbp,%rdi
  41a81b:	e8 30 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	syslog(
  41a820:	48 89 ef             	mov    %rbp,%rdi
  41a823:	e8 28 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	    httpd_send_err(
  41a828:	48 89 ef             	mov    %rbp,%rdi
  41a82b:	e8 20 8a fe ff       	callq  403250 <__asan_report_load8@plt>
	    syslog(
  41a830:	48 89 ef             	mov    %rbp,%rdi
  41a833:	e8 18 8a fe ff       	callq  403250 <__asan_report_load8@plt>
  41a838:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41a83f:	00 

000000000041a840 <httpd_start_request>:
    r = really_start_request( hc, nowP );
  41a840:	e9 3b ef ff ff       	jmpq   419780 <really_start_request>
  41a845:	90                   	nop
  41a846:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41a84d:	00 00 00 

000000000041a850 <httpd_logstats>:

/* Generate debugging statistics syslog message. */
void
httpd_logstats( long secs )
    {
    if ( str_alloc_count > 0 )
  41a850:	8b 15 0a 84 22 00    	mov    0x22840a(%rip),%edx        # 642c60 <str_alloc_count>
  41a856:	85 d2                	test   %edx,%edx
  41a858:	7f 06                	jg     41a860 <httpd_logstats+0x10>
	syslog( LOG_INFO,
	    "  libhttpd - %d strings allocated, %lu bytes (%g bytes/str)",
	    str_alloc_count, (unsigned long) str_alloc_size,
	    (float) str_alloc_size / str_alloc_count );
    }
  41a85a:	c3                   	retq   
  41a85b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	    (float) str_alloc_size / str_alloc_count );
  41a860:	48 8b 0d b9 83 22 00 	mov    0x2283b9(%rip),%rcx        # 642c20 <str_alloc_size>
  41a867:	48 85 c9             	test   %rcx,%rcx
  41a86a:	78 34                	js     41a8a0 <httpd_logstats+0x50>
  41a86c:	66 0f ef c0          	pxor   %xmm0,%xmm0
  41a870:	f3 48 0f 2a c1       	cvtsi2ss %rcx,%xmm0
  41a875:	66 0f ef c9          	pxor   %xmm1,%xmm1
	syslog( LOG_INFO,
  41a879:	be 60 6b 42 00       	mov    $0x426b60,%esi
  41a87e:	bf 06 00 00 00       	mov    $0x6,%edi
  41a883:	b8 01 00 00 00       	mov    $0x1,%eax
	    (float) str_alloc_size / str_alloc_count );
  41a888:	f3 0f 2a ca          	cvtsi2ss %edx,%xmm1
  41a88c:	f3 0f 5e c1          	divss  %xmm1,%xmm0
	syslog( LOG_INFO,
  41a890:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
  41a894:	e9 a7 83 fe ff       	jmpq   402c40 <syslog@plt>
  41a899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    (float) str_alloc_size / str_alloc_count );
  41a8a0:	48 89 c8             	mov    %rcx,%rax
  41a8a3:	48 89 ce             	mov    %rcx,%rsi
  41a8a6:	66 0f ef c0          	pxor   %xmm0,%xmm0
  41a8aa:	48 d1 e8             	shr    %rax
  41a8ad:	83 e6 01             	and    $0x1,%esi
  41a8b0:	48 09 f0             	or     %rsi,%rax
  41a8b3:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
  41a8b8:	f3 0f 58 c0          	addss  %xmm0,%xmm0
  41a8bc:	eb b7                	jmp    41a875 <httpd_logstats+0x25>
  41a8be:	66 90                	xchg   %ax,%ax

000000000041a8c0 <hash>:
static unsigned int
hash( ino_t ino, dev_t dev, off_t size, time_t ctime )
    {
    unsigned int h = 177573;

    h ^= ino;
  41a8c0:	81 f7 a5 b5 02 00    	xor    $0x2b5a5,%edi
    h += h << 5;
    h ^= size;
    h += h << 5;
    h ^= ctime;

    return h & hash_mask;
  41a8c6:	8b 05 74 84 22 00    	mov    0x228474(%rip),%eax        # 642d40 <hash_mask>
    h += h << 5;
  41a8cc:	41 89 f8             	mov    %edi,%r8d
  41a8cf:	41 c1 e0 05          	shl    $0x5,%r8d
  41a8d3:	44 01 c7             	add    %r8d,%edi
    h ^= dev;
  41a8d6:	31 fe                	xor    %edi,%esi
    h += h << 5;
  41a8d8:	41 89 f0             	mov    %esi,%r8d
  41a8db:	41 c1 e0 05          	shl    $0x5,%r8d
  41a8df:	44 01 c6             	add    %r8d,%esi
    h ^= size;
  41a8e2:	31 f2                	xor    %esi,%edx
    h += h << 5;
  41a8e4:	89 d7                	mov    %edx,%edi
  41a8e6:	c1 e7 05             	shl    $0x5,%edi
  41a8e9:	01 fa                	add    %edi,%edx
    h ^= ctime;
  41a8eb:	31 ca                	xor    %ecx,%edx
    return h & hash_mask;
  41a8ed:	21 d0                	and    %edx,%eax
    }
  41a8ef:	c3                   	retq   

000000000041a8f0 <find_hash>:
    {
  41a8f0:	41 54                	push   %r12
  41a8f2:	49 89 f9             	mov    %rdi,%r9
  41a8f5:	49 89 d3             	mov    %rdx,%r11
  41a8f8:	49 89 f2             	mov    %rsi,%r10
  41a8fb:	55                   	push   %rbp
  41a8fc:	53                   	push   %rbx
  41a8fd:	48 89 cb             	mov    %rcx,%rbx
    h = hash( ino, dev, size, ctime );
  41a900:	e8 bb ff ff ff       	callq  41a8c0 <hash>
    he = ( h + hash_size - 1 ) & hash_mask;
  41a905:	8b 15 75 84 22 00    	mov    0x228475(%rip),%edx        # 642d80 <hash_size>
	m = hash_table[i];
  41a90b:	4c 8b 25 ae 84 22 00 	mov    0x2284ae(%rip),%r12        # 642dc0 <hash_table>
    he = ( h + hash_size - 1 ) & hash_mask;
  41a912:	8b 2d 28 84 22 00    	mov    0x228428(%rip),%ebp        # 642d40 <hash_mask>
  41a918:	44 8d 44 10 ff       	lea    -0x1(%rax,%rdx,1),%r8d
	m = hash_table[i];
  41a91d:	89 c2                	mov    %eax,%edx
  41a91f:	49 8d 3c d4          	lea    (%r12,%rdx,8),%rdi
    he = ( h + hash_size - 1 ) & hash_mask;
  41a923:	41 21 e8             	and    %ebp,%r8d
	m = hash_table[i];
  41a926:	48 89 fa             	mov    %rdi,%rdx
  41a929:	48 c1 ea 03          	shr    $0x3,%rdx
  41a92d:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41a934:	0f 85 11 01 00 00    	jne    41aa4b <find_hash+0x15b>
  41a93a:	48 8b 0f             	mov    (%rdi),%rcx
	if ( m == (Map*) 0 )
  41a93d:	48 85 c9             	test   %rcx,%rcx
  41a940:	0f 84 da 00 00 00    	je     41aa20 <find_hash+0x130>
    for ( i = h; ; i = ( i + 1 ) & hash_mask )
  41a946:	89 c2                	mov    %eax,%edx
  41a948:	eb 3a                	jmp    41a984 <find_hash+0x94>
  41a94a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	if ( i == he )
  41a950:	41 39 d0             	cmp    %edx,%r8d
  41a953:	0f 84 c7 00 00 00    	je     41aa20 <find_hash+0x130>
    for ( i = h; ; i = ( i + 1 ) & hash_mask )
  41a959:	83 c2 01             	add    $0x1,%edx
  41a95c:	21 ea                	and    %ebp,%edx
	m = hash_table[i];
  41a95e:	89 d1                	mov    %edx,%ecx
  41a960:	49 8d 3c cc          	lea    (%r12,%rcx,8),%rdi
  41a964:	48 89 f9             	mov    %rdi,%rcx
  41a967:	48 c1 e9 03          	shr    $0x3,%rcx
  41a96b:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41a972:	0f 85 b7 00 00 00    	jne    41aa2f <find_hash+0x13f>
  41a978:	48 8b 0f             	mov    (%rdi),%rcx
	if ( m == (Map*) 0 )
  41a97b:	48 85 c9             	test   %rcx,%rcx
  41a97e:	0f 84 9c 00 00 00    	je     41aa20 <find_hash+0x130>
	if ( m->hash == h && m->ino == ino && m->dev == dev &&
  41a984:	48 8d 79 38          	lea    0x38(%rcx),%rdi
  41a988:	48 89 fe             	mov    %rdi,%rsi
  41a98b:	48 c1 ee 03          	shr    $0x3,%rsi
  41a98f:	0f b6 b6 00 80 ff 7f 	movzbl 0x7fff8000(%rsi),%esi
  41a996:	40 84 f6             	test   %sil,%sil
  41a999:	74 0a                	je     41a9a5 <find_hash+0xb5>
  41a99b:	40 80 fe 03          	cmp    $0x3,%sil
  41a99f:	0f 8e 85 00 00 00    	jle    41aa2a <find_hash+0x13a>
  41a9a5:	39 41 38             	cmp    %eax,0x38(%rcx)
  41a9a8:	75 a6                	jne    41a950 <find_hash+0x60>
  41a9aa:	48 89 ce             	mov    %rcx,%rsi
  41a9ad:	48 c1 ee 03          	shr    $0x3,%rsi
  41a9b1:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  41a9b8:	75 7a                	jne    41aa34 <find_hash+0x144>
  41a9ba:	4c 39 09             	cmp    %r9,(%rcx)
  41a9bd:	75 91                	jne    41a950 <find_hash+0x60>
  41a9bf:	48 8d 79 08          	lea    0x8(%rcx),%rdi
  41a9c3:	48 89 fe             	mov    %rdi,%rsi
  41a9c6:	48 c1 ee 03          	shr    $0x3,%rsi
  41a9ca:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  41a9d1:	75 69                	jne    41aa3c <find_hash+0x14c>
  41a9d3:	4c 39 51 08          	cmp    %r10,0x8(%rcx)
  41a9d7:	0f 85 73 ff ff ff    	jne    41a950 <find_hash+0x60>
	     m->size == size && m->ctime == ctime )
  41a9dd:	48 8d 79 10          	lea    0x10(%rcx),%rdi
  41a9e1:	48 89 fe             	mov    %rdi,%rsi
  41a9e4:	48 c1 ee 03          	shr    $0x3,%rsi
  41a9e8:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  41a9ef:	75 50                	jne    41aa41 <find_hash+0x151>
	if ( m->hash == h && m->ino == ino && m->dev == dev &&
  41a9f1:	4c 39 59 10          	cmp    %r11,0x10(%rcx)
  41a9f5:	0f 85 55 ff ff ff    	jne    41a950 <find_hash+0x60>
	     m->size == size && m->ctime == ctime )
  41a9fb:	48 8d 79 18          	lea    0x18(%rcx),%rdi
  41a9ff:	48 89 fe             	mov    %rdi,%rsi
  41aa02:	48 c1 ee 03          	shr    $0x3,%rsi
  41aa06:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  41aa0d:	75 37                	jne    41aa46 <find_hash+0x156>
  41aa0f:	48 39 59 18          	cmp    %rbx,0x18(%rcx)
  41aa13:	74 0d                	je     41aa22 <find_hash+0x132>
	if ( i == he )
  41aa15:	41 39 d0             	cmp    %edx,%r8d
  41aa18:	0f 85 3b ff ff ff    	jne    41a959 <find_hash+0x69>
  41aa1e:	66 90                	xchg   %ax,%ax
    return (Map*) 0;
  41aa20:	31 c9                	xor    %ecx,%ecx
    }
  41aa22:	5b                   	pop    %rbx
  41aa23:	48 89 c8             	mov    %rcx,%rax
  41aa26:	5d                   	pop    %rbp
  41aa27:	41 5c                	pop    %r12
  41aa29:	c3                   	retq   
	if ( m->hash == h && m->ino == ino && m->dev == dev &&
  41aa2a:	e8 a1 83 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	m = hash_table[i];
  41aa2f:	e8 1c 88 fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( m->hash == h && m->ino == ino && m->dev == dev &&
  41aa34:	48 89 cf             	mov    %rcx,%rdi
  41aa37:	e8 14 88 fe ff       	callq  403250 <__asan_report_load8@plt>
  41aa3c:	e8 0f 88 fe ff       	callq  403250 <__asan_report_load8@plt>
	     m->size == size && m->ctime == ctime )
  41aa41:	e8 0a 88 fe ff       	callq  403250 <__asan_report_load8@plt>
  41aa46:	e8 05 88 fe ff       	callq  403250 <__asan_report_load8@plt>
	m = hash_table[i];
  41aa4b:	e8 00 88 fe ff       	callq  403250 <__asan_report_load8@plt>

000000000041aa50 <add_hash>:
    {
  41aa50:	49 89 f9             	mov    %rdi,%r9
    h = hash( m->ino, m->dev, m->size, m->ctime );
  41aa53:	48 83 c7 18          	add    $0x18,%rdi
    {
  41aa57:	48 83 ec 08          	sub    $0x8,%rsp
    h = hash( m->ino, m->dev, m->size, m->ctime );
  41aa5b:	48 89 f8             	mov    %rdi,%rax
  41aa5e:	48 c1 e8 03          	shr    $0x3,%rax
  41aa62:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41aa69:	0f 85 59 01 00 00    	jne    41abc8 <add_hash+0x178>
  41aa6f:	49 8d 79 10          	lea    0x10(%r9),%rdi
  41aa73:	49 8b 49 18          	mov    0x18(%r9),%rcx
  41aa77:	48 89 f8             	mov    %rdi,%rax
  41aa7a:	48 c1 e8 03          	shr    $0x3,%rax
  41aa7e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41aa85:	0f 85 38 01 00 00    	jne    41abc3 <add_hash+0x173>
  41aa8b:	49 8d 79 08          	lea    0x8(%r9),%rdi
  41aa8f:	49 8b 51 10          	mov    0x10(%r9),%rdx
  41aa93:	48 89 f8             	mov    %rdi,%rax
  41aa96:	48 c1 e8 03          	shr    $0x3,%rax
  41aa9a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41aaa1:	0f 85 2e 01 00 00    	jne    41abd5 <add_hash+0x185>
  41aaa7:	4c 89 c8             	mov    %r9,%rax
  41aaaa:	49 8b 71 08          	mov    0x8(%r9),%rsi
  41aaae:	48 c1 e8 03          	shr    $0x3,%rax
  41aab2:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41aab9:	0f 85 0e 01 00 00    	jne    41abcd <add_hash+0x17d>
  41aabf:	49 8b 39             	mov    (%r9),%rdi
  41aac2:	e8 f9 fd ff ff       	callq  41a8c0 <hash>
    he = ( h + hash_size - 1 ) & hash_mask;
  41aac7:	8b 15 b3 82 22 00    	mov    0x2282b3(%rip),%edx        # 642d80 <hash_size>
	if ( hash_table[i] == (Map*) 0 )
  41aacd:	4c 8b 15 ec 82 22 00 	mov    0x2282ec(%rip),%r10        # 642dc0 <hash_table>
    he = ( h + hash_size - 1 ) & hash_mask;
  41aad4:	44 8b 05 65 82 22 00 	mov    0x228265(%rip),%r8d        # 642d40 <hash_mask>
  41aadb:	8d 74 10 ff          	lea    -0x1(%rax,%rdx,1),%esi
	if ( hash_table[i] == (Map*) 0 )
  41aadf:	89 c2                	mov    %eax,%edx
  41aae1:	49 8d 3c d2          	lea    (%r10,%rdx,8),%rdi
    he = ( h + hash_size - 1 ) & hash_mask;
  41aae5:	44 21 c6             	and    %r8d,%esi
	if ( hash_table[i] == (Map*) 0 )
  41aae8:	48 89 fa             	mov    %rdi,%rdx
  41aaeb:	48 c1 ea 03          	shr    $0x3,%rdx
  41aaef:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41aaf6:	0f 85 de 00 00 00    	jne    41abda <add_hash+0x18a>
  41aafc:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  41ab00:	0f 84 b4 00 00 00    	je     41abba <add_hash+0x16a>
	if ( i == he )
  41ab06:	39 f0                	cmp    %esi,%eax
  41ab08:	0f 84 a2 00 00 00    	je     41abb0 <add_hash+0x160>
  41ab0e:	89 c2                	mov    %eax,%edx
  41ab10:	eb 0e                	jmp    41ab20 <add_hash+0xd0>
  41ab12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41ab18:	39 d6                	cmp    %edx,%esi
  41ab1a:	0f 84 90 00 00 00    	je     41abb0 <add_hash+0x160>
    for ( i = h; ; i = ( i + 1 ) & hash_mask )
  41ab20:	83 c2 01             	add    $0x1,%edx
  41ab23:	44 21 c2             	and    %r8d,%edx
	if ( hash_table[i] == (Map*) 0 )
  41ab26:	89 d1                	mov    %edx,%ecx
  41ab28:	49 8d 3c ca          	lea    (%r10,%rcx,8),%rdi
  41ab2c:	48 89 f9             	mov    %rdi,%rcx
  41ab2f:	48 c1 e9 03          	shr    $0x3,%rcx
  41ab33:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41ab3a:	0f 85 7e 00 00 00    	jne    41abbe <add_hash+0x16e>
  41ab40:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  41ab44:	75 d2                	jne    41ab18 <add_hash+0xc8>
	    hash_table[i] = m;
  41ab46:	48 89 f9             	mov    %rdi,%rcx
  41ab49:	48 c1 e9 03          	shr    $0x3,%rcx
  41ab4d:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41ab54:	0f 85 8a 00 00 00    	jne    41abe4 <add_hash+0x194>
  41ab5a:	4c 89 0f             	mov    %r9,(%rdi)
	    m->hash = h;
  41ab5d:	49 8d 79 38          	lea    0x38(%r9),%rdi
  41ab61:	48 89 f9             	mov    %rdi,%rcx
  41ab64:	48 c1 e9 03          	shr    $0x3,%rcx
  41ab68:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  41ab6f:	84 c9                	test   %cl,%cl
  41ab71:	74 05                	je     41ab78 <add_hash+0x128>
  41ab73:	80 f9 03             	cmp    $0x3,%cl
  41ab76:	7e 67                	jle    41abdf <add_hash+0x18f>
	    m->hash_idx = i;
  41ab78:	49 8d 79 3c          	lea    0x3c(%r9),%rdi
	    m->hash = h;
  41ab7c:	41 89 41 38          	mov    %eax,0x38(%r9)
	    m->hash_idx = i;
  41ab80:	48 89 f8             	mov    %rdi,%rax
  41ab83:	48 c1 e8 03          	shr    $0x3,%rax
  41ab87:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  41ab8e:	48 89 f8             	mov    %rdi,%rax
  41ab91:	83 e0 07             	and    $0x7,%eax
  41ab94:	83 c0 03             	add    $0x3,%eax
  41ab97:	38 c8                	cmp    %cl,%al
  41ab99:	7c 04                	jl     41ab9f <add_hash+0x14f>
  41ab9b:	84 c9                	test   %cl,%cl
  41ab9d:	75 4a                	jne    41abe9 <add_hash+0x199>
  41ab9f:	41 89 51 3c          	mov    %edx,0x3c(%r9)
	    return 0;
  41aba3:	31 c0                	xor    %eax,%eax
    }
  41aba5:	48 83 c4 08          	add    $0x8,%rsp
  41aba9:	c3                   	retq   
  41abaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    return -1;
  41abb0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    }
  41abb5:	48 83 c4 08          	add    $0x8,%rsp
  41abb9:	c3                   	retq   
    h = hash( m->ino, m->dev, m->size, m->ctime );
  41abba:	89 c2                	mov    %eax,%edx
  41abbc:	eb 88                	jmp    41ab46 <add_hash+0xf6>
	if ( hash_table[i] == (Map*) 0 )
  41abbe:	e8 8d 86 fe ff       	callq  403250 <__asan_report_load8@plt>
    h = hash( m->ino, m->dev, m->size, m->ctime );
  41abc3:	e8 88 86 fe ff       	callq  403250 <__asan_report_load8@plt>
  41abc8:	e8 83 86 fe ff       	callq  403250 <__asan_report_load8@plt>
  41abcd:	4c 89 cf             	mov    %r9,%rdi
  41abd0:	e8 7b 86 fe ff       	callq  403250 <__asan_report_load8@plt>
  41abd5:	e8 76 86 fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( hash_table[i] == (Map*) 0 )
  41abda:	e8 71 86 fe ff       	callq  403250 <__asan_report_load8@plt>
	    m->hash = h;
  41abdf:	e8 0c 80 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	    hash_table[i] = m;
  41abe4:	e8 b7 83 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	    m->hash_idx = i;
  41abe9:	e8 02 80 fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41abee:	66 90                	xchg   %ax,%ax

000000000041abf0 <check_hash_size>:
    {
  41abf0:	55                   	push   %rbp
  41abf1:	53                   	push   %rbx
  41abf2:	48 83 ec 08          	sub    $0x8,%rsp
    if ( hash_table == (Map**) 0 )
  41abf6:	48 8b 3d c3 81 22 00 	mov    0x2281c3(%rip),%rdi        # 642dc0 <hash_table>
  41abfd:	48 85 ff             	test   %rdi,%rdi
  41ac00:	0f 84 ea 00 00 00    	je     41acf0 <check_hash_size+0x100>
    else if ( hash_size >= map_count * 3 )
  41ac06:	8b 05 34 82 22 00    	mov    0x228234(%rip),%eax        # 642e40 <map_count>
  41ac0c:	8b 1d 6e 81 22 00    	mov    0x22816e(%rip),%ebx        # 642d80 <hash_size>
  41ac12:	8d 2c 40             	lea    (%rax,%rax,2),%ebp
  41ac15:	39 dd                	cmp    %ebx,%ebp
  41ac17:	7f 0f                	jg     41ac28 <check_hash_size+0x38>
    }
  41ac19:	48 83 c4 08          	add    $0x8,%rsp
	return 0;
  41ac1d:	31 c0                	xor    %eax,%eax
    }
  41ac1f:	5b                   	pop    %rbx
  41ac20:	5d                   	pop    %rbp
  41ac21:	c3                   	retq   
  41ac22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	free( (void*) hash_table );
  41ac28:	e8 a3 80 fe ff       	callq  402cd0 <free@plt>
	while ( hash_size < map_count * 6 );
  41ac2d:	8d 44 2d 00          	lea    0x0(%rbp,%rbp,1),%eax
  41ac31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    hash_size = hash_size << 1;
  41ac38:	01 db                	add    %ebx,%ebx
	while ( hash_size < map_count * 6 );
  41ac3a:	39 c3                	cmp    %eax,%ebx
  41ac3c:	7c fa                	jl     41ac38 <check_hash_size+0x48>
    hash_table = (Map**) malloc( hash_size * sizeof(Map*) );
  41ac3e:	48 63 fb             	movslq %ebx,%rdi
	hash_mask = hash_size - 1;
  41ac41:	8d 43 ff             	lea    -0x1(%rbx),%eax
  41ac44:	89 1d 36 81 22 00    	mov    %ebx,0x228136(%rip)        # 642d80 <hash_size>
    hash_table = (Map**) malloc( hash_size * sizeof(Map*) );
  41ac4a:	48 c1 e7 03          	shl    $0x3,%rdi
	hash_mask = hash_size - 1;
  41ac4e:	89 05 ec 80 22 00    	mov    %eax,0x2280ec(%rip)        # 642d40 <hash_mask>
    hash_table = (Map**) malloc( hash_size * sizeof(Map*) );
  41ac54:	e8 57 84 fe ff       	callq  4030b0 <malloc@plt>
  41ac59:	48 89 05 60 81 22 00 	mov    %rax,0x228160(%rip)        # 642dc0 <hash_table>
    if ( hash_table == (Map**) 0 )
  41ac60:	48 85 c0             	test   %rax,%rax
  41ac63:	74 78                	je     41acdd <check_hash_size+0xed>
    for ( i = 0; i < hash_size; ++i )
  41ac65:	85 db                	test   %ebx,%ebx
  41ac67:	7e 2d                	jle    41ac96 <check_hash_size+0xa6>
    hash_table = (Map**) malloc( hash_size * sizeof(Map*) );
  41ac69:	31 d2                	xor    %edx,%edx
  41ac6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	hash_table[i] = (Map*) 0;
  41ac70:	48 89 c1             	mov    %rax,%rcx
  41ac73:	48 c1 e9 03          	shr    $0x3,%rcx
  41ac77:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41ac7e:	0f 85 a0 00 00 00    	jne    41ad24 <check_hash_size+0x134>
    for ( i = 0; i < hash_size; ++i )
  41ac84:	83 c2 01             	add    $0x1,%edx
	hash_table[i] = (Map*) 0;
  41ac87:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  41ac8e:	48 83 c0 08          	add    $0x8,%rax
    for ( i = 0; i < hash_size; ++i )
  41ac92:	39 da                	cmp    %ebx,%edx
  41ac94:	7c da                	jl     41ac70 <check_hash_size+0x80>
    for ( m = maps; m != (Map*) 0; m = m->next )
  41ac96:	48 8b 1d 63 82 22 00 	mov    0x228263(%rip),%rbx        # 642f00 <maps>
  41ac9d:	48 85 db             	test   %rbx,%rbx
  41aca0:	75 2f                	jne    41acd1 <check_hash_size+0xe1>
  41aca2:	e9 72 ff ff ff       	jmpq   41ac19 <check_hash_size+0x29>
  41aca7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41acae:	00 00 
  41acb0:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
  41acb4:	48 89 f8             	mov    %rdi,%rax
  41acb7:	48 c1 e8 03          	shr    $0x3,%rax
  41acbb:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41acc2:	75 68                	jne    41ad2c <check_hash_size+0x13c>
  41acc4:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
  41acc8:	48 85 db             	test   %rbx,%rbx
  41accb:	0f 84 48 ff ff ff    	je     41ac19 <check_hash_size+0x29>
	if ( add_hash( m ) < 0 )
  41acd1:	48 89 df             	mov    %rbx,%rdi
  41acd4:	e8 77 fd ff ff       	callq  41aa50 <add_hash>
  41acd9:	85 c0                	test   %eax,%eax
  41acdb:	79 d3                	jns    41acb0 <check_hash_size+0xc0>
    }
  41acdd:	48 83 c4 08          	add    $0x8,%rsp
	return -1;
  41ace1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    }
  41ace6:	5b                   	pop    %rbx
  41ace7:	5d                   	pop    %rbp
  41ace8:	c3                   	retq   
  41ace9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	hash_size = INITIAL_HASH_SIZE;
  41acf0:	c7 05 86 80 22 00 00 	movl   $0x400,0x228086(%rip)        # 642d80 <hash_size>
  41acf7:	04 00 00 
    hash_table = (Map**) malloc( hash_size * sizeof(Map*) );
  41acfa:	bf 00 20 00 00       	mov    $0x2000,%edi
	hash_mask = hash_size - 1;
  41acff:	c7 05 37 80 22 00 ff 	movl   $0x3ff,0x228037(%rip)        # 642d40 <hash_mask>
  41ad06:	03 00 00 
    hash_table = (Map**) malloc( hash_size * sizeof(Map*) );
  41ad09:	e8 a2 83 fe ff       	callq  4030b0 <malloc@plt>
  41ad0e:	48 89 05 ab 80 22 00 	mov    %rax,0x2280ab(%rip)        # 642dc0 <hash_table>
    if ( hash_table == (Map**) 0 )
  41ad15:	48 85 c0             	test   %rax,%rax
  41ad18:	74 c3                	je     41acdd <check_hash_size+0xed>
    hash_table = (Map**) malloc( hash_size * sizeof(Map*) );
  41ad1a:	bb 00 04 00 00       	mov    $0x400,%ebx
  41ad1f:	e9 45 ff ff ff       	jmpq   41ac69 <check_hash_size+0x79>
	hash_table[i] = (Map*) 0;
  41ad24:	48 89 c7             	mov    %rax,%rdi
  41ad27:	e8 74 82 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    for ( m = maps; m != (Map*) 0; m = m->next )
  41ad2c:	e8 1f 85 fe ff       	callq  403250 <__asan_report_load8@plt>
  41ad31:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41ad36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41ad3d:	00 00 00 

000000000041ad40 <really_unmap>:
    {
  41ad40:	41 55                	push   %r13
    m = *mm;
  41ad42:	48 89 f8             	mov    %rdi,%rax
    {
  41ad45:	41 54                	push   %r12
    m = *mm;
  41ad47:	48 c1 e8 03          	shr    $0x3,%rax
    {
  41ad4b:	55                   	push   %rbp
  41ad4c:	48 89 fd             	mov    %rdi,%rbp
  41ad4f:	53                   	push   %rbx
  41ad50:	48 83 ec 08          	sub    $0x8,%rsp
    m = *mm;
  41ad54:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ad5b:	0f 85 55 01 00 00    	jne    41aeb6 <really_unmap+0x176>
  41ad61:	48 8b 1f             	mov    (%rdi),%rbx
    if ( m->size != 0 )
  41ad64:	4c 8d 6b 10          	lea    0x10(%rbx),%r13
  41ad68:	4d 89 ec             	mov    %r13,%r12
  41ad6b:	49 c1 ec 03          	shr    $0x3,%r12
  41ad6f:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  41ad76:	7f 00 
  41ad78:	0f 85 42 01 00 00    	jne    41aec0 <really_unmap+0x180>
  41ad7e:	48 8b 73 10          	mov    0x10(%rbx),%rsi
  41ad82:	48 85 f6             	test   %rsi,%rsi
  41ad85:	0f 85 bd 00 00 00    	jne    41ae48 <really_unmap+0x108>
    *mm = m->next;
  41ad8b:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    mapped_bytes -= m->size;
  41ad8f:	48 29 35 6a 7f 22 00 	sub    %rsi,0x227f6a(%rip)        # 642d00 <mapped_bytes>
    *mm = m->next;
  41ad96:	48 89 f8             	mov    %rdi,%rax
  41ad99:	48 c1 e8 03          	shr    $0x3,%rax
  41ad9d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ada4:	0f 85 07 01 00 00    	jne    41aeb1 <really_unmap+0x171>
  41adaa:	48 89 ea             	mov    %rbp,%rdx
  41adad:	48 8b 43 40          	mov    0x40(%rbx),%rax
  41adb1:	48 c1 ea 03          	shr    $0x3,%rdx
  41adb5:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41adbc:	0f 85 e7 00 00 00    	jne    41aea9 <really_unmap+0x169>
  41adc2:	48 89 45 00          	mov    %rax,0x0(%rbp)
    m->next = free_maps;
  41adc6:	48 8b 05 f3 80 22 00 	mov    0x2280f3(%rip),%rax        # 642ec0 <free_maps>
    hash_table[m->hash_idx] = (Map*) 0;
  41adcd:	48 8d 7b 3c          	lea    0x3c(%rbx),%rdi
    --map_count;
  41add1:	83 2d 68 80 22 00 01 	subl   $0x1,0x228068(%rip)        # 642e40 <map_count>
    hash_table[m->hash_idx] = (Map*) 0;
  41add8:	48 8b 0d e1 7f 22 00 	mov    0x227fe1(%rip),%rcx        # 642dc0 <hash_table>
    m->next = free_maps;
  41addf:	48 89 43 40          	mov    %rax,0x40(%rbx)
    hash_table[m->hash_idx] = (Map*) 0;
  41ade3:	48 89 f8             	mov    %rdi,%rax
  41ade6:	48 c1 e8 03          	shr    $0x3,%rax
    free_maps = m;
  41adea:	48 89 1d cf 80 22 00 	mov    %rbx,0x2280cf(%rip)        # 642ec0 <free_maps>
    hash_table[m->hash_idx] = (Map*) 0;
  41adf1:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  41adf8:	48 89 f8             	mov    %rdi,%rax
    ++free_count;
  41adfb:	83 05 fe 7f 22 00 01 	addl   $0x1,0x227ffe(%rip)        # 642e00 <free_count>
    hash_table[m->hash_idx] = (Map*) 0;
  41ae02:	83 e0 07             	and    $0x7,%eax
  41ae05:	83 c0 03             	add    $0x3,%eax
  41ae08:	38 d0                	cmp    %dl,%al
  41ae0a:	7c 08                	jl     41ae14 <really_unmap+0xd4>
  41ae0c:	84 d2                	test   %dl,%dl
  41ae0e:	0f 85 90 00 00 00    	jne    41aea4 <really_unmap+0x164>
  41ae14:	48 63 43 3c          	movslq 0x3c(%rbx),%rax
  41ae18:	48 8d 3c c1          	lea    (%rcx,%rax,8),%rdi
  41ae1c:	48 89 f8             	mov    %rdi,%rax
  41ae1f:	48 c1 e8 03          	shr    $0x3,%rax
  41ae23:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ae2a:	0f 85 8b 00 00 00    	jne    41aebb <really_unmap+0x17b>
  41ae30:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    }
  41ae37:	48 83 c4 08          	add    $0x8,%rsp
  41ae3b:	5b                   	pop    %rbx
  41ae3c:	5d                   	pop    %rbp
  41ae3d:	41 5c                	pop    %r12
  41ae3f:	41 5d                	pop    %r13
  41ae41:	c3                   	retq   
  41ae42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	if ( munmap( m->addr, m->size ) < 0 )
  41ae48:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
  41ae4c:	48 89 f8             	mov    %rdi,%rax
  41ae4f:	48 c1 e8 03          	shr    $0x3,%rax
  41ae53:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ae5a:	75 6c                	jne    41aec8 <really_unmap+0x188>
  41ae5c:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
  41ae60:	e8 8b 7f fe ff       	callq  402df0 <munmap@plt>
  41ae65:	85 c0                	test   %eax,%eax
  41ae67:	78 17                	js     41ae80 <really_unmap+0x140>
  41ae69:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  41ae70:	7f 00 
  41ae72:	75 59                	jne    41aecd <really_unmap+0x18d>
  41ae74:	48 8b 73 10          	mov    0x10(%rbx),%rsi
  41ae78:	e9 0e ff ff ff       	jmpq   41ad8b <really_unmap+0x4b>
  41ae7d:	0f 1f 00             	nopl   (%rax)
	    syslog( LOG_ERR, "munmap - %m" );
  41ae80:	31 c0                	xor    %eax,%eax
  41ae82:	be 40 c9 42 00       	mov    $0x42c940,%esi
  41ae87:	bf 03 00 00 00       	mov    $0x3,%edi
  41ae8c:	e8 af 7d fe ff       	callq  402c40 <syslog@plt>
  41ae91:	41 80 bc 24 00 80 ff 	cmpb   $0x0,0x7fff8000(%r12)
  41ae98:	7f 00 
  41ae9a:	74 d8                	je     41ae74 <really_unmap+0x134>
  41ae9c:	4c 89 ef             	mov    %r13,%rdi
  41ae9f:	e8 ac 83 fe ff       	callq  403250 <__asan_report_load8@plt>
    hash_table[m->hash_idx] = (Map*) 0;
  41aea4:	e8 27 7f fe ff       	callq  402dd0 <__asan_report_load4@plt>
    *mm = m->next;
  41aea9:	48 89 ef             	mov    %rbp,%rdi
  41aeac:	e8 ef 80 fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41aeb1:	e8 9a 83 fe ff       	callq  403250 <__asan_report_load8@plt>
    m = *mm;
  41aeb6:	e8 95 83 fe ff       	callq  403250 <__asan_report_load8@plt>
    hash_table[m->hash_idx] = (Map*) 0;
  41aebb:	e8 e0 80 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    if ( m->size != 0 )
  41aec0:	4c 89 ef             	mov    %r13,%rdi
  41aec3:	e8 88 83 fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( munmap( m->addr, m->size ) < 0 )
  41aec8:	e8 83 83 fe ff       	callq  403250 <__asan_report_load8@plt>
  41aecd:	4c 89 ef             	mov    %r13,%rdi
  41aed0:	e8 7b 83 fe ff       	callq  403250 <__asan_report_load8@plt>
  41aed5:	90                   	nop
  41aed6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41aedd:	00 00 00 

000000000041aee0 <panic>:
    {
  41aee0:	53                   	push   %rbx
    syslog( LOG_ERR, "mmc panic - freeing all unreferenced maps" );
  41aee1:	be 80 c9 42 00       	mov    $0x42c980,%esi
  41aee6:	bf 03 00 00 00       	mov    $0x3,%edi
  41aeeb:	31 c0                	xor    %eax,%eax
    for ( mm = &maps; *mm != (Map*) 0; )
  41aeed:	bb 00 2f 64 00       	mov    $0x642f00,%ebx
    syslog( LOG_ERR, "mmc panic - freeing all unreferenced maps" );
  41aef2:	e8 49 7d fe ff       	callq  402c40 <syslog@plt>
    for ( mm = &maps; *mm != (Map*) 0; )
  41aef7:	48 89 d8             	mov    %rbx,%rax
  41aefa:	48 c1 e8 03          	shr    $0x3,%rax
  41aefe:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41af05:	75 3e                	jne    41af45 <panic+0x65>
  41af07:	48 8b 03             	mov    (%rbx),%rax
  41af0a:	48 85 c0             	test   %rax,%rax
  41af0d:	74 51                	je     41af60 <panic+0x80>
	if ( m->refcount == 0 )
  41af0f:	48 8d 78 20          	lea    0x20(%rax),%rdi
  41af13:	48 89 fa             	mov    %rdi,%rdx
  41af16:	48 c1 ea 03          	shr    $0x3,%rdx
  41af1a:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41af21:	84 d2                	test   %dl,%dl
  41af23:	74 05                	je     41af2a <panic+0x4a>
  41af25:	80 fa 03             	cmp    $0x3,%dl
  41af28:	7e 38                	jle    41af62 <panic+0x82>
  41af2a:	8b 50 20             	mov    0x20(%rax),%edx
  41af2d:	85 d2                	test   %edx,%edx
  41af2f:	74 1f                	je     41af50 <panic+0x70>
	    mm = &(*mm)->next;
  41af31:	48 8d 58 40          	lea    0x40(%rax),%rbx
    for ( mm = &maps; *mm != (Map*) 0; )
  41af35:	48 89 d8             	mov    %rbx,%rax
  41af38:	48 c1 e8 03          	shr    $0x3,%rax
  41af3c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41af43:	74 c2                	je     41af07 <panic+0x27>
  41af45:	48 89 df             	mov    %rbx,%rdi
  41af48:	e8 03 83 fe ff       	callq  403250 <__asan_report_load8@plt>
  41af4d:	0f 1f 00             	nopl   (%rax)
	    really_unmap( mm );
  41af50:	48 89 df             	mov    %rbx,%rdi
  41af53:	e8 e8 fd ff ff       	callq  41ad40 <really_unmap>
  41af58:	eb 9d                	jmp    41aef7 <panic+0x17>
  41af5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    }
  41af60:	5b                   	pop    %rbx
  41af61:	c3                   	retq   
	if ( m->refcount == 0 )
  41af62:	e8 69 7e fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41af67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41af6e:	00 00 

000000000041af70 <mmc_map>:
    {
  41af70:	41 57                	push   %r15
  41af72:	41 56                	push   %r14
  41af74:	49 89 f6             	mov    %rsi,%r14
  41af77:	41 55                	push   %r13
  41af79:	41 54                	push   %r12
  41af7b:	49 89 fc             	mov    %rdi,%r12
  41af7e:	55                   	push   %rbp
  41af7f:	53                   	push   %rbx
  41af80:	48 81 ec 08 01 00 00 	sub    $0x108,%rsp
  41af87:	8b 05 73 63 22 00    	mov    0x226373(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  41af8d:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
  41af92:	49 89 dd             	mov    %rbx,%r13
  41af95:	85 c0                	test   %eax,%eax
  41af97:	0f 85 3a 07 00 00    	jne    41b6d7 <mmc_map+0x767>
  41af9d:	48 89 dd             	mov    %rbx,%rbp
  41afa0:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
  41afa7:	4c 8d bb e0 00 00 00 	lea    0xe0(%rbx),%r15
  41afae:	48 c1 ed 03          	shr    $0x3,%rbp
  41afb2:	48 c7 43 08 c0 cc 42 	movq   $0x42ccc0,0x8(%rbx)
  41afb9:	00 
  41afba:	48 c7 43 10 70 af 41 	movq   $0x41af70,0x10(%rbx)
  41afc1:	00 
  41afc2:	c7 85 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbp)
  41afc9:	f1 f1 f1 
  41afcc:	c7 85 14 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8014(%rbp)
  41afd3:	00 f2 f2 
  41afd6:	c7 85 18 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8018(%rbp)
  41afdd:	f3 f3 f3 
    if ( sbP != (struct stat*) 0 )
  41afe0:	4d 85 f6             	test   %r14,%r14
  41afe3:	0f 84 a7 04 00 00    	je     41b490 <mmc_map+0x520>
	sb = *sbP;
  41afe9:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
  41afed:	48 89 f8             	mov    %rdi,%rax
  41aff0:	48 c1 e8 03          	shr    $0x3,%rax
  41aff4:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  41affb:	48 8d 83 af 00 00 00 	lea    0xaf(%rbx),%rax
  41b002:	48 89 c6             	mov    %rax,%rsi
  41b005:	83 e0 07             	and    $0x7,%eax
  41b008:	48 c1 ee 03          	shr    $0x3,%rsi
  41b00c:	0f b6 b6 00 80 ff 7f 	movzbl 0x7fff8000(%rsi),%esi
  41b013:	40 38 c6             	cmp    %al,%sil
  41b016:	41 0f 9e c1          	setle  %r9b
  41b01a:	40 84 f6             	test   %sil,%sil
  41b01d:	0f 95 c0             	setne  %al
  41b020:	41 84 c1             	test   %al,%r9b
  41b023:	0f 85 11 07 00 00    	jne    41b73a <mmc_map+0x7ca>
  41b029:	84 c9                	test   %cl,%cl
  41b02b:	40 0f 95 c6          	setne  %sil
  41b02f:	0f 9e c0             	setle  %al
  41b032:	40 84 c6             	test   %al,%sil
  41b035:	0f 85 ff 06 00 00    	jne    41b73a <mmc_map+0x7ca>
  41b03b:	4c 89 f0             	mov    %r14,%rax
  41b03e:	48 c1 e8 03          	shr    $0x3,%rax
  41b042:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  41b049:	49 8d 86 8f 00 00 00 	lea    0x8f(%r14),%rax
  41b050:	48 89 c6             	mov    %rax,%rsi
  41b053:	83 e0 07             	and    $0x7,%eax
  41b056:	48 c1 ee 03          	shr    $0x3,%rsi
  41b05a:	0f b6 b6 00 80 ff 7f 	movzbl 0x7fff8000(%rsi),%esi
  41b061:	40 38 c6             	cmp    %al,%sil
  41b064:	40 0f 9e c7          	setle  %dil
  41b068:	40 84 f6             	test   %sil,%sil
  41b06b:	0f 95 c0             	setne  %al
  41b06e:	40 84 c7             	test   %al,%dil
  41b071:	0f 85 cd 06 00 00    	jne    41b744 <mmc_map+0x7d4>
  41b077:	84 c9                	test   %cl,%cl
  41b079:	40 0f 95 c6          	setne  %sil
  41b07d:	0f 9e c0             	setle  %al
  41b080:	40 84 c6             	test   %al,%sil
  41b083:	0f 85 bb 06 00 00    	jne    41b744 <mmc_map+0x7d4>
  41b089:	f3 41 0f 6f 0e       	movdqu (%r14),%xmm1
  41b08e:	f3 41 0f 6f 56 10    	movdqu 0x10(%r14),%xmm2
  41b094:	f3 41 0f 6f 5e 20    	movdqu 0x20(%r14),%xmm3
  41b09a:	f3 41 0f 6f 66 30    	movdqu 0x30(%r14),%xmm4
  41b0a0:	41 0f 29 8f 40 ff ff 	movaps %xmm1,-0xc0(%r15)
  41b0a7:	ff 
  41b0a8:	f3 41 0f 6f 6e 40    	movdqu 0x40(%r14),%xmm5
  41b0ae:	f3 41 0f 6f 76 50    	movdqu 0x50(%r14),%xmm6
  41b0b4:	f3 41 0f 6f 7e 60    	movdqu 0x60(%r14),%xmm7
  41b0ba:	f3 41 0f 6f 46 70    	movdqu 0x70(%r14),%xmm0
  41b0c0:	41 0f 29 97 50 ff ff 	movaps %xmm2,-0xb0(%r15)
  41b0c7:	ff 
  41b0c8:	f3 41 0f 6f 8e 80 00 	movdqu 0x80(%r14),%xmm1
  41b0cf:	00 00 
  41b0d1:	41 0f 29 9f 60 ff ff 	movaps %xmm3,-0xa0(%r15)
  41b0d8:	ff 
  41b0d9:	41 0f 29 a7 70 ff ff 	movaps %xmm4,-0x90(%r15)
  41b0e0:	ff 
  41b0e1:	41 0f 29 6f 80       	movaps %xmm5,-0x80(%r15)
  41b0e6:	41 0f 29 77 90       	movaps %xmm6,-0x70(%r15)
  41b0eb:	41 0f 29 7f a0       	movaps %xmm7,-0x60(%r15)
  41b0f0:	41 0f 29 47 b0       	movaps %xmm0,-0x50(%r15)
  41b0f5:	41 0f 29 4f c0       	movaps %xmm1,-0x40(%r15)
    if ( nowP != (struct timeval*) 0 )
  41b0fa:	48 85 d2             	test   %rdx,%rdx
  41b0fd:	0f 84 cd 03 00 00    	je     41b4d0 <mmc_map+0x560>
	now = nowP->tv_sec;
  41b103:	48 89 d0             	mov    %rdx,%rax
  41b106:	48 c1 e8 03          	shr    $0x3,%rax
  41b10a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b111:	0f 85 3f 06 00 00    	jne    41b756 <mmc_map+0x7e6>
  41b117:	48 8b 02             	mov    (%rdx),%rax
  41b11a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    if ( check_hash_size() < 0 )
  41b11f:	e8 cc fa ff ff       	callq  41abf0 <check_hash_size>
  41b124:	85 c0                	test   %eax,%eax
  41b126:	0f 88 c4 03 00 00    	js     41b4f0 <mmc_map+0x580>
    m = find_hash( sb.st_ino, sb.st_dev, sb.st_size, sb.st_ctime );
  41b12c:	4d 8d b7 40 ff ff ff 	lea    -0xc0(%r15),%r14
  41b133:	49 8d 7e 68          	lea    0x68(%r14),%rdi
  41b137:	48 89 f8             	mov    %rdi,%rax
  41b13a:	48 c1 e8 03          	shr    $0x3,%rax
  41b13e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b145:	0f 85 ea 05 00 00    	jne    41b735 <mmc_map+0x7c5>
  41b14b:	49 8d 7e 30          	lea    0x30(%r14),%rdi
  41b14f:	49 8b 4f a8          	mov    -0x58(%r15),%rcx
  41b153:	48 89 f8             	mov    %rdi,%rax
  41b156:	48 c1 e8 03          	shr    $0x3,%rax
  41b15a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b161:	0f 85 f7 05 00 00    	jne    41b75e <mmc_map+0x7ee>
  41b167:	4c 89 f0             	mov    %r14,%rax
  41b16a:	49 8b 97 70 ff ff ff 	mov    -0x90(%r15),%rdx
  41b171:	48 c1 e8 03          	shr    $0x3,%rax
  41b175:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b17c:	0f 85 ab 05 00 00    	jne    41b72d <mmc_map+0x7bd>
  41b182:	49 8d 7e 08          	lea    0x8(%r14),%rdi
  41b186:	49 8b b7 40 ff ff ff 	mov    -0xc0(%r15),%rsi
  41b18d:	48 89 f8             	mov    %rdi,%rax
  41b190:	48 c1 e8 03          	shr    $0x3,%rax
  41b194:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b19b:	0f 85 b0 05 00 00    	jne    41b751 <mmc_map+0x7e1>
  41b1a1:	49 8b bf 48 ff ff ff 	mov    -0xb8(%r15),%rdi
  41b1a8:	e8 43 f7 ff ff       	callq  41a8f0 <find_hash>
    if ( m != (Map*) 0 )
  41b1ad:	48 85 c0             	test   %rax,%rax
  41b1b0:	0f 84 9a 00 00 00    	je     41b250 <mmc_map+0x2e0>
	++m->refcount;
  41b1b6:	48 8d 78 20          	lea    0x20(%rax),%rdi
  41b1ba:	48 89 fa             	mov    %rdi,%rdx
  41b1bd:	48 c1 ea 03          	shr    $0x3,%rdx
  41b1c1:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41b1c8:	84 d2                	test   %dl,%dl
  41b1ca:	74 09                	je     41b1d5 <mmc_map+0x265>
  41b1cc:	80 fa 03             	cmp    $0x3,%dl
  41b1cf:	0f 8e 36 04 00 00    	jle    41b60b <mmc_map+0x69b>
	m->reftime = now;
  41b1d5:	48 8d 78 28          	lea    0x28(%rax),%rdi
	++m->refcount;
  41b1d9:	83 40 20 01          	addl   $0x1,0x20(%rax)
	m->reftime = now;
  41b1dd:	48 89 fa             	mov    %rdi,%rdx
  41b1e0:	48 c1 ea 03          	shr    $0x3,%rdx
  41b1e4:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41b1eb:	0f 85 77 05 00 00    	jne    41b768 <mmc_map+0x7f8>
	return m->addr;
  41b1f1:	48 8d 78 30          	lea    0x30(%rax),%rdi
	m->reftime = now;
  41b1f5:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
	return m->addr;
  41b1fa:	48 89 fa             	mov    %rdi,%rdx
  41b1fd:	48 c1 ea 03          	shr    $0x3,%rdx
	m->reftime = now;
  41b201:	48 89 48 28          	mov    %rcx,0x28(%rax)
	return m->addr;
  41b205:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41b20c:	0f 85 51 05 00 00    	jne    41b763 <mmc_map+0x7f3>
  41b212:	48 8b 40 30          	mov    0x30(%rax),%rax
    {
  41b216:	49 39 dd             	cmp    %rbx,%r13
  41b219:	0f 85 d8 04 00 00    	jne    41b6f7 <mmc_map+0x787>
  41b21f:	c7 85 00 80 ff 7f 00 	movl   $0x0,0x7fff8000(%rbp)
  41b226:	00 00 00 
  41b229:	48 c7 85 14 80 ff 7f 	movq   $0x0,0x7fff8014(%rbp)
  41b230:	00 00 00 00 
    }
  41b234:	48 81 c4 08 01 00 00 	add    $0x108,%rsp
  41b23b:	5b                   	pop    %rbx
  41b23c:	5d                   	pop    %rbp
  41b23d:	41 5c                	pop    %r12
  41b23f:	41 5d                	pop    %r13
  41b241:	41 5e                	pop    %r14
  41b243:	41 5f                	pop    %r15
  41b245:	c3                   	retq   
  41b246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41b24d:	00 00 00 
    fd = open( filename, O_RDONLY );
  41b250:	31 f6                	xor    %esi,%esi
  41b252:	4c 89 e7             	mov    %r12,%rdi
  41b255:	31 c0                	xor    %eax,%eax
  41b257:	e8 04 7c fe ff       	callq  402e60 <open@plt>
  41b25c:	41 89 c2             	mov    %eax,%r10d
    if ( fd < 0 )
  41b25f:	85 c0                	test   %eax,%eax
  41b261:	0f 88 09 04 00 00    	js     41b670 <mmc_map+0x700>
    if ( free_maps != (Map*) 0 )
  41b267:	4c 8b 25 52 7c 22 00 	mov    0x227c52(%rip),%r12        # 642ec0 <free_maps>
  41b26e:	4d 85 e4             	test   %r12,%r12
  41b271:	0f 84 69 03 00 00    	je     41b5e0 <mmc_map+0x670>
	free_maps = m->next;
  41b277:	49 8d 7c 24 40       	lea    0x40(%r12),%rdi
  41b27c:	48 89 f8             	mov    %rdi,%rax
  41b27f:	48 c1 e8 03          	shr    $0x3,%rax
  41b283:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b28a:	0f 85 3c 05 00 00    	jne    41b7cc <mmc_map+0x85c>
  41b290:	49 8b 44 24 40       	mov    0x40(%r12),%rax
	--free_count;
  41b295:	83 2d 64 7b 22 00 01 	subl   $0x1,0x227b64(%rip)        # 642e00 <free_count>
	free_maps = m->next;
  41b29c:	48 89 05 1d 7c 22 00 	mov    %rax,0x227c1d(%rip)        # 642ec0 <free_maps>
    m->ino = sb.st_ino;
  41b2a3:	49 8d 7e 08          	lea    0x8(%r14),%rdi
  41b2a7:	48 89 f8             	mov    %rdi,%rax
  41b2aa:	48 c1 e8 03          	shr    $0x3,%rax
  41b2ae:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b2b5:	0f 85 0c 05 00 00    	jne    41b7c7 <mmc_map+0x857>
  41b2bb:	4c 89 e2             	mov    %r12,%rdx
  41b2be:	49 8b 87 48 ff ff ff 	mov    -0xb8(%r15),%rax
  41b2c5:	48 c1 ea 03          	shr    $0x3,%rdx
  41b2c9:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41b2d0:	0f 85 e9 04 00 00    	jne    41b7bf <mmc_map+0x84f>
  41b2d6:	49 89 04 24          	mov    %rax,(%r12)
    m->dev = sb.st_dev;
  41b2da:	4c 89 f0             	mov    %r14,%rax
  41b2dd:	48 c1 e8 03          	shr    $0x3,%rax
  41b2e1:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b2e8:	0f 85 c9 04 00 00    	jne    41b7b7 <mmc_map+0x847>
  41b2ee:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
  41b2f3:	49 8b 87 40 ff ff ff 	mov    -0xc0(%r15),%rax
  41b2fa:	48 89 fa             	mov    %rdi,%rdx
  41b2fd:	48 c1 ea 03          	shr    $0x3,%rdx
  41b301:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41b308:	0f 85 a4 04 00 00    	jne    41b7b2 <mmc_map+0x842>
    m->size = sb.st_size;
  41b30e:	49 8d 7e 30          	lea    0x30(%r14),%rdi
    m->dev = sb.st_dev;
  41b312:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    m->size = sb.st_size;
  41b317:	48 89 f8             	mov    %rdi,%rax
  41b31a:	48 c1 e8 03          	shr    $0x3,%rax
  41b31e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b325:	0f 85 82 04 00 00    	jne    41b7ad <mmc_map+0x83d>
  41b32b:	49 8d 44 24 10       	lea    0x10(%r12),%rax
  41b330:	4d 8b 9f 70 ff ff ff 	mov    -0x90(%r15),%r11
  41b337:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41b33c:	48 c1 e8 03          	shr    $0x3,%rax
  41b340:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b347:	0f 85 56 04 00 00    	jne    41b7a3 <mmc_map+0x833>
    m->ctime = sb.st_ctime;
  41b34d:	4d 8d 4e 68          	lea    0x68(%r14),%r9
    m->size = sb.st_size;
  41b351:	4d 89 5c 24 10       	mov    %r11,0x10(%r12)
    m->ctime = sb.st_ctime;
  41b356:	4c 89 c8             	mov    %r9,%rax
  41b359:	48 c1 e8 03          	shr    $0x3,%rax
  41b35d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b364:	0f 85 31 04 00 00    	jne    41b79b <mmc_map+0x82b>
  41b36a:	49 8d 7c 24 18       	lea    0x18(%r12),%rdi
  41b36f:	49 8b 47 a8          	mov    -0x58(%r15),%rax
  41b373:	48 89 fa             	mov    %rdi,%rdx
  41b376:	48 c1 ea 03          	shr    $0x3,%rdx
  41b37a:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41b381:	0f 85 0f 04 00 00    	jne    41b796 <mmc_map+0x826>
    m->refcount = 1;
  41b387:	49 8d 7c 24 20       	lea    0x20(%r12),%rdi
    m->ctime = sb.st_ctime;
  41b38c:	49 89 44 24 18       	mov    %rax,0x18(%r12)
    m->refcount = 1;
  41b391:	48 89 f8             	mov    %rdi,%rax
  41b394:	48 c1 e8 03          	shr    $0x3,%rax
  41b398:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41b39f:	84 c0                	test   %al,%al
  41b3a1:	74 08                	je     41b3ab <mmc_map+0x43b>
  41b3a3:	3c 03                	cmp    $0x3,%al
  41b3a5:	0f 8e e6 03 00 00    	jle    41b791 <mmc_map+0x821>
  41b3ab:	41 c7 44 24 20 01 00 	movl   $0x1,0x20(%r12)
  41b3b2:	00 00 
    m->reftime = now;
  41b3b4:	49 8d 7c 24 28       	lea    0x28(%r12),%rdi
  41b3b9:	48 89 f8             	mov    %rdi,%rax
  41b3bc:	48 c1 e8 03          	shr    $0x3,%rax
  41b3c0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b3c7:	0f 85 bf 03 00 00    	jne    41b78c <mmc_map+0x81c>
  41b3cd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  41b3d2:	49 89 44 24 28       	mov    %rax,0x28(%r12)
    if ( m->size == 0 )
  41b3d7:	4d 85 db             	test   %r11,%r11
  41b3da:	0f 85 30 01 00 00    	jne    41b510 <mmc_map+0x5a0>
	m->addr = (void*) 1;	/* arbitrary non-NULL address */
  41b3e0:	4d 8d 74 24 30       	lea    0x30(%r12),%r14
  41b3e5:	4c 89 f0             	mov    %r14,%rax
  41b3e8:	48 c1 e8 03          	shr    $0x3,%rax
  41b3ec:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b3f3:	0f 85 8b 03 00 00    	jne    41b784 <mmc_map+0x814>
  41b3f9:	49 c7 44 24 30 01 00 	movq   $0x1,0x30(%r12)
  41b400:	00 00 
    (void) close( fd );
  41b402:	44 89 d7             	mov    %r10d,%edi
  41b405:	e8 c6 80 fe ff       	callq  4034d0 <close@plt>
    if ( add_hash( m ) < 0 )
  41b40a:	4c 89 e7             	mov    %r12,%rdi
  41b40d:	e8 3e f6 ff ff       	callq  41aa50 <add_hash>
  41b412:	85 c0                	test   %eax,%eax
  41b414:	0f 88 76 02 00 00    	js     41b690 <mmc_map+0x720>
    m->next = maps;
  41b41a:	49 8d 7c 24 40       	lea    0x40(%r12),%rdi
  41b41f:	48 8b 05 da 7a 22 00 	mov    0x227ada(%rip),%rax        # 642f00 <maps>
  41b426:	48 89 fa             	mov    %rdi,%rdx
  41b429:	48 c1 ea 03          	shr    $0x3,%rdx
  41b42d:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41b434:	0f 85 33 03 00 00    	jne    41b76d <mmc_map+0x7fd>
  41b43a:	49 89 44 24 40       	mov    %rax,0x40(%r12)
    mapped_bytes += m->size;
  41b43f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    ++map_count;
  41b444:	83 05 f5 79 22 00 01 	addl   $0x1,0x2279f5(%rip)        # 642e40 <map_count>
    mapped_bytes += m->size;
  41b44b:	48 c1 e8 03          	shr    $0x3,%rax
    maps = m;
  41b44f:	4c 89 25 aa 7a 22 00 	mov    %r12,0x227aaa(%rip)        # 642f00 <maps>
    mapped_bytes += m->size;
  41b456:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b45d:	0f 85 17 03 00 00    	jne    41b77a <mmc_map+0x80a>
  41b463:	49 8b 44 24 10       	mov    0x10(%r12),%rax
  41b468:	48 01 05 91 78 22 00 	add    %rax,0x227891(%rip)        # 642d00 <mapped_bytes>
    return m->addr;
  41b46f:	4c 89 f0             	mov    %r14,%rax
  41b472:	48 c1 e8 03          	shr    $0x3,%rax
  41b476:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b47d:	0f 85 ef 02 00 00    	jne    41b772 <mmc_map+0x802>
  41b483:	49 8b 44 24 30       	mov    0x30(%r12),%rax
  41b488:	e9 89 fd ff ff       	jmpq   41b216 <mmc_map+0x2a6>
  41b48d:	0f 1f 00             	nopl   (%rax)
	if ( stat( filename, &sb ) != 0 )
  41b490:	48 8d 73 20          	lea    0x20(%rbx),%rsi
  41b494:	4c 89 e7             	mov    %r12,%rdi
  41b497:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  41b49c:	e8 df 3b 00 00       	callq  41f080 <__stat>
  41b4a1:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  41b4a6:	85 c0                	test   %eax,%eax
  41b4a8:	0f 84 4c fc ff ff    	je     41b0fa <mmc_map+0x18a>
	    syslog( LOG_ERR, "stat - %m" );
  41b4ae:	31 c0                	xor    %eax,%eax
  41b4b0:	be e0 c9 42 00       	mov    $0x42c9e0,%esi
  41b4b5:	bf 03 00 00 00       	mov    $0x3,%edi
  41b4ba:	e8 81 77 fe ff       	callq  402c40 <syslog@plt>
	    return (void*) 0;
  41b4bf:	31 c0                	xor    %eax,%eax
  41b4c1:	e9 50 fd ff ff       	jmpq   41b216 <mmc_map+0x2a6>
  41b4c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41b4cd:	00 00 00 
	now = time( (time_t*) 0 );
  41b4d0:	31 ff                	xor    %edi,%edi
  41b4d2:	e8 99 7a fe ff       	callq  402f70 <time@plt>
  41b4d7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    if ( check_hash_size() < 0 )
  41b4dc:	e8 0f f7 ff ff       	callq  41abf0 <check_hash_size>
  41b4e1:	85 c0                	test   %eax,%eax
  41b4e3:	0f 89 43 fc ff ff    	jns    41b12c <mmc_map+0x1bc>
  41b4e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	syslog( LOG_ERR, "check_hash_size() failure" );
  41b4f0:	31 c0                	xor    %eax,%eax
  41b4f2:	be 20 ca 42 00       	mov    $0x42ca20,%esi
  41b4f7:	bf 03 00 00 00       	mov    $0x3,%edi
  41b4fc:	e8 3f 77 fe ff       	callq  402c40 <syslog@plt>
	return (void*) 0;
  41b501:	31 c0                	xor    %eax,%eax
  41b503:	e9 0e fd ff ff       	jmpq   41b216 <mmc_map+0x2a6>
  41b508:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41b50f:	00 
	m->addr = mmap( 0, size_size, PROT_READ, MAP_PRIVATE, fd, 0 );
  41b510:	45 31 c9             	xor    %r9d,%r9d
  41b513:	45 89 d0             	mov    %r10d,%r8d
  41b516:	ba 01 00 00 00       	mov    $0x1,%edx
  41b51b:	4c 89 de             	mov    %r11,%rsi
  41b51e:	31 ff                	xor    %edi,%edi
  41b520:	b9 02 00 00 00       	mov    $0x2,%ecx
  41b525:	4d 8d 74 24 30       	lea    0x30(%r12),%r14
  41b52a:	44 89 54 24 18       	mov    %r10d,0x18(%rsp)
  41b52f:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
  41b534:	e8 c7 7e fe ff       	callq  403400 <mmap@plt>
  41b539:	4c 89 f2             	mov    %r14,%rdx
  41b53c:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
  41b541:	44 8b 54 24 18       	mov    0x18(%rsp),%r10d
  41b546:	48 c1 ea 03          	shr    $0x3,%rdx
  41b54a:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41b551:	0f 85 8a 02 00 00    	jne    41b7e1 <mmc_map+0x871>
  41b557:	49 89 44 24 30       	mov    %rax,0x30(%r12)
	if ( m->addr == (void*) -1 && errno == ENOMEM )
  41b55c:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  41b560:	0f 85 9c fe ff ff    	jne    41b402 <mmc_map+0x492>
  41b566:	44 89 54 24 18       	mov    %r10d,0x18(%rsp)
  41b56b:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
  41b570:	e8 8b 76 fe ff       	callq  402c00 <__errno_location@plt>
  41b575:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
  41b57a:	44 8b 54 24 18       	mov    0x18(%rsp),%r10d
  41b57f:	48 89 c2             	mov    %rax,%rdx
  41b582:	48 c1 ea 03          	shr    $0x3,%rdx
  41b586:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  41b58d:	48 89 c2             	mov    %rax,%rdx
  41b590:	83 e2 07             	and    $0x7,%edx
  41b593:	83 c2 03             	add    $0x3,%edx
  41b596:	38 ca                	cmp    %cl,%dl
  41b598:	7c 08                	jl     41b5a2 <mmc_map+0x632>
  41b59a:	84 c9                	test   %cl,%cl
  41b59c:	0f 85 2f 02 00 00    	jne    41b7d1 <mmc_map+0x861>
  41b5a2:	83 38 0c             	cmpl   $0xc,(%rax)
  41b5a5:	74 69                	je     41b610 <mmc_map+0x6a0>
	    syslog( LOG_ERR, "mmap - %m" );
  41b5a7:	be e0 ca 42 00       	mov    $0x42cae0,%esi
  41b5ac:	bf 03 00 00 00       	mov    $0x3,%edi
  41b5b1:	31 c0                	xor    %eax,%eax
  41b5b3:	44 89 54 24 08       	mov    %r10d,0x8(%rsp)
  41b5b8:	e8 83 76 fe ff       	callq  402c40 <syslog@plt>
	    (void) close( fd );
  41b5bd:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
  41b5c2:	44 89 d7             	mov    %r10d,%edi
  41b5c5:	e8 06 7f fe ff       	callq  4034d0 <close@plt>
	    free( (void*) m );
  41b5ca:	4c 89 e7             	mov    %r12,%rdi
  41b5cd:	e8 fe 76 fe ff       	callq  402cd0 <free@plt>
	    --alloc_count;
  41b5d2:	83 2d a7 78 22 00 01 	subl   $0x1,0x2278a7(%rip)        # 642e80 <alloc_count>
	    return (void*) 0;
  41b5d9:	31 c0                	xor    %eax,%eax
  41b5db:	e9 36 fc ff ff       	jmpq   41b216 <mmc_map+0x2a6>
	m = (Map*) malloc( sizeof(Map) );
  41b5e0:	bf 48 00 00 00       	mov    $0x48,%edi
  41b5e5:	89 44 24 10          	mov    %eax,0x10(%rsp)
  41b5e9:	e8 c2 7a fe ff       	callq  4030b0 <malloc@plt>
	if ( m == (Map*) 0 )
  41b5ee:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
  41b5f3:	48 85 c0             	test   %rax,%rax
	m = (Map*) malloc( sizeof(Map) );
  41b5f6:	49 89 c4             	mov    %rax,%r12
	if ( m == (Map*) 0 )
  41b5f9:	0f 84 b8 00 00 00    	je     41b6b7 <mmc_map+0x747>
	++alloc_count;
  41b5ff:	83 05 7a 78 22 00 01 	addl   $0x1,0x22787a(%rip)        # 642e80 <alloc_count>
  41b606:	e9 98 fc ff ff       	jmpq   41b2a3 <mmc_map+0x333>
	++m->refcount;
  41b60b:	e8 c0 77 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41b610:	44 89 54 24 08       	mov    %r10d,0x8(%rsp)
  41b615:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
	    panic();
  41b61a:	e8 c1 f8 ff ff       	callq  41aee0 <panic>
	    m->addr = mmap( 0, size_size, PROT_READ, MAP_PRIVATE, fd, 0 );
  41b61f:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
  41b624:	45 31 c9             	xor    %r9d,%r9d
  41b627:	31 ff                	xor    %edi,%edi
  41b629:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
  41b62e:	ba 01 00 00 00       	mov    $0x1,%edx
  41b633:	b9 02 00 00 00       	mov    $0x2,%ecx
  41b638:	45 89 d0             	mov    %r10d,%r8d
  41b63b:	4c 89 de             	mov    %r11,%rsi
  41b63e:	e8 bd 7d fe ff       	callq  403400 <mmap@plt>
  41b643:	4c 89 f2             	mov    %r14,%rdx
  41b646:	44 8b 54 24 08       	mov    0x8(%rsp),%r10d
  41b64b:	48 c1 ea 03          	shr    $0x3,%rdx
  41b64f:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41b656:	0f 85 7d 01 00 00    	jne    41b7d9 <mmc_map+0x869>
  41b65c:	49 89 44 24 30       	mov    %rax,0x30(%r12)
	if ( m->addr == (void*) -1 )
  41b661:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  41b665:	0f 85 97 fd ff ff    	jne    41b402 <mmc_map+0x492>
  41b66b:	e9 37 ff ff ff       	jmpq   41b5a7 <mmc_map+0x637>
	syslog( LOG_ERR, "open - %m" );
  41b670:	31 c0                	xor    %eax,%eax
  41b672:	be 60 ca 42 00       	mov    $0x42ca60,%esi
  41b677:	bf 03 00 00 00       	mov    $0x3,%edi
  41b67c:	e8 bf 75 fe ff       	callq  402c40 <syslog@plt>
	return (void*) 0;
  41b681:	31 c0                	xor    %eax,%eax
  41b683:	e9 8e fb ff ff       	jmpq   41b216 <mmc_map+0x2a6>
  41b688:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41b68f:	00 
	syslog( LOG_ERR, "add_hash() failure" );
  41b690:	31 c0                	xor    %eax,%eax
  41b692:	be 20 cb 42 00       	mov    $0x42cb20,%esi
  41b697:	bf 03 00 00 00       	mov    $0x3,%edi
  41b69c:	e8 9f 75 fe ff       	callq  402c40 <syslog@plt>
	free( (void*) m );
  41b6a1:	4c 89 e7             	mov    %r12,%rdi
  41b6a4:	e8 27 76 fe ff       	callq  402cd0 <free@plt>
	--alloc_count;
  41b6a9:	83 2d d0 77 22 00 01 	subl   $0x1,0x2277d0(%rip)        # 642e80 <alloc_count>
	return (void*) 0;
  41b6b0:	31 c0                	xor    %eax,%eax
  41b6b2:	e9 5f fb ff ff       	jmpq   41b216 <mmc_map+0x2a6>
	    (void) close( fd );
  41b6b7:	44 89 d7             	mov    %r10d,%edi
  41b6ba:	e8 11 7e fe ff       	callq  4034d0 <close@plt>
	    syslog( LOG_ERR, "out of memory allocating a Map" );
  41b6bf:	31 c0                	xor    %eax,%eax
  41b6c1:	be a0 ca 42 00       	mov    $0x42caa0,%esi
  41b6c6:	bf 03 00 00 00       	mov    $0x3,%edi
  41b6cb:	e8 70 75 fe ff       	callq  402c40 <syslog@plt>
	    return (void*) 0;
  41b6d0:	31 c0                	xor    %eax,%eax
  41b6d2:	e9 3f fb ff ff       	jmpq   41b216 <mmc_map+0x2a6>
    {
  41b6d7:	bf e0 00 00 00       	mov    $0xe0,%edi
  41b6dc:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  41b6e1:	e8 3a 7c fe ff       	callq  403320 <__asan_stack_malloc_2@plt>
  41b6e6:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  41b6eb:	48 85 c0             	test   %rax,%rax
  41b6ee:	48 0f 45 d8          	cmovne %rax,%rbx
  41b6f2:	e9 a6 f8 ff ff       	jmpq   41af9d <mmc_map+0x2d>
  41b6f7:	66 0f 6f 05 91 66 00 	movdqa 0x6691(%rip),%xmm0        # 421d90 <_IO_stdin_used+0x2cd0>
  41b6fe:	00 
  41b6ff:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  41b706:	48 b9 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rcx
  41b70d:	f5 f5 f5 
  41b710:	48 89 8d 10 80 ff 7f 	mov    %rcx,0x7fff8010(%rbp)
  41b717:	0f 11 85 00 80 ff 7f 	movups %xmm0,0x7fff8000(%rbp)
  41b71e:	c7 85 18 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8018(%rbp)
  41b725:	f5 f5 f5 
  41b728:	e9 07 fb ff ff       	jmpq   41b234 <mmc_map+0x2c4>
    m = find_hash( sb.st_ino, sb.st_dev, sb.st_size, sb.st_ctime );
  41b72d:	4c 89 f7             	mov    %r14,%rdi
  41b730:	e8 1b 7b fe ff       	callq  403250 <__asan_report_load8@plt>
  41b735:	e8 16 7b fe ff       	callq  403250 <__asan_report_load8@plt>
	sb = *sbP;
  41b73a:	be 90 00 00 00       	mov    $0x90,%esi
  41b73f:	e8 0c 7d fe ff       	callq  403450 <__asan_report_store_n@plt>
  41b744:	be 90 00 00 00       	mov    $0x90,%esi
  41b749:	4c 89 f7             	mov    %r14,%rdi
  41b74c:	e8 af 75 fe ff       	callq  402d00 <__asan_report_load_n@plt>
    m = find_hash( sb.st_ino, sb.st_dev, sb.st_size, sb.st_ctime );
  41b751:	e8 fa 7a fe ff       	callq  403250 <__asan_report_load8@plt>
	now = nowP->tv_sec;
  41b756:	48 89 d7             	mov    %rdx,%rdi
  41b759:	e8 f2 7a fe ff       	callq  403250 <__asan_report_load8@plt>
    m = find_hash( sb.st_ino, sb.st_dev, sb.st_size, sb.st_ctime );
  41b75e:	e8 ed 7a fe ff       	callq  403250 <__asan_report_load8@plt>
	return m->addr;
  41b763:	e8 e8 7a fe ff       	callq  403250 <__asan_report_load8@plt>
	m->reftime = now;
  41b768:	e8 33 78 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    m->next = maps;
  41b76d:	e8 2e 78 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    return m->addr;
  41b772:	4c 89 f7             	mov    %r14,%rdi
  41b775:	e8 d6 7a fe ff       	callq  403250 <__asan_report_load8@plt>
    mapped_bytes += m->size;
  41b77a:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41b77f:	e8 cc 7a fe ff       	callq  403250 <__asan_report_load8@plt>
	m->addr = (void*) 1;	/* arbitrary non-NULL address */
  41b784:	4c 89 f7             	mov    %r14,%rdi
  41b787:	e8 14 78 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    m->reftime = now;
  41b78c:	e8 0f 78 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    m->refcount = 1;
  41b791:	e8 5a 74 fe ff       	callq  402bf0 <__asan_report_store4@plt>
    m->ctime = sb.st_ctime;
  41b796:	e8 05 78 fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41b79b:	4c 89 cf             	mov    %r9,%rdi
  41b79e:	e8 ad 7a fe ff       	callq  403250 <__asan_report_load8@plt>
    m->size = sb.st_size;
  41b7a3:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41b7a8:	e8 f3 77 fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41b7ad:	e8 9e 7a fe ff       	callq  403250 <__asan_report_load8@plt>
    m->dev = sb.st_dev;
  41b7b2:	e8 e9 77 fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41b7b7:	4c 89 f7             	mov    %r14,%rdi
  41b7ba:	e8 91 7a fe ff       	callq  403250 <__asan_report_load8@plt>
    m->ino = sb.st_ino;
  41b7bf:	4c 89 e7             	mov    %r12,%rdi
  41b7c2:	e8 d9 77 fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41b7c7:	e8 84 7a fe ff       	callq  403250 <__asan_report_load8@plt>
	free_maps = m->next;
  41b7cc:	e8 7f 7a fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( m->addr == (void*) -1 && errno == ENOMEM )
  41b7d1:	48 89 c7             	mov    %rax,%rdi
  41b7d4:	e8 f7 75 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	    m->addr = mmap( 0, size_size, PROT_READ, MAP_PRIVATE, fd, 0 );
  41b7d9:	4c 89 f7             	mov    %r14,%rdi
  41b7dc:	e8 bf 77 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	m->addr = mmap( 0, size_size, PROT_READ, MAP_PRIVATE, fd, 0 );
  41b7e1:	4c 89 f7             	mov    %r14,%rdi
  41b7e4:	e8 b7 77 fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41b7e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000041b7f0 <mmc_unmap>:
    {
  41b7f0:	41 54                	push   %r12
  41b7f2:	49 89 d4             	mov    %rdx,%r12
  41b7f5:	55                   	push   %rbp
  41b7f6:	48 89 fd             	mov    %rdi,%rbp
  41b7f9:	53                   	push   %rbx
    if ( sbP != (struct stat*) 0 )
  41b7fa:	48 85 f6             	test   %rsi,%rsi
  41b7fd:	0f 84 9a 00 00 00    	je     41b89d <mmc_unmap+0xad>
	m = find_hash( sbP->st_ino, sbP->st_dev, sbP->st_size, sbP->st_ctime );
  41b803:	48 8d 7e 68          	lea    0x68(%rsi),%rdi
  41b807:	48 89 f8             	mov    %rdi,%rax
  41b80a:	48 c1 e8 03          	shr    $0x3,%rax
  41b80e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b815:	0f 85 ce 01 00 00    	jne    41b9e9 <mmc_unmap+0x1f9>
  41b81b:	48 8d 7e 30          	lea    0x30(%rsi),%rdi
  41b81f:	48 8b 4e 68          	mov    0x68(%rsi),%rcx
  41b823:	48 89 f8             	mov    %rdi,%rax
  41b826:	48 c1 e8 03          	shr    $0x3,%rax
  41b82a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b831:	0f 85 bf 01 00 00    	jne    41b9f6 <mmc_unmap+0x206>
  41b837:	48 89 f0             	mov    %rsi,%rax
  41b83a:	48 8b 56 30          	mov    0x30(%rsi),%rdx
  41b83e:	48 c1 e8 03          	shr    $0x3,%rax
  41b842:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b849:	0f 85 9f 01 00 00    	jne    41b9ee <mmc_unmap+0x1fe>
  41b84f:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
  41b853:	48 8b 06             	mov    (%rsi),%rax
  41b856:	49 89 f8             	mov    %rdi,%r8
  41b859:	49 c1 e8 03          	shr    $0x3,%r8
  41b85d:	41 80 b8 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r8)
  41b864:	00 
  41b865:	0f 85 98 01 00 00    	jne    41ba03 <mmc_unmap+0x213>
  41b86b:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  41b86f:	48 89 c6             	mov    %rax,%rsi
  41b872:	e8 79 f0 ff ff       	callq  41a8f0 <find_hash>
  41b877:	48 89 c3             	mov    %rax,%rbx
	if ( m != (Map*) 0 && m->addr != addr )
  41b87a:	48 85 c0             	test   %rax,%rax
  41b87d:	74 1e                	je     41b89d <mmc_unmap+0xad>
  41b87f:	48 8d 78 30          	lea    0x30(%rax),%rdi
  41b883:	48 89 f8             	mov    %rdi,%rax
  41b886:	48 c1 e8 03          	shr    $0x3,%rax
  41b88a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b891:	0f 85 4d 01 00 00    	jne    41b9e4 <mmc_unmap+0x1f4>
  41b897:	48 39 6b 30          	cmp    %rbp,0x30(%rbx)
  41b89b:	74 76                	je     41b913 <mmc_unmap+0x123>
	for ( m = maps; m != (Map*) 0; m = m->next )
  41b89d:	48 8b 1d 5c 76 22 00 	mov    0x22765c(%rip),%rbx        # 642f00 <maps>
  41b8a4:	48 85 db             	test   %rbx,%rbx
  41b8a7:	0f 84 d3 00 00 00    	je     41b980 <mmc_unmap+0x190>
	    if ( m->addr == addr )
  41b8ad:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
  41b8b1:	48 89 f8             	mov    %rdi,%rax
  41b8b4:	48 c1 e8 03          	shr    $0x3,%rax
  41b8b8:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b8bf:	74 4c                	je     41b90d <mmc_unmap+0x11d>
  41b8c1:	e9 19 01 00 00       	jmpq   41b9df <mmc_unmap+0x1ef>
  41b8c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41b8cd:	00 00 00 
	for ( m = maps; m != (Map*) 0; m = m->next )
  41b8d0:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
  41b8d4:	48 89 f8             	mov    %rdi,%rax
  41b8d7:	48 c1 e8 03          	shr    $0x3,%rax
  41b8db:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b8e2:	0f 85 f2 00 00 00    	jne    41b9da <mmc_unmap+0x1ea>
  41b8e8:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
  41b8ec:	48 85 db             	test   %rbx,%rbx
  41b8ef:	0f 84 8b 00 00 00    	je     41b980 <mmc_unmap+0x190>
	    if ( m->addr == addr )
  41b8f5:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
  41b8f9:	48 89 f8             	mov    %rdi,%rax
  41b8fc:	48 c1 e8 03          	shr    $0x3,%rax
  41b900:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b907:	0f 85 c8 00 00 00    	jne    41b9d5 <mmc_unmap+0x1e5>
  41b90d:	48 39 6b 30          	cmp    %rbp,0x30(%rbx)
  41b911:	75 bd                	jne    41b8d0 <mmc_unmap+0xe0>
    else if ( m->refcount <= 0 )
  41b913:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
  41b917:	48 89 f8             	mov    %rdi,%rax
  41b91a:	48 c1 e8 03          	shr    $0x3,%rax
  41b91e:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41b925:	84 c0                	test   %al,%al
  41b927:	74 08                	je     41b931 <mmc_unmap+0x141>
  41b929:	3c 03                	cmp    $0x3,%al
  41b92b:	0f 8e 9f 00 00 00    	jle    41b9d0 <mmc_unmap+0x1e0>
  41b931:	8b 43 20             	mov    0x20(%rbx),%eax
  41b934:	85 c0                	test   %eax,%eax
  41b936:	7e 60                	jle    41b998 <mmc_unmap+0x1a8>
	--m->refcount;
  41b938:	83 e8 01             	sub    $0x1,%eax
  41b93b:	89 43 20             	mov    %eax,0x20(%rbx)
	if ( nowP != (struct timeval*) 0 )
  41b93e:	4d 85 e4             	test   %r12,%r12
  41b941:	74 6d                	je     41b9b0 <mmc_unmap+0x1c0>
	    m->reftime = nowP->tv_sec;
  41b943:	4c 89 e0             	mov    %r12,%rax
  41b946:	48 c1 e8 03          	shr    $0x3,%rax
  41b94a:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41b951:	0f 85 a4 00 00 00    	jne    41b9fb <mmc_unmap+0x20b>
  41b957:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
  41b95b:	49 8b 04 24          	mov    (%r12),%rax
  41b95f:	48 89 fa             	mov    %rdi,%rdx
  41b962:	48 c1 ea 03          	shr    $0x3,%rdx
  41b966:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41b96d:	0f 85 95 00 00 00    	jne    41ba08 <mmc_unmap+0x218>
	    m->reftime = time( (time_t*) 0 );
  41b973:	48 89 43 28          	mov    %rax,0x28(%rbx)
    }
  41b977:	5b                   	pop    %rbx
  41b978:	5d                   	pop    %rbp
  41b979:	41 5c                	pop    %r12
  41b97b:	c3                   	retq   
  41b97c:	0f 1f 40 00          	nopl   0x0(%rax)
  41b980:	5b                   	pop    %rbx
	syslog( LOG_ERR, "mmc_unmap failed to find entry!" );
  41b981:	be c0 cb 42 00       	mov    $0x42cbc0,%esi
    }
  41b986:	5d                   	pop    %rbp
	syslog( LOG_ERR, "mmc_unmap failed to find entry!" );
  41b987:	bf 03 00 00 00       	mov    $0x3,%edi
  41b98c:	31 c0                	xor    %eax,%eax
    }
  41b98e:	41 5c                	pop    %r12
	syslog( LOG_ERR, "mmc_unmap failed to find entry!" );
  41b990:	e9 ab 72 fe ff       	jmpq   402c40 <syslog@plt>
  41b995:	0f 1f 00             	nopl   (%rax)
    }
  41b998:	5b                   	pop    %rbx
	syslog( LOG_ERR, "mmc_unmap found zero or negative refcount!" );
  41b999:	be 60 cb 42 00       	mov    $0x42cb60,%esi
    }
  41b99e:	5d                   	pop    %rbp
	syslog( LOG_ERR, "mmc_unmap failed to find entry!" );
  41b99f:	bf 03 00 00 00       	mov    $0x3,%edi
  41b9a4:	31 c0                	xor    %eax,%eax
    }
  41b9a6:	41 5c                	pop    %r12
	syslog( LOG_ERR, "mmc_unmap failed to find entry!" );
  41b9a8:	e9 93 72 fe ff       	jmpq   402c40 <syslog@plt>
  41b9ad:	0f 1f 00             	nopl   (%rax)
	    m->reftime = time( (time_t*) 0 );
  41b9b0:	31 ff                	xor    %edi,%edi
  41b9b2:	e8 b9 75 fe ff       	callq  402f70 <time@plt>
  41b9b7:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
  41b9bb:	48 89 fa             	mov    %rdi,%rdx
  41b9be:	48 c1 ea 03          	shr    $0x3,%rdx
  41b9c2:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41b9c9:	74 a8                	je     41b973 <mmc_unmap+0x183>
  41b9cb:	e8 d0 75 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    else if ( m->refcount <= 0 )
  41b9d0:	e8 fb 73 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	    if ( m->addr == addr )
  41b9d5:	e8 76 78 fe ff       	callq  403250 <__asan_report_load8@plt>
	for ( m = maps; m != (Map*) 0; m = m->next )
  41b9da:	e8 71 78 fe ff       	callq  403250 <__asan_report_load8@plt>
	    if ( m->addr == addr )
  41b9df:	e8 6c 78 fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( m != (Map*) 0 && m->addr != addr )
  41b9e4:	e8 67 78 fe ff       	callq  403250 <__asan_report_load8@plt>
	m = find_hash( sbP->st_ino, sbP->st_dev, sbP->st_size, sbP->st_ctime );
  41b9e9:	e8 62 78 fe ff       	callq  403250 <__asan_report_load8@plt>
  41b9ee:	48 89 f7             	mov    %rsi,%rdi
  41b9f1:	e8 5a 78 fe ff       	callq  403250 <__asan_report_load8@plt>
  41b9f6:	e8 55 78 fe ff       	callq  403250 <__asan_report_load8@plt>
	    m->reftime = nowP->tv_sec;
  41b9fb:	4c 89 e7             	mov    %r12,%rdi
  41b9fe:	e8 4d 78 fe ff       	callq  403250 <__asan_report_load8@plt>
	m = find_hash( sbP->st_ino, sbP->st_dev, sbP->st_size, sbP->st_ctime );
  41ba03:	e8 48 78 fe ff       	callq  403250 <__asan_report_load8@plt>
	    m->reftime = nowP->tv_sec;
  41ba08:	e8 93 75 fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41ba0d:	0f 1f 00             	nopl   (%rax)

000000000041ba10 <mmc_cleanup>:
    {
  41ba10:	41 54                	push   %r12
  41ba12:	55                   	push   %rbp
  41ba13:	53                   	push   %rbx
    if ( nowP != (struct timeval*) 0 )
  41ba14:	48 85 ff             	test   %rdi,%rdi
  41ba17:	0f 84 c3 01 00 00    	je     41bbe0 <mmc_cleanup+0x1d0>
	now = nowP->tv_sec;
  41ba1d:	48 89 f8             	mov    %rdi,%rax
  41ba20:	48 c1 e8 03          	shr    $0x3,%rax
  41ba24:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ba2b:	0f 85 d0 01 00 00    	jne    41bc01 <mmc_cleanup+0x1f1>
  41ba31:	48 8b 2f             	mov    (%rdi),%rbp
    for ( mm = &maps; *mm != (Map*) 0; )
  41ba34:	bb 00 2f 64 00       	mov    $0x642f00,%ebx
  41ba39:	48 89 da             	mov    %rbx,%rdx
  41ba3c:	48 c1 ea 03          	shr    $0x3,%rdx
  41ba40:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41ba47:	75 6a                	jne    41bab3 <mmc_cleanup+0xa3>
  41ba49:	48 8b 13             	mov    (%rbx),%rdx
  41ba4c:	48 85 d2             	test   %rdx,%rdx
  41ba4f:	74 7f                	je     41bad0 <mmc_cleanup+0xc0>
	if ( m->refcount == 0 && now - m->reftime >= expire_age )
  41ba51:	48 8d 7a 20          	lea    0x20(%rdx),%rdi
  41ba55:	48 89 f9             	mov    %rdi,%rcx
  41ba58:	48 c1 e9 03          	shr    $0x3,%rcx
  41ba5c:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  41ba63:	84 c9                	test   %cl,%cl
  41ba65:	74 09                	je     41ba70 <mmc_cleanup+0x60>
  41ba67:	80 f9 03             	cmp    $0x3,%cl
  41ba6a:	0f 8e 87 01 00 00    	jle    41bbf7 <mmc_cleanup+0x1e7>
  41ba70:	8b 42 20             	mov    0x20(%rdx),%eax
  41ba73:	85 c0                	test   %eax,%eax
  41ba75:	75 28                	jne    41ba9f <mmc_cleanup+0x8f>
  41ba77:	48 8d 7a 28          	lea    0x28(%rdx),%rdi
  41ba7b:	48 89 f9             	mov    %rdi,%rcx
  41ba7e:	48 c1 e9 03          	shr    $0x3,%rcx
  41ba82:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41ba89:	0f 85 6d 01 00 00    	jne    41bbfc <mmc_cleanup+0x1ec>
  41ba8f:	48 89 e9             	mov    %rbp,%rcx
  41ba92:	48 2b 4a 28          	sub    0x28(%rdx),%rcx
  41ba96:	48 3b 0d 23 3f 22 00 	cmp    0x223f23(%rip),%rcx        # 63f9c0 <expire_age>
  41ba9d:	7d 21                	jge    41bac0 <mmc_cleanup+0xb0>
	    mm = &(*mm)->next;
  41ba9f:	48 8d 5a 40          	lea    0x40(%rdx),%rbx
    for ( mm = &maps; *mm != (Map*) 0; )
  41baa3:	48 89 da             	mov    %rbx,%rdx
  41baa6:	48 c1 ea 03          	shr    $0x3,%rdx
  41baaa:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41bab1:	74 96                	je     41ba49 <mmc_cleanup+0x39>
  41bab3:	48 89 df             	mov    %rbx,%rdi
  41bab6:	e8 95 77 fe ff       	callq  403250 <__asan_report_load8@plt>
  41babb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	    really_unmap( mm );
  41bac0:	48 89 df             	mov    %rbx,%rdi
  41bac3:	e8 78 f2 ff ff       	callq  41ad40 <really_unmap>
  41bac8:	e9 6c ff ff ff       	jmpq   41ba39 <mmc_cleanup+0x29>
  41bacd:	0f 1f 00             	nopl   (%rax)
    if ( mapped_bytes > DESIRED_MAX_MAPPED_BYTES )
  41bad0:	48 81 3d 25 72 22 00 	cmpq   $0x3b9aca00,0x227225(%rip)        # 642d00 <mapped_bytes>
  41bad7:	00 ca 9a 3b 
  41badb:	7f 11                	jg     41baee <mmc_cleanup+0xde>
    else if ( map_count > DESIRED_MAX_MAPPED_FILES )
  41badd:	8b 05 5d 73 22 00    	mov    0x22735d(%rip),%eax        # 642e40 <map_count>
  41bae3:	3d d0 07 00 00       	cmp    $0x7d0,%eax
  41bae8:	0f 8e b2 00 00 00    	jle    41bba0 <mmc_cleanup+0x190>
	expire_age = MAX( ( expire_age * 2 ) / 3, DEFAULT_EXPIRE_AGE / 10 );
  41baee:	48 8b 05 cb 3e 22 00 	mov    0x223ecb(%rip),%rax        # 63f9c0 <expire_age>
  41baf5:	ba 3c 00 00 00       	mov    $0x3c,%edx
  41bafa:	48 8d 0c 00          	lea    (%rax,%rax,1),%rcx
  41bafe:	48 81 f9 b6 00 00 00 	cmp    $0xb6,%rcx
  41bb05:	7f 79                	jg     41bb80 <mmc_cleanup+0x170>
  41bb07:	48 89 15 b2 3e 22 00 	mov    %rdx,0x223eb2(%rip)        # 63f9c0 <expire_age>
    while ( free_count > DESIRED_FREE_COUNT )
  41bb0e:	8b 05 ec 72 22 00    	mov    0x2272ec(%rip),%eax        # 642e00 <free_count>
  41bb14:	83 f8 64             	cmp    $0x64,%eax
  41bb17:	7e 5a                	jle    41bb73 <mmc_cleanup+0x163>
	--alloc_count;
  41bb19:	44 8b 25 60 73 22 00 	mov    0x227360(%rip),%r12d        # 642e80 <alloc_count>
  41bb20:	48 8b 3d 99 73 22 00 	mov    0x227399(%rip),%rdi        # 642ec0 <free_maps>
  41bb27:	8d 58 ff             	lea    -0x1(%rax),%ebx
  41bb2a:	41 29 c4             	sub    %eax,%r12d
  41bb2d:	eb 04                	jmp    41bb33 <mmc_cleanup+0x123>
  41bb2f:	90                   	nop
  41bb30:	48 89 ef             	mov    %rbp,%rdi
	free_maps = m->next;
  41bb33:	48 8d 47 40          	lea    0x40(%rdi),%rax
  41bb37:	48 89 c2             	mov    %rax,%rdx
  41bb3a:	48 c1 ea 03          	shr    $0x3,%rdx
  41bb3e:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41bb45:	0f 85 a4 00 00 00    	jne    41bbef <mmc_cleanup+0x1df>
  41bb4b:	48 8b 6f 40          	mov    0x40(%rdi),%rbp
	--free_count;
  41bb4f:	89 1d ab 72 22 00    	mov    %ebx,0x2272ab(%rip)        # 642e00 <free_count>
	free_maps = m->next;
  41bb55:	48 89 2d 64 73 22 00 	mov    %rbp,0x227364(%rip)        # 642ec0 <free_maps>
	free( (void*) m );
  41bb5c:	e8 6f 71 fe ff       	callq  402cd0 <free@plt>
	--alloc_count;
  41bb61:	41 8d 04 1c          	lea    (%r12,%rbx,1),%eax
  41bb65:	83 eb 01             	sub    $0x1,%ebx
  41bb68:	89 05 12 73 22 00    	mov    %eax,0x227312(%rip)        # 642e80 <alloc_count>
    while ( free_count > DESIRED_FREE_COUNT )
  41bb6e:	83 fb 63             	cmp    $0x63,%ebx
  41bb71:	75 bd                	jne    41bb30 <mmc_cleanup+0x120>
    }
  41bb73:	5b                   	pop    %rbx
  41bb74:	5d                   	pop    %rbp
  41bb75:	41 5c                	pop    %r12
  41bb77:	c3                   	retq   
  41bb78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41bb7f:	00 
	expire_age = MAX( ( expire_age * 2 ) / 3, DEFAULT_EXPIRE_AGE / 10 );
  41bb80:	48 ba 56 55 55 55 55 	movabs $0x5555555555555556,%rdx
  41bb87:	55 55 55 
  41bb8a:	48 89 c8             	mov    %rcx,%rax
  41bb8d:	48 c1 f9 3f          	sar    $0x3f,%rcx
  41bb91:	48 f7 ea             	imul   %rdx
  41bb94:	48 29 ca             	sub    %rcx,%rdx
  41bb97:	e9 6b ff ff ff       	jmpq   41bb07 <mmc_cleanup+0xf7>
  41bb9c:	0f 1f 40 00          	nopl   0x0(%rax)
    else if ( map_count < DESIRED_MAX_MAPPED_FILES / 2 )
  41bba0:	3d e7 03 00 00       	cmp    $0x3e7,%eax
  41bba5:	0f 8f 63 ff ff ff    	jg     41bb0e <mmc_cleanup+0xfe>
	expire_age = MIN( ( expire_age * 5 ) / 4, DEFAULT_EXPIRE_AGE * 3 );
  41bbab:	48 8b 05 0e 3e 22 00 	mov    0x223e0e(%rip),%rax        # 63f9c0 <expire_age>
  41bbb2:	48 8d 14 80          	lea    (%rax,%rax,4),%rdx
  41bbb6:	b8 08 07 00 00       	mov    $0x708,%eax
  41bbbb:	48 81 fa 1f 1c 00 00 	cmp    $0x1c1f,%rdx
  41bbc2:	7f 0f                	jg     41bbd3 <mmc_cleanup+0x1c3>
  41bbc4:	48 85 d2             	test   %rdx,%rdx
  41bbc7:	48 8d 42 03          	lea    0x3(%rdx),%rax
  41bbcb:	48 0f 49 c2          	cmovns %rdx,%rax
  41bbcf:	48 c1 f8 02          	sar    $0x2,%rax
  41bbd3:	48 89 05 e6 3d 22 00 	mov    %rax,0x223de6(%rip)        # 63f9c0 <expire_age>
  41bbda:	e9 2f ff ff ff       	jmpq   41bb0e <mmc_cleanup+0xfe>
  41bbdf:	90                   	nop
	now = time( (time_t*) 0 );
  41bbe0:	31 ff                	xor    %edi,%edi
  41bbe2:	e8 89 73 fe ff       	callq  402f70 <time@plt>
  41bbe7:	48 89 c5             	mov    %rax,%rbp
  41bbea:	e9 45 fe ff ff       	jmpq   41ba34 <mmc_cleanup+0x24>
	free_maps = m->next;
  41bbef:	48 89 c7             	mov    %rax,%rdi
  41bbf2:	e8 59 76 fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( m->refcount == 0 && now - m->reftime >= expire_age )
  41bbf7:	e8 d4 71 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41bbfc:	e8 4f 76 fe ff       	callq  403250 <__asan_report_load8@plt>
	now = nowP->tv_sec;
  41bc01:	e8 4a 76 fe ff       	callq  403250 <__asan_report_load8@plt>
  41bc06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41bc0d:	00 00 00 

000000000041bc10 <mmc_destroy>:
    while ( maps != (Map*) 0 )
  41bc10:	48 83 3d e8 72 22 00 	cmpq   $0x0,0x2272e8(%rip)        # 642f00 <maps>
  41bc17:	00 
    {
  41bc18:	41 54                	push   %r12
  41bc1a:	55                   	push   %rbp
  41bc1b:	53                   	push   %rbx
    while ( maps != (Map*) 0 )
  41bc1c:	74 16                	je     41bc34 <mmc_destroy+0x24>
  41bc1e:	66 90                	xchg   %ax,%ax
	really_unmap( &maps );
  41bc20:	bf 00 2f 64 00       	mov    $0x642f00,%edi
  41bc25:	e8 16 f1 ff ff       	callq  41ad40 <really_unmap>
    while ( maps != (Map*) 0 )
  41bc2a:	48 83 3d ce 72 22 00 	cmpq   $0x0,0x2272ce(%rip)        # 642f00 <maps>
  41bc31:	00 
  41bc32:	75 ec                	jne    41bc20 <mmc_destroy+0x10>
    while ( free_maps != (Map*) 0 )
  41bc34:	48 8b 3d 85 72 22 00 	mov    0x227285(%rip),%rdi        # 642ec0 <free_maps>
  41bc3b:	48 85 ff             	test   %rdi,%rdi
  41bc3e:	74 57                	je     41bc97 <mmc_destroy+0x87>
  41bc40:	8b 05 ba 71 22 00    	mov    0x2271ba(%rip),%eax        # 642e00 <free_count>
	--alloc_count;
  41bc46:	44 8b 25 33 72 22 00 	mov    0x227233(%rip),%r12d        # 642e80 <alloc_count>
  41bc4d:	8d 58 ff             	lea    -0x1(%rax),%ebx
  41bc50:	41 29 c4             	sub    %eax,%r12d
  41bc53:	eb 06                	jmp    41bc5b <mmc_destroy+0x4b>
  41bc55:	0f 1f 00             	nopl   (%rax)
  41bc58:	48 89 ef             	mov    %rbp,%rdi
	free_maps = m->next;
  41bc5b:	48 8d 47 40          	lea    0x40(%rdi),%rax
  41bc5f:	48 89 c2             	mov    %rax,%rdx
  41bc62:	48 c1 ea 03          	shr    $0x3,%rdx
  41bc66:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41bc6d:	75 2d                	jne    41bc9c <mmc_destroy+0x8c>
  41bc6f:	48 8b 6f 40          	mov    0x40(%rdi),%rbp
	--free_count;
  41bc73:	89 1d 87 71 22 00    	mov    %ebx,0x227187(%rip)        # 642e00 <free_count>
	free_maps = m->next;
  41bc79:	48 89 2d 40 72 22 00 	mov    %rbp,0x227240(%rip)        # 642ec0 <free_maps>
	free( (void*) m );
  41bc80:	e8 4b 70 fe ff       	callq  402cd0 <free@plt>
	--alloc_count;
  41bc85:	41 8d 04 1c          	lea    (%r12,%rbx,1),%eax
  41bc89:	83 eb 01             	sub    $0x1,%ebx
  41bc8c:	89 05 ee 71 22 00    	mov    %eax,0x2271ee(%rip)        # 642e80 <alloc_count>
    while ( free_maps != (Map*) 0 )
  41bc92:	48 85 ed             	test   %rbp,%rbp
  41bc95:	75 c1                	jne    41bc58 <mmc_destroy+0x48>
    }
  41bc97:	5b                   	pop    %rbx
  41bc98:	5d                   	pop    %rbp
  41bc99:	41 5c                	pop    %r12
  41bc9b:	c3                   	retq   
	free_maps = m->next;
  41bc9c:	48 89 c7             	mov    %rax,%rdi
  41bc9f:	e8 ac 75 fe ff       	callq  403250 <__asan_report_load8@plt>
  41bca4:	66 90                	xchg   %ax,%ax
  41bca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41bcad:	00 00 00 

000000000041bcb0 <mmc_logstats>:


/* Generate debugging statistics syslog message. */
void
mmc_logstats( long secs )
    {
  41bcb0:	48 83 ec 08          	sub    $0x8,%rsp
    syslog(
  41bcb4:	8b 05 c6 70 22 00    	mov    0x2270c6(%rip),%eax        # 642d80 <hash_size>
  41bcba:	ff 35 00 3d 22 00    	pushq  0x223d00(%rip)        # 63f9c0 <expire_age>
  41bcc0:	be 00 cc 42 00       	mov    $0x42cc00,%esi
  41bcc5:	8b 0d 75 71 22 00    	mov    0x227175(%rip),%ecx        # 642e40 <map_count>
  41bccb:	bf 06 00 00 00       	mov    $0x6,%edi
  41bcd0:	8b 15 aa 71 22 00    	mov    0x2271aa(%rip),%edx        # 642e80 <alloc_count>
  41bcd6:	44 8b 0d 23 71 22 00 	mov    0x227123(%rip),%r9d        # 642e00 <free_count>
  41bcdd:	50                   	push   %rax
  41bcde:	31 c0                	xor    %eax,%eax
  41bce0:	4c 8b 05 19 70 22 00 	mov    0x227019(%rip),%r8        # 642d00 <mapped_bytes>
  41bce7:	e8 54 6f fe ff       	callq  402c40 <syslog@plt>
	LOG_INFO, "  map cache - %d allocated, %d active (%lld bytes), %d free; hash size: %d; expire age: %ld",
	alloc_count, map_count, (int64_t) mapped_bytes, free_count, hash_size,
	expire_age );
    if ( map_count + free_count != alloc_count )
  41bcec:	8b 05 0e 71 22 00    	mov    0x22710e(%rip),%eax        # 642e00 <free_count>
  41bcf2:	5a                   	pop    %rdx
  41bcf3:	03 05 47 71 22 00    	add    0x227147(%rip),%eax        # 642e40 <map_count>
  41bcf9:	3b 05 81 71 22 00    	cmp    0x227181(%rip),%eax        # 642e80 <alloc_count>
  41bcff:	59                   	pop    %rcx
  41bd00:	75 0e                	jne    41bd10 <mmc_logstats+0x60>
	syslog( LOG_ERR, "map counts don't add up!" );
    }
  41bd02:	48 83 c4 08          	add    $0x8,%rsp
  41bd06:	c3                   	retq   
  41bd07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41bd0e:	00 00 
	syslog( LOG_ERR, "map counts don't add up!" );
  41bd10:	be 80 cc 42 00       	mov    $0x42cc80,%esi
  41bd15:	bf 03 00 00 00       	mov    $0x3,%edi
  41bd1a:	31 c0                	xor    %eax,%eax
    }
  41bd1c:	48 83 c4 08          	add    $0x8,%rsp
	syslog( LOG_ERR, "map counts don't add up!" );
  41bd20:	e9 1b 6f fe ff       	jmpq   402c40 <syslog@plt>
  41bd25:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41bd2c:	00 00 00 
  41bd2f:	90                   	nop

000000000041bd30 <l_add>:


static void
l_add( Timer* t )
    {
    int h = t->hash;
  41bd30:	48 8d 57 40          	lea    0x40(%rdi),%rdx
    {
  41bd34:	48 83 ec 08          	sub    $0x8,%rsp
    int h = t->hash;
  41bd38:	48 89 d0             	mov    %rdx,%rax
  41bd3b:	48 c1 e8 03          	shr    $0x3,%rax
  41bd3f:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41bd46:	84 c0                	test   %al,%al
  41bd48:	74 08                	je     41bd52 <l_add+0x22>
  41bd4a:	3c 03                	cmp    $0x3,%al
  41bd4c:	0f 8e 37 03 00 00    	jle    41c089 <l_add+0x359>
    register Timer* t2;
    register Timer* t2prev;

    t2 = timers[h];
  41bd52:	48 63 47 40          	movslq 0x40(%rdi),%rax
  41bd56:	48 8d 14 c5 00 31 64 	lea    0x643100(,%rax,8),%rdx
  41bd5d:	00 
  41bd5e:	48 89 d1             	mov    %rdx,%rcx
  41bd61:	48 c1 e9 03          	shr    $0x3,%rcx
  41bd65:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41bd6c:	0f 85 71 03 00 00    	jne    41c0e3 <l_add+0x3b3>
  41bd72:	48 8b 34 c5 00 31 64 	mov    0x643100(,%rax,8),%rsi
  41bd79:	00 
    if ( t2 == (Timer*) 0 )
  41bd7a:	48 85 f6             	test   %rsi,%rsi
  41bd7d:	0f 84 55 02 00 00    	je     41bfd8 <l_add+0x2a8>
	timers[h] = t;
	t->prev = t->next = (Timer*) 0;
	}
    else
	{
	if ( t->time.tv_sec < t2->time.tv_sec ||
  41bd83:	48 8d 57 20          	lea    0x20(%rdi),%rdx
  41bd87:	48 89 d1             	mov    %rdx,%rcx
  41bd8a:	48 c1 e9 03          	shr    $0x3,%rcx
  41bd8e:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41bd95:	0f 85 30 03 00 00    	jne    41c0cb <l_add+0x39b>
  41bd9b:	48 8d 56 20          	lea    0x20(%rsi),%rdx
  41bd9f:	4c 8b 47 20          	mov    0x20(%rdi),%r8
  41bda3:	48 89 d1             	mov    %rdx,%rcx
  41bda6:	48 c1 e9 03          	shr    $0x3,%rcx
  41bdaa:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41bdb1:	0f 85 0c 03 00 00    	jne    41c0c3 <l_add+0x393>
  41bdb7:	4c 3b 46 20          	cmp    0x20(%rsi),%r8
  41bdbb:	0f 8c af 01 00 00    	jl     41bf70 <l_add+0x240>
  41bdc1:	0f 84 61 01 00 00    	je     41bf28 <l_add+0x1f8>
	    t2->prev = t;
	    }
	else
	    {
	    /* Walk the list to find the insertion point. */
	    for ( t2prev = t2, t2 = t2->next; t2 != (Timer*) 0;
  41bdc7:	4c 8d 4e 38          	lea    0x38(%rsi),%r9
  41bdcb:	4c 89 c8             	mov    %r9,%rax
  41bdce:	48 c1 e8 03          	shr    $0x3,%rax
  41bdd2:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41bdd9:	0f 85 44 03 00 00    	jne    41c123 <l_add+0x3f3>
  41bddf:	48 8b 46 38          	mov    0x38(%rsi),%rax
  41bde3:	48 85 c0             	test   %rax,%rax
  41bde6:	0f 84 39 02 00 00    	je     41c025 <l_add+0x2f5>
		  t2prev = t2, t2 = t2->next )
		{
		if ( t->time.tv_sec < t2->time.tv_sec ||
  41bdec:	48 8d 50 20          	lea    0x20(%rax),%rdx
  41bdf0:	48 89 d1             	mov    %rdx,%rcx
  41bdf3:	48 c1 e9 03          	shr    $0x3,%rcx
  41bdf7:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41bdfe:	0f 85 17 03 00 00    	jne    41c11b <l_add+0x3eb>
  41be04:	48 8b 48 20          	mov    0x20(%rax),%rcx
  41be08:	49 39 c8             	cmp    %rcx,%r8
  41be0b:	0f 8c 87 02 00 00    	jl     41c098 <l_add+0x368>
		     ( t->time.tv_sec == t2->time.tv_sec &&
		       t->time.tv_usec <= t2->time.tv_usec ) )
  41be11:	4c 8d 5f 28          	lea    0x28(%rdi),%r11
  41be15:	4d 89 da             	mov    %r11,%r10
  41be18:	49 c1 ea 03          	shr    $0x3,%r10
  41be1c:	eb 4e                	jmp    41be6c <l_add+0x13c>
  41be1e:	66 90                	xchg   %ax,%ax
		  t2prev = t2, t2 = t2->next )
  41be20:	4c 8d 48 38          	lea    0x38(%rax),%r9
  41be24:	4c 89 ca             	mov    %r9,%rdx
  41be27:	48 c1 ea 03          	shr    $0x3,%rdx
  41be2b:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41be32:	0f 85 6b 02 00 00    	jne    41c0a3 <l_add+0x373>
  41be38:	48 8b 50 38          	mov    0x38(%rax),%rdx
	    for ( t2prev = t2, t2 = t2->next; t2 != (Timer*) 0;
  41be3c:	48 85 d2             	test   %rdx,%rdx
  41be3f:	0f 84 eb 01 00 00    	je     41c030 <l_add+0x300>
		if ( t->time.tv_sec < t2->time.tv_sec ||
  41be45:	48 8d 4a 20          	lea    0x20(%rdx),%rcx
  41be49:	48 89 ce             	mov    %rcx,%rsi
  41be4c:	48 c1 ee 03          	shr    $0x3,%rsi
  41be50:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  41be57:	0f 85 4e 02 00 00    	jne    41c0ab <l_add+0x37b>
  41be5d:	48 8b 4a 20          	mov    0x20(%rdx),%rcx
  41be61:	48 89 c6             	mov    %rax,%rsi
  41be64:	49 39 c8             	cmp    %rcx,%r8
  41be67:	7c 47                	jl     41beb0 <l_add+0x180>
  41be69:	48 89 d0             	mov    %rdx,%rax
  41be6c:	49 39 c8             	cmp    %rcx,%r8
  41be6f:	75 af                	jne    41be20 <l_add+0xf0>
		       t->time.tv_usec <= t2->time.tv_usec ) )
  41be71:	41 80 ba 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r10)
  41be78:	00 
  41be79:	0f 85 34 02 00 00    	jne    41c0b3 <l_add+0x383>
  41be7f:	48 8d 50 28          	lea    0x28(%rax),%rdx
  41be83:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
  41be87:	49 89 d1             	mov    %rdx,%r9
  41be8a:	49 c1 e9 03          	shr    $0x3,%r9
  41be8e:	41 80 b9 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r9)
  41be95:	00 
  41be96:	0f 85 1f 02 00 00    	jne    41c0bb <l_add+0x38b>
		     ( t->time.tv_sec == t2->time.tv_sec &&
  41be9c:	48 3b 48 28          	cmp    0x28(%rax),%rcx
  41bea0:	0f 8f 7a ff ff ff    	jg     41be20 <l_add+0xf0>
  41bea6:	48 89 c2             	mov    %rax,%rdx
  41bea9:	4c 8d 4e 38          	lea    0x38(%rsi),%r9
  41bead:	48 89 f0             	mov    %rsi,%rax
		    {
		    /* Found it. */
		    t2prev->next = t;
  41beb0:	4c 89 c9             	mov    %r9,%rcx
  41beb3:	48 c1 e9 03          	shr    $0x3,%rcx
  41beb7:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41bebe:	0f 85 2f 02 00 00    	jne    41c0f3 <l_add+0x3c3>
		    t->prev = t2prev;
  41bec4:	48 8d 4f 30          	lea    0x30(%rdi),%rcx
		    t2prev->next = t;
  41bec8:	48 89 78 38          	mov    %rdi,0x38(%rax)
		    t->prev = t2prev;
  41becc:	48 89 ce             	mov    %rcx,%rsi
  41becf:	48 c1 ee 03          	shr    $0x3,%rsi
  41bed3:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  41beda:	0f 85 53 02 00 00    	jne    41c133 <l_add+0x403>
  41bee0:	48 89 47 30          	mov    %rax,0x30(%rdi)
		    t->next = t2;
  41bee4:	48 8d 47 38          	lea    0x38(%rdi),%rax
  41bee8:	48 89 c1             	mov    %rax,%rcx
  41beeb:	48 c1 e9 03          	shr    $0x3,%rcx
  41beef:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41bef6:	0f 85 2f 02 00 00    	jne    41c12b <l_add+0x3fb>
		    t2->prev = t;
  41befc:	48 8d 42 30          	lea    0x30(%rdx),%rax
		    t->next = t2;
  41bf00:	48 89 57 38          	mov    %rdx,0x38(%rdi)
		    t2->prev = t;
  41bf04:	48 89 c1             	mov    %rax,%rcx
  41bf07:	48 c1 e9 03          	shr    $0x3,%rcx
  41bf0b:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41bf12:	0f 85 3b 02 00 00    	jne    41c153 <l_add+0x423>
  41bf18:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
	    t2prev->next = t;
	    t->prev = t2prev;
	    t->next = (Timer*) 0;
	    }
	}
    }
  41bf1c:	48 83 c4 08          	add    $0x8,%rsp
  41bf20:	c3                   	retq   
  41bf21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	       t->time.tv_usec <= t2->time.tv_usec ) )
  41bf28:	48 8d 57 28          	lea    0x28(%rdi),%rdx
  41bf2c:	48 89 d1             	mov    %rdx,%rcx
  41bf2f:	48 c1 e9 03          	shr    $0x3,%rcx
  41bf33:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41bf3a:	0f 85 c3 01 00 00    	jne    41c103 <l_add+0x3d3>
  41bf40:	48 8d 56 28          	lea    0x28(%rsi),%rdx
  41bf44:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
  41bf48:	49 89 d1             	mov    %rdx,%r9
  41bf4b:	49 c1 e9 03          	shr    $0x3,%r9
  41bf4f:	41 80 b9 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r9)
  41bf56:	00 
  41bf57:	0f 85 9e 01 00 00    	jne    41c0fb <l_add+0x3cb>
	     ( t->time.tv_sec == t2->time.tv_sec &&
  41bf5d:	48 3b 4e 28          	cmp    0x28(%rsi),%rcx
  41bf61:	0f 8f 60 fe ff ff    	jg     41bdc7 <l_add+0x97>
  41bf67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41bf6e:	00 00 
	    timers[h] = t;
  41bf70:	48 89 3c c5 00 31 64 	mov    %rdi,0x643100(,%rax,8)
  41bf77:	00 
	    t->prev = (Timer*) 0;
  41bf78:	48 8d 47 30          	lea    0x30(%rdi),%rax
  41bf7c:	48 89 c2             	mov    %rax,%rdx
  41bf7f:	48 c1 ea 03          	shr    $0x3,%rdx
  41bf83:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41bf8a:	0f 85 43 01 00 00    	jne    41c0d3 <l_add+0x3a3>
	    t->next = t2;
  41bf90:	48 8d 47 38          	lea    0x38(%rdi),%rax
	    t->prev = (Timer*) 0;
  41bf94:	48 c7 47 30 00 00 00 	movq   $0x0,0x30(%rdi)
  41bf9b:	00 
	    t->next = t2;
  41bf9c:	48 89 c2             	mov    %rax,%rdx
  41bf9f:	48 c1 ea 03          	shr    $0x3,%rdx
  41bfa3:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41bfaa:	0f 85 2b 01 00 00    	jne    41c0db <l_add+0x3ab>
	    t2->prev = t;
  41bfb0:	48 8d 46 30          	lea    0x30(%rsi),%rax
	    t->next = t2;
  41bfb4:	48 89 77 38          	mov    %rsi,0x38(%rdi)
	    t2->prev = t;
  41bfb8:	48 89 c2             	mov    %rax,%rdx
  41bfbb:	48 c1 ea 03          	shr    $0x3,%rdx
  41bfbf:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41bfc6:	0f 85 1f 01 00 00    	jne    41c0eb <l_add+0x3bb>
  41bfcc:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    }
  41bfd0:	48 83 c4 08          	add    $0x8,%rsp
  41bfd4:	c3                   	retq   
  41bfd5:	0f 1f 00             	nopl   (%rax)
	timers[h] = t;
  41bfd8:	48 89 3c c5 00 31 64 	mov    %rdi,0x643100(,%rax,8)
  41bfdf:	00 
	t->prev = t->next = (Timer*) 0;
  41bfe0:	48 8d 47 38          	lea    0x38(%rdi),%rax
  41bfe4:	48 89 c2             	mov    %rax,%rdx
  41bfe7:	48 c1 ea 03          	shr    $0x3,%rdx
  41bfeb:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41bff2:	0f 85 1b 01 00 00    	jne    41c113 <l_add+0x3e3>
  41bff8:	48 8d 47 30          	lea    0x30(%rdi),%rax
  41bffc:	48 c7 47 38 00 00 00 	movq   $0x0,0x38(%rdi)
  41c003:	00 
  41c004:	48 89 c2             	mov    %rax,%rdx
  41c007:	48 c1 ea 03          	shr    $0x3,%rdx
  41c00b:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41c012:	0f 85 f3 00 00 00    	jne    41c10b <l_add+0x3db>
  41c018:	48 c7 47 30 00 00 00 	movq   $0x0,0x30(%rdi)
  41c01f:	00 
    }
  41c020:	48 83 c4 08          	add    $0x8,%rsp
  41c024:	c3                   	retq   
	    for ( t2prev = t2, t2 = t2->next; t2 != (Timer*) 0;
  41c025:	48 89 f0             	mov    %rsi,%rax
  41c028:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41c02f:	00 
	    t2prev->next = t;
  41c030:	4c 89 ca             	mov    %r9,%rdx
  41c033:	48 c1 ea 03          	shr    $0x3,%rdx
  41c037:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41c03e:	0f 85 07 01 00 00    	jne    41c14b <l_add+0x41b>
	    t->prev = t2prev;
  41c044:	48 8d 57 30          	lea    0x30(%rdi),%rdx
	    t2prev->next = t;
  41c048:	48 89 78 38          	mov    %rdi,0x38(%rax)
	    t->prev = t2prev;
  41c04c:	48 89 d1             	mov    %rdx,%rcx
  41c04f:	48 c1 e9 03          	shr    $0x3,%rcx
  41c053:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41c05a:	0f 85 e3 00 00 00    	jne    41c143 <l_add+0x413>
  41c060:	48 89 47 30          	mov    %rax,0x30(%rdi)
	    t->next = (Timer*) 0;
  41c064:	48 8d 47 38          	lea    0x38(%rdi),%rax
  41c068:	48 89 c2             	mov    %rax,%rdx
  41c06b:	48 c1 ea 03          	shr    $0x3,%rdx
  41c06f:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41c076:	0f 85 bf 00 00 00    	jne    41c13b <l_add+0x40b>
  41c07c:	48 c7 47 38 00 00 00 	movq   $0x0,0x38(%rdi)
  41c083:	00 
    }
  41c084:	48 83 c4 08          	add    $0x8,%rsp
  41c088:	c3                   	retq   
    int h = t->hash;
  41c089:	48 89 d7             	mov    %rdx,%rdi
  41c08c:	e8 3f 6d fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41c091:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
		if ( t->time.tv_sec < t2->time.tv_sec ||
  41c098:	48 89 c2             	mov    %rax,%rdx
  41c09b:	48 89 f0             	mov    %rsi,%rax
  41c09e:	e9 0d fe ff ff       	jmpq   41beb0 <l_add+0x180>
		  t2prev = t2, t2 = t2->next )
  41c0a3:	4c 89 cf             	mov    %r9,%rdi
  41c0a6:	e8 a5 71 fe ff       	callq  403250 <__asan_report_load8@plt>
		if ( t->time.tv_sec < t2->time.tv_sec ||
  41c0ab:	48 89 cf             	mov    %rcx,%rdi
  41c0ae:	e8 9d 71 fe ff       	callq  403250 <__asan_report_load8@plt>
		       t->time.tv_usec <= t2->time.tv_usec ) )
  41c0b3:	4c 89 df             	mov    %r11,%rdi
  41c0b6:	e8 95 71 fe ff       	callq  403250 <__asan_report_load8@plt>
  41c0bb:	48 89 d7             	mov    %rdx,%rdi
  41c0be:	e8 8d 71 fe ff       	callq  403250 <__asan_report_load8@plt>
	if ( t->time.tv_sec < t2->time.tv_sec ||
  41c0c3:	48 89 d7             	mov    %rdx,%rdi
  41c0c6:	e8 85 71 fe ff       	callq  403250 <__asan_report_load8@plt>
  41c0cb:	48 89 d7             	mov    %rdx,%rdi
  41c0ce:	e8 7d 71 fe ff       	callq  403250 <__asan_report_load8@plt>
	    t->prev = (Timer*) 0;
  41c0d3:	48 89 c7             	mov    %rax,%rdi
  41c0d6:	e8 c5 6e fe ff       	callq  402fa0 <__asan_report_store8@plt>
	    t->next = t2;
  41c0db:	48 89 c7             	mov    %rax,%rdi
  41c0de:	e8 bd 6e fe ff       	callq  402fa0 <__asan_report_store8@plt>
    t2 = timers[h];
  41c0e3:	48 89 d7             	mov    %rdx,%rdi
  41c0e6:	e8 65 71 fe ff       	callq  403250 <__asan_report_load8@plt>
	    t2->prev = t;
  41c0eb:	48 89 c7             	mov    %rax,%rdi
  41c0ee:	e8 ad 6e fe ff       	callq  402fa0 <__asan_report_store8@plt>
		    t2prev->next = t;
  41c0f3:	4c 89 cf             	mov    %r9,%rdi
  41c0f6:	e8 a5 6e fe ff       	callq  402fa0 <__asan_report_store8@plt>
	       t->time.tv_usec <= t2->time.tv_usec ) )
  41c0fb:	48 89 d7             	mov    %rdx,%rdi
  41c0fe:	e8 4d 71 fe ff       	callq  403250 <__asan_report_load8@plt>
  41c103:	48 89 d7             	mov    %rdx,%rdi
  41c106:	e8 45 71 fe ff       	callq  403250 <__asan_report_load8@plt>
	t->prev = t->next = (Timer*) 0;
  41c10b:	48 89 c7             	mov    %rax,%rdi
  41c10e:	e8 8d 6e fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41c113:	48 89 c7             	mov    %rax,%rdi
  41c116:	e8 85 6e fe ff       	callq  402fa0 <__asan_report_store8@plt>
		if ( t->time.tv_sec < t2->time.tv_sec ||
  41c11b:	48 89 d7             	mov    %rdx,%rdi
  41c11e:	e8 2d 71 fe ff       	callq  403250 <__asan_report_load8@plt>
	    for ( t2prev = t2, t2 = t2->next; t2 != (Timer*) 0;
  41c123:	4c 89 cf             	mov    %r9,%rdi
  41c126:	e8 25 71 fe ff       	callq  403250 <__asan_report_load8@plt>
		    t->next = t2;
  41c12b:	48 89 c7             	mov    %rax,%rdi
  41c12e:	e8 6d 6e fe ff       	callq  402fa0 <__asan_report_store8@plt>
		    t->prev = t2prev;
  41c133:	48 89 cf             	mov    %rcx,%rdi
  41c136:	e8 65 6e fe ff       	callq  402fa0 <__asan_report_store8@plt>
	    t->next = (Timer*) 0;
  41c13b:	48 89 c7             	mov    %rax,%rdi
  41c13e:	e8 5d 6e fe ff       	callq  402fa0 <__asan_report_store8@plt>
	    t->prev = t2prev;
  41c143:	48 89 d7             	mov    %rdx,%rdi
  41c146:	e8 55 6e fe ff       	callq  402fa0 <__asan_report_store8@plt>
	    t2prev->next = t;
  41c14b:	4c 89 cf             	mov    %r9,%rdi
  41c14e:	e8 4d 6e fe ff       	callq  402fa0 <__asan_report_store8@plt>
		    t2->prev = t;
  41c153:	48 89 c7             	mov    %rax,%rdi
  41c156:	e8 45 6e fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41c15b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000041c160 <l_remove>:
static void
l_remove( Timer* t )
    {
    int h = t->hash;

    if ( t->prev == (Timer*) 0 )
  41c160:	48 8d 47 30          	lea    0x30(%rdi),%rax
    {
  41c164:	48 83 ec 08          	sub    $0x8,%rsp
    if ( t->prev == (Timer*) 0 )
  41c168:	48 89 c2             	mov    %rax,%rdx
  41c16b:	48 c1 ea 03          	shr    $0x3,%rdx
  41c16f:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41c176:	0f 85 c4 00 00 00    	jne    41c240 <l_remove+0xe0>
  41c17c:	48 8d 57 38          	lea    0x38(%rdi),%rdx
  41c180:	48 8b 47 30          	mov    0x30(%rdi),%rax
  41c184:	48 89 d1             	mov    %rdx,%rcx
  41c187:	48 c1 e9 03          	shr    $0x3,%rcx
  41c18b:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41c192:	0f 85 a0 00 00 00    	jne    41c238 <l_remove+0xd8>
  41c198:	48 8b 57 38          	mov    0x38(%rdi),%rdx
  41c19c:	48 85 c0             	test   %rax,%rax
  41c19f:	74 4f                	je     41c1f0 <l_remove+0x90>
	timers[h] = t->next;
    else
	t->prev->next = t->next;
  41c1a1:	48 8d 48 38          	lea    0x38(%rax),%rcx
  41c1a5:	48 89 ce             	mov    %rcx,%rsi
  41c1a8:	48 c1 ee 03          	shr    $0x3,%rsi
  41c1ac:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  41c1b3:	0f 85 94 00 00 00    	jne    41c24d <l_remove+0xed>
  41c1b9:	48 89 50 38          	mov    %rdx,0x38(%rax)
    if ( t->next != (Timer*) 0 )
  41c1bd:	48 8b 47 38          	mov    0x38(%rdi),%rax
  41c1c1:	48 85 c0             	test   %rax,%rax
  41c1c4:	74 1c                	je     41c1e2 <l_remove+0x82>
	t->next->prev = t->prev;
  41c1c6:	48 8b 57 30          	mov    0x30(%rdi),%rdx
  41c1ca:	48 8d 78 30          	lea    0x30(%rax),%rdi
  41c1ce:	48 89 f9             	mov    %rdi,%rcx
  41c1d1:	48 c1 e9 03          	shr    $0x3,%rcx
  41c1d5:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41c1dc:	75 6a                	jne    41c248 <l_remove+0xe8>
  41c1de:	48 89 50 30          	mov    %rdx,0x30(%rax)
    }
  41c1e2:	48 83 c4 08          	add    $0x8,%rsp
  41c1e6:	c3                   	retq   
  41c1e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41c1ee:	00 00 
    int h = t->hash;
  41c1f0:	48 8d 4f 40          	lea    0x40(%rdi),%rcx
  41c1f4:	48 89 c8             	mov    %rcx,%rax
  41c1f7:	48 c1 e8 03          	shr    $0x3,%rax
  41c1fb:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41c202:	84 c0                	test   %al,%al
  41c204:	74 04                	je     41c20a <l_remove+0xaa>
  41c206:	3c 03                	cmp    $0x3,%al
  41c208:	7e 26                	jle    41c230 <l_remove+0xd0>
	timers[h] = t->next;
  41c20a:	48 63 47 40          	movslq 0x40(%rdi),%rax
  41c20e:	48 8d 0c c5 00 31 64 	lea    0x643100(,%rax,8),%rcx
  41c215:	00 
  41c216:	48 89 ce             	mov    %rcx,%rsi
  41c219:	48 c1 ee 03          	shr    $0x3,%rsi
  41c21d:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  41c224:	75 2f                	jne    41c255 <l_remove+0xf5>
  41c226:	48 89 14 c5 00 31 64 	mov    %rdx,0x643100(,%rax,8)
  41c22d:	00 
  41c22e:	eb 8d                	jmp    41c1bd <l_remove+0x5d>
    int h = t->hash;
  41c230:	48 89 cf             	mov    %rcx,%rdi
  41c233:	e8 98 6b fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41c238:	48 89 d7             	mov    %rdx,%rdi
  41c23b:	e8 10 70 fe ff       	callq  403250 <__asan_report_load8@plt>
    if ( t->prev == (Timer*) 0 )
  41c240:	48 89 c7             	mov    %rax,%rdi
  41c243:	e8 08 70 fe ff       	callq  403250 <__asan_report_load8@plt>
	t->next->prev = t->prev;
  41c248:	e8 53 6d fe ff       	callq  402fa0 <__asan_report_store8@plt>
	t->prev->next = t->next;
  41c24d:	48 89 cf             	mov    %rcx,%rdi
  41c250:	e8 4b 6d fe ff       	callq  402fa0 <__asan_report_store8@plt>
	timers[h] = t->next;
  41c255:	48 89 cf             	mov    %rcx,%rdi
  41c258:	e8 43 6d fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41c25d:	0f 1f 00             	nopl   (%rax)

000000000041c260 <hash.isra.0>:
	(unsigned int) t->time.tv_sec ^
  41c260:	31 fe                	xor    %edi,%esi
	(unsigned int) t->time.tv_usec ) % HASH_SIZE;
  41c262:	ba 6b 4c a4 07       	mov    $0x7a44c6b,%edx
  41c267:	89 f0                	mov    %esi,%eax
  41c269:	f7 e2                	mul    %edx
  41c26b:	89 d0                	mov    %edx,%eax
  41c26d:	d1 e8                	shr    %eax
  41c26f:	6b c0 43             	imul   $0x43,%eax,%eax
  41c272:	29 c6                	sub    %eax,%esi
  41c274:	89 f0                	mov    %esi,%eax
    }
  41c276:	c3                   	retq   
  41c277:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41c27e:	00 00 

000000000041c280 <l_resort>:


static void
l_resort( Timer* t )
    {
  41c280:	53                   	push   %rbx
  41c281:	48 89 fb             	mov    %rdi,%rbx
    /* Remove the timer from its old list. */
    l_remove( t );
  41c284:	e8 d7 fe ff ff       	callq  41c160 <l_remove>
    /* Recompute the hash. */
    t->hash = hash( t );
  41c289:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
  41c28d:	48 89 f8             	mov    %rdi,%rax
  41c290:	48 c1 e8 03          	shr    $0x3,%rax
  41c294:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41c29b:	75 55                	jne    41c2f2 <l_resort+0x72>
  41c29d:	48 8d 43 28          	lea    0x28(%rbx),%rax
  41c2a1:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
  41c2a5:	48 89 c2             	mov    %rax,%rdx
  41c2a8:	48 c1 ea 03          	shr    $0x3,%rdx
  41c2ac:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41c2b3:	75 35                	jne    41c2ea <l_resort+0x6a>
  41c2b5:	48 8b 73 28          	mov    0x28(%rbx),%rsi
  41c2b9:	e8 a2 ff ff ff       	callq  41c260 <hash.isra.0>
  41c2be:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
  41c2c2:	48 89 fa             	mov    %rdi,%rdx
  41c2c5:	48 c1 ea 03          	shr    $0x3,%rdx
  41c2c9:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41c2d0:	84 d2                	test   %dl,%dl
  41c2d2:	74 05                	je     41c2d9 <l_resort+0x59>
  41c2d4:	80 fa 03             	cmp    $0x3,%dl
  41c2d7:	7e 0c                	jle    41c2e5 <l_resort+0x65>
  41c2d9:	89 43 40             	mov    %eax,0x40(%rbx)
    /* And add it back in to its new list, sorted correctly. */
    l_add( t );
  41c2dc:	48 89 df             	mov    %rbx,%rdi
    }
  41c2df:	5b                   	pop    %rbx
    l_add( t );
  41c2e0:	e9 4b fa ff ff       	jmpq   41bd30 <l_add>
    t->hash = hash( t );
  41c2e5:	e8 06 69 fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41c2ea:	48 89 c7             	mov    %rax,%rdi
  41c2ed:	e8 5e 6f fe ff       	callq  403250 <__asan_report_load8@plt>
  41c2f2:	e8 59 6f fe ff       	callq  403250 <__asan_report_load8@plt>
  41c2f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41c2fe:	00 00 

000000000041c300 <tmr_init>:


void
tmr_init( void )
    {
  41c300:	41 57                	push   %r15
  41c302:	41 56                	push   %r14
  41c304:	41 55                	push   %r13
  41c306:	41 54                	push   %r12
  41c308:	55                   	push   %rbp
  41c309:	53                   	push   %rbx
  41c30a:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
  41c311:	8b 05 e9 4f 22 00    	mov    0x224fe9(%rip),%eax        # 641300 <__asan_option_detect_stack_use_after_return>
  41c317:	48 89 e5             	mov    %rsp,%rbp
  41c31a:	49 89 ed             	mov    %rbp,%r13
  41c31d:	85 c0                	test   %eax,%eax
  41c31f:	0f 85 9b 02 00 00    	jne    41c5c0 <tmr_init+0x2c0>
  41c325:	48 89 eb             	mov    %rbp,%rbx
  41c328:	48 c7 45 00 b3 8a b5 	movq   $0x41b58ab3,0x0(%rbp)
  41c32f:	41 
  41c330:	4c 8d a5 e0 00 00 00 	lea    0xe0(%rbp),%r12
  41c337:	bf 00 31 64 00       	mov    $0x643100,%edi
  41c33c:	48 c1 eb 03          	shr    $0x3,%rbx
  41c340:	48 c7 45 08 30 cd 42 	movq   $0x42cd30,0x8(%rbp)
  41c347:	00 
  41c348:	48 c7 45 10 00 c3 41 	movq   $0x41c300,0x10(%rbp)
  41c34f:	00 
  41c350:	c7 83 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbx)
  41c357:	f1 f1 f1 
  41c35a:	c7 83 04 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8004(%rbx)
  41c361:	00 f2 f2 
  41c364:	c7 83 08 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8008(%rbx)
  41c36b:	f2 f2 f2 
  41c36e:	c7 83 0c 80 ff 7f 00 	movl   $0xf2f20000,0x7fff800c(%rbx)
  41c375:	00 f2 f2 
  41c378:	c7 83 10 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8010(%rbx)
  41c37f:	f2 f2 f2 
  41c382:	c7 83 14 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8014(%rbx)
  41c389:	00 f2 f2 
  41c38c:	c7 83 18 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8018(%rbx)
  41c393:	f3 f3 f3 
  41c396:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41c39d:	00 00 00 
    int h;

    for ( h = 0; h < HASH_SIZE; ++h )
	timers[h] = (Timer*) 0;
  41c3a0:	48 89 f8             	mov    %rdi,%rax
  41c3a3:	48 c1 e8 03          	shr    $0x3,%rax
  41c3a7:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41c3ae:	0f 85 ae 01 00 00    	jne    41c562 <tmr_init+0x262>
  41c3b4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
  41c3bb:	48 83 c7 08          	add    $0x8,%rdi
    for ( h = 0; h < HASH_SIZE; ++h )
  41c3bf:	48 81 ff 18 33 64 00 	cmp    $0x643318,%rdi
  41c3c6:	75 d8                	jne    41c3a0 <tmr_init+0xa0>
#ifdef HAVE_CLOCK_MONO
    struct timespec ts;
    struct timeval tv_start, tv;
    
    /* Try to get monotonic clock time */
    if (clock_gettime(CLOCK_MONOTONIC, &ts) == 0) {
  41c3c8:	4d 8d b4 24 40 ff ff 	lea    -0xc0(%r12),%r14
  41c3cf:	ff 
  41c3d0:	bf 01 00 00 00       	mov    $0x1,%edi
    free_timers = (Timer*) 0;
  41c3d5:	48 c7 05 e0 6c 22 00 	movq   $0x0,0x226ce0(%rip)        # 6430c0 <free_timers>
  41c3dc:	00 00 00 00 
    alloc_count = active_count = free_count = 0;
  41c3e0:	c7 05 16 6c 22 00 00 	movl   $0x0,0x226c16(%rip)        # 643000 <free_count>
  41c3e7:	00 00 00 
    if (clock_gettime(CLOCK_MONOTONIC, &ts) == 0) {
  41c3ea:	4c 89 f6             	mov    %r14,%rsi
    alloc_count = active_count = free_count = 0;
  41c3ed:	c7 05 49 6c 22 00 00 	movl   $0x0,0x226c49(%rip)        # 643040 <active_count>
  41c3f4:	00 00 00 
  41c3f7:	c7 05 7f 6c 22 00 00 	movl   $0x0,0x226c7f(%rip)        # 643080 <alloc_count>
  41c3fe:	00 00 00 
    if (clock_gettime(CLOCK_MONOTONIC, &ts) == 0) {
  41c401:	e8 da 6d fe ff       	callq  4031e0 <clock_gettime@plt>
  41c406:	85 c0                	test   %eax,%eax
  41c408:	74 3b                	je     41c445 <tmr_init+0x145>
    {
  41c40a:	49 39 ed             	cmp    %rbp,%r13
  41c40d:	0f 85 6e 01 00 00    	jne    41c581 <tmr_init+0x281>
  41c413:	48 c7 83 10 80 ff 7f 	movq   $0x0,0x7fff8010(%rbx)
  41c41a:	00 00 00 00 
  41c41e:	66 0f ef c0          	pxor   %xmm0,%xmm0
  41c422:	c7 83 18 80 ff 7f 00 	movl   $0x0,0x7fff8018(%rbx)
  41c429:	00 00 00 
  41c42c:	0f 11 83 00 80 ff 7f 	movups %xmm0,0x7fff8000(%rbx)
	    tv_diff = tv_start - tv	*/
	timersub( &tv_start, &tv, &tv_diff );
    }
#endif

    }
  41c433:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
  41c43a:	5b                   	pop    %rbx
  41c43b:	5d                   	pop    %rbp
  41c43c:	41 5c                	pop    %r12
  41c43e:	41 5d                	pop    %r13
  41c440:	41 5e                	pop    %r14
  41c442:	41 5f                	pop    %r15
  41c444:	c3                   	retq   
	(void) gettimeofday( &tv_start , (struct timezone*) 0 );
  41c445:	4d 8d 7c 24 80       	lea    -0x80(%r12),%r15
  41c44a:	31 f6                	xor    %esi,%esi
	use_monotonic = 1;
  41c44c:	c7 05 6a 6b 22 00 01 	movl   $0x1,0x226b6a(%rip)        # 642fc0 <use_monotonic>
  41c453:	00 00 00 
	(void) gettimeofday( &tv_start , (struct timezone*) 0 );
  41c456:	4c 89 ff             	mov    %r15,%rdi
  41c459:	e8 a2 6e fe ff       	callq  403300 <gettimeofday@plt>
	tv.tv_sec = ts.tv_sec;
  41c45e:	4c 89 f0             	mov    %r14,%rax
  41c461:	48 c1 e8 03          	shr    $0x3,%rax
  41c465:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41c46c:	0f 85 46 01 00 00    	jne    41c5b8 <tmr_init+0x2b8>
  41c472:	49 8d 7c 24 c0       	lea    -0x40(%r12),%rdi
  41c477:	49 8b 8c 24 40 ff ff 	mov    -0xc0(%r12),%rcx
  41c47e:	ff 
  41c47f:	48 89 f8             	mov    %rdi,%rax
  41c482:	48 c1 e8 03          	shr    $0x3,%rax
  41c486:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41c48d:	0f 85 d4 00 00 00    	jne    41c567 <tmr_init+0x267>
	tv.tv_usec = ts.tv_nsec / 1000L;
  41c493:	49 83 c6 08          	add    $0x8,%r14
	tv.tv_sec = ts.tv_sec;
  41c497:	49 89 4c 24 c0       	mov    %rcx,-0x40(%r12)
	tv.tv_usec = ts.tv_nsec / 1000L;
  41c49c:	4c 89 f0             	mov    %r14,%rax
  41c49f:	48 c1 e8 03          	shr    $0x3,%rax
  41c4a3:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41c4aa:	0f 85 bc 00 00 00    	jne    41c56c <tmr_init+0x26c>
  41c4b0:	49 8b b4 24 48 ff ff 	mov    -0xb8(%r12),%rsi
  41c4b7:	ff 
  41c4b8:	48 83 c7 08          	add    $0x8,%rdi
  41c4bc:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
  41c4c3:	9b c4 20 
  41c4c6:	48 89 f0             	mov    %rsi,%rax
  41c4c9:	48 c1 fe 3f          	sar    $0x3f,%rsi
  41c4cd:	48 f7 ea             	imul   %rdx
  41c4d0:	48 89 d0             	mov    %rdx,%rax
  41c4d3:	48 89 fa             	mov    %rdi,%rdx
  41c4d6:	48 c1 f8 07          	sar    $0x7,%rax
  41c4da:	48 c1 ea 03          	shr    $0x3,%rdx
  41c4de:	48 29 f0             	sub    %rsi,%rax
  41c4e1:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41c4e8:	0f 85 86 00 00 00    	jne    41c574 <tmr_init+0x274>
	timersub( &tv_start, &tv, &tv_diff );
  41c4ee:	4c 89 fa             	mov    %r15,%rdx
	tv.tv_usec = ts.tv_nsec / 1000L;
  41c4f1:	49 89 44 24 c8       	mov    %rax,-0x38(%r12)
	timersub( &tv_start, &tv, &tv_diff );
  41c4f6:	48 c1 ea 03          	shr    $0x3,%rdx
  41c4fa:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41c501:	75 76                	jne    41c579 <tmr_init+0x279>
  41c503:	49 8d 7f 08          	lea    0x8(%r15),%rdi
  41c507:	49 8b 74 24 80       	mov    -0x80(%r12),%rsi
  41c50c:	48 89 fa             	mov    %rdi,%rdx
  41c50f:	48 c1 ea 03          	shr    $0x3,%rdx
  41c513:	48 29 ce             	sub    %rcx,%rsi
  41c516:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41c51d:	48 89 f1             	mov    %rsi,%rcx
  41c520:	48 89 35 59 6a 22 00 	mov    %rsi,0x226a59(%rip)        # 642f80 <tv_diff>
  41c527:	0f 85 a9 00 00 00    	jne    41c5d6 <tmr_init+0x2d6>
  41c52d:	49 8b 54 24 88       	mov    -0x78(%r12),%rdx
  41c532:	48 29 c2             	sub    %rax,%rdx
  41c535:	48 89 d0             	mov    %rdx,%rax
  41c538:	48 89 15 49 6a 22 00 	mov    %rdx,0x226a49(%rip)        # 642f88 <tv_diff+0x8>
  41c53f:	0f 89 c5 fe ff ff    	jns    41c40a <tmr_init+0x10a>
  41c545:	48 83 e9 01          	sub    $0x1,%rcx
  41c549:	48 05 40 42 0f 00    	add    $0xf4240,%rax
  41c54f:	48 89 0d 2a 6a 22 00 	mov    %rcx,0x226a2a(%rip)        # 642f80 <tv_diff>
  41c556:	48 89 05 2b 6a 22 00 	mov    %rax,0x226a2b(%rip)        # 642f88 <tv_diff+0x8>
    }
  41c55d:	e9 a8 fe ff ff       	jmpq   41c40a <tmr_init+0x10a>
	timers[h] = (Timer*) 0;
  41c562:	e8 39 6a fe ff       	callq  402fa0 <__asan_report_store8@plt>
	tv.tv_sec = ts.tv_sec;
  41c567:	e8 34 6a fe ff       	callq  402fa0 <__asan_report_store8@plt>
	tv.tv_usec = ts.tv_nsec / 1000L;
  41c56c:	4c 89 f7             	mov    %r14,%rdi
  41c56f:	e8 dc 6c fe ff       	callq  403250 <__asan_report_load8@plt>
  41c574:	e8 27 6a fe ff       	callq  402fa0 <__asan_report_store8@plt>
	timersub( &tv_start, &tv, &tv_diff );
  41c579:	4c 89 ff             	mov    %r15,%rdi
  41c57c:	e8 cf 6c fe ff       	callq  403250 <__asan_report_load8@plt>
    {
  41c581:	66 0f 6f 05 07 58 00 	movdqa 0x5807(%rip),%xmm0        # 421d90 <_IO_stdin_used+0x2cd0>
  41c588:	00 
  41c589:	48 c7 45 00 0e 36 e0 	movq   $0x45e0360e,0x0(%rbp)
  41c590:	45 
  41c591:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
  41c598:	f5 f5 f5 
  41c59b:	48 89 83 10 80 ff 7f 	mov    %rax,0x7fff8010(%rbx)
  41c5a2:	0f 11 83 00 80 ff 7f 	movups %xmm0,0x7fff8000(%rbx)
  41c5a9:	c7 83 18 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8018(%rbx)
  41c5b0:	f5 f5 f5 
  41c5b3:	e9 7b fe ff ff       	jmpq   41c433 <tmr_init+0x133>
	tv.tv_sec = ts.tv_sec;
  41c5b8:	4c 89 f7             	mov    %r14,%rdi
  41c5bb:	e8 90 6c fe ff       	callq  403250 <__asan_report_load8@plt>
    {
  41c5c0:	bf e0 00 00 00       	mov    $0xe0,%edi
  41c5c5:	e8 56 6d fe ff       	callq  403320 <__asan_stack_malloc_2@plt>
  41c5ca:	48 85 c0             	test   %rax,%rax
  41c5cd:	48 0f 45 e8          	cmovne %rax,%rbp
  41c5d1:	e9 4f fd ff ff       	jmpq   41c325 <tmr_init+0x25>
	timersub( &tv_start, &tv, &tv_diff );
  41c5d6:	e8 75 6c fe ff       	callq  403250 <__asan_report_load8@plt>
  41c5db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000041c5e0 <tmr_mstimeout>:
    }


long
tmr_mstimeout( struct timeval* nowP )
    {
  41c5e0:	41 54                	push   %r12
  41c5e2:	b9 00 31 64 00       	mov    $0x643100,%ecx
    int gotone;
    long msecs, m;
    register Timer* t;

    gotone = 0;
    msecs = 0;          /* make lint happy */
  41c5e7:	45 31 c9             	xor    %r9d,%r9d
    gotone = 0;
  41c5ea:	45 31 c0             	xor    %r8d,%r8d
	{
	t = timers[h];
	if ( t != (Timer*) 0 )
	    {
	    m = ( t->time.tv_sec - nowP->tv_sec ) * 1000L +
		( t->time.tv_usec - nowP->tv_usec ) / 1000L;
  41c5ed:	49 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%r10
  41c5f4:	9b c4 20 
    {
  41c5f7:	55                   	push   %rbp
		( t->time.tv_usec - nowP->tv_usec ) / 1000L;
  41c5f8:	48 8d 6f 08          	lea    0x8(%rdi),%rbp
    {
  41c5fc:	53                   	push   %rbx
		( t->time.tv_usec - nowP->tv_usec ) / 1000L;
  41c5fd:	49 89 eb             	mov    %rbp,%r11
	    m = ( t->time.tv_sec - nowP->tv_sec ) * 1000L +
  41c600:	48 89 fb             	mov    %rdi,%rbx
  41c603:	48 c1 eb 03          	shr    $0x3,%rbx
		( t->time.tv_usec - nowP->tv_usec ) / 1000L;
  41c607:	49 c1 eb 03          	shr    $0x3,%r11
  41c60b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	t = timers[h];
  41c610:	48 89 c8             	mov    %rcx,%rax
  41c613:	48 c1 e8 03          	shr    $0x3,%rax
  41c617:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41c61e:	0f 85 be 00 00 00    	jne    41c6e2 <tmr_mstimeout+0x102>
  41c624:	48 8b 01             	mov    (%rcx),%rax
	if ( t != (Timer*) 0 )
  41c627:	48 85 c0             	test   %rax,%rax
  41c62a:	0f 84 8b 00 00 00    	je     41c6bb <tmr_mstimeout+0xdb>
	    m = ( t->time.tv_sec - nowP->tv_sec ) * 1000L +
  41c630:	48 8d 50 20          	lea    0x20(%rax),%rdx
  41c634:	48 89 d6             	mov    %rdx,%rsi
  41c637:	48 c1 ee 03          	shr    $0x3,%rsi
  41c63b:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  41c642:	0f 85 b7 00 00 00    	jne    41c6ff <tmr_mstimeout+0x11f>
  41c648:	80 bb 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rbx)
  41c64f:	48 8b 50 20          	mov    0x20(%rax),%rdx
  41c653:	0f 85 a1 00 00 00    	jne    41c6fa <tmr_mstimeout+0x11a>
  41c659:	48 2b 17             	sub    (%rdi),%rdx
  41c65c:	4c 69 e2 e8 03 00 00 	imul   $0x3e8,%rdx,%r12
		( t->time.tv_usec - nowP->tv_usec ) / 1000L;
  41c663:	48 8d 50 28          	lea    0x28(%rax),%rdx
  41c667:	48 89 d6             	mov    %rdx,%rsi
  41c66a:	48 c1 ee 03          	shr    $0x3,%rsi
  41c66e:	80 be 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rsi)
  41c675:	75 7b                	jne    41c6f2 <tmr_mstimeout+0x112>
  41c677:	41 80 bb 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r11)
  41c67e:	00 
  41c67f:	48 8b 70 28          	mov    0x28(%rax),%rsi
  41c683:	75 65                	jne    41c6ea <tmr_mstimeout+0x10a>
  41c685:	48 2b 77 08          	sub    0x8(%rdi),%rsi
  41c689:	48 89 f0             	mov    %rsi,%rax
  41c68c:	48 c1 fe 3f          	sar    $0x3f,%rsi
  41c690:	49 f7 ea             	imul   %r10
  41c693:	48 c1 fa 07          	sar    $0x7,%rdx
  41c697:	48 29 f2             	sub    %rsi,%rdx
	    m = ( t->time.tv_sec - nowP->tv_sec ) * 1000L +
  41c69a:	4c 01 e2             	add    %r12,%rdx
	    if ( ! gotone )
		{
		msecs = m;
		gotone = 1;
		}
	    else if ( m < msecs )
  41c69d:	4c 39 ca             	cmp    %r9,%rdx
  41c6a0:	7c 10                	jl     41c6b2 <tmr_mstimeout+0xd2>
	    if ( ! gotone )
  41c6a2:	44 89 c0             	mov    %r8d,%eax
  41c6a5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  41c6ab:	83 f0 01             	xor    $0x1,%eax
	    else if ( m < msecs )
  41c6ae:	84 c0                	test   %al,%al
  41c6b0:	74 09                	je     41c6bb <tmr_mstimeout+0xdb>
	    m = ( t->time.tv_sec - nowP->tv_sec ) * 1000L +
  41c6b2:	49 89 d1             	mov    %rdx,%r9
	    else if ( m < msecs )
  41c6b5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  41c6bb:	48 83 c1 08          	add    $0x8,%rcx
    for ( h = 0; h < HASH_SIZE; ++h )
  41c6bf:	48 81 f9 18 33 64 00 	cmp    $0x643318,%rcx
  41c6c6:	0f 85 44 ff ff ff    	jne    41c610 <tmr_mstimeout+0x30>
		msecs = m;
	    }
	}
    if ( ! gotone )
  41c6cc:	45 85 c0             	test   %r8d,%r8d
  41c6cf:	74 36                	je     41c707 <tmr_mstimeout+0x127>
	return INFTIM;
    if ( msecs <= 0 )
  41c6d1:	4d 85 c9             	test   %r9,%r9
  41c6d4:	b8 00 00 00 00       	mov    $0x0,%eax
  41c6d9:	49 0f 49 c1          	cmovns %r9,%rax
	msecs = 0;
    return msecs;
    }
  41c6dd:	5b                   	pop    %rbx
  41c6de:	5d                   	pop    %rbp
  41c6df:	41 5c                	pop    %r12
  41c6e1:	c3                   	retq   
	t = timers[h];
  41c6e2:	48 89 cf             	mov    %rcx,%rdi
  41c6e5:	e8 66 6b fe ff       	callq  403250 <__asan_report_load8@plt>
		( t->time.tv_usec - nowP->tv_usec ) / 1000L;
  41c6ea:	48 89 ef             	mov    %rbp,%rdi
  41c6ed:	e8 5e 6b fe ff       	callq  403250 <__asan_report_load8@plt>
  41c6f2:	48 89 d7             	mov    %rdx,%rdi
  41c6f5:	e8 56 6b fe ff       	callq  403250 <__asan_report_load8@plt>
	    m = ( t->time.tv_sec - nowP->tv_sec ) * 1000L +
  41c6fa:	e8 51 6b fe ff       	callq  403250 <__asan_report_load8@plt>
  41c6ff:	48 89 d7             	mov    %rdx,%rdi
  41c702:	e8 49 6b fe ff       	callq  403250 <__asan_report_load8@plt>
	return INFTIM;
  41c707:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  41c70e:	eb cd                	jmp    41c6dd <tmr_mstimeout+0xfd>

000000000041c710 <tmr_timeout>:
    {
  41c710:	48 83 ec 08          	sub    $0x8,%rsp
    msecs = tmr_mstimeout( nowP );
  41c714:	e8 c7 fe ff ff       	callq  41c5e0 <tmr_mstimeout>
    if ( msecs == INFTIM )
  41c719:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  41c71d:	74 51                	je     41c770 <tmr_timeout+0x60>
    timeout.tv_sec = msecs / 1000L;
  41c71f:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
  41c726:	9b c4 20 
  41c729:	48 89 c1             	mov    %rax,%rcx
  41c72c:	48 f7 ea             	imul   %rdx
  41c72f:	48 89 c8             	mov    %rcx,%rax
  41c732:	48 c1 f8 3f          	sar    $0x3f,%rax
  41c736:	48 c1 fa 07          	sar    $0x7,%rdx
  41c73a:	48 29 c2             	sub    %rax,%rdx
    return &timeout;
  41c73d:	b8 40 2f 64 00       	mov    $0x642f40,%eax
    timeout.tv_sec = msecs / 1000L;
  41c742:	48 89 15 f7 67 22 00 	mov    %rdx,0x2267f7(%rip)        # 642f40 <timeout.3561>
    timeout.tv_usec = ( msecs % 1000L ) * 1000L;
  41c749:	48 69 d2 e8 03 00 00 	imul   $0x3e8,%rdx,%rdx
  41c750:	48 29 d1             	sub    %rdx,%rcx
  41c753:	48 69 c9 e8 03 00 00 	imul   $0x3e8,%rcx,%rcx
  41c75a:	48 89 0d e7 67 22 00 	mov    %rcx,0x2267e7(%rip)        # 642f48 <timeout.3561+0x8>
    }
  41c761:	48 83 c4 08          	add    $0x8,%rsp
  41c765:	c3                   	retq   
  41c766:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41c76d:	00 00 00 
	return (struct timeval*) 0;
  41c770:	31 c0                	xor    %eax,%eax
  41c772:	eb ed                	jmp    41c761 <tmr_timeout+0x51>
  41c774:	66 90                	xchg   %ax,%ax
  41c776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41c77d:	00 00 00 

000000000041c780 <tmr_reset>:


void
tmr_reset( struct timeval* nowP, Timer* t )
    {
    t->time = *nowP;
  41c780:	48 8d 56 20          	lea    0x20(%rsi),%rdx
    {
  41c784:	48 83 ec 08          	sub    $0x8,%rsp
    t->time = *nowP;
  41c788:	48 89 d0             	mov    %rdx,%rax
  41c78b:	48 c1 e8 03          	shr    $0x3,%rax
  41c78f:	66 83 b8 00 80 ff 7f 	cmpw   $0x0,0x7fff8000(%rax)
  41c796:	00 
  41c797:	0f 85 e4 00 00 00    	jne    41c881 <tmr_reset+0x101>
  41c79d:	48 89 f9             	mov    %rdi,%rcx
  41c7a0:	48 c1 e9 03          	shr    $0x3,%rcx
  41c7a4:	66 83 b9 00 80 ff 7f 	cmpw   $0x0,0x7fff8000(%rcx)
  41c7ab:	00 
  41c7ac:	0f 85 e9 00 00 00    	jne    41c89b <tmr_reset+0x11b>
  41c7b2:	f3 0f 6f 07          	movdqu (%rdi),%xmm0
    t->time.tv_sec += t->msecs / 1000L;
  41c7b6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
    t->time = *nowP;
  41c7bd:	0f 11 46 20          	movups %xmm0,0x20(%rsi)
    t->time.tv_sec += t->msecs / 1000L;
  41c7c1:	0f 85 cc 00 00 00    	jne    41c893 <tmr_reset+0x113>
  41c7c7:	48 8d 7e 10          	lea    0x10(%rsi),%rdi
  41c7cb:	4c 8b 46 20          	mov    0x20(%rsi),%r8
  41c7cf:	48 89 f8             	mov    %rdi,%rax
  41c7d2:	48 c1 e8 03          	shr    $0x3,%rax
  41c7d6:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41c7dd:	0f 85 ab 00 00 00    	jne    41c88e <tmr_reset+0x10e>
  41c7e3:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    t->time.tv_usec += ( t->msecs % 1000L ) * 1000L;
  41c7e7:	48 8d 7e 28          	lea    0x28(%rsi),%rdi
    t->time.tv_sec += t->msecs / 1000L;
  41c7eb:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
  41c7f2:	9b c4 20 
  41c7f5:	48 89 c8             	mov    %rcx,%rax
  41c7f8:	48 f7 ea             	imul   %rdx
  41c7fb:	48 89 c8             	mov    %rcx,%rax
  41c7fe:	48 c1 f8 3f          	sar    $0x3f,%rax
  41c802:	48 c1 fa 07          	sar    $0x7,%rdx
  41c806:	48 29 c2             	sub    %rax,%rdx
    t->time.tv_usec += ( t->msecs % 1000L ) * 1000L;
  41c809:	48 89 f8             	mov    %rdi,%rax
  41c80c:	48 c1 e8 03          	shr    $0x3,%rax
    t->time.tv_sec += t->msecs / 1000L;
  41c810:	49 01 d0             	add    %rdx,%r8
    t->time.tv_usec += ( t->msecs % 1000L ) * 1000L;
  41c813:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
    t->time.tv_sec += t->msecs / 1000L;
  41c81a:	4c 89 46 20          	mov    %r8,0x20(%rsi)
    t->time.tv_usec += ( t->msecs % 1000L ) * 1000L;
  41c81e:	75 69                	jne    41c889 <tmr_reset+0x109>
  41c820:	48 69 d2 e8 03 00 00 	imul   $0x3e8,%rdx,%rdx
  41c827:	48 29 d1             	sub    %rdx,%rcx
  41c82a:	48 69 c9 e8 03 00 00 	imul   $0x3e8,%rcx,%rcx
  41c831:	48 03 4e 28          	add    0x28(%rsi),%rcx
  41c835:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
    if ( t->time.tv_usec >= 1000000L )
  41c839:	48 81 f9 3f 42 0f 00 	cmp    $0xf423f,%rcx
  41c840:	7e 33                	jle    41c875 <tmr_reset+0xf5>
	{
	t->time.tv_sec += t->time.tv_usec / 1000000L;
  41c842:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
  41c849:	de 1b 43 
  41c84c:	48 89 c8             	mov    %rcx,%rax
  41c84f:	48 f7 ea             	imul   %rdx
  41c852:	48 89 c8             	mov    %rcx,%rax
  41c855:	48 c1 f8 3f          	sar    $0x3f,%rax
  41c859:	48 c1 fa 12          	sar    $0x12,%rdx
  41c85d:	48 29 c2             	sub    %rax,%rdx
  41c860:	49 01 d0             	add    %rdx,%r8
	t->time.tv_usec %= 1000000L;
  41c863:	48 69 d2 40 42 0f 00 	imul   $0xf4240,%rdx,%rdx
	t->time.tv_sec += t->time.tv_usec / 1000000L;
  41c86a:	4c 89 46 20          	mov    %r8,0x20(%rsi)
	t->time.tv_usec %= 1000000L;
  41c86e:	48 29 d1             	sub    %rdx,%rcx
  41c871:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
	}
    l_resort( t );
  41c875:	48 89 f7             	mov    %rsi,%rdi
    }
  41c878:	48 83 c4 08          	add    $0x8,%rsp
    l_resort( t );
  41c87c:	e9 ff f9 ff ff       	jmpq   41c280 <l_resort>
    t->time = *nowP;
  41c881:	48 89 d7             	mov    %rdx,%rdi
  41c884:	e8 f7 64 fe ff       	callq  402d80 <__asan_report_store16@plt>
    t->time.tv_usec += ( t->msecs % 1000L ) * 1000L;
  41c889:	e8 c2 69 fe ff       	callq  403250 <__asan_report_load8@plt>
    t->time.tv_sec += t->msecs / 1000L;
  41c88e:	e8 bd 69 fe ff       	callq  403250 <__asan_report_load8@plt>
  41c893:	48 89 d7             	mov    %rdx,%rdi
  41c896:	e8 b5 69 fe ff       	callq  403250 <__asan_report_load8@plt>
    t->time = *nowP;
  41c89b:	e8 80 68 fe ff       	callq  403120 <__asan_report_load16@plt>

000000000041c8a0 <tmr_cancel>:


void
tmr_cancel( Timer* t )
    {
  41c8a0:	53                   	push   %rbx
  41c8a1:	48 89 fb             	mov    %rdi,%rbx
    /* Remove it from its active list. */
    l_remove( t );
  41c8a4:	e8 b7 f8 ff ff       	callq  41c160 <l_remove>
    --active_count;
    /* And put it on the free list. */
    t->next = free_timers;
  41c8a9:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
    --active_count;
  41c8ad:	83 2d 8c 67 22 00 01 	subl   $0x1,0x22678c(%rip)        # 643040 <active_count>
    t->next = free_timers;
  41c8b4:	48 8b 05 05 68 22 00 	mov    0x226805(%rip),%rax        # 6430c0 <free_timers>
  41c8bb:	48 89 fa             	mov    %rdi,%rdx
  41c8be:	48 c1 ea 03          	shr    $0x3,%rdx
  41c8c2:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41c8c9:	75 30                	jne    41c8fb <tmr_cancel+0x5b>
    free_timers = t;
    ++free_count;
    t->prev = (Timer*) 0;
  41c8cb:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    t->next = free_timers;
  41c8cf:	48 89 43 38          	mov    %rax,0x38(%rbx)
    t->prev = (Timer*) 0;
  41c8d3:	48 89 f8             	mov    %rdi,%rax
    ++free_count;
  41c8d6:	83 05 23 67 22 00 01 	addl   $0x1,0x226723(%rip)        # 643000 <free_count>
    t->prev = (Timer*) 0;
  41c8dd:	48 c1 e8 03          	shr    $0x3,%rax
    free_timers = t;
  41c8e1:	48 89 1d d8 67 22 00 	mov    %rbx,0x2267d8(%rip)        # 6430c0 <free_timers>
    t->prev = (Timer*) 0;
  41c8e8:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41c8ef:	75 0f                	jne    41c900 <tmr_cancel+0x60>
  41c8f1:	48 c7 43 30 00 00 00 	movq   $0x0,0x30(%rbx)
  41c8f8:	00 
    }
  41c8f9:	5b                   	pop    %rbx
  41c8fa:	c3                   	retq   
    t->next = free_timers;
  41c8fb:	e8 a0 66 fe ff       	callq  402fa0 <__asan_report_store8@plt>
    t->prev = (Timer*) 0;
  41c900:	e8 9b 66 fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41c905:	90                   	nop
  41c906:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41c90d:	00 00 00 

000000000041c910 <tmr_run>:
    {
  41c910:	41 57                	push   %r15
  41c912:	41 56                	push   %r14
  41c914:	41 55                	push   %r13
  41c916:	41 bd 00 31 64 00    	mov    $0x643100,%r13d
  41c91c:	41 54                	push   %r12
		t->time.tv_sec += t->msecs / 1000L;
  41c91e:	49 bc cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%r12
  41c925:	9b c4 20 
    {
  41c928:	55                   	push   %rbp
	    if ( t->time.tv_sec > nowP->tv_sec ||
  41c929:	48 89 fd             	mov    %rdi,%rbp
    {
  41c92c:	53                   	push   %rbx
	    if ( t->time.tv_sec > nowP->tv_sec ||
  41c92d:	48 c1 ed 03          	shr    $0x3,%rbp
    {
  41c931:	48 89 fb             	mov    %rdi,%rbx
  41c934:	48 83 ec 18          	sub    $0x18,%rsp
  41c938:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41c93f:	00 
	for ( t = timers[h]; t != (Timer*) 0; t = next )
  41c940:	4c 89 e8             	mov    %r13,%rax
  41c943:	48 c1 e8 03          	shr    $0x3,%rax
  41c947:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41c94e:	0f 85 ab 02 00 00    	jne    41cbff <tmr_run+0x2ef>
  41c954:	4d 8b 7d 00          	mov    0x0(%r13),%r15
  41c958:	4d 85 ff             	test   %r15,%r15
  41c95b:	0f 84 2f 02 00 00    	je     41cb90 <tmr_run+0x280>
	    next = t->next;
  41c961:	49 8d 7f 38          	lea    0x38(%r15),%rdi
  41c965:	48 89 f8             	mov    %rdi,%rax
  41c968:	48 c1 e8 03          	shr    $0x3,%rax
  41c96c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41c973:	0f 85 93 02 00 00    	jne    41cc0c <tmr_run+0x2fc>
	    if ( t->time.tv_sec > nowP->tv_sec ||
  41c979:	49 8d 7f 20          	lea    0x20(%r15),%rdi
	    next = t->next;
  41c97d:	4d 8b 77 38          	mov    0x38(%r15),%r14
	    if ( t->time.tv_sec > nowP->tv_sec ||
  41c981:	48 89 f8             	mov    %rdi,%rax
  41c984:	48 c1 e8 03          	shr    $0x3,%rax
  41c988:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41c98f:	0f 85 72 02 00 00    	jne    41cc07 <tmr_run+0x2f7>
  41c995:	80 bd 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rbp)
  41c99c:	49 8b 47 20          	mov    0x20(%r15),%rax
  41c9a0:	0f 85 6b 02 00 00    	jne    41cc11 <tmr_run+0x301>
  41c9a6:	48 8b 13             	mov    (%rbx),%rdx
  41c9a9:	48 39 d0             	cmp    %rdx,%rax
  41c9ac:	0f 8f de 01 00 00    	jg     41cb90 <tmr_run+0x280>
		   t->time.tv_usec > nowP->tv_usec ) )
  41c9b2:	48 8d 4b 08          	lea    0x8(%rbx),%rcx
  41c9b6:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  41c9bb:	48 c1 e9 03          	shr    $0x3,%rcx
  41c9bf:	48 89 0c 24          	mov    %rcx,(%rsp)
  41c9c3:	e9 8b 01 00 00       	jmpq   41cb53 <tmr_run+0x243>
  41c9c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41c9cf:	00 
	    (t->timer_proc)( t->client_data, nowP );
  41c9d0:	4c 89 f8             	mov    %r15,%rax
  41c9d3:	48 c1 e8 03          	shr    $0x3,%rax
  41c9d7:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41c9de:	0f 85 d9 01 00 00    	jne    41cbbd <tmr_run+0x2ad>
  41c9e4:	49 8d 7f 08          	lea    0x8(%r15),%rdi
  41c9e8:	49 8b 07             	mov    (%r15),%rax
  41c9eb:	48 89 fa             	mov    %rdi,%rdx
  41c9ee:	48 c1 ea 03          	shr    $0x3,%rdx
  41c9f2:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41c9f9:	0f 85 cb 01 00 00    	jne    41cbca <tmr_run+0x2ba>
  41c9ff:	49 8b 7f 08          	mov    0x8(%r15),%rdi
  41ca03:	48 89 de             	mov    %rbx,%rsi
  41ca06:	ff d0                	callq  *%rax
	    if ( t->periodic )
  41ca08:	49 8d 7f 18          	lea    0x18(%r15),%rdi
  41ca0c:	48 89 f8             	mov    %rdi,%rax
  41ca0f:	48 c1 e8 03          	shr    $0x3,%rax
  41ca13:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41ca1a:	84 c0                	test   %al,%al
  41ca1c:	74 08                	je     41ca26 <tmr_run+0x116>
  41ca1e:	3c 03                	cmp    $0x3,%al
  41ca20:	0f 8e 9f 01 00 00    	jle    41cbc5 <tmr_run+0x2b5>
  41ca26:	41 8b 47 18          	mov    0x18(%r15),%eax
  41ca2a:	85 c0                	test   %eax,%eax
  41ca2c:	0f 84 7e 01 00 00    	je     41cbb0 <tmr_run+0x2a0>
		t->time.tv_sec += t->msecs / 1000L;
  41ca32:	49 8d 7f 20          	lea    0x20(%r15),%rdi
  41ca36:	48 89 f8             	mov    %rdi,%rax
  41ca39:	48 c1 e8 03          	shr    $0x3,%rax
  41ca3d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ca44:	0f 85 a1 01 00 00    	jne    41cbeb <tmr_run+0x2db>
  41ca4a:	49 8d 7f 10          	lea    0x10(%r15),%rdi
  41ca4e:	4d 8b 4f 20          	mov    0x20(%r15),%r9
  41ca52:	48 89 f8             	mov    %rdi,%rax
  41ca55:	48 c1 e8 03          	shr    $0x3,%rax
  41ca59:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ca60:	0f 85 80 01 00 00    	jne    41cbe6 <tmr_run+0x2d6>
  41ca66:	49 8b 77 10          	mov    0x10(%r15),%rsi
		t->time.tv_usec += ( t->msecs % 1000L ) * 1000L;
  41ca6a:	49 8d 7f 28          	lea    0x28(%r15),%rdi
		t->time.tv_sec += t->msecs / 1000L;
  41ca6e:	48 89 f0             	mov    %rsi,%rax
  41ca71:	49 f7 ec             	imul   %r12
  41ca74:	48 89 f0             	mov    %rsi,%rax
  41ca77:	48 c1 f8 3f          	sar    $0x3f,%rax
  41ca7b:	48 c1 fa 07          	sar    $0x7,%rdx
  41ca7f:	48 29 c2             	sub    %rax,%rdx
		t->time.tv_usec += ( t->msecs % 1000L ) * 1000L;
  41ca82:	48 89 f8             	mov    %rdi,%rax
  41ca85:	48 c1 e8 03          	shr    $0x3,%rax
		t->time.tv_sec += t->msecs / 1000L;
  41ca89:	49 01 d1             	add    %rdx,%r9
		t->time.tv_usec += ( t->msecs % 1000L ) * 1000L;
  41ca8c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
		t->time.tv_sec += t->msecs / 1000L;
  41ca93:	4d 89 4f 20          	mov    %r9,0x20(%r15)
		t->time.tv_usec += ( t->msecs % 1000L ) * 1000L;
  41ca97:	0f 85 44 01 00 00    	jne    41cbe1 <tmr_run+0x2d1>
  41ca9d:	48 69 d2 e8 03 00 00 	imul   $0x3e8,%rdx,%rdx
  41caa4:	48 29 d6             	sub    %rdx,%rsi
  41caa7:	48 69 f6 e8 03 00 00 	imul   $0x3e8,%rsi,%rsi
  41caae:	49 03 77 28          	add    0x28(%r15),%rsi
  41cab2:	49 89 77 28          	mov    %rsi,0x28(%r15)
		if ( t->time.tv_usec >= 1000000L )
  41cab6:	48 81 fe 3f 42 0f 00 	cmp    $0xf423f,%rsi
  41cabd:	7e 30                	jle    41caef <tmr_run+0x1df>
		    t->time.tv_sec += t->time.tv_usec / 1000000L;
  41cabf:	48 b8 db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rax
  41cac6:	de 1b 43 
  41cac9:	48 f7 ee             	imul   %rsi
  41cacc:	48 89 f0             	mov    %rsi,%rax
  41cacf:	48 c1 f8 3f          	sar    $0x3f,%rax
  41cad3:	48 c1 fa 12          	sar    $0x12,%rdx
  41cad7:	48 29 c2             	sub    %rax,%rdx
  41cada:	49 01 d1             	add    %rdx,%r9
		    t->time.tv_usec %= 1000000L;
  41cadd:	48 69 d2 40 42 0f 00 	imul   $0xf4240,%rdx,%rdx
		    t->time.tv_sec += t->time.tv_usec / 1000000L;
  41cae4:	4d 89 4f 20          	mov    %r9,0x20(%r15)
		    t->time.tv_usec %= 1000000L;
  41cae8:	48 29 d6             	sub    %rdx,%rsi
  41caeb:	49 89 77 28          	mov    %rsi,0x28(%r15)
		l_resort( t );
  41caef:	4c 89 ff             	mov    %r15,%rdi
  41caf2:	e8 89 f7 ff ff       	callq  41c280 <l_resort>
	for ( t = timers[h]; t != (Timer*) 0; t = next )
  41caf7:	4d 85 f6             	test   %r14,%r14
  41cafa:	0f 84 90 00 00 00    	je     41cb90 <tmr_run+0x280>
	    next = t->next;
  41cb00:	49 8d 7e 38          	lea    0x38(%r14),%rdi
  41cb04:	48 89 f8             	mov    %rdi,%rax
  41cb07:	48 c1 e8 03          	shr    $0x3,%rax
  41cb0b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41cb12:	0f 85 c4 00 00 00    	jne    41cbdc <tmr_run+0x2cc>
	    if ( t->time.tv_sec > nowP->tv_sec ||
  41cb18:	49 8d 7e 20          	lea    0x20(%r14),%rdi
	    next = t->next;
  41cb1c:	49 8b 76 38          	mov    0x38(%r14),%rsi
	    if ( t->time.tv_sec > nowP->tv_sec ||
  41cb20:	48 89 f8             	mov    %rdi,%rax
  41cb23:	48 c1 e8 03          	shr    $0x3,%rax
  41cb27:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41cb2e:	0f 85 a3 00 00 00    	jne    41cbd7 <tmr_run+0x2c7>
  41cb34:	80 bd 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rbp)
  41cb3b:	49 8b 46 20          	mov    0x20(%r14),%rax
  41cb3f:	0f 85 8a 00 00 00    	jne    41cbcf <tmr_run+0x2bf>
  41cb45:	48 8b 13             	mov    (%rbx),%rdx
  41cb48:	4d 89 f7             	mov    %r14,%r15
  41cb4b:	48 39 d0             	cmp    %rdx,%rax
  41cb4e:	7f 40                	jg     41cb90 <tmr_run+0x280>
	    next = t->next;
  41cb50:	49 89 f6             	mov    %rsi,%r14
	    if ( t->time.tv_sec > nowP->tv_sec ||
  41cb53:	48 39 c2             	cmp    %rax,%rdx
  41cb56:	0f 85 74 fe ff ff    	jne    41c9d0 <tmr_run+0xc0>
		   t->time.tv_usec > nowP->tv_usec ) )
  41cb5c:	49 8d 7f 28          	lea    0x28(%r15),%rdi
  41cb60:	48 89 f8             	mov    %rdi,%rax
  41cb63:	48 c1 e8 03          	shr    $0x3,%rax
  41cb67:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41cb6e:	0f 85 86 00 00 00    	jne    41cbfa <tmr_run+0x2ea>
  41cb74:	48 8b 0c 24          	mov    (%rsp),%rcx
  41cb78:	49 8b 47 28          	mov    0x28(%r15),%rax
  41cb7c:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41cb83:	75 6b                	jne    41cbf0 <tmr_run+0x2e0>
		 ( t->time.tv_sec == nowP->tv_sec &&
  41cb85:	48 3b 43 08          	cmp    0x8(%rbx),%rax
  41cb89:	0f 8e 41 fe ff ff    	jle    41c9d0 <tmr_run+0xc0>
  41cb8f:	90                   	nop
  41cb90:	49 83 c5 08          	add    $0x8,%r13
    for ( h = 0; h < HASH_SIZE; ++h )
  41cb94:	49 81 fd 18 33 64 00 	cmp    $0x643318,%r13
  41cb9b:	0f 85 9f fd ff ff    	jne    41c940 <tmr_run+0x30>
    }
  41cba1:	48 83 c4 18          	add    $0x18,%rsp
  41cba5:	5b                   	pop    %rbx
  41cba6:	5d                   	pop    %rbp
  41cba7:	41 5c                	pop    %r12
  41cba9:	41 5d                	pop    %r13
  41cbab:	41 5e                	pop    %r14
  41cbad:	41 5f                	pop    %r15
  41cbaf:	c3                   	retq   
		tmr_cancel( t );
  41cbb0:	4c 89 ff             	mov    %r15,%rdi
  41cbb3:	e8 e8 fc ff ff       	callq  41c8a0 <tmr_cancel>
  41cbb8:	e9 3a ff ff ff       	jmpq   41caf7 <tmr_run+0x1e7>
	    (t->timer_proc)( t->client_data, nowP );
  41cbbd:	4c 89 ff             	mov    %r15,%rdi
  41cbc0:	e8 8b 66 fe ff       	callq  403250 <__asan_report_load8@plt>
	    if ( t->periodic )
  41cbc5:	e8 06 62 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	    (t->timer_proc)( t->client_data, nowP );
  41cbca:	e8 81 66 fe ff       	callq  403250 <__asan_report_load8@plt>
	    if ( t->time.tv_sec > nowP->tv_sec ||
  41cbcf:	48 89 df             	mov    %rbx,%rdi
  41cbd2:	e8 79 66 fe ff       	callq  403250 <__asan_report_load8@plt>
  41cbd7:	e8 74 66 fe ff       	callq  403250 <__asan_report_load8@plt>
	    next = t->next;
  41cbdc:	e8 6f 66 fe ff       	callq  403250 <__asan_report_load8@plt>
		t->time.tv_usec += ( t->msecs % 1000L ) * 1000L;
  41cbe1:	e8 6a 66 fe ff       	callq  403250 <__asan_report_load8@plt>
		t->time.tv_sec += t->msecs / 1000L;
  41cbe6:	e8 65 66 fe ff       	callq  403250 <__asan_report_load8@plt>
  41cbeb:	e8 60 66 fe ff       	callq  403250 <__asan_report_load8@plt>
		   t->time.tv_usec > nowP->tv_usec ) )
  41cbf0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41cbf5:	e8 56 66 fe ff       	callq  403250 <__asan_report_load8@plt>
  41cbfa:	e8 51 66 fe ff       	callq  403250 <__asan_report_load8@plt>
	for ( t = timers[h]; t != (Timer*) 0; t = next )
  41cbff:	4c 89 ef             	mov    %r13,%rdi
  41cc02:	e8 49 66 fe ff       	callq  403250 <__asan_report_load8@plt>
	    if ( t->time.tv_sec > nowP->tv_sec ||
  41cc07:	e8 44 66 fe ff       	callq  403250 <__asan_report_load8@plt>
	    next = t->next;
  41cc0c:	e8 3f 66 fe ff       	callq  403250 <__asan_report_load8@plt>
	    if ( t->time.tv_sec > nowP->tv_sec ||
  41cc11:	48 89 df             	mov    %rbx,%rdi
  41cc14:	e8 37 66 fe ff       	callq  403250 <__asan_report_load8@plt>
  41cc19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000041cc20 <tmr_cleanup>:
void
tmr_cleanup( void )
    {
    Timer* t;

    while ( free_timers != (Timer*) 0 )
  41cc20:	48 8b 3d 99 64 22 00 	mov    0x226499(%rip),%rdi        # 6430c0 <free_timers>
  41cc27:	48 85 ff             	test   %rdi,%rdi
  41cc2a:	74 64                	je     41cc90 <tmr_cleanup+0x70>
    {
  41cc2c:	41 54                	push   %r12
  41cc2e:	8b 05 cc 63 22 00    	mov    0x2263cc(%rip),%eax        # 643000 <free_count>
	{
	t = free_timers;
	free_timers = t->next;
	--free_count;
	free( (void*) t );
	--alloc_count;
  41cc34:	44 8b 25 45 64 22 00 	mov    0x226445(%rip),%r12d        # 643080 <alloc_count>
    {
  41cc3b:	55                   	push   %rbp
  41cc3c:	53                   	push   %rbx
  41cc3d:	8d 58 ff             	lea    -0x1(%rax),%ebx
	--alloc_count;
  41cc40:	41 29 c4             	sub    %eax,%r12d
  41cc43:	eb 06                	jmp    41cc4b <tmr_cleanup+0x2b>
  41cc45:	0f 1f 00             	nopl   (%rax)
  41cc48:	48 89 ef             	mov    %rbp,%rdi
	free_timers = t->next;
  41cc4b:	48 8d 47 38          	lea    0x38(%rdi),%rax
  41cc4f:	48 89 c2             	mov    %rax,%rdx
  41cc52:	48 c1 ea 03          	shr    $0x3,%rdx
  41cc56:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41cc5d:	75 32                	jne    41cc91 <tmr_cleanup+0x71>
  41cc5f:	48 8b 6f 38          	mov    0x38(%rdi),%rbp
	--free_count;
  41cc63:	89 1d 97 63 22 00    	mov    %ebx,0x226397(%rip)        # 643000 <free_count>
	free_timers = t->next;
  41cc69:	48 89 2d 50 64 22 00 	mov    %rbp,0x226450(%rip)        # 6430c0 <free_timers>
	free( (void*) t );
  41cc70:	e8 5b 60 fe ff       	callq  402cd0 <free@plt>
	--alloc_count;
  41cc75:	41 8d 04 1c          	lea    (%r12,%rbx,1),%eax
  41cc79:	83 eb 01             	sub    $0x1,%ebx
  41cc7c:	89 05 fe 63 22 00    	mov    %eax,0x2263fe(%rip)        # 643080 <alloc_count>
    while ( free_timers != (Timer*) 0 )
  41cc82:	48 85 ed             	test   %rbp,%rbp
  41cc85:	75 c1                	jne    41cc48 <tmr_cleanup+0x28>
	}
    }
  41cc87:	5b                   	pop    %rbx
  41cc88:	5d                   	pop    %rbp
  41cc89:	41 5c                	pop    %r12
  41cc8b:	c3                   	retq   
  41cc8c:	0f 1f 40 00          	nopl   0x0(%rax)
  41cc90:	c3                   	retq   
	free_timers = t->next;
  41cc91:	48 89 c7             	mov    %rax,%rdi
  41cc94:	e8 b7 65 fe ff       	callq  403250 <__asan_report_load8@plt>
  41cc99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000041cca0 <tmr_destroy>:


void
tmr_destroy( void )
    {
  41cca0:	53                   	push   %rbx
  41cca1:	bb 00 31 64 00       	mov    $0x643100,%ebx
  41cca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41ccad:	00 00 00 
    int h;

    for ( h = 0; h < HASH_SIZE; ++h )
	while ( timers[h] != (Timer*) 0 )
  41ccb0:	48 89 d8             	mov    %rbx,%rax
  41ccb3:	48 c1 e8 03          	shr    $0x3,%rax
  41ccb7:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ccbe:	74 0d                	je     41cccd <tmr_destroy+0x2d>
  41ccc0:	eb 26                	jmp    41cce8 <tmr_destroy+0x48>
  41ccc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	    tmr_cancel( timers[h] );
  41ccc8:	e8 d3 fb ff ff       	callq  41c8a0 <tmr_cancel>
	while ( timers[h] != (Timer*) 0 )
  41cccd:	48 8b 3b             	mov    (%rbx),%rdi
  41ccd0:	48 85 ff             	test   %rdi,%rdi
  41ccd3:	75 f3                	jne    41ccc8 <tmr_destroy+0x28>
  41ccd5:	48 83 c3 08          	add    $0x8,%rbx
    for ( h = 0; h < HASH_SIZE; ++h )
  41ccd9:	48 81 fb 18 33 64 00 	cmp    $0x643318,%rbx
  41cce0:	75 ce                	jne    41ccb0 <tmr_destroy+0x10>
    tmr_cleanup();
    }
  41cce2:	5b                   	pop    %rbx
    tmr_cleanup();
  41cce3:	e9 38 ff ff ff       	jmpq   41cc20 <tmr_cleanup>
	while ( timers[h] != (Timer*) 0 )
  41cce8:	48 89 df             	mov    %rbx,%rdi
  41cceb:	e8 60 65 fe ff       	callq  403250 <__asan_report_load8@plt>

000000000041ccf0 <tmr_logstats>:


/* Generate debugging statistics syslog message. */
void
tmr_logstats( long secs )
    {
  41ccf0:	48 83 ec 08          	sub    $0x8,%rsp
    syslog(
  41ccf4:	31 c0                	xor    %eax,%eax
  41ccf6:	be 60 cd 42 00       	mov    $0x42cd60,%esi
  41ccfb:	bf 06 00 00 00       	mov    $0x6,%edi
  41cd00:	44 8b 05 f9 62 22 00 	mov    0x2262f9(%rip),%r8d        # 643000 <free_count>
  41cd07:	8b 0d 33 63 22 00    	mov    0x226333(%rip),%ecx        # 643040 <active_count>
  41cd0d:	8b 15 6d 63 22 00    	mov    0x22636d(%rip),%edx        # 643080 <alloc_count>
  41cd13:	e8 28 5f fe ff       	callq  402c40 <syslog@plt>
	LOG_INFO, "  timers - %d allocated, %d active, %d free",
	alloc_count, active_count, free_count );
    if ( active_count + free_count != alloc_count )
  41cd18:	8b 05 e2 62 22 00    	mov    0x2262e2(%rip),%eax        # 643000 <free_count>
  41cd1e:	03 05 1c 63 22 00    	add    0x22631c(%rip),%eax        # 643040 <active_count>
  41cd24:	3b 05 56 63 22 00    	cmp    0x226356(%rip),%eax        # 643080 <alloc_count>
  41cd2a:	75 0c                	jne    41cd38 <tmr_logstats+0x48>
	syslog( LOG_ERR, "timer counts don't add up!" );
    }
  41cd2c:	48 83 c4 08          	add    $0x8,%rsp
  41cd30:	c3                   	retq   
  41cd31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	syslog( LOG_ERR, "timer counts don't add up!" );
  41cd38:	be c0 cd 42 00       	mov    $0x42cdc0,%esi
  41cd3d:	bf 03 00 00 00       	mov    $0x3,%edi
  41cd42:	31 c0                	xor    %eax,%eax
    }
  41cd44:	48 83 c4 08          	add    $0x8,%rsp
	syslog( LOG_ERR, "timer counts don't add up!" );
  41cd48:	e9 f3 5e fe ff       	jmpq   402c40 <syslog@plt>
  41cd4d:	0f 1f 00             	nopl   (%rax)

000000000041cd50 <tmr_prepare_timeval>:

/* Fill timeval structure for further usage by the package. */
void
tmr_prepare_timeval( struct timeval *tv )
{
  41cd50:	41 57                	push   %r15
  41cd52:	41 56                	push   %r14
  41cd54:	41 55                	push   %r13
  41cd56:	49 89 fd             	mov    %rdi,%r13
  41cd59:	41 54                	push   %r12
  41cd5b:	55                   	push   %rbp
  41cd5c:	53                   	push   %rbx
  41cd5d:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  41cd64:	8b 15 96 45 22 00    	mov    0x224596(%rip),%edx        # 641300 <__asan_option_detect_stack_use_after_return>
  41cd6a:	48 89 e3             	mov    %rsp,%rbx
  41cd6d:	49 89 dc             	mov    %rbx,%r12
  41cd70:	85 d2                	test   %edx,%edx
  41cd72:	0f 85 d6 01 00 00    	jne    41cf4e <tmr_prepare_timeval+0x1fe>
  41cd78:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
  41cd7f:	48 89 dd             	mov    %rbx,%rbp
  41cd82:	4c 8d b3 a0 00 00 00 	lea    0xa0(%rbx),%r14
  41cd89:	48 c7 43 08 40 ce 42 	movq   $0x42ce40,0x8(%rbx)
  41cd90:	00 
  41cd91:	48 c1 ed 03          	shr    $0x3,%rbp
  41cd95:	48 c7 43 10 50 cd 41 	movq   $0x41cd50,0x10(%rbx)
  41cd9c:	00 
#ifdef HAVE_CLOCK_MONO
    struct timespec ts;
    struct timeval tv0;

    if (use_monotonic) {	/* use monotonic clock source ? */
  41cd9d:	8b 05 1d 62 22 00    	mov    0x22621d(%rip),%eax        # 642fc0 <use_monotonic>
{
  41cda3:	c7 85 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbp)
  41cdaa:	f1 f1 f1 
  41cdad:	c7 85 04 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8004(%rbp)
  41cdb4:	00 f2 f2 
  41cdb7:	c7 85 08 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8008(%rbp)
  41cdbe:	f2 f2 f2 
  41cdc1:	c7 85 0c 80 ff 7f 00 	movl   $0xf2f20000,0x7fff800c(%rbp)
  41cdc8:	00 f2 f2 
  41cdcb:	c7 85 10 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8010(%rbp)
  41cdd2:	f3 f3 f3 
    if (use_monotonic) {	/* use monotonic clock source ? */
  41cdd5:	85 c0                	test   %eax,%eax
  41cdd7:	0f 84 33 01 00 00    	je     41cf10 <tmr_prepare_timeval+0x1c0>
	if (clock_gettime(CLOCK_MONOTONIC,&ts) < 0) {
  41cddd:	4c 8d 7b 20          	lea    0x20(%rbx),%r15
  41cde1:	bf 01 00 00 00       	mov    $0x1,%edi
  41cde6:	4c 89 fe             	mov    %r15,%rsi
  41cde9:	e8 f2 63 fe ff       	callq  4031e0 <clock_gettime@plt>
  41cdee:	85 c0                	test   %eax,%eax
  41cdf0:	0f 88 2a 01 00 00    	js     41cf20 <tmr_prepare_timeval+0x1d0>
	    perror("clock_gettime"); return;
	}
	tv0.tv_sec = ts.tv_sec;
  41cdf6:	4c 89 f8             	mov    %r15,%rax
  41cdf9:	48 c1 e8 03          	shr    $0x3,%rax
  41cdfd:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ce04:	0f 85 5f 01 00 00    	jne    41cf69 <tmr_prepare_timeval+0x219>
  41ce0a:	48 8d 7b 60          	lea    0x60(%rbx),%rdi
  41ce0e:	49 8b 4e 80          	mov    -0x80(%r14),%rcx
  41ce12:	48 89 f8             	mov    %rdi,%rax
  41ce15:	48 c1 e8 03          	shr    $0x3,%rax
  41ce19:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ce20:	0f 85 4b 01 00 00    	jne    41cf71 <tmr_prepare_timeval+0x221>
	tv0.tv_usec = ts.tv_nsec / 1000L;
  41ce26:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
	tv0.tv_sec = ts.tv_sec;
  41ce2a:	49 89 4e c0          	mov    %rcx,-0x40(%r14)
	tv0.tv_usec = ts.tv_nsec / 1000L;
  41ce2e:	48 89 f8             	mov    %rdi,%rax
  41ce31:	48 c1 e8 03          	shr    $0x3,%rax
  41ce35:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ce3c:	0f 85 22 01 00 00    	jne    41cf64 <tmr_prepare_timeval+0x214>
  41ce42:	49 8b 76 88          	mov    -0x78(%r14),%rsi
  41ce46:	48 8d 7b 68          	lea    0x68(%rbx),%rdi
  41ce4a:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
  41ce51:	9b c4 20 
  41ce54:	48 89 f0             	mov    %rsi,%rax
  41ce57:	48 c1 fe 3f          	sar    $0x3f,%rsi
  41ce5b:	48 f7 ea             	imul   %rdx
  41ce5e:	48 89 f8             	mov    %rdi,%rax
  41ce61:	48 c1 e8 03          	shr    $0x3,%rax
  41ce65:	48 c1 fa 07          	sar    $0x7,%rdx
  41ce69:	48 29 f2             	sub    %rsi,%rdx
  41ce6c:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ce73:	0f 85 0a 01 00 00    	jne    41cf83 <tmr_prepare_timeval+0x233>
	/* Return system time value like it was running accurately */
	timeradd( &tv_diff, &tv0, tv );
  41ce79:	4c 89 e8             	mov    %r13,%rax
  41ce7c:	48 03 0d fd 60 22 00 	add    0x2260fd(%rip),%rcx        # 642f80 <tv_diff>
	tv0.tv_usec = ts.tv_nsec / 1000L;
  41ce83:	49 89 56 c8          	mov    %rdx,-0x38(%r14)
	timeradd( &tv_diff, &tv0, tv );
  41ce87:	48 c1 e8 03          	shr    $0x3,%rax
  41ce8b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ce92:	0f 85 de 00 00 00    	jne    41cf76 <tmr_prepare_timeval+0x226>
  41ce98:	49 8d 7d 08          	lea    0x8(%r13),%rdi
  41ce9c:	48 03 15 e5 60 22 00 	add    0x2260e5(%rip),%rdx        # 642f88 <tv_diff+0x8>
  41cea3:	49 89 4d 00          	mov    %rcx,0x0(%r13)
  41cea7:	48 89 f8             	mov    %rdi,%rax
  41ceaa:	48 c1 e8 03          	shr    $0x3,%rax
  41ceae:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ceb5:	0f 85 c3 00 00 00    	jne    41cf7e <tmr_prepare_timeval+0x22e>
  41cebb:	49 89 55 08          	mov    %rdx,0x8(%r13)
  41cebf:	48 81 fa 3f 42 0f 00 	cmp    $0xf423f,%rdx
  41cec6:	7e 13                	jle    41cedb <tmr_prepare_timeval+0x18b>
  41cec8:	48 83 c1 01          	add    $0x1,%rcx
  41cecc:	48 81 ea 40 42 0f 00 	sub    $0xf4240,%rdx
  41ced3:	49 89 4d 00          	mov    %rcx,0x0(%r13)
  41ced7:	49 89 55 08          	mov    %rdx,0x8(%r13)
{
  41cedb:	49 39 dc             	cmp    %rbx,%r12
  41cede:	75 4c                	jne    41cf2c <tmr_prepare_timeval+0x1dc>
  41cee0:	c7 85 10 80 ff 7f 00 	movl   $0x0,0x7fff8010(%rbp)
  41cee7:	00 00 00 
  41ceea:	66 0f ef c0          	pxor   %xmm0,%xmm0
  41ceee:	0f 11 85 00 80 ff 7f 	movups %xmm0,0x7fff8000(%rbp)
#endif
	(void) gettimeofday( tv , (struct timezone*) 0 );
#ifdef HAVE_CLOCK_MONO
    }
#endif
}
  41cef5:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
  41cefc:	5b                   	pop    %rbx
  41cefd:	5d                   	pop    %rbp
  41cefe:	41 5c                	pop    %r12
  41cf00:	41 5d                	pop    %r13
  41cf02:	41 5e                	pop    %r14
  41cf04:	41 5f                	pop    %r15
  41cf06:	c3                   	retq   
  41cf07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41cf0e:	00 00 
	(void) gettimeofday( tv , (struct timezone*) 0 );
  41cf10:	31 f6                	xor    %esi,%esi
  41cf12:	4c 89 ef             	mov    %r13,%rdi
  41cf15:	e8 e6 63 fe ff       	callq  403300 <gettimeofday@plt>
  41cf1a:	eb bf                	jmp    41cedb <tmr_prepare_timeval+0x18b>
  41cf1c:	0f 1f 40 00          	nopl   0x0(%rax)
	    perror("clock_gettime"); return;
  41cf20:	bf 00 ce 42 00       	mov    $0x42ce00,%edi
  41cf25:	e8 76 5f fe ff       	callq  402ea0 <perror@plt>
  41cf2a:	eb af                	jmp    41cedb <tmr_prepare_timeval+0x18b>
{
  41cf2c:	66 0f 6f 05 5c 4e 00 	movdqa 0x4e5c(%rip),%xmm0        # 421d90 <_IO_stdin_used+0x2cd0>
  41cf33:	00 
  41cf34:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
  41cf3b:	c7 85 10 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8010(%rbp)
  41cf42:	f5 f5 f5 
  41cf45:	0f 11 85 00 80 ff 7f 	movups %xmm0,0x7fff8000(%rbp)
  41cf4c:	eb a7                	jmp    41cef5 <tmr_prepare_timeval+0x1a5>
  41cf4e:	bf a0 00 00 00       	mov    $0xa0,%edi
  41cf53:	e8 c8 63 fe ff       	callq  403320 <__asan_stack_malloc_2@plt>
  41cf58:	48 85 c0             	test   %rax,%rax
  41cf5b:	48 0f 45 d8          	cmovne %rax,%rbx
  41cf5f:	e9 14 fe ff ff       	jmpq   41cd78 <tmr_prepare_timeval+0x28>
	tv0.tv_usec = ts.tv_nsec / 1000L;
  41cf64:	e8 e7 62 fe ff       	callq  403250 <__asan_report_load8@plt>
	tv0.tv_sec = ts.tv_sec;
  41cf69:	4c 89 ff             	mov    %r15,%rdi
  41cf6c:	e8 df 62 fe ff       	callq  403250 <__asan_report_load8@plt>
  41cf71:	e8 2a 60 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	timeradd( &tv_diff, &tv0, tv );
  41cf76:	4c 89 ef             	mov    %r13,%rdi
  41cf79:	e8 22 60 fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41cf7e:	e8 1d 60 fe ff       	callq  402fa0 <__asan_report_store8@plt>
	tv0.tv_usec = ts.tv_nsec / 1000L;
  41cf83:	e8 18 60 fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41cf88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41cf8f:	00 

000000000041cf90 <tmr_create>:
    {
  41cf90:	41 55                	push   %r13
  41cf92:	41 54                	push   %r12
  41cf94:	49 89 fc             	mov    %rdi,%r12
  41cf97:	55                   	push   %rbp
  41cf98:	48 89 cd             	mov    %rcx,%rbp
  41cf9b:	53                   	push   %rbx
  41cf9c:	48 83 ec 28          	sub    $0x28,%rsp
    if ( free_timers != (Timer*) 0 )
  41cfa0:	48 8b 1d 19 61 22 00 	mov    0x226119(%rip),%rbx        # 6430c0 <free_timers>
  41cfa7:	48 85 db             	test   %rbx,%rbx
  41cfaa:	0f 84 d0 01 00 00    	je     41d180 <tmr_create+0x1f0>
	free_timers = t->next;
  41cfb0:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
  41cfb4:	48 89 f8             	mov    %rdi,%rax
  41cfb7:	48 c1 e8 03          	shr    $0x3,%rax
  41cfbb:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41cfc2:	0f 85 31 02 00 00    	jne    41d1f9 <tmr_create+0x269>
  41cfc8:	48 8b 43 38          	mov    0x38(%rbx),%rax
	--free_count;
  41cfcc:	83 2d 2d 60 22 00 01 	subl   $0x1,0x22602d(%rip)        # 643000 <free_count>
	free_timers = t->next;
  41cfd3:	48 89 05 e6 60 22 00 	mov    %rax,0x2260e6(%rip)        # 6430c0 <free_timers>
    t->timer_proc = timer_proc;
  41cfda:	48 89 d8             	mov    %rbx,%rax
  41cfdd:	48 c1 e8 03          	shr    $0x3,%rax
  41cfe1:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41cfe8:	0f 85 e9 01 00 00    	jne    41d1d7 <tmr_create+0x247>
    t->client_data = client_data;
  41cfee:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
    t->timer_proc = timer_proc;
  41cff2:	48 89 33             	mov    %rsi,(%rbx)
    t->client_data = client_data;
  41cff5:	48 89 f8             	mov    %rdi,%rax
  41cff8:	48 c1 e8 03          	shr    $0x3,%rax
  41cffc:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41d003:	0f 85 de 01 00 00    	jne    41d1e7 <tmr_create+0x257>
    t->msecs = msecs;
  41d009:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    t->client_data = client_data;
  41d00d:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    t->msecs = msecs;
  41d011:	48 89 f8             	mov    %rdi,%rax
  41d014:	48 c1 e8 03          	shr    $0x3,%rax
  41d018:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41d01f:	0f 85 c7 01 00 00    	jne    41d1ec <tmr_create+0x25c>
    t->periodic = periodic;
  41d025:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
    t->msecs = msecs;
  41d029:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
    t->periodic = periodic;
  41d02d:	48 89 f8             	mov    %rdi,%rax
  41d030:	48 c1 e8 03          	shr    $0x3,%rax
  41d034:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41d03b:	84 c0                	test   %al,%al
  41d03d:	74 08                	je     41d047 <tmr_create+0xb7>
  41d03f:	3c 03                	cmp    $0x3,%al
  41d041:	0f 8e 86 01 00 00    	jle    41d1cd <tmr_create+0x23d>
  41d047:	44 89 43 18          	mov    %r8d,0x18(%rbx)
	t->time = *nowP;
  41d04b:	4c 8d 6b 20          	lea    0x20(%rbx),%r13
    if ( nowP != (struct timeval*) 0 )
  41d04f:	4d 85 e4             	test   %r12,%r12
  41d052:	0f 84 68 01 00 00    	je     41d1c0 <tmr_create+0x230>
	t->time = *nowP;
  41d058:	4c 89 e8             	mov    %r13,%rax
  41d05b:	48 c1 e8 03          	shr    $0x3,%rax
  41d05f:	66 83 b8 00 80 ff 7f 	cmpw   $0x0,0x7fff8000(%rax)
  41d066:	00 
  41d067:	0f 85 91 01 00 00    	jne    41d1fe <tmr_create+0x26e>
  41d06d:	4c 89 e0             	mov    %r12,%rax
  41d070:	48 c1 e8 03          	shr    $0x3,%rax
  41d074:	66 83 b8 00 80 ff 7f 	cmpw   $0x0,0x7fff8000(%rax)
  41d07b:	00 
  41d07c:	0f 85 84 01 00 00    	jne    41d206 <tmr_create+0x276>
  41d082:	f3 41 0f 6f 04 24    	movdqu (%r12),%xmm0
  41d088:	0f 11 43 20          	movups %xmm0,0x20(%rbx)
    t->time.tv_sec += msecs / 1000L;
  41d08c:	4c 89 e8             	mov    %r13,%rax
  41d08f:	48 c1 e8 03          	shr    $0x3,%rax
  41d093:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41d09a:	0f 85 3f 01 00 00    	jne    41d1df <tmr_create+0x24f>
  41d0a0:	48 89 e8             	mov    %rbp,%rax
  41d0a3:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
  41d0a7:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
  41d0ae:	9b c4 20 
  41d0b1:	48 f7 ea             	imul   %rdx
  41d0b4:	48 89 e8             	mov    %rbp,%rax
  41d0b7:	48 c1 f8 3f          	sar    $0x3f,%rax
  41d0bb:	48 c1 fa 07          	sar    $0x7,%rdx
  41d0bf:	48 29 c2             	sub    %rax,%rdx
    t->time.tv_usec += ( msecs % 1000L ) * 1000L;
  41d0c2:	48 8d 43 28          	lea    0x28(%rbx),%rax
  41d0c6:	48 89 c1             	mov    %rax,%rcx
    t->time.tv_sec += msecs / 1000L;
  41d0c9:	48 01 d7             	add    %rdx,%rdi
    t->time.tv_usec += ( msecs % 1000L ) * 1000L;
  41d0cc:	48 c1 e9 03          	shr    $0x3,%rcx
    t->time.tv_sec += msecs / 1000L;
  41d0d0:	48 89 7b 20          	mov    %rdi,0x20(%rbx)
    t->time.tv_usec += ( msecs % 1000L ) * 1000L;
  41d0d4:	80 b9 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rcx)
  41d0db:	0f 85 10 01 00 00    	jne    41d1f1 <tmr_create+0x261>
  41d0e1:	48 69 d2 e8 03 00 00 	imul   $0x3e8,%rdx,%rdx
  41d0e8:	48 29 d5             	sub    %rdx,%rbp
  41d0eb:	48 69 f5 e8 03 00 00 	imul   $0x3e8,%rbp,%rsi
  41d0f2:	48 03 73 28          	add    0x28(%rbx),%rsi
  41d0f6:	48 89 73 28          	mov    %rsi,0x28(%rbx)
    if ( t->time.tv_usec >= 1000000L )
  41d0fa:	48 81 fe 3f 42 0f 00 	cmp    $0xf423f,%rsi
  41d101:	7e 33                	jle    41d136 <tmr_create+0x1a6>
	t->time.tv_sec += t->time.tv_usec / 1000000L;
  41d103:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
  41d10a:	de 1b 43 
  41d10d:	48 89 f0             	mov    %rsi,%rax
  41d110:	48 f7 ea             	imul   %rdx
  41d113:	48 89 f0             	mov    %rsi,%rax
  41d116:	48 c1 f8 3f          	sar    $0x3f,%rax
  41d11a:	48 c1 fa 12          	sar    $0x12,%rdx
  41d11e:	48 29 c2             	sub    %rax,%rdx
  41d121:	48 01 d7             	add    %rdx,%rdi
	t->time.tv_usec %= 1000000L;
  41d124:	48 69 d2 40 42 0f 00 	imul   $0xf4240,%rdx,%rdx
	t->time.tv_sec += t->time.tv_usec / 1000000L;
  41d12b:	48 89 7b 20          	mov    %rdi,0x20(%rbx)
	t->time.tv_usec %= 1000000L;
  41d12f:	48 29 d6             	sub    %rdx,%rsi
  41d132:	48 89 73 28          	mov    %rsi,0x28(%rbx)
    t->hash = hash( t );
  41d136:	e8 25 f1 ff ff       	callq  41c260 <hash.isra.0>
  41d13b:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
  41d13f:	48 89 fa             	mov    %rdi,%rdx
  41d142:	48 c1 ea 03          	shr    $0x3,%rdx
  41d146:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41d14d:	84 d2                	test   %dl,%dl
  41d14f:	74 05                	je     41d156 <tmr_create+0x1c6>
  41d151:	80 fa 03             	cmp    $0x3,%dl
  41d154:	7e 7c                	jle    41d1d2 <tmr_create+0x242>
  41d156:	89 43 40             	mov    %eax,0x40(%rbx)
    l_add( t );
  41d159:	48 89 df             	mov    %rbx,%rdi
  41d15c:	e8 cf eb ff ff       	callq  41bd30 <l_add>
    ++active_count;
  41d161:	83 05 d8 5e 22 00 01 	addl   $0x1,0x225ed8(%rip)        # 643040 <active_count>
    }
  41d168:	48 83 c4 28          	add    $0x28,%rsp
  41d16c:	48 89 d8             	mov    %rbx,%rax
  41d16f:	5b                   	pop    %rbx
  41d170:	5d                   	pop    %rbp
  41d171:	41 5c                	pop    %r12
  41d173:	41 5d                	pop    %r13
  41d175:	c3                   	retq   
  41d176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d17d:	00 00 00 
	t = (Timer*) malloc( sizeof(Timer) );
  41d180:	bf 48 00 00 00       	mov    $0x48,%edi
  41d185:	44 89 44 24 1c       	mov    %r8d,0x1c(%rsp)
  41d18a:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
  41d18f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  41d194:	e8 17 5f fe ff       	callq  4030b0 <malloc@plt>
  41d199:	48 89 c3             	mov    %rax,%rbx
	if ( t == (Timer*) 0 )
  41d19c:	48 85 c0             	test   %rax,%rax
  41d19f:	74 c7                	je     41d168 <tmr_create+0x1d8>
	++alloc_count;
  41d1a1:	83 05 d8 5e 22 00 01 	addl   $0x1,0x225ed8(%rip)        # 643080 <alloc_count>
  41d1a8:	44 8b 44 24 1c       	mov    0x1c(%rsp),%r8d
  41d1ad:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  41d1b2:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  41d1b7:	e9 1e fe ff ff       	jmpq   41cfda <tmr_create+0x4a>
  41d1bc:	0f 1f 40 00          	nopl   0x0(%rax)
	tmr_prepare_timeval( &t->time );
  41d1c0:	4c 89 ef             	mov    %r13,%rdi
  41d1c3:	e8 88 fb ff ff       	callq  41cd50 <tmr_prepare_timeval>
  41d1c8:	e9 bf fe ff ff       	jmpq   41d08c <tmr_create+0xfc>
    t->periodic = periodic;
  41d1cd:	e8 1e 5a fe ff       	callq  402bf0 <__asan_report_store4@plt>
    t->hash = hash( t );
  41d1d2:	e8 19 5a fe ff       	callq  402bf0 <__asan_report_store4@plt>
    t->timer_proc = timer_proc;
  41d1d7:	48 89 df             	mov    %rbx,%rdi
  41d1da:	e8 c1 5d fe ff       	callq  402fa0 <__asan_report_store8@plt>
    t->time.tv_sec += msecs / 1000L;
  41d1df:	4c 89 ef             	mov    %r13,%rdi
  41d1e2:	e8 69 60 fe ff       	callq  403250 <__asan_report_load8@plt>
    t->client_data = client_data;
  41d1e7:	e8 b4 5d fe ff       	callq  402fa0 <__asan_report_store8@plt>
    t->msecs = msecs;
  41d1ec:	e8 af 5d fe ff       	callq  402fa0 <__asan_report_store8@plt>
    t->time.tv_usec += ( msecs % 1000L ) * 1000L;
  41d1f1:	48 89 c7             	mov    %rax,%rdi
  41d1f4:	e8 57 60 fe ff       	callq  403250 <__asan_report_load8@plt>
	free_timers = t->next;
  41d1f9:	e8 52 60 fe ff       	callq  403250 <__asan_report_load8@plt>
	t->time = *nowP;
  41d1fe:	4c 89 ef             	mov    %r13,%rdi
  41d201:	e8 7a 5b fe ff       	callq  402d80 <__asan_report_store16@plt>
  41d206:	4c 89 e7             	mov    %r12,%rdi
  41d209:	e8 12 5f fe ff       	callq  403120 <__asan_report_load16@plt>
  41d20e:	66 90                	xchg   %ax,%ax

000000000041d210 <is_leap>:


static int
is_leap( int year )
    {
    return year % 400? ( year % 100 ? ( year % 4 ? 0 : 1 ) : 0 ) : 1;
  41d210:	89 f8                	mov    %edi,%eax
  41d212:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
  41d217:	89 fe                	mov    %edi,%esi
  41d219:	f7 ea                	imul   %edx
  41d21b:	c1 fe 1f             	sar    $0x1f,%esi
  41d21e:	b8 01 00 00 00       	mov    $0x1,%eax
  41d223:	89 d1                	mov    %edx,%ecx
  41d225:	c1 f9 07             	sar    $0x7,%ecx
  41d228:	29 f1                	sub    %esi,%ecx
  41d22a:	69 c9 90 01 00 00    	imul   $0x190,%ecx,%ecx
  41d230:	39 cf                	cmp    %ecx,%edi
  41d232:	74 18                	je     41d24c <is_leap+0x3c>
  41d234:	c1 fa 05             	sar    $0x5,%edx
  41d237:	89 d0                	mov    %edx,%eax
  41d239:	29 f0                	sub    %esi,%eax
  41d23b:	6b d0 64             	imul   $0x64,%eax,%edx
  41d23e:	89 f8                	mov    %edi,%eax
  41d240:	29 d0                	sub    %edx,%eax
  41d242:	74 08                	je     41d24c <is_leap+0x3c>
  41d244:	31 c0                	xor    %eax,%eax
  41d246:	83 e7 03             	and    $0x3,%edi
  41d249:	0f 94 c0             	sete   %al
    }
  41d24c:	c3                   	retq   
  41d24d:	0f 1f 00             	nopl   (%rax)

000000000041d250 <tm_to_time>:


/* Basically the same as mktime(). */
static time_t
tm_to_time( struct tm* tmP )
    {
  41d250:	49 89 f8             	mov    %rdi,%r8
    time_t t;
    static int monthtab[12] = {
	0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334 };

    /* Years since epoch, converted to days. */
    t = ( tmP->tm_year - 70 ) * 365;
  41d253:	48 83 c7 14          	add    $0x14,%rdi
    {
  41d257:	48 83 ec 08          	sub    $0x8,%rsp
    t = ( tmP->tm_year - 70 ) * 365;
  41d25b:	48 89 f8             	mov    %rdi,%rax
  41d25e:	48 c1 e8 03          	shr    $0x3,%rax
  41d262:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  41d269:	48 89 f8             	mov    %rdi,%rax
  41d26c:	83 e0 07             	and    $0x7,%eax
  41d26f:	83 c0 03             	add    $0x3,%eax
  41d272:	38 d0                	cmp    %dl,%al
  41d274:	7c 08                	jl     41d27e <tm_to_time+0x2e>
  41d276:	84 d2                	test   %dl,%dl
  41d278:	0f 85 89 01 00 00    	jne    41d407 <tm_to_time+0x1b7>
  41d27e:	41 8b 78 14          	mov    0x14(%r8),%edi
  41d282:	8d 47 ba             	lea    -0x46(%rdi),%eax
    /* Leap days for previous years. */
    t += ( tmP->tm_year - 69 ) / 4;
  41d285:	8d 4f bb             	lea    -0x45(%rdi),%ecx
    t = ( tmP->tm_year - 70 ) * 365;
  41d288:	69 c0 6d 01 00 00    	imul   $0x16d,%eax,%eax
    t += ( tmP->tm_year - 69 ) / 4;
  41d28e:	85 c9                	test   %ecx,%ecx
    t = ( tmP->tm_year - 70 ) * 365;
  41d290:	48 63 d0             	movslq %eax,%rdx
    t += ( tmP->tm_year - 69 ) / 4;
  41d293:	8d 41 03             	lea    0x3(%rcx),%eax
  41d296:	0f 49 c1             	cmovns %ecx,%eax
    /* Days for the beginning of this month. */
    t += monthtab[tmP->tm_mon];
  41d299:	49 8d 48 10          	lea    0x10(%r8),%rcx
    t += ( tmP->tm_year - 69 ) / 4;
  41d29d:	c1 f8 02             	sar    $0x2,%eax
  41d2a0:	48 98                	cltq   
  41d2a2:	48 01 d0             	add    %rdx,%rax
    t += monthtab[tmP->tm_mon];
  41d2a5:	48 89 ca             	mov    %rcx,%rdx
  41d2a8:	48 c1 ea 03          	shr    $0x3,%rdx
  41d2ac:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41d2b3:	84 d2                	test   %dl,%dl
  41d2b5:	74 09                	je     41d2c0 <tm_to_time+0x70>
  41d2b7:	80 fa 03             	cmp    $0x3,%dl
  41d2ba:	0f 8e 3f 01 00 00    	jle    41d3ff <tm_to_time+0x1af>
  41d2c0:	4d 63 48 10          	movslq 0x10(%r8),%r9
  41d2c4:	4a 8d 0c 8d 80 d1 42 	lea    0x42d180(,%r9,4),%rcx
  41d2cb:	00 
  41d2cc:	4c 89 ce             	mov    %r9,%rsi
  41d2cf:	48 89 ca             	mov    %rcx,%rdx
  41d2d2:	48 c1 ea 03          	shr    $0x3,%rdx
  41d2d6:	44 0f b6 92 00 80 ff 	movzbl 0x7fff8000(%rdx),%r10d
  41d2dd:	7f 
  41d2de:	48 89 ca             	mov    %rcx,%rdx
  41d2e1:	83 e2 07             	and    $0x7,%edx
  41d2e4:	83 c2 03             	add    $0x3,%edx
  41d2e7:	44 38 d2             	cmp    %r10b,%dl
  41d2ea:	7c 09                	jl     41d2f5 <tm_to_time+0xa5>
  41d2ec:	45 84 d2             	test   %r10b,%r10b
  41d2ef:	0f 85 02 01 00 00    	jne    41d3f7 <tm_to_time+0x1a7>
  41d2f5:	4e 63 0c 8d 80 d1 42 	movslq 0x42d180(,%r9,4),%r9
  41d2fc:	00 
  41d2fd:	49 01 c1             	add    %rax,%r9
    /* Leap day for this year. */
    if ( tmP->tm_mon >= 2 && is_leap( tmP->tm_year + 1900 ) )
  41d300:	83 fe 01             	cmp    $0x1,%esi
  41d303:	7e 12                	jle    41d317 <tm_to_time+0xc7>
  41d305:	81 c7 6c 07 00 00    	add    $0x76c,%edi
  41d30b:	e8 00 ff ff ff       	callq  41d210 <is_leap>
	++t;
  41d310:	83 f8 01             	cmp    $0x1,%eax
  41d313:	49 83 d9 ff          	sbb    $0xffffffffffffffff,%r9
    /* Days since the beginning of this month. */
    t += tmP->tm_mday - 1;	/* 1-based field */
  41d317:	49 8d 78 0c          	lea    0xc(%r8),%rdi
  41d31b:	48 89 f8             	mov    %rdi,%rax
  41d31e:	48 c1 e8 03          	shr    $0x3,%rax
  41d322:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  41d329:	48 89 f8             	mov    %rdi,%rax
  41d32c:	83 e0 07             	and    $0x7,%eax
  41d32f:	83 c0 03             	add    $0x3,%eax
  41d332:	38 d0                	cmp    %dl,%al
  41d334:	7c 08                	jl     41d33e <tm_to_time+0xee>
  41d336:	84 d2                	test   %dl,%dl
  41d338:	0f 85 b4 00 00 00    	jne    41d3f2 <tm_to_time+0x1a2>
  41d33e:	41 8b 40 0c          	mov    0xc(%r8),%eax
    /* Hours, minutes, and seconds. */
    t = t * 24 + tmP->tm_hour;
  41d342:	49 8d 78 08          	lea    0x8(%r8),%rdi
    t += tmP->tm_mday - 1;	/* 1-based field */
  41d346:	83 e8 01             	sub    $0x1,%eax
  41d349:	48 98                	cltq   
  41d34b:	4c 01 c8             	add    %r9,%rax
    t = t * 24 + tmP->tm_hour;
  41d34e:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
  41d352:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
  41d359:	00 
  41d35a:	48 89 fa             	mov    %rdi,%rdx
  41d35d:	48 c1 ea 03          	shr    $0x3,%rdx
  41d361:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41d368:	84 d2                	test   %dl,%dl
  41d36a:	74 05                	je     41d371 <tm_to_time+0x121>
  41d36c:	80 fa 03             	cmp    $0x3,%dl
  41d36f:	7e 7c                	jle    41d3ed <tm_to_time+0x19d>
  41d371:	49 63 50 08          	movslq 0x8(%r8),%rdx
    t = t * 60 + tmP->tm_min;
  41d375:	49 8d 78 04          	lea    0x4(%r8),%rdi
    t = t * 24 + tmP->tm_hour;
  41d379:	48 01 c2             	add    %rax,%rdx
    t = t * 60 + tmP->tm_min;
  41d37c:	48 89 d0             	mov    %rdx,%rax
  41d37f:	48 c1 e0 04          	shl    $0x4,%rax
  41d383:	48 29 d0             	sub    %rdx,%rax
  41d386:	48 89 fa             	mov    %rdi,%rdx
  41d389:	48 c1 ea 03          	shr    $0x3,%rdx
  41d38d:	48 c1 e0 02          	shl    $0x2,%rax
  41d391:	0f b6 8a 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%ecx
  41d398:	48 89 fa             	mov    %rdi,%rdx
  41d39b:	83 e2 07             	and    $0x7,%edx
  41d39e:	83 c2 03             	add    $0x3,%edx
  41d3a1:	38 ca                	cmp    %cl,%dl
  41d3a3:	7c 04                	jl     41d3a9 <tm_to_time+0x159>
  41d3a5:	84 c9                	test   %cl,%cl
  41d3a7:	75 3f                	jne    41d3e8 <tm_to_time+0x198>
  41d3a9:	49 63 50 04          	movslq 0x4(%r8),%rdx
  41d3ad:	48 01 c2             	add    %rax,%rdx
    t = t * 60 + tmP->tm_sec;
  41d3b0:	48 89 d0             	mov    %rdx,%rax
  41d3b3:	48 c1 e0 04          	shl    $0x4,%rax
  41d3b7:	48 29 d0             	sub    %rdx,%rax
  41d3ba:	4c 89 c2             	mov    %r8,%rdx
  41d3bd:	48 c1 ea 03          	shr    $0x3,%rdx
  41d3c1:	48 c1 e0 02          	shl    $0x2,%rax
  41d3c5:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41d3cc:	84 d2                	test   %dl,%dl
  41d3ce:	74 05                	je     41d3d5 <tm_to_time+0x185>
  41d3d0:	80 fa 03             	cmp    $0x3,%dl
  41d3d3:	7e 0b                	jle    41d3e0 <tm_to_time+0x190>
  41d3d5:	49 63 10             	movslq (%r8),%rdx

    return t;
    }
  41d3d8:	48 83 c4 08          	add    $0x8,%rsp
    t = t * 60 + tmP->tm_sec;
  41d3dc:	48 01 d0             	add    %rdx,%rax
    }
  41d3df:	c3                   	retq   
    t = t * 60 + tmP->tm_sec;
  41d3e0:	4c 89 c7             	mov    %r8,%rdi
  41d3e3:	e8 e8 59 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    t = t * 60 + tmP->tm_min;
  41d3e8:	e8 e3 59 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    t = t * 24 + tmP->tm_hour;
  41d3ed:	e8 de 59 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    t += tmP->tm_mday - 1;	/* 1-based field */
  41d3f2:	e8 d9 59 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    t += monthtab[tmP->tm_mon];
  41d3f7:	48 89 cf             	mov    %rcx,%rdi
  41d3fa:	e8 d1 59 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41d3ff:	48 89 cf             	mov    %rcx,%rdi
  41d402:	e8 c9 59 fe ff       	callq  402dd0 <__asan_report_load4@plt>
    t = ( tmP->tm_year - 70 ) * 365;
  41d407:	e8 c4 59 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41d40c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041d410 <strlong_compare>:
    return strcmp( ((struct strlong*) v1)->s, ((struct strlong*) v2)->s );
  41d410:	48 89 f0             	mov    %rsi,%rax
    {
  41d413:	48 83 ec 08          	sub    $0x8,%rsp
    return strcmp( ((struct strlong*) v1)->s, ((struct strlong*) v2)->s );
  41d417:	48 c1 e8 03          	shr    $0x3,%rax
  41d41b:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41d422:	75 1f                	jne    41d443 <strlong_compare+0x33>
  41d424:	48 89 f8             	mov    %rdi,%rax
  41d427:	48 8b 36             	mov    (%rsi),%rsi
  41d42a:	48 c1 e8 03          	shr    $0x3,%rax
  41d42e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41d435:	75 14                	jne    41d44b <strlong_compare+0x3b>
  41d437:	48 8b 3f             	mov    (%rdi),%rdi
    }
  41d43a:	48 83 c4 08          	add    $0x8,%rsp
    return strcmp( ((struct strlong*) v1)->s, ((struct strlong*) v2)->s );
  41d43e:	e9 fd 59 fe ff       	jmpq   402e40 <strcmp@plt>
  41d443:	48 89 f7             	mov    %rsi,%rdi
  41d446:	e8 05 5e fe ff       	callq  403250 <__asan_report_load8@plt>
  41d44b:	e8 00 5e fe ff       	callq  403250 <__asan_report_load8@plt>

000000000041d450 <strlong_search>:
    {
  41d450:	41 57                	push   %r15
    h = n - 1;
  41d452:	44 8d 7a ff          	lea    -0x1(%rdx),%r15d
    {
  41d456:	41 56                	push   %r14
  41d458:	41 55                	push   %r13
    l = 0;
  41d45a:	45 31 ed             	xor    %r13d,%r13d
    {
  41d45d:	41 54                	push   %r12
  41d45f:	49 89 fc             	mov    %rdi,%r12
  41d462:	55                   	push   %rbp
  41d463:	48 89 f5             	mov    %rsi,%rbp
  41d466:	53                   	push   %rbx
  41d467:	48 83 ec 18          	sub    $0x18,%rsp
  41d46b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  41d470:	eb 11                	jmp    41d483 <strlong_search+0x33>
  41d472:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	else if ( r > 0 )
  41d478:	74 66                	je     41d4e0 <strlong_search+0x90>
	    l = i + 1;
  41d47a:	45 8d 6e 01          	lea    0x1(%r14),%r13d
	if ( h < l )
  41d47e:	45 39 ef             	cmp    %r13d,%r15d
  41d481:	7c 43                	jl     41d4c6 <strlong_search+0x76>
	i = ( h + l ) / 2;
  41d483:	43 8d 04 2f          	lea    (%r15,%r13,1),%eax
  41d487:	41 89 c6             	mov    %eax,%r14d
  41d48a:	41 c1 ee 1f          	shr    $0x1f,%r14d
  41d48e:	41 01 c6             	add    %eax,%r14d
  41d491:	41 d1 fe             	sar    %r14d
	r = strcmp( str, tab[i].s );
  41d494:	49 63 de             	movslq %r14d,%rbx
  41d497:	48 c1 e3 04          	shl    $0x4,%rbx
  41d49b:	48 01 eb             	add    %rbp,%rbx
  41d49e:	48 89 d8             	mov    %rbx,%rax
  41d4a1:	48 c1 e8 03          	shr    $0x3,%rax
  41d4a5:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41d4ac:	75 78                	jne    41d526 <strlong_search+0xd6>
  41d4ae:	48 8b 33             	mov    (%rbx),%rsi
  41d4b1:	4c 89 e7             	mov    %r12,%rdi
  41d4b4:	e8 87 59 fe ff       	callq  402e40 <strcmp@plt>
	if ( r < 0 )
  41d4b9:	85 c0                	test   %eax,%eax
  41d4bb:	79 bb                	jns    41d478 <strlong_search+0x28>
	    h = i - 1;
  41d4bd:	45 8d 7e ff          	lea    -0x1(%r14),%r15d
	if ( h < l )
  41d4c1:	45 39 ef             	cmp    %r13d,%r15d
  41d4c4:	7d bd                	jge    41d483 <strlong_search+0x33>
    }
  41d4c6:	48 83 c4 18          	add    $0x18,%rsp
	    return 0;
  41d4ca:	31 c0                	xor    %eax,%eax
    }
  41d4cc:	5b                   	pop    %rbx
  41d4cd:	5d                   	pop    %rbp
  41d4ce:	41 5c                	pop    %r12
  41d4d0:	41 5d                	pop    %r13
  41d4d2:	41 5e                	pop    %r14
  41d4d4:	41 5f                	pop    %r15
  41d4d6:	c3                   	retq   
  41d4d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41d4de:	00 00 
	    *lP = tab[i].l;
  41d4e0:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  41d4e4:	48 89 f8             	mov    %rdi,%rax
  41d4e7:	48 c1 e8 03          	shr    $0x3,%rax
  41d4eb:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41d4f2:	75 3a                	jne    41d52e <strlong_search+0xde>
  41d4f4:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  41d4f9:	48 8b 43 08          	mov    0x8(%rbx),%rax
  41d4fd:	48 c1 ea 03          	shr    $0x3,%rdx
  41d501:	80 ba 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rdx)
  41d508:	75 29                	jne    41d533 <strlong_search+0xe3>
  41d50a:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  41d50f:	48 89 01             	mov    %rax,(%rcx)
    }
  41d512:	48 83 c4 18          	add    $0x18,%rsp
	    return 1;
  41d516:	b8 01 00 00 00       	mov    $0x1,%eax
    }
  41d51b:	5b                   	pop    %rbx
  41d51c:	5d                   	pop    %rbp
  41d51d:	41 5c                	pop    %r12
  41d51f:	41 5d                	pop    %r13
  41d521:	41 5e                	pop    %r14
  41d523:	41 5f                	pop    %r15
  41d525:	c3                   	retq   
	r = strcmp( str, tab[i].s );
  41d526:	48 89 df             	mov    %rbx,%rdi
  41d529:	e8 22 5d fe ff       	callq  403250 <__asan_report_load8@plt>
	    *lP = tab[i].l;
  41d52e:	e8 1d 5d fe ff       	callq  403250 <__asan_report_load8@plt>
  41d533:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41d538:	e8 63 5a fe ff       	callq  402fa0 <__asan_report_store8@plt>
  41d53d:	0f 1f 00             	nopl   (%rax)

000000000041d540 <pound_case>:
    {
  41d540:	41 55                	push   %r13
    for ( ; *str != '\0'; ++str )
  41d542:	48 89 f8             	mov    %rdi,%rax
    {
  41d545:	41 54                	push   %r12
    for ( ; *str != '\0'; ++str )
  41d547:	48 c1 e8 03          	shr    $0x3,%rax
    {
  41d54b:	55                   	push   %rbp
  41d54c:	53                   	push   %rbx
  41d54d:	48 89 fb             	mov    %rdi,%rbx
  41d550:	48 83 ec 08          	sub    $0x8,%rsp
    for ( ; *str != '\0'; ++str )
  41d554:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41d55b:	84 c0                	test   %al,%al
  41d55d:	74 06                	je     41d565 <pound_case+0x25>
  41d55f:	0f 8e c2 00 00 00    	jle    41d627 <pound_case+0xe7>
  41d565:	0f b6 2b             	movzbl (%rbx),%ebp
  41d568:	40 84 ed             	test   %bpl,%bpl
  41d56b:	0f 84 a3 00 00 00    	je     41d614 <pound_case+0xd4>
	if ( isupper( (int) *str ) )
  41d571:	e8 8a 5a fe ff       	callq  403000 <__ctype_b_loc@plt>
  41d576:	49 89 c5             	mov    %rax,%r13
  41d579:	49 89 c4             	mov    %rax,%r12
  41d57c:	49 c1 ed 03          	shr    $0x3,%r13
  41d580:	41 80 bd 00 80 ff 7f 	cmpb   $0x0,0x7fff8000(%r13)
  41d587:	00 
  41d588:	0f 85 ab 00 00 00    	jne    41d639 <pound_case+0xf9>
  41d58e:	49 8b 14 24          	mov    (%r12),%rdx
  41d592:	48 0f be c5          	movsbq %bpl,%rax
  41d596:	48 8d 3c 42          	lea    (%rdx,%rax,2),%rdi
  41d59a:	48 89 f8             	mov    %rdi,%rax
  41d59d:	48 c1 e8 03          	shr    $0x3,%rax
  41d5a1:	0f b6 90 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%edx
  41d5a8:	48 89 f8             	mov    %rdi,%rax
  41d5ab:	83 e0 07             	and    $0x7,%eax
  41d5ae:	83 c0 01             	add    $0x1,%eax
  41d5b1:	38 d0                	cmp    %dl,%al
  41d5b3:	7c 04                	jl     41d5b9 <pound_case+0x79>
  41d5b5:	84 d2                	test   %dl,%dl
  41d5b7:	75 7b                	jne    41d634 <pound_case+0xf4>
  41d5b9:	0f b7 07             	movzwl (%rdi),%eax
  41d5bc:	f6 c4 01             	test   $0x1,%ah
  41d5bf:	74 27                	je     41d5e8 <pound_case+0xa8>
	    *str = tolower( (int) *str );
  41d5c1:	40 0f be fd          	movsbl %bpl,%edi
  41d5c5:	e8 46 5c fe ff       	callq  403210 <tolower@plt>
  41d5ca:	48 89 da             	mov    %rbx,%rdx
  41d5cd:	48 89 d9             	mov    %rbx,%rcx
  41d5d0:	48 c1 ea 03          	shr    $0x3,%rdx
  41d5d4:	83 e1 07             	and    $0x7,%ecx
  41d5d7:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41d5de:	38 ca                	cmp    %cl,%dl
  41d5e0:	7f 04                	jg     41d5e6 <pound_case+0xa6>
  41d5e2:	84 d2                	test   %dl,%dl
  41d5e4:	75 39                	jne    41d61f <pound_case+0xdf>
  41d5e6:	88 03                	mov    %al,(%rbx)
    for ( ; *str != '\0'; ++str )
  41d5e8:	48 83 c3 01          	add    $0x1,%rbx
  41d5ec:	48 89 d8             	mov    %rbx,%rax
  41d5ef:	48 89 da             	mov    %rbx,%rdx
  41d5f2:	48 c1 e8 03          	shr    $0x3,%rax
  41d5f6:	83 e2 07             	and    $0x7,%edx
  41d5f9:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41d600:	38 d0                	cmp    %dl,%al
  41d602:	7f 04                	jg     41d608 <pound_case+0xc8>
  41d604:	84 c0                	test   %al,%al
  41d606:	75 24                	jne    41d62c <pound_case+0xec>
  41d608:	0f b6 2b             	movzbl (%rbx),%ebp
  41d60b:	40 84 ed             	test   %bpl,%bpl
  41d60e:	0f 85 6c ff ff ff    	jne    41d580 <pound_case+0x40>
    }
  41d614:	48 83 c4 08          	add    $0x8,%rsp
  41d618:	5b                   	pop    %rbx
  41d619:	5d                   	pop    %rbp
  41d61a:	41 5c                	pop    %r12
  41d61c:	41 5d                	pop    %r13
  41d61e:	c3                   	retq   
	    *str = tolower( (int) *str );
  41d61f:	48 89 df             	mov    %rbx,%rdi
  41d622:	e8 09 5b fe ff       	callq  403130 <__asan_report_store1@plt>
    for ( ; *str != '\0'; ++str )
  41d627:	e8 e4 5a fe ff       	callq  403110 <__asan_report_load1@plt>
  41d62c:	48 89 df             	mov    %rbx,%rdi
  41d62f:	e8 dc 5a fe ff       	callq  403110 <__asan_report_load1@plt>
	if ( isupper( (int) *str ) )
  41d634:	e8 77 59 fe ff       	callq  402fb0 <__asan_report_load2@plt>
  41d639:	4c 89 e7             	mov    %r12,%rdi
  41d63c:	e8 0f 5c fe ff       	callq  403250 <__asan_report_load8@plt>
  41d641:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41d646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d64d:	00 00 00 

000000000041d650 <scan_wday>:
    {
  41d650:	55                   	push   %rbp
  41d651:	48 89 f5             	mov    %rsi,%rbp
  41d654:	53                   	push   %rbx
  41d655:	48 89 fb             	mov    %rdi,%rbx
  41d658:	48 83 ec 08          	sub    $0x8,%rsp
    if ( ! sorted )
  41d65c:	8b 05 1e 5d 22 00    	mov    0x225d1e(%rip),%eax        # 643380 <sorted.3709>
  41d662:	85 c0                	test   %eax,%eax
  41d664:	74 2a                	je     41d690 <scan_wday+0x40>
    pound_case( str_wday );
  41d666:	48 89 df             	mov    %rbx,%rdi
  41d669:	e8 d2 fe ff ff       	callq  41d540 <pound_case>
    }
  41d66e:	48 83 c4 08          	add    $0x8,%rsp
    return strlong_search(
  41d672:	48 89 e9             	mov    %rbp,%rcx
  41d675:	48 89 df             	mov    %rbx,%rdi
  41d678:	ba 0e 00 00 00       	mov    $0xe,%edx
    }
  41d67d:	5b                   	pop    %rbx
    return strlong_search(
  41d67e:	be 00 05 64 00       	mov    $0x640500,%esi
    }
  41d683:	5d                   	pop    %rbp
    return strlong_search(
  41d684:	e9 c7 fd ff ff       	jmpq   41d450 <strlong_search>
  41d689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	(void) qsort(
  41d690:	b9 10 d4 41 00       	mov    $0x41d410,%ecx
  41d695:	ba 10 00 00 00       	mov    $0x10,%edx
  41d69a:	be 0e 00 00 00       	mov    $0xe,%esi
  41d69f:	bf 00 05 64 00       	mov    $0x640500,%edi
  41d6a4:	e8 07 5e fe ff       	callq  4034b0 <qsort@plt>
	sorted = 1;
  41d6a9:	c7 05 cd 5c 22 00 01 	movl   $0x1,0x225ccd(%rip)        # 643380 <sorted.3709>
  41d6b0:	00 00 00 
  41d6b3:	eb b1                	jmp    41d666 <scan_wday+0x16>
  41d6b5:	90                   	nop
  41d6b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d6bd:	00 00 00 

000000000041d6c0 <scan_mon>:
    {
  41d6c0:	55                   	push   %rbp
  41d6c1:	48 89 f5             	mov    %rsi,%rbp
  41d6c4:	53                   	push   %rbx
  41d6c5:	48 89 fb             	mov    %rdi,%rbx
  41d6c8:	48 83 ec 08          	sub    $0x8,%rsp
    if ( ! sorted )
  41d6cc:	8b 05 6e 5c 22 00    	mov    0x225c6e(%rip),%eax        # 643340 <sorted.3715>
  41d6d2:	85 c0                	test   %eax,%eax
  41d6d4:	74 2a                	je     41d700 <scan_mon+0x40>
    pound_case( str_mon );
  41d6d6:	48 89 df             	mov    %rbx,%rdi
  41d6d9:	e8 62 fe ff ff       	callq  41d540 <pound_case>
    }
  41d6de:	48 83 c4 08          	add    $0x8,%rsp
    return strlong_search(
  41d6e2:	48 89 e9             	mov    %rbp,%rcx
  41d6e5:	48 89 df             	mov    %rbx,%rdi
  41d6e8:	ba 17 00 00 00       	mov    $0x17,%edx
    }
  41d6ed:	5b                   	pop    %rbx
    return strlong_search(
  41d6ee:	be 60 03 64 00       	mov    $0x640360,%esi
    }
  41d6f3:	5d                   	pop    %rbp
    return strlong_search(
  41d6f4:	e9 57 fd ff ff       	jmpq   41d450 <strlong_search>
  41d6f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	(void) qsort(
  41d700:	b9 10 d4 41 00       	mov    $0x41d410,%ecx
  41d705:	ba 10 00 00 00       	mov    $0x10,%edx
  41d70a:	be 17 00 00 00       	mov    $0x17,%esi
  41d70f:	bf 60 03 64 00       	mov    $0x640360,%edi
  41d714:	e8 97 5d fe ff       	callq  4034b0 <qsort@plt>
	sorted = 1;
  41d719:	c7 05 1d 5c 22 00 01 	movl   $0x1,0x225c1d(%rip)        # 643340 <sorted.3715>
  41d720:	00 00 00 
  41d723:	eb b1                	jmp    41d6d6 <scan_mon+0x16>
  41d725:	90                   	nop
  41d726:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d72d:	00 00 00 

000000000041d730 <tdate_parse>:


time_t
tdate_parse( char* str )
    {
  41d730:	41 57                	push   %r15
  41d732:	41 56                	push   %r14
  41d734:	41 55                	push   %r13
  41d736:	41 54                	push   %r12
  41d738:	55                   	push   %rbp
  41d739:	53                   	push   %rbx
  41d73a:	48 89 fb             	mov    %rdi,%rbx
  41d73d:	48 81 ec c8 06 00 00 	sub    $0x6c8,%rsp
  41d744:	44 8b 25 b5 3b 22 00 	mov    0x223bb5(%rip),%r12d        # 641300 <__asan_option_detect_stack_use_after_return>
  41d74b:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
  41d750:	45 85 e4             	test   %r12d,%r12d
  41d753:	0f 85 18 14 00 00    	jne    41eb71 <tdate_parse+0x1441>
  41d759:	49 89 ed             	mov    %rbp,%r13
    int tm_sec, tm_min, tm_hour, tm_mday, tm_year;
    long tm_mon, tm_wday;
    time_t t;

    /* Initialize. */
    (void) memset( (char*) &tm, 0, sizeof(struct tm) );
  41d75c:	ba 38 00 00 00       	mov    $0x38,%edx
  41d761:	31 f6                	xor    %esi,%esi
    {
  41d763:	48 c7 45 00 b3 8a b5 	movq   $0x41b58ab3,0x0(%rbp)
  41d76a:	41 
  41d76b:	49 c1 ed 03          	shr    $0x3,%r13
  41d76f:	48 c7 45 08 a0 ce 42 	movq   $0x42cea0,0x8(%rbp)
  41d776:	00 
    (void) memset( (char*) &tm, 0, sizeof(struct tm) );
  41d777:	48 8d bd e0 01 00 00 	lea    0x1e0(%rbp),%rdi
    {
  41d77e:	4c 8d b5 80 06 00 00 	lea    0x680(%rbp),%r14
  41d785:	48 c7 45 10 30 d7 41 	movq   $0x41d730,0x10(%rbp)
  41d78c:	00 
  41d78d:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
  41d794:	f1 f1 f1 f1 
  41d798:	41 c7 85 04 80 ff 7f 	movl   $0xf2f2f204,0x7fff8004(%r13)
  41d79f:	04 f2 f2 f2 
  41d7a3:	41 c7 85 08 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8008(%r13)
  41d7aa:	f2 f2 f2 f2 
  41d7ae:	41 c7 85 0c 80 ff 7f 	movl   $0xf2f2f204,0x7fff800c(%r13)
  41d7b5:	04 f2 f2 f2 
  41d7b9:	41 c7 85 10 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8010(%r13)
  41d7c0:	f2 f2 f2 f2 
  41d7c4:	41 c7 85 14 80 ff 7f 	movl   $0xf2f2f204,0x7fff8014(%r13)
  41d7cb:	04 f2 f2 f2 
  41d7cf:	41 c7 85 18 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8018(%r13)
  41d7d6:	f2 f2 f2 f2 
  41d7da:	41 c7 85 1c 80 ff 7f 	movl   $0xf2f2f204,0x7fff801c(%r13)
  41d7e1:	04 f2 f2 f2 
  41d7e5:	41 c7 85 20 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8020(%r13)
  41d7ec:	f2 f2 f2 f2 
  41d7f0:	41 c7 85 24 80 ff 7f 	movl   $0xf2f2f204,0x7fff8024(%r13)
  41d7f7:	04 f2 f2 f2 
  41d7fb:	41 c7 85 28 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8028(%r13)
  41d802:	f2 f2 f2 f2 
  41d806:	41 c7 85 2c 80 ff 7f 	movl   $0xf2f2f200,0x7fff802c(%r13)
  41d80d:	00 f2 f2 f2 
  41d811:	41 c7 85 30 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8030(%r13)
  41d818:	f2 f2 f2 f2 
  41d81c:	41 c7 85 34 80 ff 7f 	movl   $0xf2f2f200,0x7fff8034(%r13)
  41d823:	00 f2 f2 f2 
  41d827:	41 c7 85 38 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8038(%r13)
  41d82e:	f2 f2 f2 f2 
  41d832:	41 c7 85 40 80 ff 7f 	movl   $0xf2000000,0x7fff8040(%r13)
  41d839:	00 00 00 f2 
  41d83d:	41 c7 85 44 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8044(%r13)
  41d844:	f2 f2 f2 f2 
  41d848:	41 c7 85 84 80 ff 7f 	movl   $0xf2040000,0x7fff8084(%r13)
  41d84f:	00 00 04 f2 
  41d853:	41 c7 85 88 80 ff 7f 	movl   $0xf2f2f2f2,0x7fff8088(%r13)
  41d85a:	f2 f2 f2 f2 
  41d85e:	41 c7 85 c8 80 ff 7f 	movl   $0xf2040000,0x7fff80c8(%r13)
  41d865:	00 00 04 f2 
  41d869:	41 c7 85 cc 80 ff 7f 	movl   $0xf3f3f3f3,0x7fff80cc(%r13)
  41d870:	f3 f3 f3 f3 
    (void) memset( (char*) &tm, 0, sizeof(struct tm) );
  41d874:	e8 37 56 fe ff       	callq  402eb0 <memset@plt>

    /* Skip initial whitespace ourselves - sscanf is clumsy at this. */
    for ( cp = str; *cp == ' ' || *cp == '\t'; ++cp )
  41d879:	48 89 d8             	mov    %rbx,%rax
  41d87c:	48 89 da             	mov    %rbx,%rdx
  41d87f:	48 c1 e8 03          	shr    $0x3,%rax
  41d883:	83 e2 07             	and    $0x7,%edx
  41d886:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41d88d:	38 d0                	cmp    %dl,%al
  41d88f:	7f 08                	jg     41d899 <tdate_parse+0x169>
  41d891:	84 c0                	test   %al,%al
  41d893:	0f 85 3f 12 00 00    	jne    41ead8 <tdate_parse+0x13a8>
  41d899:	0f b6 03             	movzbl (%rbx),%eax
  41d89c:	3c 09                	cmp    $0x9,%al
  41d89e:	0f 84 c4 06 00 00    	je     41df68 <tdate_parse+0x838>
  41d8a4:	3c 20                	cmp    $0x20,%al
  41d8a6:	0f 84 bc 06 00 00    	je     41df68 <tdate_parse+0x838>
    ** but be careful!  You can easily screw up the parsing of existing
    ** formats when you add new ones.  The order is important.
    */

    /* DD-mth-YY HH:MM:SS GMT */
    if ( sscanf( cp, "%d-%400[a-zA-Z]-%d %d:%d:%d GMT",
  41d8ac:	49 8d 86 a0 f9 ff ff 	lea    -0x660(%r14),%rax
  41d8b3:	4d 8d 8e 20 fa ff ff 	lea    -0x5e0(%r14),%r9
  41d8ba:	be 60 cf 42 00       	mov    $0x42cf60,%esi
  41d8bf:	48 89 df             	mov    %rbx,%rdi
  41d8c2:	4d 8d 86 a0 fa ff ff 	lea    -0x560(%r14),%r8
  41d8c9:	49 8d 96 60 fa ff ff 	lea    -0x5a0(%r14),%rdx
  41d8d0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41d8d5:	4d 8d be e0 f9 ff ff 	lea    -0x620(%r14),%r15
  41d8dc:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
  41d8e1:	4d 8d a6 c0 fb ff ff 	lea    -0x440(%r14),%r12
  41d8e8:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
  41d8ed:	4c 89 e1             	mov    %r12,%rcx
  41d8f0:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
  41d8f5:	50                   	push   %rax
  41d8f6:	31 c0                	xor    %eax,%eax
  41d8f8:	41 57                	push   %r15
  41d8fa:	e8 11 53 fe ff       	callq  402c10 <__isoc99_sscanf@plt>
  41d8ff:	41 5a                	pop    %r10
  41d901:	41 5b                	pop    %r11
  41d903:	83 f8 06             	cmp    $0x6,%eax
  41d906:	0f 84 dc 06 00 00    	je     41dfe8 <tdate_parse+0x8b8>
	tm.tm_min = tm_min;
	tm.tm_sec = tm_sec;
	}

    /* DD mth YY HH:MM:SS GMT */
    else if ( sscanf( cp, "%d %400[a-zA-Z] %d %d:%d:%d GMT",
  41d90c:	ff 74 24 08          	pushq  0x8(%rsp)
  41d910:	4c 89 e1             	mov    %r12,%rcx
  41d913:	be a0 cf 42 00       	mov    $0x42cfa0,%esi
  41d918:	48 89 df             	mov    %rbx,%rdi
  41d91b:	41 57                	push   %r15
  41d91d:	31 c0                	xor    %eax,%eax
  41d91f:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
  41d924:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
  41d929:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  41d92e:	e8 dd 52 fe ff       	callq  402c10 <__isoc99_sscanf@plt>
  41d933:	41 58                	pop    %r8
  41d935:	41 59                	pop    %r9
  41d937:	83 f8 06             	cmp    $0x6,%eax
  41d93a:	0f 84 a0 08 00 00    	je     41e1e0 <tdate_parse+0xab0>
	tm.tm_min = tm_min;
	tm.tm_sec = tm_sec;
	}

    /* HH:MM:SS GMT DD-mth-YY */
    else if ( sscanf( cp, "%d:%d:%d GMT %d-%400[a-zA-Z]-%d",
  41d940:	ff 74 24 20          	pushq  0x20(%rsp)
  41d944:	be e0 cf 42 00       	mov    $0x42cfe0,%esi
  41d949:	48 89 df             	mov    %rbx,%rdi
  41d94c:	4c 89 f9             	mov    %r15,%rcx
  41d94f:	41 54                	push   %r12
  41d951:	31 c0                	xor    %eax,%eax
  41d953:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
  41d958:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
  41d95d:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
  41d962:	e8 a9 52 fe ff       	callq  402c10 <__isoc99_sscanf@plt>
  41d967:	5e                   	pop    %rsi
  41d968:	5f                   	pop    %rdi
  41d969:	83 f8 06             	cmp    $0x6,%eax
  41d96c:	0f 84 fe 03 00 00    	je     41dd70 <tdate_parse+0x640>
	tm.tm_mon = tm_mon;
	tm.tm_year = tm_year;
	}

    /* HH:MM:SS GMT DD mth YY */
    else if ( sscanf( cp, "%d:%d:%d GMT %d %400[a-zA-Z] %d",
  41d972:	ff 74 24 20          	pushq  0x20(%rsp)
  41d976:	4c 89 f9             	mov    %r15,%rcx
  41d979:	be 20 d0 42 00       	mov    $0x42d020,%esi
  41d97e:	48 89 df             	mov    %rbx,%rdi
  41d981:	41 54                	push   %r12
  41d983:	31 c0                	xor    %eax,%eax
  41d985:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
  41d98a:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
  41d98f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
  41d994:	e8 77 52 fe ff       	callq  402c10 <__isoc99_sscanf@plt>
  41d999:	5a                   	pop    %rdx
  41d99a:	59                   	pop    %rcx
  41d99b:	83 f8 06             	cmp    $0x6,%eax
  41d99e:	0f 84 34 0a 00 00    	je     41e3d8 <tdate_parse+0xca8>
	tm.tm_mon = tm_mon;
	tm.tm_year = tm_year;
	}

    /* wdy, DD-mth-YY HH:MM:SS GMT */
    else if ( sscanf( cp, "%400[a-zA-Z], %d-%400[a-zA-Z]-%d %d:%d:%d GMT",
  41d9a4:	48 83 ec 08          	sub    $0x8,%rsp
  41d9a8:	4d 89 e0             	mov    %r12,%r8
  41d9ab:	be 60 d0 42 00       	mov    $0x42d060,%esi
  41d9b0:	48 89 df             	mov    %rbx,%rdi
  41d9b3:	49 8d 86 e0 fd ff ff 	lea    -0x220(%r14),%rax
  41d9ba:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  41d9bf:	48 89 c2             	mov    %rax,%rdx
  41d9c2:	31 c0                	xor    %eax,%eax
  41d9c4:	ff 74 24 10          	pushq  0x10(%rsp)
  41d9c8:	41 57                	push   %r15
  41d9ca:	ff 74 24 28          	pushq  0x28(%rsp)
  41d9ce:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
  41d9d3:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
  41d9d8:	e8 33 52 fe ff       	callq  402c10 <__isoc99_sscanf@plt>
  41d9dd:	48 83 c4 20          	add    $0x20,%rsp
  41d9e1:	83 f8 07             	cmp    $0x7,%eax
  41d9e4:	0f 84 3e 0c 00 00    	je     41e628 <tdate_parse+0xef8>
	tm.tm_min = tm_min;
	tm.tm_sec = tm_sec;
	}

    /* wdy, DD mth YY HH:MM:SS GMT */
    else if ( sscanf( cp, "%400[a-zA-Z], %d %400[a-zA-Z] %d %d:%d:%d GMT",
  41d9ea:	48 83 ec 08          	sub    $0x8,%rsp
  41d9ee:	4d 89 e0             	mov    %r12,%r8
  41d9f1:	be c0 d0 42 00       	mov    $0x42d0c0,%esi
  41d9f6:	48 89 df             	mov    %rbx,%rdi
  41d9f9:	ff 74 24 10          	pushq  0x10(%rsp)
  41d9fd:	31 c0                	xor    %eax,%eax
  41d9ff:	41 57                	push   %r15
  41da01:	ff 74 24 28          	pushq  0x28(%rsp)
  41da05:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
  41da0a:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
  41da0f:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
  41da14:	e8 f7 51 fe ff       	callq  402c10 <__isoc99_sscanf@plt>
  41da19:	48 83 c4 20          	add    $0x20,%rsp
  41da1d:	83 f8 07             	cmp    $0x7,%eax
  41da20:	0f 84 5a 0e 00 00    	je     41e880 <tdate_parse+0x1150>
	tm.tm_min = tm_min;
	tm.tm_sec = tm_sec;
	}

    /* wdy mth DD HH:MM:SS GMT YY */
    else if ( sscanf( cp, "%400[a-zA-Z] %400[a-zA-Z] %d %d:%d:%d GMT %d",
  41da26:	48 83 ec 08          	sub    $0x8,%rsp
  41da2a:	4c 89 e1             	mov    %r12,%rcx
  41da2d:	be 20 d1 42 00       	mov    $0x42d120,%esi
  41da32:	48 89 df             	mov    %rbx,%rdi
  41da35:	ff 74 24 28          	pushq  0x28(%rsp)
  41da39:	31 c0                	xor    %eax,%eax
  41da3b:	ff 74 24 18          	pushq  0x18(%rsp)
  41da3f:	41 57                	push   %r15
  41da41:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
  41da46:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
  41da4b:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
  41da50:	e8 bb 51 fe ff       	callq  402c10 <__isoc99_sscanf@plt>
  41da55:	48 83 c4 20          	add    $0x20,%rsp
  41da59:	83 f8 07             	cmp    $0x7,%eax
  41da5c:	0f 85 e6 10 00 00    	jne    41eb48 <tdate_parse+0x1418>
		str_wday, str_mon, &tm_mday, &tm_hour, &tm_min, &tm_sec,
		&tm_year ) == 7 &&
	    scan_wday( str_wday, &tm_wday ) &&
  41da62:	49 8d 9e 20 fb ff ff 	lea    -0x4e0(%r14),%rbx
  41da69:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  41da6e:	48 89 de             	mov    %rbx,%rsi
  41da71:	e8 da fb ff ff       	callq  41d650 <scan_wday>
		&tm_year ) == 7 &&
  41da76:	85 c0                	test   %eax,%eax
  41da78:	0f 84 ca 10 00 00    	je     41eb48 <tdate_parse+0x1418>
	    scan_mon( str_mon, &tm_mon ) )
  41da7e:	49 8d 96 e0 fa ff ff 	lea    -0x520(%r14),%rdx
  41da85:	4c 89 e7             	mov    %r12,%rdi
  41da88:	48 89 d6             	mov    %rdx,%rsi
  41da8b:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  41da90:	e8 2b fc ff ff       	callq  41d6c0 <scan_mon>
	    scan_wday( str_wday, &tm_wday ) &&
  41da95:	85 c0                	test   %eax,%eax
  41da97:	0f 84 ab 10 00 00    	je     41eb48 <tdate_parse+0x1418>
	{
	tm.tm_wday = tm_wday;
  41da9d:	48 89 d8             	mov    %rbx,%rax
  41daa0:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  41daa5:	48 c1 e8 03          	shr    $0x3,%rax
  41daa9:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41dab0:	0f 85 eb 10 00 00    	jne    41eba1 <tdate_parse+0x1471>
  41dab6:	49 8d be 60 fb ff ff 	lea    -0x4a0(%r14),%rdi
  41dabd:	49 8b b6 20 fb ff ff 	mov    -0x4e0(%r14),%rsi
  41dac4:	48 8d 4f 18          	lea    0x18(%rdi),%rcx
  41dac8:	48 89 c8             	mov    %rcx,%rax
  41dacb:	48 c1 e8 03          	shr    $0x3,%rax
  41dacf:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41dad6:	84 c0                	test   %al,%al
  41dad8:	74 08                	je     41dae2 <tdate_parse+0x3b2>
  41dada:	3c 03                	cmp    $0x3,%al
  41dadc:	0f 8e 2f 10 00 00    	jle    41eb11 <tdate_parse+0x13e1>
	tm.tm_mon = tm_mon;
  41dae2:	48 89 d0             	mov    %rdx,%rax
	tm.tm_wday = tm_wday;
  41dae5:	41 89 b6 78 fb ff ff 	mov    %esi,-0x488(%r14)
	tm.tm_mon = tm_mon;
  41daec:	48 c1 e8 03          	shr    $0x3,%rax
  41daf0:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41daf7:	0f 85 ac 10 00 00    	jne    41eba9 <tdate_parse+0x1479>
  41dafd:	48 8d 57 10          	lea    0x10(%rdi),%rdx
  41db01:	49 8b 8e e0 fa ff ff 	mov    -0x520(%r14),%rcx
  41db08:	48 89 d0             	mov    %rdx,%rax
  41db0b:	48 c1 e8 03          	shr    $0x3,%rax
  41db0f:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41db16:	84 c0                	test   %al,%al
  41db18:	74 08                	je     41db22 <tdate_parse+0x3f2>
  41db1a:	3c 03                	cmp    $0x3,%al
  41db1c:	0f 8e f7 0f 00 00    	jle    41eb19 <tdate_parse+0x13e9>
	tm.tm_mday = tm_mday;
  41db22:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
	tm.tm_mon = tm_mon;
  41db27:	41 89 8e 70 fb ff ff 	mov    %ecx,-0x490(%r14)
	tm.tm_mday = tm_mday;
  41db2e:	48 c1 e8 03          	shr    $0x3,%rax
  41db32:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41db39:	84 c0                	test   %al,%al
  41db3b:	74 08                	je     41db45 <tdate_parse+0x415>
  41db3d:	3c 03                	cmp    $0x3,%al
  41db3f:	0f 8e dc 0f 00 00    	jle    41eb21 <tdate_parse+0x13f1>
  41db45:	48 8d 57 0c          	lea    0xc(%rdi),%rdx
  41db49:	41 8b b6 60 fa ff ff 	mov    -0x5a0(%r14),%esi
  41db50:	48 89 d0             	mov    %rdx,%rax
  41db53:	48 c1 e8 03          	shr    $0x3,%rax
  41db57:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  41db5e:	48 89 d0             	mov    %rdx,%rax
  41db61:	83 e0 07             	and    $0x7,%eax
  41db64:	83 c0 03             	add    $0x3,%eax
  41db67:	38 c8                	cmp    %cl,%al
  41db69:	7c 08                	jl     41db73 <tdate_parse+0x443>
  41db6b:	84 c9                	test   %cl,%cl
  41db6d:	0f 85 b8 0f 00 00    	jne    41eb2b <tdate_parse+0x13fb>
	tm.tm_hour = tm_hour;
  41db73:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
	tm.tm_mday = tm_mday;
  41db78:	41 89 b6 6c fb ff ff 	mov    %esi,-0x494(%r14)
	tm.tm_hour = tm_hour;
  41db7f:	48 c1 e8 03          	shr    $0x3,%rax
  41db83:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41db8a:	84 c0                	test   %al,%al
  41db8c:	74 08                	je     41db96 <tdate_parse+0x466>
  41db8e:	3c 03                	cmp    $0x3,%al
  41db90:	0f 8e 9d 0f 00 00    	jle    41eb33 <tdate_parse+0x1403>
  41db96:	48 8d 57 08          	lea    0x8(%rdi),%rdx
  41db9a:	41 8b 8e 20 fa ff ff 	mov    -0x5e0(%r14),%ecx
  41dba1:	48 89 d0             	mov    %rdx,%rax
  41dba4:	48 c1 e8 03          	shr    $0x3,%rax
  41dba8:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41dbaf:	84 c0                	test   %al,%al
  41dbb1:	74 08                	je     41dbbb <tdate_parse+0x48b>
  41dbb3:	3c 03                	cmp    $0x3,%al
  41dbb5:	0f 8e 82 0f 00 00    	jle    41eb3d <tdate_parse+0x140d>
	tm.tm_min = tm_min;
  41dbbb:	4c 89 f8             	mov    %r15,%rax
	tm.tm_hour = tm_hour;
  41dbbe:	41 89 8e 68 fb ff ff 	mov    %ecx,-0x498(%r14)
	tm.tm_min = tm_min;
  41dbc5:	48 c1 e8 03          	shr    $0x3,%rax
  41dbc9:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41dbd0:	84 c0                	test   %al,%al
  41dbd2:	74 08                	je     41dbdc <tdate_parse+0x4ac>
  41dbd4:	3c 03                	cmp    $0x3,%al
  41dbd6:	0f 8e 04 0f 00 00    	jle    41eae0 <tdate_parse+0x13b0>
  41dbdc:	48 8d 57 04          	lea    0x4(%rdi),%rdx
  41dbe0:	41 8b b6 e0 f9 ff ff 	mov    -0x620(%r14),%esi
  41dbe7:	48 89 d0             	mov    %rdx,%rax
  41dbea:	48 c1 e8 03          	shr    $0x3,%rax
  41dbee:	0f b6 88 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%ecx
  41dbf5:	48 89 d0             	mov    %rdx,%rax
  41dbf8:	83 e0 07             	and    $0x7,%eax
  41dbfb:	83 c0 03             	add    $0x3,%eax
  41dbfe:	38 c8                	cmp    %cl,%al
  41dc00:	7c 08                	jl     41dc0a <tdate_parse+0x4da>
  41dc02:	84 c9                	test   %cl,%cl
  41dc04:	0f 85 de 0e 00 00    	jne    41eae8 <tdate_parse+0x13b8>
	tm.tm_sec = tm_sec;
  41dc0a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
	tm.tm_min = tm_min;
  41dc0f:	41 89 b6 64 fb ff ff 	mov    %esi,-0x49c(%r14)
	tm.tm_sec = tm_sec;
  41dc16:	48 c1 e8 03          	shr    $0x3,%rax
  41dc1a:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41dc21:	84 c0                	test   %al,%al
  41dc23:	74 08                	je     41dc2d <tdate_parse+0x4fd>
  41dc25:	3c 03                	cmp    $0x3,%al
  41dc27:	0f 8e c3 0e 00 00    	jle    41eaf0 <tdate_parse+0x13c0>
  41dc2d:	48 89 f8             	mov    %rdi,%rax
  41dc30:	41 8b 96 a0 f9 ff ff 	mov    -0x660(%r14),%edx
  41dc37:	48 c1 e8 03          	shr    $0x3,%rax
  41dc3b:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41dc42:	84 c0                	test   %al,%al
  41dc44:	74 08                	je     41dc4e <tdate_parse+0x51e>
  41dc46:	3c 03                	cmp    $0x3,%al
  41dc48:	0f 8e ac 0e 00 00    	jle    41eafa <tdate_parse+0x13ca>
	tm.tm_year = tm_year;
  41dc4e:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
	tm.tm_sec = tm_sec;
  41dc53:	41 89 96 60 fb ff ff 	mov    %edx,-0x4a0(%r14)
	tm.tm_year = tm_year;
  41dc5a:	48 c1 e8 03          	shr    $0x3,%rax
  41dc5e:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41dc65:	84 c0                	test   %al,%al
  41dc67:	74 08                	je     41dc71 <tdate_parse+0x541>
  41dc69:	3c 03                	cmp    $0x3,%al
  41dc6b:	0f 8e 8e 0e 00 00    	jle    41eaff <tdate_parse+0x13cf>
  41dc71:	48 8d 4f 14          	lea    0x14(%rdi),%rcx
  41dc75:	41 8b 86 a0 fa ff ff 	mov    -0x560(%r14),%eax
  41dc7c:	48 89 ca             	mov    %rcx,%rdx
  41dc7f:	48 c1 ea 03          	shr    $0x3,%rdx
  41dc83:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  41dc8a:	48 89 ca             	mov    %rcx,%rdx
  41dc8d:	83 e2 07             	and    $0x7,%edx
  41dc90:	83 c2 03             	add    $0x3,%edx
  41dc93:	40 38 f2             	cmp    %sil,%dl
  41dc96:	7c 09                	jl     41dca1 <tdate_parse+0x571>
  41dc98:	40 84 f6             	test   %sil,%sil
  41dc9b:	0f 85 68 0e 00 00    	jne    41eb09 <tdate_parse+0x13d9>
  41dca1:	41 89 86 74 fb ff ff 	mov    %eax,-0x48c(%r14)
	}
    else
	return (time_t) -1;

    if ( tm.tm_year > 1900 )
  41dca8:	3d 6c 07 00 00       	cmp    $0x76c,%eax
  41dcad:	0f 8e ed 02 00 00    	jle    41dfa0 <tdate_parse+0x870>
	tm.tm_year -= 1900;
  41dcb3:	48 8d 4f 14          	lea    0x14(%rdi),%rcx
  41dcb7:	2d 6c 07 00 00       	sub    $0x76c,%eax
  41dcbc:	48 89 ca             	mov    %rcx,%rdx
  41dcbf:	48 c1 ea 03          	shr    $0x3,%rdx
  41dcc3:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  41dcca:	48 89 ca             	mov    %rcx,%rdx
  41dccd:	83 e2 07             	and    $0x7,%edx
  41dcd0:	83 c2 03             	add    $0x3,%edx
  41dcd3:	40 38 f2             	cmp    %sil,%dl
  41dcd6:	7c 09                	jl     41dce1 <tdate_parse+0x5b1>
  41dcd8:	40 84 f6             	test   %sil,%sil
  41dcdb:	0f 85 ae 0e 00 00    	jne    41eb8f <tdate_parse+0x145f>
    else if ( tm.tm_year < 70 )
	tm.tm_year += 100;
  41dce1:	41 89 86 74 fb ff ff 	mov    %eax,-0x48c(%r14)

    t = tm_to_time( &tm );
  41dce8:	e8 63 f5 ff ff       	callq  41d250 <tm_to_time>
  41dced:	48 89 c3             	mov    %rax,%rbx
    {
  41dcf0:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
  41dcf5:	48 39 e8             	cmp    %rbp,%rax
  41dcf8:	0f 85 56 0e 00 00    	jne    41eb54 <tdate_parse+0x1424>
  41dcfe:	49 c7 85 30 80 ff 7f 	movq   $0x0,0x7fff8030(%r13)
  41dd05:	00 00 00 00 
  41dd09:	66 0f ef c0          	pxor   %xmm0,%xmm0
  41dd0d:	41 c7 85 38 80 ff 7f 	movl   $0x0,0x7fff8038(%r13)
  41dd14:	00 00 00 00 
  41dd18:	49 c7 85 40 80 ff 7f 	movq   $0x0,0x7fff8040(%r13)
  41dd1f:	00 00 00 00 
  41dd23:	49 c7 85 84 80 ff 7f 	movq   $0x0,0x7fff8084(%r13)
  41dd2a:	00 00 00 00 
  41dd2e:	49 c7 85 c8 80 ff 7f 	movq   $0x0,0x7fff80c8(%r13)
  41dd35:	00 00 00 00 
  41dd39:	41 0f 11 85 00 80 ff 	movups %xmm0,0x7fff8000(%r13)
  41dd40:	7f 
  41dd41:	41 0f 11 85 10 80 ff 	movups %xmm0,0x7fff8010(%r13)
  41dd48:	7f 
  41dd49:	41 0f 11 85 20 80 ff 	movups %xmm0,0x7fff8020(%r13)
  41dd50:	7f 

    return t;
    }
  41dd51:	48 81 c4 c8 06 00 00 	add    $0x6c8,%rsp
  41dd58:	48 89 d8             	mov    %rbx,%rax
  41dd5b:	5b                   	pop    %rbx
  41dd5c:	5d                   	pop    %rbp
  41dd5d:	41 5c                	pop    %r12
  41dd5f:	41 5d                	pop    %r13
  41dd61:	41 5e                	pop    %r14
  41dd63:	41 5f                	pop    %r15
  41dd65:	c3                   	retq   
  41dd66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41dd6d:	00 00 00 
	    scan_mon( str_mon, &tm_mon ) )
  41dd70:	49 8d 96 e0 fa ff ff 	lea    -0x520(%r14),%rdx
  41dd77:	4c 89 e7             	mov    %r12,%rdi
  41dd7a:	48 89 d6             	mov    %rdx,%rsi
  41dd7d:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  41dd82:	e8 39 f9 ff ff       	callq  41d6c0 <scan_mon>
		&tm_year ) == 6 &&
  41dd87:	85 c0                	test   %eax,%eax
  41dd89:	0f 84 e3 fb ff ff    	je     41d972 <tdate_parse+0x242>
	tm.tm_hour = tm_hour;
  41dd8f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  41dd94:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  41dd99:	48 c1 e8 03          	shr    $0x3,%rax
  41dd9d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41dda4:	84 c0                	test   %al,%al
  41dda6:	74 08                	je     41ddb0 <tdate_parse+0x680>
  41dda8:	3c 03                	cmp    $0x3,%al
  41ddaa:	0f 8e fb 0f 00 00    	jle    41edab <tdate_parse+0x167b>
  41ddb0:	49 8d be 60 fb ff ff 	lea    -0x4a0(%r14),%rdi
  41ddb7:	41 8b b6 20 fa ff ff 	mov    -0x5e0(%r14),%esi
  41ddbe:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
  41ddc2:	48 89 c8             	mov    %rcx,%rax
  41ddc5:	48 c1 e8 03          	shr    $0x3,%rax
  41ddc9:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41ddd0:	84 c0                	test   %al,%al
  41ddd2:	74 08                	je     41dddc <tdate_parse+0x6ac>
  41ddd4:	3c 03                	cmp    $0x3,%al
  41ddd6:	0f 8e c7 0f 00 00    	jle    41eda3 <tdate_parse+0x1673>
	tm.tm_min = tm_min;
  41dddc:	4c 89 f8             	mov    %r15,%rax
	tm.tm_hour = tm_hour;
  41dddf:	41 89 b6 68 fb ff ff 	mov    %esi,-0x498(%r14)
	tm.tm_min = tm_min;
  41dde6:	48 c1 e8 03          	shr    $0x3,%rax
  41ddea:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41ddf1:	84 c0                	test   %al,%al
  41ddf3:	74 08                	je     41ddfd <tdate_parse+0x6cd>
  41ddf5:	3c 03                	cmp    $0x3,%al
  41ddf7:	0f 8e 9e 0f 00 00    	jle    41ed9b <tdate_parse+0x166b>
  41ddfd:	48 8d 4f 04          	lea    0x4(%rdi),%rcx
  41de01:	45 8b 86 e0 f9 ff ff 	mov    -0x620(%r14),%r8d
  41de08:	48 89 c8             	mov    %rcx,%rax
  41de0b:	48 c1 e8 03          	shr    $0x3,%rax
  41de0f:	0f b6 b0 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%esi
  41de16:	48 89 c8             	mov    %rcx,%rax
  41de19:	83 e0 07             	and    $0x7,%eax
  41de1c:	83 c0 03             	add    $0x3,%eax
  41de1f:	40 38 f0             	cmp    %sil,%al
  41de22:	7c 09                	jl     41de2d <tdate_parse+0x6fd>
  41de24:	40 84 f6             	test   %sil,%sil
  41de27:	0f 85 66 0f 00 00    	jne    41ed93 <tdate_parse+0x1663>
	tm.tm_sec = tm_sec;
  41de2d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
	tm.tm_min = tm_min;
  41de32:	45 89 86 64 fb ff ff 	mov    %r8d,-0x49c(%r14)
	tm.tm_sec = tm_sec;
  41de39:	48 c1 e8 03          	shr    $0x3,%rax
  41de3d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41de44:	84 c0                	test   %al,%al
  41de46:	74 08                	je     41de50 <tdate_parse+0x720>
  41de48:	3c 03                	cmp    $0x3,%al
  41de4a:	0f 8e 39 0f 00 00    	jle    41ed89 <tdate_parse+0x1659>
  41de50:	48 89 f8             	mov    %rdi,%rax
  41de53:	41 8b 8e a0 f9 ff ff 	mov    -0x660(%r14),%ecx
  41de5a:	48 c1 e8 03          	shr    $0x3,%rax
  41de5e:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41de65:	84 c0                	test   %al,%al
  41de67:	74 08                	je     41de71 <tdate_parse+0x741>
  41de69:	3c 03                	cmp    $0x3,%al
  41de6b:	0f 8e 13 0f 00 00    	jle    41ed84 <tdate_parse+0x1654>
	tm.tm_mday = tm_mday;
  41de71:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
	tm.tm_sec = tm_sec;
  41de76:	41 89 8e 60 fb ff ff 	mov    %ecx,-0x4a0(%r14)
	tm.tm_mday = tm_mday;
  41de7d:	48 c1 e8 03          	shr    $0x3,%rax
  41de81:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41de88:	84 c0                	test   %al,%al
  41de8a:	74 08                	je     41de94 <tdate_parse+0x764>
  41de8c:	3c 03                	cmp    $0x3,%al
  41de8e:	0f 8e e6 0e 00 00    	jle    41ed7a <tdate_parse+0x164a>
  41de94:	48 8d 4f 0c          	lea    0xc(%rdi),%rcx
  41de98:	45 8b 86 60 fa ff ff 	mov    -0x5a0(%r14),%r8d
  41de9f:	48 89 c8             	mov    %rcx,%rax
  41dea2:	48 c1 e8 03          	shr    $0x3,%rax
  41dea6:	0f b6 b0 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%esi
  41dead:	48 89 c8             	mov    %rcx,%rax
  41deb0:	83 e0 07             	and    $0x7,%eax
  41deb3:	83 c0 03             	add    $0x3,%eax
  41deb6:	40 38 f0             	cmp    %sil,%al
  41deb9:	7c 09                	jl     41dec4 <tdate_parse+0x794>
  41debb:	40 84 f6             	test   %sil,%sil
  41debe:	0f 85 ae 0e 00 00    	jne    41ed72 <tdate_parse+0x1642>
	tm.tm_mon = tm_mon;
  41dec4:	48 89 d0             	mov    %rdx,%rax
	tm.tm_mday = tm_mday;
  41dec7:	45 89 86 6c fb ff ff 	mov    %r8d,-0x494(%r14)
	tm.tm_mon = tm_mon;
  41dece:	48 c1 e8 03          	shr    $0x3,%rax
  41ded2:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41ded9:	0f 85 e7 0d 00 00    	jne    41ecc6 <tdate_parse+0x1596>
  41dedf:	48 8d 57 10          	lea    0x10(%rdi),%rdx
  41dee3:	49 8b 8e e0 fa ff ff 	mov    -0x520(%r14),%rcx
  41deea:	48 89 d0             	mov    %rdx,%rax
  41deed:	48 c1 e8 03          	shr    $0x3,%rax
  41def1:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41def8:	84 c0                	test   %al,%al
  41defa:	74 08                	je     41df04 <tdate_parse+0x7d4>
  41defc:	3c 03                	cmp    $0x3,%al
  41defe:	0f 8e ba 0d 00 00    	jle    41ecbe <tdate_parse+0x158e>
	tm.tm_year = tm_year;
  41df04:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
	tm.tm_mon = tm_mon;
  41df09:	41 89 8e 70 fb ff ff 	mov    %ecx,-0x490(%r14)
	tm.tm_year = tm_year;
  41df10:	48 c1 e8 03          	shr    $0x3,%rax
  41df14:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41df1b:	84 c0                	test   %al,%al
  41df1d:	74 08                	je     41df27 <tdate_parse+0x7f7>
  41df1f:	3c 03                	cmp    $0x3,%al
  41df21:	0f 8e 8d 0d 00 00    	jle    41ecb4 <tdate_parse+0x1584>
  41df27:	48 8d 4f 14          	lea    0x14(%rdi),%rcx
  41df2b:	41 8b 86 a0 fa ff ff 	mov    -0x560(%r14),%eax
  41df32:	48 89 ca             	mov    %rcx,%rdx
  41df35:	48 c1 ea 03          	shr    $0x3,%rdx
  41df39:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  41df40:	48 89 ca             	mov    %rcx,%rdx
  41df43:	83 e2 07             	and    $0x7,%edx
  41df46:	83 c2 03             	add    $0x3,%edx
  41df49:	40 38 f2             	cmp    %sil,%dl
  41df4c:	0f 8c 4f fd ff ff    	jl     41dca1 <tdate_parse+0x571>
  41df52:	40 84 f6             	test   %sil,%sil
  41df55:	0f 84 46 fd ff ff    	je     41dca1 <tdate_parse+0x571>
  41df5b:	48 89 cf             	mov    %rcx,%rdi
  41df5e:	e8 8d 4c fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41df63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    for ( cp = str; *cp == ' ' || *cp == '\t'; ++cp )
  41df68:	48 83 c3 01          	add    $0x1,%rbx
  41df6c:	48 89 d8             	mov    %rbx,%rax
  41df6f:	48 89 da             	mov    %rbx,%rdx
  41df72:	48 c1 e8 03          	shr    $0x3,%rax
  41df76:	83 e2 07             	and    $0x7,%edx
  41df79:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41df80:	38 d0                	cmp    %dl,%al
  41df82:	7f 08                	jg     41df8c <tdate_parse+0x85c>
  41df84:	84 c0                	test   %al,%al
  41df86:	0f 85 fb 0b 00 00    	jne    41eb87 <tdate_parse+0x1457>
  41df8c:	0f b6 03             	movzbl (%rbx),%eax
  41df8f:	3c 20                	cmp    $0x20,%al
  41df91:	74 d5                	je     41df68 <tdate_parse+0x838>
  41df93:	3c 09                	cmp    $0x9,%al
  41df95:	0f 85 11 f9 ff ff    	jne    41d8ac <tdate_parse+0x17c>
  41df9b:	eb cb                	jmp    41df68 <tdate_parse+0x838>
  41df9d:	0f 1f 00             	nopl   (%rax)
    else if ( tm.tm_year < 70 )
  41dfa0:	83 f8 45             	cmp    $0x45,%eax
  41dfa3:	0f 8f 3f fd ff ff    	jg     41dce8 <tdate_parse+0x5b8>
	tm.tm_year += 100;
  41dfa9:	48 8d 4f 14          	lea    0x14(%rdi),%rcx
  41dfad:	83 c0 64             	add    $0x64,%eax
  41dfb0:	48 89 ca             	mov    %rcx,%rdx
  41dfb3:	48 c1 ea 03          	shr    $0x3,%rdx
  41dfb7:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  41dfbe:	48 89 ca             	mov    %rcx,%rdx
  41dfc1:	83 e2 07             	and    $0x7,%edx
  41dfc4:	83 c2 03             	add    $0x3,%edx
  41dfc7:	40 38 f2             	cmp    %sil,%dl
  41dfca:	0f 8c 11 fd ff ff    	jl     41dce1 <tdate_parse+0x5b1>
  41dfd0:	40 84 f6             	test   %sil,%sil
  41dfd3:	0f 84 08 fd ff ff    	je     41dce1 <tdate_parse+0x5b1>
  41dfd9:	48 89 cf             	mov    %rcx,%rdi
  41dfdc:	e8 0f 4c fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41dfe1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    scan_mon( str_mon, &tm_mon ) )
  41dfe8:	49 8d 96 e0 fa ff ff 	lea    -0x520(%r14),%rdx
  41dfef:	4c 89 e7             	mov    %r12,%rdi
  41dff2:	48 89 d6             	mov    %rdx,%rsi
  41dff5:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  41dffa:	e8 c1 f6 ff ff       	callq  41d6c0 <scan_mon>
		&tm_sec ) == 6 &&
  41dfff:	85 c0                	test   %eax,%eax
  41e001:	0f 84 05 f9 ff ff    	je     41d90c <tdate_parse+0x1dc>
	tm.tm_mday = tm_mday;
  41e007:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  41e00c:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  41e011:	48 c1 e8 03          	shr    $0x3,%rax
  41e015:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e01c:	84 c0                	test   %al,%al
  41e01e:	74 08                	je     41e028 <tdate_parse+0x8f8>
  41e020:	3c 03                	cmp    $0x3,%al
  41e022:	0f 8e 6f 0b 00 00    	jle    41eb97 <tdate_parse+0x1467>
  41e028:	49 8d be 60 fb ff ff 	lea    -0x4a0(%r14),%rdi
  41e02f:	45 8b 86 60 fa ff ff 	mov    -0x5a0(%r14),%r8d
  41e036:	48 8d 4f 0c          	lea    0xc(%rdi),%rcx
  41e03a:	48 89 c8             	mov    %rcx,%rax
  41e03d:	48 c1 e8 03          	shr    $0x3,%rax
  41e041:	0f b6 b0 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%esi
  41e048:	48 89 c8             	mov    %rcx,%rax
  41e04b:	83 e0 07             	and    $0x7,%eax
  41e04e:	83 c0 03             	add    $0x3,%eax
  41e051:	40 38 f0             	cmp    %sil,%al
  41e054:	7c 09                	jl     41e05f <tdate_parse+0x92f>
  41e056:	40 84 f6             	test   %sil,%sil
  41e059:	0f 85 8e 0b 00 00    	jne    41ebed <tdate_parse+0x14bd>
	tm.tm_mon = tm_mon;
  41e05f:	48 89 d0             	mov    %rdx,%rax
	tm.tm_mday = tm_mday;
  41e062:	45 89 86 6c fb ff ff 	mov    %r8d,-0x494(%r14)
	tm.tm_mon = tm_mon;
  41e069:	48 c1 e8 03          	shr    $0x3,%rax
  41e06d:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41e074:	0f 85 6b 0b 00 00    	jne    41ebe5 <tdate_parse+0x14b5>
  41e07a:	48 8d 57 10          	lea    0x10(%rdi),%rdx
  41e07e:	49 8b 8e e0 fa ff ff 	mov    -0x520(%r14),%rcx
  41e085:	48 89 d0             	mov    %rdx,%rax
  41e088:	48 c1 e8 03          	shr    $0x3,%rax
  41e08c:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e093:	84 c0                	test   %al,%al
  41e095:	74 08                	je     41e09f <tdate_parse+0x96f>
  41e097:	3c 03                	cmp    $0x3,%al
  41e099:	0f 8e 3e 0b 00 00    	jle    41ebdd <tdate_parse+0x14ad>
	tm.tm_year = tm_year;
  41e09f:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
	tm.tm_mon = tm_mon;
  41e0a4:	41 89 8e 70 fb ff ff 	mov    %ecx,-0x490(%r14)
	tm.tm_year = tm_year;
  41e0ab:	48 c1 e8 03          	shr    $0x3,%rax
  41e0af:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e0b6:	84 c0                	test   %al,%al
  41e0b8:	74 08                	je     41e0c2 <tdate_parse+0x992>
  41e0ba:	3c 03                	cmp    $0x3,%al
  41e0bc:	0f 8e 11 0b 00 00    	jle    41ebd3 <tdate_parse+0x14a3>
  41e0c2:	48 8d 4f 14          	lea    0x14(%rdi),%rcx
  41e0c6:	41 8b 86 a0 fa ff ff 	mov    -0x560(%r14),%eax
  41e0cd:	48 89 ca             	mov    %rcx,%rdx
  41e0d0:	48 c1 ea 03          	shr    $0x3,%rdx
  41e0d4:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  41e0db:	48 89 ca             	mov    %rcx,%rdx
  41e0de:	83 e2 07             	and    $0x7,%edx
  41e0e1:	83 c2 03             	add    $0x3,%edx
  41e0e4:	40 38 f2             	cmp    %sil,%dl
  41e0e7:	7c 09                	jl     41e0f2 <tdate_parse+0x9c2>
  41e0e9:	40 84 f6             	test   %sil,%sil
  41e0ec:	0f 85 d9 0a 00 00    	jne    41ebcb <tdate_parse+0x149b>
	tm.tm_hour = tm_hour;
  41e0f2:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
	tm.tm_year = tm_year;
  41e0f7:	41 89 86 74 fb ff ff 	mov    %eax,-0x48c(%r14)
	tm.tm_hour = tm_hour;
  41e0fe:	48 c1 ea 03          	shr    $0x3,%rdx
  41e102:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e109:	84 d2                	test   %dl,%dl
  41e10b:	74 09                	je     41e116 <tdate_parse+0x9e6>
  41e10d:	80 fa 03             	cmp    $0x3,%dl
  41e110:	0f 8e ab 0a 00 00    	jle    41ebc1 <tdate_parse+0x1491>
  41e116:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
  41e11a:	41 8b b6 20 fa ff ff 	mov    -0x5e0(%r14),%esi
  41e121:	48 89 ca             	mov    %rcx,%rdx
  41e124:	48 c1 ea 03          	shr    $0x3,%rdx
  41e128:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e12f:	84 d2                	test   %dl,%dl
  41e131:	74 09                	je     41e13c <tdate_parse+0xa0c>
  41e133:	80 fa 03             	cmp    $0x3,%dl
  41e136:	0f 8e 7d 0a 00 00    	jle    41ebb9 <tdate_parse+0x1489>
	tm.tm_min = tm_min;
  41e13c:	4c 89 fa             	mov    %r15,%rdx
	tm.tm_hour = tm_hour;
  41e13f:	41 89 b6 68 fb ff ff 	mov    %esi,-0x498(%r14)
	tm.tm_min = tm_min;
  41e146:	48 c1 ea 03          	shr    $0x3,%rdx
  41e14a:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e151:	84 d2                	test   %dl,%dl
  41e153:	74 09                	je     41e15e <tdate_parse+0xa2e>
  41e155:	80 fa 03             	cmp    $0x3,%dl
  41e158:	0f 8e 53 0a 00 00    	jle    41ebb1 <tdate_parse+0x1481>
  41e15e:	48 8d 4f 04          	lea    0x4(%rdi),%rcx
  41e162:	45 8b 86 e0 f9 ff ff 	mov    -0x620(%r14),%r8d
  41e169:	48 89 ca             	mov    %rcx,%rdx
  41e16c:	48 c1 ea 03          	shr    $0x3,%rdx
  41e170:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  41e177:	48 89 ca             	mov    %rcx,%rdx
  41e17a:	83 e2 07             	and    $0x7,%edx
  41e17d:	83 c2 03             	add    $0x3,%edx
  41e180:	40 38 f2             	cmp    %sil,%dl
  41e183:	7c 09                	jl     41e18e <tdate_parse+0xa5e>
  41e185:	40 84 f6             	test   %sil,%sil
  41e188:	0f 85 76 0a 00 00    	jne    41ec04 <tdate_parse+0x14d4>
	tm.tm_sec = tm_sec;
  41e18e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
	tm.tm_min = tm_min;
  41e193:	45 89 86 64 fb ff ff 	mov    %r8d,-0x49c(%r14)
	tm.tm_sec = tm_sec;
  41e19a:	48 c1 ea 03          	shr    $0x3,%rdx
  41e19e:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e1a5:	84 d2                	test   %dl,%dl
  41e1a7:	74 09                	je     41e1b2 <tdate_parse+0xa82>
  41e1a9:	80 fa 03             	cmp    $0x3,%dl
  41e1ac:	0f 8e 48 0a 00 00    	jle    41ebfa <tdate_parse+0x14ca>
  41e1b2:	48 89 fa             	mov    %rdi,%rdx
  41e1b5:	41 8b 8e a0 f9 ff ff 	mov    -0x660(%r14),%ecx
  41e1bc:	48 c1 ea 03          	shr    $0x3,%rdx
  41e1c0:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e1c7:	84 d2                	test   %dl,%dl
  41e1c9:	74 09                	je     41e1d4 <tdate_parse+0xaa4>
  41e1cb:	80 fa 03             	cmp    $0x3,%dl
  41e1ce:	0f 8e 21 0a 00 00    	jle    41ebf5 <tdate_parse+0x14c5>
	tm.tm_sec = tm_sec;
  41e1d4:	41 89 8e 60 fb ff ff 	mov    %ecx,-0x4a0(%r14)
  41e1db:	e9 c8 fa ff ff       	jmpq   41dca8 <tdate_parse+0x578>
	    scan_mon( str_mon, &tm_mon ) )
  41e1e0:	49 8d 96 e0 fa ff ff 	lea    -0x520(%r14),%rdx
  41e1e7:	4c 89 e7             	mov    %r12,%rdi
  41e1ea:	48 89 d6             	mov    %rdx,%rsi
  41e1ed:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  41e1f2:	e8 c9 f4 ff ff       	callq  41d6c0 <scan_mon>
		&tm_sec) == 6 &&
  41e1f7:	85 c0                	test   %eax,%eax
  41e1f9:	0f 84 41 f7 ff ff    	je     41d940 <tdate_parse+0x210>
	tm.tm_mday = tm_mday;
  41e1ff:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  41e204:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  41e209:	48 c1 e8 03          	shr    $0x3,%rax
  41e20d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e214:	84 c0                	test   %al,%al
  41e216:	74 08                	je     41e220 <tdate_parse+0xaf0>
  41e218:	3c 03                	cmp    $0x3,%al
  41e21a:	0f 8e ec 09 00 00    	jle    41ec0c <tdate_parse+0x14dc>
  41e220:	49 8d be 60 fb ff ff 	lea    -0x4a0(%r14),%rdi
  41e227:	45 8b 86 60 fa ff ff 	mov    -0x5a0(%r14),%r8d
  41e22e:	48 8d 4f 0c          	lea    0xc(%rdi),%rcx
  41e232:	48 89 c8             	mov    %rcx,%rax
  41e235:	48 c1 e8 03          	shr    $0x3,%rax
  41e239:	0f b6 b0 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%esi
  41e240:	48 89 c8             	mov    %rcx,%rax
  41e243:	83 e0 07             	and    $0x7,%eax
  41e246:	83 c0 03             	add    $0x3,%eax
  41e249:	40 38 f0             	cmp    %sil,%al
  41e24c:	7c 09                	jl     41e257 <tdate_parse+0xb27>
  41e24e:	40 84 f6             	test   %sil,%sil
  41e251:	0f 85 91 0a 00 00    	jne    41ece8 <tdate_parse+0x15b8>
	tm.tm_mon = tm_mon;
  41e257:	48 89 d0             	mov    %rdx,%rax
	tm.tm_mday = tm_mday;
  41e25a:	45 89 86 6c fb ff ff 	mov    %r8d,-0x494(%r14)
	tm.tm_mon = tm_mon;
  41e261:	48 c1 e8 03          	shr    $0x3,%rax
  41e265:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41e26c:	0f 85 6e 0a 00 00    	jne    41ece0 <tdate_parse+0x15b0>
  41e272:	48 8d 57 10          	lea    0x10(%rdi),%rdx
  41e276:	49 8b 8e e0 fa ff ff 	mov    -0x520(%r14),%rcx
  41e27d:	48 89 d0             	mov    %rdx,%rax
  41e280:	48 c1 e8 03          	shr    $0x3,%rax
  41e284:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e28b:	84 c0                	test   %al,%al
  41e28d:	74 08                	je     41e297 <tdate_parse+0xb67>
  41e28f:	3c 03                	cmp    $0x3,%al
  41e291:	0f 8e 41 0a 00 00    	jle    41ecd8 <tdate_parse+0x15a8>
	tm.tm_year = tm_year;
  41e297:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
	tm.tm_mon = tm_mon;
  41e29c:	41 89 8e 70 fb ff ff 	mov    %ecx,-0x490(%r14)
	tm.tm_year = tm_year;
  41e2a3:	48 c1 e8 03          	shr    $0x3,%rax
  41e2a7:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e2ae:	84 c0                	test   %al,%al
  41e2b0:	74 08                	je     41e2ba <tdate_parse+0xb8a>
  41e2b2:	3c 03                	cmp    $0x3,%al
  41e2b4:	0f 8e 14 0a 00 00    	jle    41ecce <tdate_parse+0x159e>
  41e2ba:	48 8d 4f 14          	lea    0x14(%rdi),%rcx
  41e2be:	41 8b 86 a0 fa ff ff 	mov    -0x560(%r14),%eax
  41e2c5:	48 89 ca             	mov    %rcx,%rdx
  41e2c8:	48 c1 ea 03          	shr    $0x3,%rdx
  41e2cc:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  41e2d3:	48 89 ca             	mov    %rcx,%rdx
  41e2d6:	83 e2 07             	and    $0x7,%edx
  41e2d9:	83 c2 03             	add    $0x3,%edx
  41e2dc:	40 38 f2             	cmp    %sil,%dl
  41e2df:	7c 09                	jl     41e2ea <tdate_parse+0xbba>
  41e2e1:	40 84 f6             	test   %sil,%sil
  41e2e4:	0f 85 3a 0a 00 00    	jne    41ed24 <tdate_parse+0x15f4>
	tm.tm_hour = tm_hour;
  41e2ea:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
	tm.tm_year = tm_year;
  41e2ef:	41 89 86 74 fb ff ff 	mov    %eax,-0x48c(%r14)
	tm.tm_hour = tm_hour;
  41e2f6:	48 c1 ea 03          	shr    $0x3,%rdx
  41e2fa:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e301:	84 d2                	test   %dl,%dl
  41e303:	74 09                	je     41e30e <tdate_parse+0xbde>
  41e305:	80 fa 03             	cmp    $0x3,%dl
  41e308:	0f 8e 0c 0a 00 00    	jle    41ed1a <tdate_parse+0x15ea>
  41e30e:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
  41e312:	41 8b b6 20 fa ff ff 	mov    -0x5e0(%r14),%esi
  41e319:	48 89 ca             	mov    %rcx,%rdx
  41e31c:	48 c1 ea 03          	shr    $0x3,%rdx
  41e320:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e327:	84 d2                	test   %dl,%dl
  41e329:	74 09                	je     41e334 <tdate_parse+0xc04>
  41e32b:	80 fa 03             	cmp    $0x3,%dl
  41e32e:	0f 8e de 09 00 00    	jle    41ed12 <tdate_parse+0x15e2>
	tm.tm_min = tm_min;
  41e334:	4c 89 fa             	mov    %r15,%rdx
	tm.tm_hour = tm_hour;
  41e337:	41 89 b6 68 fb ff ff 	mov    %esi,-0x498(%r14)
	tm.tm_min = tm_min;
  41e33e:	48 c1 ea 03          	shr    $0x3,%rdx
  41e342:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e349:	84 d2                	test   %dl,%dl
  41e34b:	74 09                	je     41e356 <tdate_parse+0xc26>
  41e34d:	80 fa 03             	cmp    $0x3,%dl
  41e350:	0f 8e b4 09 00 00    	jle    41ed0a <tdate_parse+0x15da>
  41e356:	48 8d 4f 04          	lea    0x4(%rdi),%rcx
  41e35a:	45 8b 86 e0 f9 ff ff 	mov    -0x620(%r14),%r8d
  41e361:	48 89 ca             	mov    %rcx,%rdx
  41e364:	48 c1 ea 03          	shr    $0x3,%rdx
  41e368:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  41e36f:	48 89 ca             	mov    %rcx,%rdx
  41e372:	83 e2 07             	and    $0x7,%edx
  41e375:	83 c2 03             	add    $0x3,%edx
  41e378:	40 38 f2             	cmp    %sil,%dl
  41e37b:	7c 09                	jl     41e386 <tdate_parse+0xc56>
  41e37d:	40 84 f6             	test   %sil,%sil
  41e380:	0f 85 7c 09 00 00    	jne    41ed02 <tdate_parse+0x15d2>
	tm.tm_sec = tm_sec;
  41e386:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
	tm.tm_min = tm_min;
  41e38b:	45 89 86 64 fb ff ff 	mov    %r8d,-0x49c(%r14)
	tm.tm_sec = tm_sec;
  41e392:	48 c1 ea 03          	shr    $0x3,%rdx
  41e396:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e39d:	84 d2                	test   %dl,%dl
  41e39f:	74 09                	je     41e3aa <tdate_parse+0xc7a>
  41e3a1:	80 fa 03             	cmp    $0x3,%dl
  41e3a4:	0f 8e 4e 09 00 00    	jle    41ecf8 <tdate_parse+0x15c8>
  41e3aa:	48 89 fa             	mov    %rdi,%rdx
  41e3ad:	41 8b 8e a0 f9 ff ff 	mov    -0x660(%r14),%ecx
  41e3b4:	48 c1 ea 03          	shr    $0x3,%rdx
  41e3b8:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e3bf:	84 d2                	test   %dl,%dl
  41e3c1:	0f 84 0d fe ff ff    	je     41e1d4 <tdate_parse+0xaa4>
  41e3c7:	80 fa 03             	cmp    $0x3,%dl
  41e3ca:	0f 8f 04 fe ff ff    	jg     41e1d4 <tdate_parse+0xaa4>
  41e3d0:	e8 1b 48 fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41e3d5:	0f 1f 00             	nopl   (%rax)
	    scan_mon( str_mon, &tm_mon ) )
  41e3d8:	49 8d 96 e0 fa ff ff 	lea    -0x520(%r14),%rdx
  41e3df:	4c 89 e7             	mov    %r12,%rdi
  41e3e2:	48 89 d6             	mov    %rdx,%rsi
  41e3e5:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  41e3ea:	e8 d1 f2 ff ff       	callq  41d6c0 <scan_mon>
		&tm_year ) == 6 &&
  41e3ef:	85 c0                	test   %eax,%eax
  41e3f1:	0f 84 ad f5 ff ff    	je     41d9a4 <tdate_parse+0x274>
	tm.tm_hour = tm_hour;
  41e3f7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  41e3fc:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  41e401:	48 c1 e8 03          	shr    $0x3,%rax
  41e405:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e40c:	84 c0                	test   %al,%al
  41e40e:	74 10                	je     41e420 <tdate_parse+0xcf0>
  41e410:	3c 03                	cmp    $0x3,%al
  41e412:	7f 0c                	jg     41e420 <tdate_parse+0xcf0>
  41e414:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41e419:	e8 b2 49 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41e41e:	66 90                	xchg   %ax,%ax
  41e420:	49 8d be 60 fb ff ff 	lea    -0x4a0(%r14),%rdi
  41e427:	41 8b b6 20 fa ff ff 	mov    -0x5e0(%r14),%esi
  41e42e:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
  41e432:	48 89 c8             	mov    %rcx,%rax
  41e435:	48 c1 e8 03          	shr    $0x3,%rax
  41e439:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e440:	84 c0                	test   %al,%al
  41e442:	74 0c                	je     41e450 <tdate_parse+0xd20>
  41e444:	3c 03                	cmp    $0x3,%al
  41e446:	7f 08                	jg     41e450 <tdate_parse+0xd20>
  41e448:	48 89 cf             	mov    %rcx,%rdi
  41e44b:	e8 a0 47 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_min = tm_min;
  41e450:	4c 89 f8             	mov    %r15,%rax
	tm.tm_hour = tm_hour;
  41e453:	41 89 b6 68 fb ff ff 	mov    %esi,-0x498(%r14)
	tm.tm_min = tm_min;
  41e45a:	48 c1 e8 03          	shr    $0x3,%rax
  41e45e:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e465:	84 c0                	test   %al,%al
  41e467:	74 0f                	je     41e478 <tdate_parse+0xd48>
  41e469:	3c 03                	cmp    $0x3,%al
  41e46b:	7f 0b                	jg     41e478 <tdate_parse+0xd48>
  41e46d:	4c 89 ff             	mov    %r15,%rdi
  41e470:	e8 5b 49 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41e475:	0f 1f 00             	nopl   (%rax)
  41e478:	48 8d 4f 04          	lea    0x4(%rdi),%rcx
  41e47c:	45 8b 86 e0 f9 ff ff 	mov    -0x620(%r14),%r8d
  41e483:	48 89 c8             	mov    %rcx,%rax
  41e486:	48 c1 e8 03          	shr    $0x3,%rax
  41e48a:	0f b6 b0 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%esi
  41e491:	48 89 c8             	mov    %rcx,%rax
  41e494:	83 e0 07             	and    $0x7,%eax
  41e497:	83 c0 03             	add    $0x3,%eax
  41e49a:	40 38 f0             	cmp    %sil,%al
  41e49d:	7c 11                	jl     41e4b0 <tdate_parse+0xd80>
  41e49f:	40 84 f6             	test   %sil,%sil
  41e4a2:	74 0c                	je     41e4b0 <tdate_parse+0xd80>
  41e4a4:	48 89 cf             	mov    %rcx,%rdi
  41e4a7:	e8 44 47 fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41e4ac:	0f 1f 40 00          	nopl   0x0(%rax)
	tm.tm_sec = tm_sec;
  41e4b0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
	tm.tm_min = tm_min;
  41e4b5:	45 89 86 64 fb ff ff 	mov    %r8d,-0x49c(%r14)
	tm.tm_sec = tm_sec;
  41e4bc:	48 c1 e8 03          	shr    $0x3,%rax
  41e4c0:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e4c7:	84 c0                	test   %al,%al
  41e4c9:	74 15                	je     41e4e0 <tdate_parse+0xdb0>
  41e4cb:	3c 03                	cmp    $0x3,%al
  41e4cd:	7f 11                	jg     41e4e0 <tdate_parse+0xdb0>
  41e4cf:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41e4d4:	e8 f7 48 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41e4d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41e4e0:	48 89 f8             	mov    %rdi,%rax
  41e4e3:	41 8b 8e a0 f9 ff ff 	mov    -0x660(%r14),%ecx
  41e4ea:	48 c1 e8 03          	shr    $0x3,%rax
  41e4ee:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e4f5:	84 c0                	test   %al,%al
  41e4f7:	74 0f                	je     41e508 <tdate_parse+0xdd8>
  41e4f9:	3c 03                	cmp    $0x3,%al
  41e4fb:	7f 0b                	jg     41e508 <tdate_parse+0xdd8>
  41e4fd:	e8 ee 46 fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41e502:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	tm.tm_mday = tm_mday;
  41e508:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
	tm.tm_sec = tm_sec;
  41e50d:	41 89 8e 60 fb ff ff 	mov    %ecx,-0x4a0(%r14)
	tm.tm_mday = tm_mday;
  41e514:	48 c1 e8 03          	shr    $0x3,%rax
  41e518:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e51f:	84 c0                	test   %al,%al
  41e521:	74 15                	je     41e538 <tdate_parse+0xe08>
  41e523:	3c 03                	cmp    $0x3,%al
  41e525:	7f 11                	jg     41e538 <tdate_parse+0xe08>
  41e527:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41e52c:	e8 9f 48 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41e531:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41e538:	48 8d 4f 0c          	lea    0xc(%rdi),%rcx
  41e53c:	45 8b 86 60 fa ff ff 	mov    -0x5a0(%r14),%r8d
  41e543:	48 89 c8             	mov    %rcx,%rax
  41e546:	48 c1 e8 03          	shr    $0x3,%rax
  41e54a:	0f b6 b0 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%esi
  41e551:	48 89 c8             	mov    %rcx,%rax
  41e554:	83 e0 07             	and    $0x7,%eax
  41e557:	83 c0 03             	add    $0x3,%eax
  41e55a:	40 38 f0             	cmp    %sil,%al
  41e55d:	7c 11                	jl     41e570 <tdate_parse+0xe40>
  41e55f:	40 84 f6             	test   %sil,%sil
  41e562:	74 0c                	je     41e570 <tdate_parse+0xe40>
  41e564:	48 89 cf             	mov    %rcx,%rdi
  41e567:	e8 84 46 fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41e56c:	0f 1f 40 00          	nopl   0x0(%rax)
	tm.tm_mon = tm_mon;
  41e570:	48 89 d0             	mov    %rdx,%rax
	tm.tm_mday = tm_mday;
  41e573:	45 89 86 6c fb ff ff 	mov    %r8d,-0x494(%r14)
	tm.tm_mon = tm_mon;
  41e57a:	48 c1 e8 03          	shr    $0x3,%rax
  41e57e:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41e585:	0f 85 93 06 00 00    	jne    41ec1e <tdate_parse+0x14ee>
  41e58b:	48 8d 57 10          	lea    0x10(%rdi),%rdx
  41e58f:	49 8b 8e e0 fa ff ff 	mov    -0x520(%r14),%rcx
  41e596:	48 89 d0             	mov    %rdx,%rax
  41e599:	48 c1 e8 03          	shr    $0x3,%rax
  41e59d:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e5a4:	84 c0                	test   %al,%al
  41e5a6:	74 10                	je     41e5b8 <tdate_parse+0xe88>
  41e5a8:	3c 03                	cmp    $0x3,%al
  41e5aa:	7f 0c                	jg     41e5b8 <tdate_parse+0xe88>
  41e5ac:	48 89 d7             	mov    %rdx,%rdi
  41e5af:	e8 3c 46 fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41e5b4:	0f 1f 40 00          	nopl   0x0(%rax)
	tm.tm_year = tm_year;
  41e5b8:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
	tm.tm_mon = tm_mon;
  41e5bd:	41 89 8e 70 fb ff ff 	mov    %ecx,-0x490(%r14)
	tm.tm_year = tm_year;
  41e5c4:	48 c1 e8 03          	shr    $0x3,%rax
  41e5c8:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e5cf:	84 c0                	test   %al,%al
  41e5d1:	74 15                	je     41e5e8 <tdate_parse+0xeb8>
  41e5d3:	3c 03                	cmp    $0x3,%al
  41e5d5:	7f 11                	jg     41e5e8 <tdate_parse+0xeb8>
  41e5d7:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  41e5dc:	e8 ef 47 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41e5e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41e5e8:	48 8d 4f 14          	lea    0x14(%rdi),%rcx
  41e5ec:	41 8b 86 a0 fa ff ff 	mov    -0x560(%r14),%eax
  41e5f3:	48 89 ca             	mov    %rcx,%rdx
  41e5f6:	48 c1 ea 03          	shr    $0x3,%rdx
  41e5fa:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  41e601:	48 89 ca             	mov    %rcx,%rdx
  41e604:	83 e2 07             	and    $0x7,%edx
  41e607:	83 c2 03             	add    $0x3,%edx
  41e60a:	40 38 f2             	cmp    %sil,%dl
  41e60d:	0f 8c 8e f6 ff ff    	jl     41dca1 <tdate_parse+0x571>
  41e613:	40 84 f6             	test   %sil,%sil
  41e616:	0f 84 85 f6 ff ff    	je     41dca1 <tdate_parse+0x571>
  41e61c:	48 89 cf             	mov    %rcx,%rdi
  41e61f:	e8 cc 45 fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41e624:	0f 1f 40 00          	nopl   0x0(%rax)
	    scan_wday( str_wday, &tm_wday ) &&
  41e628:	49 8d 86 20 fb ff ff 	lea    -0x4e0(%r14),%rax
  41e62f:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  41e634:	48 89 c6             	mov    %rax,%rsi
  41e637:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  41e63c:	e8 0f f0 ff ff       	callq  41d650 <scan_wday>
		&tm_sec ) == 7 &&
  41e641:	85 c0                	test   %eax,%eax
  41e643:	0f 84 a1 f3 ff ff    	je     41d9ea <tdate_parse+0x2ba>
	    scan_mon( str_mon, &tm_mon ) )
  41e649:	49 8d 96 e0 fa ff ff 	lea    -0x520(%r14),%rdx
  41e650:	4c 89 e7             	mov    %r12,%rdi
  41e653:	48 89 d6             	mov    %rdx,%rsi
  41e656:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
  41e65b:	e8 60 f0 ff ff       	callq  41d6c0 <scan_mon>
	    scan_wday( str_wday, &tm_wday ) &&
  41e660:	85 c0                	test   %eax,%eax
  41e662:	0f 84 82 f3 ff ff    	je     41d9ea <tdate_parse+0x2ba>
	tm.tm_wday = tm_wday;
  41e668:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  41e66d:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
  41e672:	48 c1 e8 03          	shr    $0x3,%rax
  41e676:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41e67d:	0f 85 c5 05 00 00    	jne    41ec48 <tdate_parse+0x1518>
  41e683:	49 8d be 60 fb ff ff 	lea    -0x4a0(%r14),%rdi
  41e68a:	49 8b b6 20 fb ff ff 	mov    -0x4e0(%r14),%rsi
  41e691:	48 8d 4f 18          	lea    0x18(%rdi),%rcx
  41e695:	48 89 c8             	mov    %rcx,%rax
  41e698:	48 c1 e8 03          	shr    $0x3,%rax
  41e69c:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e6a3:	84 c0                	test   %al,%al
  41e6a5:	74 08                	je     41e6af <tdate_parse+0xf7f>
  41e6a7:	3c 03                	cmp    $0x3,%al
  41e6a9:	0f 8e 41 06 00 00    	jle    41ecf0 <tdate_parse+0x15c0>
	tm.tm_mday = tm_mday;
  41e6af:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
	tm.tm_wday = tm_wday;
  41e6b4:	41 89 b6 78 fb ff ff 	mov    %esi,-0x488(%r14)
	tm.tm_mday = tm_mday;
  41e6bb:	48 c1 e8 03          	shr    $0x3,%rax
  41e6bf:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e6c6:	84 c0                	test   %al,%al
  41e6c8:	74 08                	je     41e6d2 <tdate_parse+0xfa2>
  41e6ca:	3c 03                	cmp    $0x3,%al
  41e6cc:	0f 8e 80 05 00 00    	jle    41ec52 <tdate_parse+0x1522>
  41e6d2:	48 8d 4f 0c          	lea    0xc(%rdi),%rcx
  41e6d6:	45 8b 86 60 fa ff ff 	mov    -0x5a0(%r14),%r8d
  41e6dd:	48 89 c8             	mov    %rcx,%rax
  41e6e0:	48 c1 e8 03          	shr    $0x3,%rax
  41e6e4:	0f b6 b0 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%esi
  41e6eb:	48 89 c8             	mov    %rcx,%rax
  41e6ee:	83 e0 07             	and    $0x7,%eax
  41e6f1:	83 c0 03             	add    $0x3,%eax
  41e6f4:	40 38 f0             	cmp    %sil,%al
  41e6f7:	7c 09                	jl     41e702 <tdate_parse+0xfd2>
  41e6f9:	40 84 f6             	test   %sil,%sil
  41e6fc:	0f 85 5a 05 00 00    	jne    41ec5c <tdate_parse+0x152c>
	tm.tm_mon = tm_mon;
  41e702:	48 89 d0             	mov    %rdx,%rax
	tm.tm_mday = tm_mday;
  41e705:	45 89 86 6c fb ff ff 	mov    %r8d,-0x494(%r14)
	tm.tm_mon = tm_mon;
  41e70c:	48 c1 e8 03          	shr    $0x3,%rax
  41e710:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41e717:	0f 85 0f 06 00 00    	jne    41ed2c <tdate_parse+0x15fc>
  41e71d:	48 8d 57 10          	lea    0x10(%rdi),%rdx
  41e721:	49 8b 8e e0 fa ff ff 	mov    -0x520(%r14),%rcx
  41e728:	48 89 d0             	mov    %rdx,%rax
  41e72b:	48 c1 e8 03          	shr    $0x3,%rax
  41e72f:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e736:	84 c0                	test   %al,%al
  41e738:	74 08                	je     41e742 <tdate_parse+0x1012>
  41e73a:	3c 03                	cmp    $0x3,%al
  41e73c:	0f 8e 22 05 00 00    	jle    41ec64 <tdate_parse+0x1534>
	tm.tm_year = tm_year;
  41e742:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
	tm.tm_mon = tm_mon;
  41e747:	41 89 8e 70 fb ff ff 	mov    %ecx,-0x490(%r14)
	tm.tm_year = tm_year;
  41e74e:	48 c1 e8 03          	shr    $0x3,%rax
  41e752:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e759:	84 c0                	test   %al,%al
  41e75b:	74 08                	je     41e765 <tdate_parse+0x1035>
  41e75d:	3c 03                	cmp    $0x3,%al
  41e75f:	0f 8e cf 05 00 00    	jle    41ed34 <tdate_parse+0x1604>
  41e765:	48 8d 4f 14          	lea    0x14(%rdi),%rcx
  41e769:	41 8b 86 a0 fa ff ff 	mov    -0x560(%r14),%eax
  41e770:	48 89 ca             	mov    %rcx,%rdx
  41e773:	48 c1 ea 03          	shr    $0x3,%rdx
  41e777:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  41e77e:	48 89 ca             	mov    %rcx,%rdx
  41e781:	83 e2 07             	and    $0x7,%edx
  41e784:	83 c2 03             	add    $0x3,%edx
  41e787:	40 38 f2             	cmp    %sil,%dl
  41e78a:	7c 09                	jl     41e795 <tdate_parse+0x1065>
  41e78c:	40 84 f6             	test   %sil,%sil
  41e78f:	0f 85 a9 05 00 00    	jne    41ed3e <tdate_parse+0x160e>
	tm.tm_hour = tm_hour;
  41e795:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
	tm.tm_year = tm_year;
  41e79a:	41 89 86 74 fb ff ff 	mov    %eax,-0x48c(%r14)
	tm.tm_hour = tm_hour;
  41e7a1:	48 c1 ea 03          	shr    $0x3,%rdx
  41e7a5:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e7ac:	84 d2                	test   %dl,%dl
  41e7ae:	74 09                	je     41e7b9 <tdate_parse+0x1089>
  41e7b0:	80 fa 03             	cmp    $0x3,%dl
  41e7b3:	0f 8e 8d 05 00 00    	jle    41ed46 <tdate_parse+0x1616>
  41e7b9:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
  41e7bd:	41 8b b6 20 fa ff ff 	mov    -0x5e0(%r14),%esi
  41e7c4:	48 89 ca             	mov    %rcx,%rdx
  41e7c7:	48 c1 ea 03          	shr    $0x3,%rdx
  41e7cb:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e7d2:	84 d2                	test   %dl,%dl
  41e7d4:	74 09                	je     41e7df <tdate_parse+0x10af>
  41e7d6:	80 fa 03             	cmp    $0x3,%dl
  41e7d9:	0f 8e 71 05 00 00    	jle    41ed50 <tdate_parse+0x1620>
	tm.tm_min = tm_min;
  41e7df:	4c 89 fa             	mov    %r15,%rdx
	tm.tm_hour = tm_hour;
  41e7e2:	41 89 b6 68 fb ff ff 	mov    %esi,-0x498(%r14)
	tm.tm_min = tm_min;
  41e7e9:	48 c1 ea 03          	shr    $0x3,%rdx
  41e7ed:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e7f4:	84 d2                	test   %dl,%dl
  41e7f6:	74 09                	je     41e801 <tdate_parse+0x10d1>
  41e7f8:	80 fa 03             	cmp    $0x3,%dl
  41e7fb:	0f 8e 57 05 00 00    	jle    41ed58 <tdate_parse+0x1628>
  41e801:	48 8d 4f 04          	lea    0x4(%rdi),%rcx
  41e805:	45 8b 86 e0 f9 ff ff 	mov    -0x620(%r14),%r8d
  41e80c:	48 89 ca             	mov    %rcx,%rdx
  41e80f:	48 c1 ea 03          	shr    $0x3,%rdx
  41e813:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  41e81a:	48 89 ca             	mov    %rcx,%rdx
  41e81d:	83 e2 07             	and    $0x7,%edx
  41e820:	83 c2 03             	add    $0x3,%edx
  41e823:	40 38 f2             	cmp    %sil,%dl
  41e826:	7c 09                	jl     41e831 <tdate_parse+0x1101>
  41e828:	40 84 f6             	test   %sil,%sil
  41e82b:	0f 85 2f 05 00 00    	jne    41ed60 <tdate_parse+0x1630>
	tm.tm_sec = tm_sec;
  41e831:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
	tm.tm_min = tm_min;
  41e836:	45 89 86 64 fb ff ff 	mov    %r8d,-0x49c(%r14)
	tm.tm_sec = tm_sec;
  41e83d:	48 c1 ea 03          	shr    $0x3,%rdx
  41e841:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e848:	84 d2                	test   %dl,%dl
  41e84a:	74 09                	je     41e855 <tdate_parse+0x1125>
  41e84c:	80 fa 03             	cmp    $0x3,%dl
  41e84f:	0f 8e 13 05 00 00    	jle    41ed68 <tdate_parse+0x1638>
  41e855:	48 89 fa             	mov    %rdi,%rdx
  41e858:	41 8b 8e a0 f9 ff ff 	mov    -0x660(%r14),%ecx
  41e85f:	48 c1 ea 03          	shr    $0x3,%rdx
  41e863:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41e86a:	84 d2                	test   %dl,%dl
  41e86c:	0f 84 62 f9 ff ff    	je     41e1d4 <tdate_parse+0xaa4>
  41e872:	80 fa 03             	cmp    $0x3,%dl
  41e875:	0f 8f 59 f9 ff ff    	jg     41e1d4 <tdate_parse+0xaa4>
  41e87b:	e8 70 43 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	    scan_wday( str_wday, &tm_wday ) &&
  41e880:	49 8d 86 20 fb ff ff 	lea    -0x4e0(%r14),%rax
  41e887:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  41e88c:	48 89 c6             	mov    %rax,%rsi
  41e88f:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  41e894:	e8 b7 ed ff ff       	callq  41d650 <scan_wday>
		&tm_sec ) == 7 &&
  41e899:	85 c0                	test   %eax,%eax
  41e89b:	0f 84 85 f1 ff ff    	je     41da26 <tdate_parse+0x2f6>
	    scan_mon( str_mon, &tm_mon ) )
  41e8a1:	49 8d 96 e0 fa ff ff 	lea    -0x520(%r14),%rdx
  41e8a8:	4c 89 e7             	mov    %r12,%rdi
  41e8ab:	48 89 d6             	mov    %rdx,%rsi
  41e8ae:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
  41e8b3:	e8 08 ee ff ff       	callq  41d6c0 <scan_mon>
	    scan_wday( str_wday, &tm_wday ) &&
  41e8b8:	85 c0                	test   %eax,%eax
  41e8ba:	0f 84 66 f1 ff ff    	je     41da26 <tdate_parse+0x2f6>
	tm.tm_wday = tm_wday;
  41e8c0:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  41e8c5:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
  41e8ca:	48 c1 e8 03          	shr    $0x3,%rax
  41e8ce:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41e8d5:	0f 85 91 03 00 00    	jne    41ec6c <tdate_parse+0x153c>
  41e8db:	49 8d be 60 fb ff ff 	lea    -0x4a0(%r14),%rdi
  41e8e2:	49 8b b6 20 fb ff ff 	mov    -0x4e0(%r14),%rsi
  41e8e9:	48 8d 4f 18          	lea    0x18(%rdi),%rcx
  41e8ed:	48 89 c8             	mov    %rcx,%rax
  41e8f0:	48 c1 e8 03          	shr    $0x3,%rax
  41e8f4:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e8fb:	84 c0                	test   %al,%al
  41e8fd:	74 08                	je     41e907 <tdate_parse+0x11d7>
  41e8ff:	3c 03                	cmp    $0x3,%al
  41e901:	0f 8e 0f 03 00 00    	jle    41ec16 <tdate_parse+0x14e6>
	tm.tm_mday = tm_mday;
  41e907:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
	tm.tm_wday = tm_wday;
  41e90c:	41 89 b6 78 fb ff ff 	mov    %esi,-0x488(%r14)
	tm.tm_mday = tm_mday;
  41e913:	48 c1 e8 03          	shr    $0x3,%rax
  41e917:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e91e:	84 c0                	test   %al,%al
  41e920:	74 08                	je     41e92a <tdate_parse+0x11fa>
  41e922:	3c 03                	cmp    $0x3,%al
  41e924:	0f 8e 4c 03 00 00    	jle    41ec76 <tdate_parse+0x1546>
  41e92a:	48 8d 4f 0c          	lea    0xc(%rdi),%rcx
  41e92e:	45 8b 86 60 fa ff ff 	mov    -0x5a0(%r14),%r8d
  41e935:	48 89 c8             	mov    %rcx,%rax
  41e938:	48 c1 e8 03          	shr    $0x3,%rax
  41e93c:	0f b6 b0 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%esi
  41e943:	48 89 c8             	mov    %rcx,%rax
  41e946:	83 e0 07             	and    $0x7,%eax
  41e949:	83 c0 03             	add    $0x3,%eax
  41e94c:	40 38 f0             	cmp    %sil,%al
  41e94f:	7c 09                	jl     41e95a <tdate_parse+0x122a>
  41e951:	40 84 f6             	test   %sil,%sil
  41e954:	0f 85 26 03 00 00    	jne    41ec80 <tdate_parse+0x1550>
	tm.tm_mon = tm_mon;
  41e95a:	48 89 d0             	mov    %rdx,%rax
	tm.tm_mday = tm_mday;
  41e95d:	45 89 86 6c fb ff ff 	mov    %r8d,-0x494(%r14)
	tm.tm_mon = tm_mon;
  41e964:	48 c1 e8 03          	shr    $0x3,%rax
  41e968:	80 b8 00 80 ff 7f 00 	cmpb   $0x0,0x7fff8000(%rax)
  41e96f:	0f 85 1b 03 00 00    	jne    41ec90 <tdate_parse+0x1560>
  41e975:	48 8d 57 10          	lea    0x10(%rdi),%rdx
  41e979:	49 8b 8e e0 fa ff ff 	mov    -0x520(%r14),%rcx
  41e980:	48 89 d0             	mov    %rdx,%rax
  41e983:	48 c1 e8 03          	shr    $0x3,%rax
  41e987:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e98e:	84 c0                	test   %al,%al
  41e990:	74 08                	je     41e99a <tdate_parse+0x126a>
  41e992:	3c 03                	cmp    $0x3,%al
  41e994:	0f 8e ee 02 00 00    	jle    41ec88 <tdate_parse+0x1558>
	tm.tm_year = tm_year;
  41e99a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
	tm.tm_mon = tm_mon;
  41e99f:	41 89 8e 70 fb ff ff 	mov    %ecx,-0x490(%r14)
	tm.tm_year = tm_year;
  41e9a6:	48 c1 e8 03          	shr    $0x3,%rax
  41e9aa:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41e9b1:	84 c0                	test   %al,%al
  41e9b3:	74 08                	je     41e9bd <tdate_parse+0x128d>
  41e9b5:	3c 03                	cmp    $0x3,%al
  41e9b7:	0f 8e db 02 00 00    	jle    41ec98 <tdate_parse+0x1568>
  41e9bd:	48 8d 4f 14          	lea    0x14(%rdi),%rcx
  41e9c1:	41 8b 86 a0 fa ff ff 	mov    -0x560(%r14),%eax
  41e9c8:	48 89 ca             	mov    %rcx,%rdx
  41e9cb:	48 c1 ea 03          	shr    $0x3,%rdx
  41e9cf:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  41e9d6:	48 89 ca             	mov    %rcx,%rdx
  41e9d9:	83 e2 07             	and    $0x7,%edx
  41e9dc:	83 c2 03             	add    $0x3,%edx
  41e9df:	40 38 f2             	cmp    %sil,%dl
  41e9e2:	7c 09                	jl     41e9ed <tdate_parse+0x12bd>
  41e9e4:	40 84 f6             	test   %sil,%sil
  41e9e7:	0f 85 b5 02 00 00    	jne    41eca2 <tdate_parse+0x1572>
	tm.tm_hour = tm_hour;
  41e9ed:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
	tm.tm_year = tm_year;
  41e9f2:	41 89 86 74 fb ff ff 	mov    %eax,-0x48c(%r14)
	tm.tm_hour = tm_hour;
  41e9f9:	48 c1 ea 03          	shr    $0x3,%rdx
  41e9fd:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41ea04:	84 d2                	test   %dl,%dl
  41ea06:	74 09                	je     41ea11 <tdate_parse+0x12e1>
  41ea08:	80 fa 03             	cmp    $0x3,%dl
  41ea0b:	0f 8e 99 02 00 00    	jle    41ecaa <tdate_parse+0x157a>
  41ea11:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
  41ea15:	41 8b b6 20 fa ff ff 	mov    -0x5e0(%r14),%esi
  41ea1c:	48 89 ca             	mov    %rcx,%rdx
  41ea1f:	48 c1 ea 03          	shr    $0x3,%rdx
  41ea23:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41ea2a:	84 d2                	test   %dl,%dl
  41ea2c:	74 09                	je     41ea37 <tdate_parse+0x1307>
  41ea2e:	80 fa 03             	cmp    $0x3,%dl
  41ea31:	0f 8e ef 01 00 00    	jle    41ec26 <tdate_parse+0x14f6>
	tm.tm_min = tm_min;
  41ea37:	4c 89 fa             	mov    %r15,%rdx
	tm.tm_hour = tm_hour;
  41ea3a:	41 89 b6 68 fb ff ff 	mov    %esi,-0x498(%r14)
	tm.tm_min = tm_min;
  41ea41:	48 c1 ea 03          	shr    $0x3,%rdx
  41ea45:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41ea4c:	84 d2                	test   %dl,%dl
  41ea4e:	74 09                	je     41ea59 <tdate_parse+0x1329>
  41ea50:	80 fa 03             	cmp    $0x3,%dl
  41ea53:	0f 8e d5 01 00 00    	jle    41ec2e <tdate_parse+0x14fe>
  41ea59:	48 8d 4f 04          	lea    0x4(%rdi),%rcx
  41ea5d:	45 8b 86 e0 f9 ff ff 	mov    -0x620(%r14),%r8d
  41ea64:	48 89 ca             	mov    %rcx,%rdx
  41ea67:	48 c1 ea 03          	shr    $0x3,%rdx
  41ea6b:	0f b6 b2 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%esi
  41ea72:	48 89 ca             	mov    %rcx,%rdx
  41ea75:	83 e2 07             	and    $0x7,%edx
  41ea78:	83 c2 03             	add    $0x3,%edx
  41ea7b:	40 38 f2             	cmp    %sil,%dl
  41ea7e:	7c 09                	jl     41ea89 <tdate_parse+0x1359>
  41ea80:	40 84 f6             	test   %sil,%sil
  41ea83:	0f 85 ad 01 00 00    	jne    41ec36 <tdate_parse+0x1506>
	tm.tm_sec = tm_sec;
  41ea89:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
	tm.tm_min = tm_min;
  41ea8e:	45 89 86 64 fb ff ff 	mov    %r8d,-0x49c(%r14)
	tm.tm_sec = tm_sec;
  41ea95:	48 c1 ea 03          	shr    $0x3,%rdx
  41ea99:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41eaa0:	84 d2                	test   %dl,%dl
  41eaa2:	74 09                	je     41eaad <tdate_parse+0x137d>
  41eaa4:	80 fa 03             	cmp    $0x3,%dl
  41eaa7:	0f 8e 91 01 00 00    	jle    41ec3e <tdate_parse+0x150e>
  41eaad:	48 89 fa             	mov    %rdi,%rdx
  41eab0:	41 8b 8e a0 f9 ff ff 	mov    -0x660(%r14),%ecx
  41eab7:	48 c1 ea 03          	shr    $0x3,%rdx
  41eabb:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41eac2:	84 d2                	test   %dl,%dl
  41eac4:	0f 84 0a f7 ff ff    	je     41e1d4 <tdate_parse+0xaa4>
  41eaca:	80 fa 03             	cmp    $0x3,%dl
  41eacd:	0f 8f 01 f7 ff ff    	jg     41e1d4 <tdate_parse+0xaa4>
  41ead3:	e8 18 41 fe ff       	callq  402bf0 <__asan_report_store4@plt>
    for ( cp = str; *cp == ' ' || *cp == '\t'; ++cp )
  41ead8:	48 89 df             	mov    %rbx,%rdi
  41eadb:	e8 30 46 fe ff       	callq  403110 <__asan_report_load1@plt>
	tm.tm_min = tm_min;
  41eae0:	4c 89 ff             	mov    %r15,%rdi
  41eae3:	e8 e8 42 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41eae8:	48 89 d7             	mov    %rdx,%rdi
  41eaeb:	e8 00 41 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_sec = tm_sec;
  41eaf0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41eaf5:	e8 d6 42 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41eafa:	e8 f1 40 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_year = tm_year;
  41eaff:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  41eb04:	e8 c7 42 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41eb09:	48 89 cf             	mov    %rcx,%rdi
  41eb0c:	e8 df 40 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_wday = tm_wday;
  41eb11:	48 89 cf             	mov    %rcx,%rdi
  41eb14:	e8 d7 40 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_mon = tm_mon;
  41eb19:	48 89 d7             	mov    %rdx,%rdi
  41eb1c:	e8 cf 40 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_mday = tm_mday;
  41eb21:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41eb26:	e8 a5 42 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41eb2b:	48 89 d7             	mov    %rdx,%rdi
  41eb2e:	e8 bd 40 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_hour = tm_hour;
  41eb33:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41eb38:	e8 93 42 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41eb3d:	48 89 d7             	mov    %rdx,%rdi
  41eb40:	e8 ab 40 fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41eb45:	0f 1f 00             	nopl   (%rax)
	return (time_t) -1;
  41eb48:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
  41eb4f:	e9 9c f1 ff ff       	jmpq   41dcf0 <tdate_parse+0x5c0>
    {
  41eb54:	48 c7 45 00 0e 36 e0 	movq   $0x45e0360e,0x0(%rbp)
  41eb5b:	45 
  41eb5c:	48 89 c2             	mov    %rax,%rdx
  41eb5f:	be 80 06 00 00       	mov    $0x680,%esi
  41eb64:	48 89 ef             	mov    %rbp,%rdi
  41eb67:	e8 44 47 fe ff       	callq  4032b0 <__asan_stack_free_5@plt>
  41eb6c:	e9 e0 f1 ff ff       	jmpq   41dd51 <tdate_parse+0x621>
  41eb71:	bf 80 06 00 00       	mov    $0x680,%edi
  41eb76:	e8 55 46 fe ff       	callq  4031d0 <__asan_stack_malloc_5@plt>
  41eb7b:	48 85 c0             	test   %rax,%rax
  41eb7e:	48 0f 45 e8          	cmovne %rax,%rbp
  41eb82:	e9 d2 eb ff ff       	jmpq   41d759 <tdate_parse+0x29>
    for ( cp = str; *cp == ' ' || *cp == '\t'; ++cp )
  41eb87:	48 89 df             	mov    %rbx,%rdi
  41eb8a:	e8 81 45 fe ff       	callq  403110 <__asan_report_load1@plt>
	tm.tm_year -= 1900;
  41eb8f:	48 89 cf             	mov    %rcx,%rdi
  41eb92:	e8 59 40 fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_mday = tm_mday;
  41eb97:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41eb9c:	e8 2f 42 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_wday = tm_wday;
  41eba1:	48 89 df             	mov    %rbx,%rdi
  41eba4:	e8 a7 46 fe ff       	callq  403250 <__asan_report_load8@plt>
	tm.tm_mon = tm_mon;
  41eba9:	48 89 d7             	mov    %rdx,%rdi
  41ebac:	e8 9f 46 fe ff       	callq  403250 <__asan_report_load8@plt>
	tm.tm_min = tm_min;
  41ebb1:	4c 89 ff             	mov    %r15,%rdi
  41ebb4:	e8 17 42 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_hour = tm_hour;
  41ebb9:	48 89 cf             	mov    %rcx,%rdi
  41ebbc:	e8 2f 40 fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41ebc1:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41ebc6:	e8 05 42 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_year = tm_year;
  41ebcb:	48 89 cf             	mov    %rcx,%rdi
  41ebce:	e8 1d 40 fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41ebd3:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  41ebd8:	e8 f3 41 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_mon = tm_mon;
  41ebdd:	48 89 d7             	mov    %rdx,%rdi
  41ebe0:	e8 0b 40 fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41ebe5:	48 89 d7             	mov    %rdx,%rdi
  41ebe8:	e8 63 46 fe ff       	callq  403250 <__asan_report_load8@plt>
	tm.tm_mday = tm_mday;
  41ebed:	48 89 cf             	mov    %rcx,%rdi
  41ebf0:	e8 fb 3f fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_sec = tm_sec;
  41ebf5:	e8 f6 3f fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41ebfa:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41ebff:	e8 cc 41 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_min = tm_min;
  41ec04:	48 89 cf             	mov    %rcx,%rdi
  41ec07:	e8 e4 3f fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_mday = tm_mday;
  41ec0c:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41ec11:	e8 ba 41 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_wday = tm_wday;
  41ec16:	48 89 cf             	mov    %rcx,%rdi
  41ec19:	e8 d2 3f fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_mon = tm_mon;
  41ec1e:	48 89 d7             	mov    %rdx,%rdi
  41ec21:	e8 2a 46 fe ff       	callq  403250 <__asan_report_load8@plt>
	tm.tm_hour = tm_hour;
  41ec26:	48 89 cf             	mov    %rcx,%rdi
  41ec29:	e8 c2 3f fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_min = tm_min;
  41ec2e:	4c 89 ff             	mov    %r15,%rdi
  41ec31:	e8 9a 41 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41ec36:	48 89 cf             	mov    %rcx,%rdi
  41ec39:	e8 b2 3f fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_sec = tm_sec;
  41ec3e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41ec43:	e8 88 41 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_wday = tm_wday;
  41ec48:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  41ec4d:	e8 fe 45 fe ff       	callq  403250 <__asan_report_load8@plt>
	tm.tm_mday = tm_mday;
  41ec52:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41ec57:	e8 74 41 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41ec5c:	48 89 cf             	mov    %rcx,%rdi
  41ec5f:	e8 8c 3f fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_mon = tm_mon;
  41ec64:	48 89 d7             	mov    %rdx,%rdi
  41ec67:	e8 84 3f fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_wday = tm_wday;
  41ec6c:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  41ec71:	e8 da 45 fe ff       	callq  403250 <__asan_report_load8@plt>
	tm.tm_mday = tm_mday;
  41ec76:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41ec7b:	e8 50 41 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41ec80:	48 89 cf             	mov    %rcx,%rdi
  41ec83:	e8 68 3f fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_mon = tm_mon;
  41ec88:	48 89 d7             	mov    %rdx,%rdi
  41ec8b:	e8 60 3f fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41ec90:	48 89 d7             	mov    %rdx,%rdi
  41ec93:	e8 b8 45 fe ff       	callq  403250 <__asan_report_load8@plt>
	tm.tm_year = tm_year;
  41ec98:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  41ec9d:	e8 2e 41 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41eca2:	48 89 cf             	mov    %rcx,%rdi
  41eca5:	e8 46 3f fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_hour = tm_hour;
  41ecaa:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41ecaf:	e8 1c 41 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_year = tm_year;
  41ecb4:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  41ecb9:	e8 12 41 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_mon = tm_mon;
  41ecbe:	48 89 d7             	mov    %rdx,%rdi
  41ecc1:	e8 2a 3f fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41ecc6:	48 89 d7             	mov    %rdx,%rdi
  41ecc9:	e8 82 45 fe ff       	callq  403250 <__asan_report_load8@plt>
	tm.tm_year = tm_year;
  41ecce:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  41ecd3:	e8 f8 40 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_mon = tm_mon;
  41ecd8:	48 89 d7             	mov    %rdx,%rdi
  41ecdb:	e8 10 3f fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41ece0:	48 89 d7             	mov    %rdx,%rdi
  41ece3:	e8 68 45 fe ff       	callq  403250 <__asan_report_load8@plt>
	tm.tm_mday = tm_mday;
  41ece8:	48 89 cf             	mov    %rcx,%rdi
  41eceb:	e8 00 3f fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_wday = tm_wday;
  41ecf0:	48 89 cf             	mov    %rcx,%rdi
  41ecf3:	e8 f8 3e fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_sec = tm_sec;
  41ecf8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41ecfd:	e8 ce 40 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_min = tm_min;
  41ed02:	48 89 cf             	mov    %rcx,%rdi
  41ed05:	e8 e6 3e fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41ed0a:	4c 89 ff             	mov    %r15,%rdi
  41ed0d:	e8 be 40 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_hour = tm_hour;
  41ed12:	48 89 cf             	mov    %rcx,%rdi
  41ed15:	e8 d6 3e fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41ed1a:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41ed1f:	e8 ac 40 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_year = tm_year;
  41ed24:	48 89 cf             	mov    %rcx,%rdi
  41ed27:	e8 c4 3e fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_mon = tm_mon;
  41ed2c:	48 89 d7             	mov    %rdx,%rdi
  41ed2f:	e8 1c 45 fe ff       	callq  403250 <__asan_report_load8@plt>
	tm.tm_year = tm_year;
  41ed34:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  41ed39:	e8 92 40 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41ed3e:	48 89 cf             	mov    %rcx,%rdi
  41ed41:	e8 aa 3e fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_hour = tm_hour;
  41ed46:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41ed4b:	e8 80 40 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41ed50:	48 89 cf             	mov    %rcx,%rdi
  41ed53:	e8 98 3e fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_min = tm_min;
  41ed58:	4c 89 ff             	mov    %r15,%rdi
  41ed5b:	e8 70 40 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41ed60:	48 89 cf             	mov    %rcx,%rdi
  41ed63:	e8 88 3e fe ff       	callq  402bf0 <__asan_report_store4@plt>
	tm.tm_sec = tm_sec;
  41ed68:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41ed6d:	e8 5e 40 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_mday = tm_mday;
  41ed72:	48 89 cf             	mov    %rcx,%rdi
  41ed75:	e8 76 3e fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41ed7a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41ed7f:	e8 4c 40 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_sec = tm_sec;
  41ed84:	e8 67 3e fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41ed89:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41ed8e:	e8 3d 40 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_min = tm_min;
  41ed93:	48 89 cf             	mov    %rcx,%rdi
  41ed96:	e8 55 3e fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41ed9b:	4c 89 ff             	mov    %r15,%rdi
  41ed9e:	e8 2d 40 fe ff       	callq  402dd0 <__asan_report_load4@plt>
	tm.tm_hour = tm_hour;
  41eda3:	48 89 cf             	mov    %rcx,%rdi
  41eda6:	e8 45 3e fe ff       	callq  402bf0 <__asan_report_store4@plt>
  41edab:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41edb0:	e8 1b 40 fe ff       	callq  402dd0 <__asan_report_load4@plt>
  41edb5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41edbc:	00 00 00 
  41edbf:	90                   	nop

000000000041edc0 <match_one>:
    }


static int
match_one( const char* pattern, int patternlen, const char* string )
    {
  41edc0:	41 55                	push   %r13
  41edc2:	48 63 f6             	movslq %esi,%rsi
  41edc5:	41 54                	push   %r12
  41edc7:	55                   	push   %rbp
  41edc8:	53                   	push   %rbx
  41edc9:	48 89 d3             	mov    %rdx,%rbx
  41edcc:	48 83 ec 08          	sub    $0x8,%rsp
    const char* p;

    for ( p = pattern; p - pattern < patternlen; ++p, ++string )
  41edd0:	48 85 f6             	test   %rsi,%rsi
  41edd3:	0f 8e af 00 00 00    	jle    41ee88 <match_one+0xc8>
  41edd9:	48 89 fd             	mov    %rdi,%rbp
  41eddc:	49 89 f4             	mov    %rsi,%r12
  41eddf:	48 89 f8             	mov    %rdi,%rax
  41ede2:	eb 45                	jmp    41ee29 <match_one+0x69>
  41ede4:	0f 1f 40 00          	nopl   0x0(%rax)
	{
	if ( *p == '?' && *string != '\0' )
	    continue;
	if ( *p == '*' )
  41ede8:	80 fa 2a             	cmp    $0x2a,%dl
  41edeb:	0f 84 cf 00 00 00    	je     41eec0 <match_one+0x100>
	    for ( ; i >= 0; --i )
		if ( match_one( p, pl, &(string[i]) ) )
		    return 1;
	    return 0;
	    }
	if ( *p != *string )
  41edf1:	48 89 d9             	mov    %rbx,%rcx
  41edf4:	48 89 df             	mov    %rbx,%rdi
  41edf7:	48 c1 e9 03          	shr    $0x3,%rcx
  41edfb:	83 e7 07             	and    $0x7,%edi
  41edfe:	0f b6 89 00 80 ff 7f 	movzbl 0x7fff8000(%rcx),%ecx
  41ee05:	40 38 f9             	cmp    %dil,%cl
  41ee08:	7f 08                	jg     41ee12 <match_one+0x52>
  41ee0a:	84 c9                	test   %cl,%cl
  41ee0c:	0f 85 54 01 00 00    	jne    41ef66 <match_one+0x1a6>
  41ee12:	3a 13                	cmp    (%rbx),%dl
  41ee14:	75 60                	jne    41ee76 <match_one+0xb6>
    for ( p = pattern; p - pattern < patternlen; ++p, ++string )
  41ee16:	48 83 c0 01          	add    $0x1,%rax
  41ee1a:	48 83 c3 01          	add    $0x1,%rbx
  41ee1e:	48 89 c2             	mov    %rax,%rdx
  41ee21:	48 29 ea             	sub    %rbp,%rdx
  41ee24:	48 39 f2             	cmp    %rsi,%rdx
  41ee27:	7d 5f                	jge    41ee88 <match_one+0xc8>
	if ( *p == '?' && *string != '\0' )
  41ee29:	48 89 c2             	mov    %rax,%rdx
  41ee2c:	48 89 c1             	mov    %rax,%rcx
  41ee2f:	48 c1 ea 03          	shr    $0x3,%rdx
  41ee33:	83 e1 07             	and    $0x7,%ecx
  41ee36:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41ee3d:	38 ca                	cmp    %cl,%dl
  41ee3f:	7f 08                	jg     41ee49 <match_one+0x89>
  41ee41:	84 d2                	test   %dl,%dl
  41ee43:	0f 85 15 01 00 00    	jne    41ef5e <match_one+0x19e>
  41ee49:	0f b6 10             	movzbl (%rax),%edx
  41ee4c:	80 fa 3f             	cmp    $0x3f,%dl
  41ee4f:	75 97                	jne    41ede8 <match_one+0x28>
  41ee51:	48 89 da             	mov    %rbx,%rdx
  41ee54:	48 89 d9             	mov    %rbx,%rcx
  41ee57:	48 c1 ea 03          	shr    $0x3,%rdx
  41ee5b:	83 e1 07             	and    $0x7,%ecx
  41ee5e:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41ee65:	38 ca                	cmp    %cl,%dl
  41ee67:	7f 08                	jg     41ee71 <match_one+0xb1>
  41ee69:	84 d2                	test   %dl,%dl
  41ee6b:	0f 85 fd 00 00 00    	jne    41ef6e <match_one+0x1ae>
  41ee71:	80 3b 00             	cmpb   $0x0,(%rbx)
  41ee74:	75 a0                	jne    41ee16 <match_one+0x56>
	    return 0;
	}
    if ( *string == '\0' )
	return 1;
    return 0;
    }
  41ee76:	48 83 c4 08          	add    $0x8,%rsp
	    return 0;
  41ee7a:	31 c0                	xor    %eax,%eax
    }
  41ee7c:	5b                   	pop    %rbx
  41ee7d:	5d                   	pop    %rbp
  41ee7e:	41 5c                	pop    %r12
  41ee80:	41 5d                	pop    %r13
  41ee82:	c3                   	retq   
  41ee83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    if ( *string == '\0' )
  41ee88:	48 89 d8             	mov    %rbx,%rax
  41ee8b:	48 89 da             	mov    %rbx,%rdx
  41ee8e:	48 c1 e8 03          	shr    $0x3,%rax
  41ee92:	83 e2 07             	and    $0x7,%edx
  41ee95:	0f b6 80 00 80 ff 7f 	movzbl 0x7fff8000(%rax),%eax
  41ee9c:	38 d0                	cmp    %dl,%al
  41ee9e:	7f 08                	jg     41eea8 <match_one+0xe8>
  41eea0:	84 c0                	test   %al,%al
  41eea2:	0f 85 d6 00 00 00    	jne    41ef7e <match_one+0x1be>
  41eea8:	31 c0                	xor    %eax,%eax
  41eeaa:	80 3b 00             	cmpb   $0x0,(%rbx)
  41eead:	0f 94 c0             	sete   %al
    }
  41eeb0:	48 83 c4 08          	add    $0x8,%rsp
  41eeb4:	5b                   	pop    %rbx
  41eeb5:	5d                   	pop    %rbp
  41eeb6:	41 5c                	pop    %r12
  41eeb8:	41 5d                	pop    %r13
  41eeba:	c3                   	retq   
  41eebb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	    if ( *p == '*' )
  41eec0:	4c 8d 68 01          	lea    0x1(%rax),%r13
  41eec4:	4c 89 ea             	mov    %r13,%rdx
  41eec7:	4c 89 e9             	mov    %r13,%rcx
  41eeca:	48 c1 ea 03          	shr    $0x3,%rdx
  41eece:	83 e1 07             	and    $0x7,%ecx
  41eed1:	0f b6 92 00 80 ff 7f 	movzbl 0x7fff8000(%rdx),%edx
  41eed8:	38 ca                	cmp    %cl,%dl
  41eeda:	7f 08                	jg     41eee4 <match_one+0x124>
  41eedc:	84 d2                	test   %dl,%dl
  41eede:	0f 85 92 00 00 00    	jne    41ef76 <match_one+0x1b6>
  41eee4:	80 78 01 2a          	cmpb   $0x2a,0x1(%rax)
  41eee8:	74 66                	je     41ef50 <match_one+0x190>
		i = strcspn( string, "/" );
  41eeea:	be 60 db 42 00       	mov    $0x42db60,%esi
  41eeef:	48 89 df             	mov    %rbx,%rdi
  41eef2:	e8 09 42 fe ff       	callq  403100 <strcspn@plt>
	    pl = patternlen - ( p - pattern );
  41eef7:	4c 89 ea             	mov    %r13,%rdx
  41eefa:	48 29 ea             	sub    %rbp,%rdx
  41eefd:	41 29 d4             	sub    %edx,%r12d
	    for ( ; i >= 0; --i )
  41ef00:	85 c0                	test   %eax,%eax
  41ef02:	0f 88 6e ff ff ff    	js     41ee76 <match_one+0xb6>
  41ef08:	48 98                	cltq   
  41ef0a:	48 8d 2c 03          	lea    (%rbx,%rax,1),%rbp
  41ef0e:	48 8d 5c 03 ff       	lea    -0x1(%rbx,%rax,1),%rbx
  41ef13:	48 29 c3             	sub    %rax,%rbx
		if ( match_one( p, pl, &(string[i]) ) )
  41ef16:	48 89 ea             	mov    %rbp,%rdx
  41ef19:	44 89 e6             	mov    %r12d,%esi
  41ef1c:	4c 89 ef             	mov    %r13,%rdi
  41ef1f:	e8 9c fe ff ff       	callq  41edc0 <match_one>
  41ef24:	85 c0                	test   %eax,%eax
  41ef26:	75 18                	jne    41ef40 <match_one+0x180>
  41ef28:	48 83 ed 01          	sub    $0x1,%rbp
	    for ( ; i >= 0; --i )
  41ef2c:	48 39 dd             	cmp    %rbx,%rbp
  41ef2f:	75 e5                	jne    41ef16 <match_one+0x156>
  41ef31:	e9 40 ff ff ff       	jmpq   41ee76 <match_one+0xb6>
  41ef36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41ef3d:	00 00 00 
    }
  41ef40:	48 83 c4 08          	add    $0x8,%rsp
		    return 1;
  41ef44:	b8 01 00 00 00       	mov    $0x1,%eax
    }
  41ef49:	5b                   	pop    %rbx
  41ef4a:	5d                   	pop    %rbp
  41ef4b:	41 5c                	pop    %r12
  41ef4d:	41 5d                	pop    %r13
  41ef4f:	c3                   	retq   
		i = strlen( string );
  41ef50:	48 89 df             	mov    %rbx,%rdi
		++p;
  41ef53:	4c 8d 68 02          	lea    0x2(%rax),%r13
		i = strlen( string );
  41ef57:	e8 24 3d fe ff       	callq  402c80 <strlen@plt>
  41ef5c:	eb 99                	jmp    41eef7 <match_one+0x137>
	if ( *p == '?' && *string != '\0' )
  41ef5e:	48 89 c7             	mov    %rax,%rdi
  41ef61:	e8 aa 41 fe ff       	callq  403110 <__asan_report_load1@plt>
	if ( *p != *string )
  41ef66:	48 89 df             	mov    %rbx,%rdi
  41ef69:	e8 a2 41 fe ff       	callq  403110 <__asan_report_load1@plt>
	if ( *p == '?' && *string != '\0' )
  41ef6e:	48 89 df             	mov    %rbx,%rdi
  41ef71:	e8 9a 41 fe ff       	callq  403110 <__asan_report_load1@plt>
	    if ( *p == '*' )
  41ef76:	4c 89 ef             	mov    %r13,%rdi
  41ef79:	e8 92 41 fe ff       	callq  403110 <__asan_report_load1@plt>
    if ( *string == '\0' )
  41ef7e:	48 89 df             	mov    %rbx,%rdi
  41ef81:	e8 8a 41 fe ff       	callq  403110 <__asan_report_load1@plt>
  41ef86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41ef8d:	00 00 00 

000000000041ef90 <match>:
    {
  41ef90:	41 54                	push   %r12
  41ef92:	49 89 f4             	mov    %rsi,%r12
  41ef95:	55                   	push   %rbp
  41ef96:	53                   	push   %rbx
  41ef97:	48 89 fb             	mov    %rdi,%rbx
  41ef9a:	eb 1d                	jmp    41efb9 <match+0x29>
  41ef9c:	0f 1f 40 00          	nopl   0x0(%rax)
	if ( match_one( pattern, or - pattern, string ) )
  41efa0:	48 89 c6             	mov    %rax,%rsi
  41efa3:	4c 89 e2             	mov    %r12,%rdx
  41efa6:	48 89 df             	mov    %rbx,%rdi
  41efa9:	48 29 de             	sub    %rbx,%rsi
  41efac:	e8 0f fe ff ff       	callq  41edc0 <match_one>
  41efb1:	85 c0                	test   %eax,%eax
  41efb3:	75 3b                	jne    41eff0 <match+0x60>
	pattern = or + 1;
  41efb5:	48 8d 5d 01          	lea    0x1(%rbp),%rbx
	or = strchr( pattern, '|' );
  41efb9:	be 7c 00 00 00       	mov    $0x7c,%esi
  41efbe:	48 89 df             	mov    %rbx,%rdi
  41efc1:	e8 fa 43 fe ff       	callq  4033c0 <strchr@plt>
  41efc6:	48 89 c5             	mov    %rax,%rbp
	if ( or == (char*) 0 )
  41efc9:	48 85 c0             	test   %rax,%rax
  41efcc:	75 d2                	jne    41efa0 <match+0x10>
	    return match_one( pattern, strlen( pattern ), string );
  41efce:	48 89 df             	mov    %rbx,%rdi
  41efd1:	e8 aa 3c fe ff       	callq  402c80 <strlen@plt>
  41efd6:	4c 89 e2             	mov    %r12,%rdx
  41efd9:	48 89 df             	mov    %rbx,%rdi
    }
  41efdc:	5b                   	pop    %rbx
	    return match_one( pattern, strlen( pattern ), string );
  41efdd:	89 c6                	mov    %eax,%esi
    }
  41efdf:	5d                   	pop    %rbp
  41efe0:	41 5c                	pop    %r12
	    return match_one( pattern, strlen( pattern ), string );
  41efe2:	e9 d9 fd ff ff       	jmpq   41edc0 <match_one>
  41efe7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41efee:	00 00 
    }
  41eff0:	5b                   	pop    %rbx
  41eff1:	b8 01 00 00 00       	mov    $0x1,%eax
  41eff6:	5d                   	pop    %rbp
  41eff7:	41 5c                	pop    %r12
  41eff9:	c3                   	retq   
  41effa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000041f000 <__libc_csu_init>:
  41f000:	41 57                	push   %r15
  41f002:	41 89 ff             	mov    %edi,%r15d
  41f005:	41 56                	push   %r14
  41f007:	49 89 f6             	mov    %rsi,%r14
  41f00a:	41 55                	push   %r13
  41f00c:	49 89 d5             	mov    %rdx,%r13
  41f00f:	41 54                	push   %r12
  41f011:	4c 8d 25 30 1d 21 00 	lea    0x211d30(%rip),%r12        # 630d48 <__init_array_start>
  41f018:	55                   	push   %rbp
  41f019:	48 8d 2d 68 1d 21 00 	lea    0x211d68(%rip),%rbp        # 630d88 <__init_array_end>
  41f020:	53                   	push   %rbx
  41f021:	4c 29 e5             	sub    %r12,%rbp
  41f024:	31 db                	xor    %ebx,%ebx
  41f026:	48 c1 fd 03          	sar    $0x3,%rbp
  41f02a:	48 83 ec 08          	sub    $0x8,%rsp
  41f02e:	e8 85 3b fe ff       	callq  402bb8 <_init>
  41f033:	48 85 ed             	test   %rbp,%rbp
  41f036:	74 1e                	je     41f056 <__libc_csu_init+0x56>
  41f038:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41f03f:	00 
  41f040:	4c 89 ea             	mov    %r13,%rdx
  41f043:	4c 89 f6             	mov    %r14,%rsi
  41f046:	44 89 ff             	mov    %r15d,%edi
  41f049:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  41f04d:	48 83 c3 01          	add    $0x1,%rbx
  41f051:	48 39 eb             	cmp    %rbp,%rbx
  41f054:	75 ea                	jne    41f040 <__libc_csu_init+0x40>
  41f056:	48 83 c4 08          	add    $0x8,%rsp
  41f05a:	5b                   	pop    %rbx
  41f05b:	5d                   	pop    %rbp
  41f05c:	41 5c                	pop    %r12
  41f05e:	41 5d                	pop    %r13
  41f060:	41 5e                	pop    %r14
  41f062:	41 5f                	pop    %r15
  41f064:	c3                   	retq   
  41f065:	90                   	nop
  41f066:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41f06d:	00 00 00 

000000000041f070 <__libc_csu_fini>:
  41f070:	f3 c3                	repz retq 
  41f072:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41f079:	00 00 00 
  41f07c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041f080 <__stat>:
  41f080:	48 89 f2             	mov    %rsi,%rdx
  41f083:	48 89 fe             	mov    %rdi,%rsi
  41f086:	bf 01 00 00 00       	mov    $0x1,%edi
  41f08b:	e9 a0 3f fe ff       	jmpq   403030 <__xstat@plt>

000000000041f090 <__lstat>:
  41f090:	48 89 f2             	mov    %rsi,%rdx
  41f093:	48 89 fe             	mov    %rdi,%rsi
  41f096:	bf 01 00 00 00       	mov    $0x1,%edi
  41f09b:	e9 80 3c fe ff       	jmpq   402d20 <__lxstat@plt>

Disassembly of section .fini:

000000000041f0a0 <_fini>:
  41f0a0:	48 83 ec 08          	sub    $0x8,%rsp
  41f0a4:	48 83 c4 08          	add    $0x8,%rsp
  41f0a8:	c3                   	retq   
